

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 12 18:58:12 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F24Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,inline
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,inline
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,inline
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,inline
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1,inline
    92                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1,inline
    93                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,inline
   111                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,inline
   112                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1,inline
   113                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,inline
   114                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1,inline
   115                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1,inline
   122                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1,inline
   123                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   133   000000                     
   134                           ; Generated 23/02/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F24Q10 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168   000FE0                     bsr             equ	4064
   169   000FE9                     fsr0            equ	4073
   170   000FEA                     fsr0h           equ	4074
   171   000FE9                     fsr0l           equ	4073
   172   000FE1                     fsr1            equ	4065
   173   000FE2                     fsr1h           equ	4066
   174   000FE1                     fsr1l           equ	4065
   175   000FD9                     fsr2            equ	4057
   176   000FDA                     fsr2h           equ	4058
   177   000FD9                     fsr2l           equ	4057
   178   000FEF                     indf0           equ	4079
   179   000FE7                     indf1           equ	4071
   180   000FDF                     indf2           equ	4063
   181   000FF2                     intcon          equ	4082
   182   000F80                     nvmcon          equ	3968
   183   000FF9                     pcl             equ	4089
   184   000FFA                     pclath          equ	4090
   185   000FFB                     pclatu          equ	4091
   186   000FEB                     plusw0          equ	4075
   187   000FE3                     plusw1          equ	4067
   188   000FDB                     plusw2          equ	4059
   189   000FED                     postdec0        equ	4077
   190   000FE5                     postdec1        equ	4069
   191   000FDD                     postdec2        equ	4061
   192   000FEE                     postinc0        equ	4078
   193   000FE6                     postinc1        equ	4070
   194   000FDE                     postinc2        equ	4062
   195   000FEC                     preinc0         equ	4076
   196   000FE4                     preinc1         equ	4068
   197   000FDC                     preinc2         equ	4060
   198   000FF3                     prod            equ	4083
   199   000FF4                     prodh           equ	4084
   200   000FF3                     prodl           equ	4083
   201   000FD8                     status          equ	4056
   202   000FF5                     tablat          equ	4085
   203   000FF6                     tblptr          equ	4086
   204   000FF7                     tblptrh         equ	4087
   205   000FF6                     tblptrl         equ	4086
   206   000FF8                     tblptru         equ	4088
   207   000FFD                     tosl            equ	4093
   208   000FE8                     wreg            equ	4072
   209   000E9B                     PPSLOCK         equ	3739	;# 
   210   000E9C                     INT0PPS         equ	3740	;# 
   211   000E9D                     INT1PPS         equ	3741	;# 
   212   000E9E                     INT2PPS         equ	3742	;# 
   213   000E9F                     T0CKIPPS        equ	3743	;# 
   214   000EA0                     T1CKIPPS        equ	3744	;# 
   215   000EA1                     T1GPPS          equ	3745	;# 
   216   000EA2                     T3CKIPPS        equ	3746	;# 
   217   000EA3                     T3GPPS          equ	3747	;# 
   218   000EA4                     T5CKIPPS        equ	3748	;# 
   219   000EA5                     T5GPPS          equ	3749	;# 
   220   000EA6                     T2INPPS         equ	3750	;# 
   221   000EA7                     T4INPPS         equ	3751	;# 
   222   000EA8                     T6INPPS         equ	3752	;# 
   223   000EA9                     ADACTPPS        equ	3753	;# 
   224   000EAA                     CCP1PPS         equ	3754	;# 
   225   000EAB                     CCP2PPS         equ	3755	;# 
   226   000EAC                     CWG1PPS         equ	3756	;# 
   227   000EAC                     CWGPPS          equ	3756	;# 
   228   000EAC                     CWGINPPS        equ	3756	;# 
   229   000EAC                     CWG1INPPS       equ	3756	;# 
   230   000EAD                     MDCARLPPS       equ	3757	;# 
   231   000EAE                     MDCARHPPS       equ	3758	;# 
   232   000EAF                     MDSRCPPS        equ	3759	;# 
   233   000EB0                     RX1PPS          equ	3760	;# 
   234   000EB0                     RXPPS           equ	3760	;# 
   235   000EB0                     RXDT1PPS        equ	3760	;# 
   236   000EB1                     CK1PPS          equ	3761	;# 
   237   000EB1                     TXPPS           equ	3761	;# 
   238   000EB1                     CKPPS           equ	3761	;# 
   239   000EB1                     TXCK1PPS        equ	3761	;# 
   240   000EB1                     TX1PPS          equ	3761	;# 
   241   000EB2                     SSP1CLKPPS      equ	3762	;# 
   242   000EB2                     SSPCLKPPS       equ	3762	;# 
   243   000EB3                     SSP1DATPPS      equ	3763	;# 
   244   000EB3                     SSPDATPPS       equ	3763	;# 
   245   000EB4                     SSP1SSPPS       equ	3764	;# 
   246   000EB4                     SSPSSPPS        equ	3764	;# 
   247   000EB5                     IPR0            equ	3765	;# 
   248   000EB6                     IPR1            equ	3766	;# 
   249   000EB7                     IPR2            equ	3767	;# 
   250   000EB8                     IPR3            equ	3768	;# 
   251   000EB9                     IPR4            equ	3769	;# 
   252   000EBA                     IPR5            equ	3770	;# 
   253   000EBB                     IPR6            equ	3771	;# 
   254   000EBC                     IPR7            equ	3772	;# 
   255   000EBD                     PIE0            equ	3773	;# 
   256   000EBE                     PIE1            equ	3774	;# 
   257   000EBF                     PIE2            equ	3775	;# 
   258   000EC0                     PIE3            equ	3776	;# 
   259   000EC1                     PIE4            equ	3777	;# 
   260   000EC2                     PIE5            equ	3778	;# 
   261   000EC3                     PIE6            equ	3779	;# 
   262   000EC4                     PIE7            equ	3780	;# 
   263   000EC5                     PIR0            equ	3781	;# 
   264   000EC6                     PIR1            equ	3782	;# 
   265   000EC7                     PIR2            equ	3783	;# 
   266   000EC8                     PIR3            equ	3784	;# 
   267   000EC9                     PIR4            equ	3785	;# 
   268   000ECA                     PIR5            equ	3786	;# 
   269   000ECB                     PIR6            equ	3787	;# 
   270   000ECC                     PIR7            equ	3788	;# 
   271   000ECD                     WDTCON0         equ	3789	;# 
   272   000ECE                     WDTCON1         equ	3790	;# 
   273   000ECF                     WDTPSL          equ	3791	;# 
   274   000ED0                     WDTPSH          equ	3792	;# 
   275   000ED1                     WDTTMR          equ	3793	;# 
   276   000ED2                     CPUDOZE         equ	3794	;# 
   277   000ED3                     OSCCON1         equ	3795	;# 
   278   000ED4                     OSCCON2         equ	3796	;# 
   279   000ED5                     OSCCON3         equ	3797	;# 
   280   000ED6                     OSCSTAT         equ	3798	;# 
   281   000ED6                     OSCSTAT1        equ	3798	;# 
   282   000ED7                     OSCEN           equ	3799	;# 
   283   000ED8                     OSCTUNE         equ	3800	;# 
   284   000ED9                     OSCFRQ          equ	3801	;# 
   285   000ED9                     OSCFREQ         equ	3801	;# 
   286   000EDA                     VREGCON         equ	3802	;# 
   287   000EDB                     BORCON          equ	3803	;# 
   288   000EDC                     PMD0            equ	3804	;# 
   289   000EDD                     PMD1            equ	3805	;# 
   290   000EDE                     PMD2            equ	3806	;# 
   291   000EDF                     PMD3            equ	3807	;# 
   292   000EE0                     PMD4            equ	3808	;# 
   293   000EE1                     PMD5            equ	3809	;# 
   294   000EE2                     RA0PPS          equ	3810	;# 
   295   000EE3                     RA1PPS          equ	3811	;# 
   296   000EE4                     RA2PPS          equ	3812	;# 
   297   000EE5                     RA3PPS          equ	3813	;# 
   298   000EE6                     RA4PPS          equ	3814	;# 
   299   000EE7                     RA5PPS          equ	3815	;# 
   300   000EE8                     RA6PPS          equ	3816	;# 
   301   000EE9                     RA7PPS          equ	3817	;# 
   302   000EEA                     RB0PPS          equ	3818	;# 
   303   000EEB                     RB1PPS          equ	3819	;# 
   304   000EEC                     RB2PPS          equ	3820	;# 
   305   000EED                     RB3PPS          equ	3821	;# 
   306   000EEE                     RB4PPS          equ	3822	;# 
   307   000EEF                     RB5PPS          equ	3823	;# 
   308   000EF0                     RB6PPS          equ	3824	;# 
   309   000EF1                     RB7PPS          equ	3825	;# 
   310   000EF2                     RC0PPS          equ	3826	;# 
   311   000EF3                     RC1PPS          equ	3827	;# 
   312   000EF4                     RC2PPS          equ	3828	;# 
   313   000EF5                     RC3PPS          equ	3829	;# 
   314   000EF6                     RC4PPS          equ	3830	;# 
   315   000EF7                     RC5PPS          equ	3831	;# 
   316   000EF8                     RC6PPS          equ	3832	;# 
   317   000EF9                     RC7PPS          equ	3833	;# 
   318   000F05                     IOCAF           equ	3845	;# 
   319   000F06                     IOCAN           equ	3846	;# 
   320   000F07                     IOCAP           equ	3847	;# 
   321   000F08                     INLVLA          equ	3848	;# 
   322   000F09                     SLRCONA         equ	3849	;# 
   323   000F0A                     ODCONA          equ	3850	;# 
   324   000F0B                     WPUA            equ	3851	;# 
   325   000F0C                     ANSELA          equ	3852	;# 
   326   000F0D                     IOCBF           equ	3853	;# 
   327   000F0E                     IOCBN           equ	3854	;# 
   328   000F0F                     IOCBP           equ	3855	;# 
   329   000F10                     INLVLB          equ	3856	;# 
   330   000F11                     SLRCONB         equ	3857	;# 
   331   000F12                     ODCONB          equ	3858	;# 
   332   000F13                     WPUB            equ	3859	;# 
   333   000F14                     ANSELB          equ	3860	;# 
   334   000F15                     IOCCF           equ	3861	;# 
   335   000F16                     IOCCN           equ	3862	;# 
   336   000F17                     IOCCP           equ	3863	;# 
   337   000F18                     INLVLC          equ	3864	;# 
   338   000F19                     SLRCONC         equ	3865	;# 
   339   000F1A                     ODCONC          equ	3866	;# 
   340   000F1B                     WPUC            equ	3867	;# 
   341   000F1C                     ANSELC          equ	3868	;# 
   342   000F22                     IOCEF           equ	3874	;# 
   343   000F23                     IOCEN           equ	3875	;# 
   344   000F24                     IOCEP           equ	3876	;# 
   345   000F25                     INLVLE          equ	3877	;# 
   346   000F28                     WPUE            equ	3880	;# 
   347   000F2A                     HLVDCON0        equ	3882	;# 
   348   000F2B                     HLVDCON1        equ	3883	;# 
   349   000F2C                     FVRCON          equ	3884	;# 
   350   000F2D                     ZCDCON          equ	3885	;# 
   351   000F2E                     DAC1CON0        equ	3886	;# 
   352   000F2F                     DAC1CON1        equ	3887	;# 
   353   000F30                     CM2CON0         equ	3888	;# 
   354   000F31                     CM2CON1         equ	3889	;# 
   355   000F32                     CM2NCH          equ	3890	;# 
   356   000F33                     CM2PCH          equ	3891	;# 
   357   000F34                     CM1CON0         equ	3892	;# 
   358   000F35                     CM1CON1         equ	3893	;# 
   359   000F36                     CM1NCH          equ	3894	;# 
   360   000F37                     CM1PCH          equ	3895	;# 
   361   000F38                     CMOUT           equ	3896	;# 
   362   000F39                     CLKRCON         equ	3897	;# 
   363   000F3A                     CLKRCLK         equ	3898	;# 
   364   000F3B                     CWG1CLK         equ	3899	;# 
   365   000F3B                     CWG1CLKCON      equ	3899	;# 
   366   000F3C                     CWG1ISM         equ	3900	;# 
   367   000F3D                     CWG1DBR         equ	3901	;# 
   368   000F3E                     CWG1DBF         equ	3902	;# 
   369   000F3F                     CWG1CON0        equ	3903	;# 
   370   000F40                     CWG1CON1        equ	3904	;# 
   371   000F41                     CWG1AS0         equ	3905	;# 
   372   000F42                     CWG1AS1         equ	3906	;# 
   373   000F43                     CWG1STR         equ	3907	;# 
   374   000F44                     SCANLADR        equ	3908	;# 
   375   000F44                     SCANLADRL       equ	3908	;# 
   376   000F45                     SCANLADRH       equ	3909	;# 
   377   000F46                     SCANLADRU       equ	3910	;# 
   378   000F47                     SCANHADR        equ	3911	;# 
   379   000F47                     SCANHADRL       equ	3911	;# 
   380   000F48                     SCANHADRH       equ	3912	;# 
   381   000F49                     SCANHADRU       equ	3913	;# 
   382   000F4A                     SCANCON0        equ	3914	;# 
   383   000F4B                     SCANTRIG        equ	3915	;# 
   384   000F4C                     MDCON0          equ	3916	;# 
   385   000F4D                     MDCON1          equ	3917	;# 
   386   000F4E                     MDSRC           equ	3918	;# 
   387   000F4F                     MDCARL          equ	3919	;# 
   388   000F50                     MDCARH          equ	3920	;# 
   389   000F51                     ADACT           equ	3921	;# 
   390   000F52                     ADCLK           equ	3922	;# 
   391   000F53                     ADREF           equ	3923	;# 
   392   000F54                     ADCON1          equ	3924	;# 
   393   000F55                     ADCON2          equ	3925	;# 
   394   000F56                     ADCON3          equ	3926	;# 
   395   000F57                     ADACQ           equ	3927	;# 
   396   000F58                     ADCAP           equ	3928	;# 
   397   000F59                     ADPRE           equ	3929	;# 
   398   000F5A                     ADPCH           equ	3930	;# 
   399   000F5B                     ADCON0          equ	3931	;# 
   400   000F5C                     ADPREV          equ	3932	;# 
   401   000F5C                     ADPREVL         equ	3932	;# 
   402   000F5D                     ADPREVH         equ	3933	;# 
   403   000F5E                     ADRES           equ	3934	;# 
   404   000F5E                     ADRESL          equ	3934	;# 
   405   000F5F                     ADRESH          equ	3935	;# 
   406   000F60                     ADSTAT          equ	3936	;# 
   407   000F61                     ADRPT           equ	3937	;# 
   408   000F62                     ADCNT           equ	3938	;# 
   409   000F63                     ADSTPT          equ	3939	;# 
   410   000F63                     ADSTPTL         equ	3939	;# 
   411   000F64                     ADSTPTH         equ	3940	;# 
   412   000F65                     ADLTH           equ	3941	;# 
   413   000F65                     ADLTHL          equ	3941	;# 
   414   000F66                     ADLTHH          equ	3942	;# 
   415   000F67                     ADUTH           equ	3943	;# 
   416   000F67                     ADUTHL          equ	3943	;# 
   417   000F68                     ADUTHH          equ	3944	;# 
   418   000F69                     ADERR           equ	3945	;# 
   419   000F69                     ADERRL          equ	3945	;# 
   420   000F6A                     ADERRH          equ	3946	;# 
   421   000F6B                     ADACC           equ	3947	;# 
   422   000F6B                     ADACCL          equ	3947	;# 
   423   000F6C                     ADACCH          equ	3948	;# 
   424   000F6D                     ADFLTR          equ	3949	;# 
   425   000F6D                     ADFLTRL         equ	3949	;# 
   426   000F6E                     ADFLTRH         equ	3950	;# 
   427   000F6F                     CRCDATA         equ	3951	;# 
   428   000F6F                     CRCDATL         equ	3951	;# 
   429   000F70                     CRCDATH         equ	3952	;# 
   430   000F71                     CRCACC          equ	3953	;# 
   431   000F71                     CRCACCL         equ	3953	;# 
   432   000F72                     CRCACCH         equ	3954	;# 
   433   000F73                     CRCSHFT         equ	3955	;# 
   434   000F73                     CRCSHIFTL       equ	3955	;# 
   435   000F74                     CRCSHIFTH       equ	3956	;# 
   436   000F75                     CRCXOR          equ	3957	;# 
   437   000F75                     CRCXORL         equ	3957	;# 
   438   000F76                     CRCXORH         equ	3958	;# 
   439   000F77                     CRCCON0         equ	3959	;# 
   440   000F78                     CRCCON1         equ	3960	;# 
   441   000F79                     NVMADR          equ	3961	;# 
   442   000F79                     NVMADRL         equ	3961	;# 
   443   000F7A                     NVMADRH         equ	3962	;# 
   444   000F7B                     NVMADRU         equ	3963	;# 
   445   000F7C                     NVMDAT          equ	3964	;# 
   446   000F7C                     NVMDATL         equ	3964	;# 
   447   000F7D                     NVMDATH         equ	3965	;# 
   448   000F7F                     NVMCON0         equ	3967	;# 
   449   000F80                     NVMCON1         equ	3968	;# 
   450   000F81                     NVMCON2         equ	3969	;# 
   451   000F82                     LATA            equ	3970	;# 
   452   000F83                     LATB            equ	3971	;# 
   453   000F84                     LATC            equ	3972	;# 
   454   000F87                     TRISA           equ	3975	;# 
   455   000F87                     DDRA            equ	3975	;# 
   456   000F88                     TRISB           equ	3976	;# 
   457   000F88                     DDRB            equ	3976	;# 
   458   000F89                     TRISC           equ	3977	;# 
   459   000F89                     DDRC            equ	3977	;# 
   460   000F8C                     PORTA           equ	3980	;# 
   461   000F8D                     PORTB           equ	3981	;# 
   462   000F8E                     PORTC           equ	3982	;# 
   463   000F90                     PORTE           equ	3984	;# 
   464   000F91                     SSP1BUF         equ	3985	;# 
   465   000F92                     SSP1ADD         equ	3986	;# 
   466   000F93                     SSP1MSK         equ	3987	;# 
   467   000F94                     SSP1STAT        equ	3988	;# 
   468   000F95                     SSP1CON1        equ	3989	;# 
   469   000F96                     SSP1CON2        equ	3990	;# 
   470   000F97                     SSP1CON3        equ	3991	;# 
   471   000F98                     RC1REG          equ	3992	;# 
   472   000F98                     RCREG           equ	3992	;# 
   473   000F98                     RCREG1          equ	3992	;# 
   474   000F99                     TX1REG          equ	3993	;# 
   475   000F99                     TXREG1          equ	3993	;# 
   476   000F99                     TXREG           equ	3993	;# 
   477   000F9A                     SP1BRG          equ	3994	;# 
   478   000F9A                     SPBRG           equ	3994	;# 
   479   000F9A                     SP1BRGL         equ	3994	;# 
   480   000F9A                     SPBRG1          equ	3994	;# 
   481   000F9A                     SPBRGL          equ	3994	;# 
   482   000F9B                     SP1BRGH         equ	3995	;# 
   483   000F9B                     SPBRGH          equ	3995	;# 
   484   000F9B                     SPBRGH1         equ	3995	;# 
   485   000F9C                     RC1STA          equ	3996	;# 
   486   000F9C                     RCSTA1          equ	3996	;# 
   487   000F9C                     RCSTA           equ	3996	;# 
   488   000F9D                     TX1STA          equ	3997	;# 
   489   000F9D                     TXSTA1          equ	3997	;# 
   490   000F9D                     TXSTA           equ	3997	;# 
   491   000F9E                     BAUD1CON        equ	3998	;# 
   492   000F9E                     BAUDCON1        equ	3998	;# 
   493   000F9E                     BAUDCTL1        equ	3998	;# 
   494   000F9E                     BAUDCON         equ	3998	;# 
   495   000F9E                     BAUDCTL         equ	3998	;# 
   496   000F9F                     PWM4DC          equ	3999	;# 
   497   000F9F                     PWM4DCL         equ	3999	;# 
   498   000FA0                     PWM4DCH         equ	4000	;# 
   499   000FA1                     PWM4CON         equ	4001	;# 
   500   000FA2                     PWM3DC          equ	4002	;# 
   501   000FA2                     PWM3DCL         equ	4002	;# 
   502   000FA3                     PWM3DCH         equ	4003	;# 
   503   000FA4                     PWM3CON         equ	4004	;# 
   504   000FA5                     CCPR2           equ	4005	;# 
   505   000FA5                     CCPR2L          equ	4005	;# 
   506   000FA6                     CCPR2H          equ	4006	;# 
   507   000FA7                     CCP2CON         equ	4007	;# 
   508   000FA8                     CCP2CAP         equ	4008	;# 
   509   000FA9                     CCPR1           equ	4009	;# 
   510   000FA9                     CCPR1L          equ	4009	;# 
   511   000FAA                     CCPR1H          equ	4010	;# 
   512   000FAB                     CCP1CON         equ	4011	;# 
   513   000FAC                     CCP1CAP         equ	4012	;# 
   514   000FAD                     CCPTMRS         equ	4013	;# 
   515   000FAE                     T6TMR           equ	4014	;# 
   516   000FAE                     TMR6            equ	4014	;# 
   517   000FAF                     T6PR            equ	4015	;# 
   518   000FAF                     PR6             equ	4015	;# 
   519   000FB0                     T6CON           equ	4016	;# 
   520   000FB1                     T6HLT           equ	4017	;# 
   521   000FB2                     T6CLKCON        equ	4018	;# 
   522   000FB2                     T6CLK           equ	4018	;# 
   523   000FB3                     T6RST           equ	4019	;# 
   524   000FB4                     T4TMR           equ	4020	;# 
   525   000FB4                     TMR4            equ	4020	;# 
   526   000FB5                     T4PR            equ	4021	;# 
   527   000FB5                     PR4             equ	4021	;# 
   528   000FB6                     T4CON           equ	4022	;# 
   529   000FB7                     T4HLT           equ	4023	;# 
   530   000FB8                     T4CLKCON        equ	4024	;# 
   531   000FB8                     T4CLK           equ	4024	;# 
   532   000FB9                     T4RST           equ	4025	;# 
   533   000FBA                     T2TMR           equ	4026	;# 
   534   000FBA                     TMR2            equ	4026	;# 
   535   000FBB                     T2PR            equ	4027	;# 
   536   000FBB                     PR2             equ	4027	;# 
   537   000FBC                     T2CON           equ	4028	;# 
   538   000FBD                     T2HLT           equ	4029	;# 
   539   000FBE                     T2CLKCON        equ	4030	;# 
   540   000FBE                     T2CLK           equ	4030	;# 
   541   000FBF                     T2RST           equ	4031	;# 
   542   000FC0                     TMR5            equ	4032	;# 
   543   000FC0                     TMR5L           equ	4032	;# 
   544   000FC1                     TMR5H           equ	4033	;# 
   545   000FC2                     T5CON           equ	4034	;# 
   546   000FC2                     TMR5CON         equ	4034	;# 
   547   000FC3                     T5GCON          equ	4035	;# 
   548   000FC3                     TMR5GCON        equ	4035	;# 
   549   000FC4                     T5GATE          equ	4036	;# 
   550   000FC4                     TMR5GATE        equ	4036	;# 
   551   000FC5                     T5CLK           equ	4037	;# 
   552   000FC5                     TMR5CLK         equ	4037	;# 
   553   000FC5                     PR5             equ	4037	;# 
   554   000FC6                     TMR3            equ	4038	;# 
   555   000FC6                     TMR3L           equ	4038	;# 
   556   000FC7                     TMR3H           equ	4039	;# 
   557   000FC8                     T3CON           equ	4040	;# 
   558   000FC8                     TMR3CON         equ	4040	;# 
   559   000FC9                     T3GCON          equ	4041	;# 
   560   000FC9                     TMR3GCON        equ	4041	;# 
   561   000FCA                     T3GATE          equ	4042	;# 
   562   000FCA                     TMR3GATE        equ	4042	;# 
   563   000FCB                     T3CLK           equ	4043	;# 
   564   000FCB                     TMR3CLK         equ	4043	;# 
   565   000FCB                     PR3             equ	4043	;# 
   566   000FCC                     TMR1            equ	4044	;# 
   567   000FCC                     TMR1L           equ	4044	;# 
   568   000FCD                     TMR1H           equ	4045	;# 
   569   000FCE                     T1CON           equ	4046	;# 
   570   000FCE                     TMR1CON         equ	4046	;# 
   571   000FCF                     T1GCON          equ	4047	;# 
   572   000FCF                     TMR1GCON        equ	4047	;# 
   573   000FD0                     T1GATE          equ	4048	;# 
   574   000FD0                     TMR1GATE        equ	4048	;# 
   575   000FD1                     T1CLK           equ	4049	;# 
   576   000FD1                     TMR1CLK         equ	4049	;# 
   577   000FD1                     PR1             equ	4049	;# 
   578   000FD2                     TMR0L           equ	4050	;# 
   579   000FD2                     TMR0            equ	4050	;# 
   580   000FD3                     TMR0H           equ	4051	;# 
   581   000FD3                     PR0             equ	4051	;# 
   582   000FD4                     T0CON0          equ	4052	;# 
   583   000FD5                     T0CON1          equ	4053	;# 
   584   000FD6                     PCON1           equ	4054	;# 
   585   000FD7                     PCON0           equ	4055	;# 
   586   000FD8                     STATUS          equ	4056	;# 
   587   000FD9                     FSR2            equ	4057	;# 
   588   000FD9                     FSR2L           equ	4057	;# 
   589   000FDA                     FSR2H           equ	4058	;# 
   590   000FDB                     PLUSW2          equ	4059	;# 
   591   000FDC                     PREINC2         equ	4060	;# 
   592   000FDD                     POSTDEC2        equ	4061	;# 
   593   000FDE                     POSTINC2        equ	4062	;# 
   594   000FDF                     INDF2           equ	4063	;# 
   595   000FE0                     BSR             equ	4064	;# 
   596   000FE1                     FSR1            equ	4065	;# 
   597   000FE1                     FSR1L           equ	4065	;# 
   598   000FE2                     FSR1H           equ	4066	;# 
   599   000FE3                     PLUSW1          equ	4067	;# 
   600   000FE4                     PREINC1         equ	4068	;# 
   601   000FE5                     POSTDEC1        equ	4069	;# 
   602   000FE6                     POSTINC1        equ	4070	;# 
   603   000FE7                     INDF1           equ	4071	;# 
   604   000FE8                     WREG            equ	4072	;# 
   605   000FE9                     FSR0            equ	4073	;# 
   606   000FE9                     FSR0L           equ	4073	;# 
   607   000FEA                     FSR0H           equ	4074	;# 
   608   000FEB                     PLUSW0          equ	4075	;# 
   609   000FEC                     PREINC0         equ	4076	;# 
   610   000FED                     POSTDEC0        equ	4077	;# 
   611   000FEE                     POSTINC0        equ	4078	;# 
   612   000FEF                     INDF0           equ	4079	;# 
   613   000FF2                     INTCON          equ	4082	;# 
   614   000FF3                     PROD            equ	4083	;# 
   615   000FF3                     PRODL           equ	4083	;# 
   616   000FF4                     PRODH           equ	4084	;# 
   617   000FF5                     TABLAT          equ	4085	;# 
   618   000FF6                     TBLPTR          equ	4086	;# 
   619   000FF6                     TBLPTRL         equ	4086	;# 
   620   000FF7                     TBLPTRH         equ	4087	;# 
   621   000FF8                     TBLPTRU         equ	4088	;# 
   622   000FF9                     PCLAT           equ	4089	;# 
   623   000FF9                     PC              equ	4089	;# 
   624   000FF9                     PCL             equ	4089	;# 
   625   000FFA                     PCLATH          equ	4090	;# 
   626   000FFB                     PCLATU          equ	4091	;# 
   627   000FFC                     STKPTR          equ	4092	;# 
   628   000FFD                     TOS             equ	4093	;# 
   629   000FFD                     TOSL            equ	4093	;# 
   630   000FFE                     TOSH            equ	4094	;# 
   631   000FFF                     TOSU            equ	4095	;# 
   632   000E9B                     PPSLOCK         equ	3739	;# 
   633   000E9C                     INT0PPS         equ	3740	;# 
   634   000E9D                     INT1PPS         equ	3741	;# 
   635   000E9E                     INT2PPS         equ	3742	;# 
   636   000E9F                     T0CKIPPS        equ	3743	;# 
   637   000EA0                     T1CKIPPS        equ	3744	;# 
   638   000EA1                     T1GPPS          equ	3745	;# 
   639   000EA2                     T3CKIPPS        equ	3746	;# 
   640   000EA3                     T3GPPS          equ	3747	;# 
   641   000EA4                     T5CKIPPS        equ	3748	;# 
   642   000EA5                     T5GPPS          equ	3749	;# 
   643   000EA6                     T2INPPS         equ	3750	;# 
   644   000EA7                     T4INPPS         equ	3751	;# 
   645   000EA8                     T6INPPS         equ	3752	;# 
   646   000EA9                     ADACTPPS        equ	3753	;# 
   647   000EAA                     CCP1PPS         equ	3754	;# 
   648   000EAB                     CCP2PPS         equ	3755	;# 
   649   000EAC                     CWG1PPS         equ	3756	;# 
   650   000EAC                     CWGPPS          equ	3756	;# 
   651   000EAC                     CWGINPPS        equ	3756	;# 
   652   000EAC                     CWG1INPPS       equ	3756	;# 
   653   000EAD                     MDCARLPPS       equ	3757	;# 
   654   000EAE                     MDCARHPPS       equ	3758	;# 
   655   000EAF                     MDSRCPPS        equ	3759	;# 
   656   000EB0                     RX1PPS          equ	3760	;# 
   657   000EB0                     RXPPS           equ	3760	;# 
   658   000EB0                     RXDT1PPS        equ	3760	;# 
   659   000EB1                     CK1PPS          equ	3761	;# 
   660   000EB1                     TXPPS           equ	3761	;# 
   661   000EB1                     CKPPS           equ	3761	;# 
   662   000EB1                     TXCK1PPS        equ	3761	;# 
   663   000EB1                     TX1PPS          equ	3761	;# 
   664   000EB2                     SSP1CLKPPS      equ	3762	;# 
   665   000EB2                     SSPCLKPPS       equ	3762	;# 
   666   000EB3                     SSP1DATPPS      equ	3763	;# 
   667   000EB3                     SSPDATPPS       equ	3763	;# 
   668   000EB4                     SSP1SSPPS       equ	3764	;# 
   669   000EB4                     SSPSSPPS        equ	3764	;# 
   670   000EB5                     IPR0            equ	3765	;# 
   671   000EB6                     IPR1            equ	3766	;# 
   672   000EB7                     IPR2            equ	3767	;# 
   673   000EB8                     IPR3            equ	3768	;# 
   674   000EB9                     IPR4            equ	3769	;# 
   675   000EBA                     IPR5            equ	3770	;# 
   676   000EBB                     IPR6            equ	3771	;# 
   677   000EBC                     IPR7            equ	3772	;# 
   678   000EBD                     PIE0            equ	3773	;# 
   679   000EBE                     PIE1            equ	3774	;# 
   680   000EBF                     PIE2            equ	3775	;# 
   681   000EC0                     PIE3            equ	3776	;# 
   682   000EC1                     PIE4            equ	3777	;# 
   683   000EC2                     PIE5            equ	3778	;# 
   684   000EC3                     PIE6            equ	3779	;# 
   685   000EC4                     PIE7            equ	3780	;# 
   686   000EC5                     PIR0            equ	3781	;# 
   687   000EC6                     PIR1            equ	3782	;# 
   688   000EC7                     PIR2            equ	3783	;# 
   689   000EC8                     PIR3            equ	3784	;# 
   690   000EC9                     PIR4            equ	3785	;# 
   691   000ECA                     PIR5            equ	3786	;# 
   692   000ECB                     PIR6            equ	3787	;# 
   693   000ECC                     PIR7            equ	3788	;# 
   694   000ECD                     WDTCON0         equ	3789	;# 
   695   000ECE                     WDTCON1         equ	3790	;# 
   696   000ECF                     WDTPSL          equ	3791	;# 
   697   000ED0                     WDTPSH          equ	3792	;# 
   698   000ED1                     WDTTMR          equ	3793	;# 
   699   000ED2                     CPUDOZE         equ	3794	;# 
   700   000ED3                     OSCCON1         equ	3795	;# 
   701   000ED4                     OSCCON2         equ	3796	;# 
   702   000ED5                     OSCCON3         equ	3797	;# 
   703   000ED6                     OSCSTAT         equ	3798	;# 
   704   000ED6                     OSCSTAT1        equ	3798	;# 
   705   000ED7                     OSCEN           equ	3799	;# 
   706   000ED8                     OSCTUNE         equ	3800	;# 
   707   000ED9                     OSCFRQ          equ	3801	;# 
   708   000ED9                     OSCFREQ         equ	3801	;# 
   709   000EDA                     VREGCON         equ	3802	;# 
   710   000EDB                     BORCON          equ	3803	;# 
   711   000EDC                     PMD0            equ	3804	;# 
   712   000EDD                     PMD1            equ	3805	;# 
   713   000EDE                     PMD2            equ	3806	;# 
   714   000EDF                     PMD3            equ	3807	;# 
   715   000EE0                     PMD4            equ	3808	;# 
   716   000EE1                     PMD5            equ	3809	;# 
   717   000EE2                     RA0PPS          equ	3810	;# 
   718   000EE3                     RA1PPS          equ	3811	;# 
   719   000EE4                     RA2PPS          equ	3812	;# 
   720   000EE5                     RA3PPS          equ	3813	;# 
   721   000EE6                     RA4PPS          equ	3814	;# 
   722   000EE7                     RA5PPS          equ	3815	;# 
   723   000EE8                     RA6PPS          equ	3816	;# 
   724   000EE9                     RA7PPS          equ	3817	;# 
   725   000EEA                     RB0PPS          equ	3818	;# 
   726   000EEB                     RB1PPS          equ	3819	;# 
   727   000EEC                     RB2PPS          equ	3820	;# 
   728   000EED                     RB3PPS          equ	3821	;# 
   729   000EEE                     RB4PPS          equ	3822	;# 
   730   000EEF                     RB5PPS          equ	3823	;# 
   731   000EF0                     RB6PPS          equ	3824	;# 
   732   000EF1                     RB7PPS          equ	3825	;# 
   733   000EF2                     RC0PPS          equ	3826	;# 
   734   000EF3                     RC1PPS          equ	3827	;# 
   735   000EF4                     RC2PPS          equ	3828	;# 
   736   000EF5                     RC3PPS          equ	3829	;# 
   737   000EF6                     RC4PPS          equ	3830	;# 
   738   000EF7                     RC5PPS          equ	3831	;# 
   739   000EF8                     RC6PPS          equ	3832	;# 
   740   000EF9                     RC7PPS          equ	3833	;# 
   741   000F05                     IOCAF           equ	3845	;# 
   742   000F06                     IOCAN           equ	3846	;# 
   743   000F07                     IOCAP           equ	3847	;# 
   744   000F08                     INLVLA          equ	3848	;# 
   745   000F09                     SLRCONA         equ	3849	;# 
   746   000F0A                     ODCONA          equ	3850	;# 
   747   000F0B                     WPUA            equ	3851	;# 
   748   000F0C                     ANSELA          equ	3852	;# 
   749   000F0D                     IOCBF           equ	3853	;# 
   750   000F0E                     IOCBN           equ	3854	;# 
   751   000F0F                     IOCBP           equ	3855	;# 
   752   000F10                     INLVLB          equ	3856	;# 
   753   000F11                     SLRCONB         equ	3857	;# 
   754   000F12                     ODCONB          equ	3858	;# 
   755   000F13                     WPUB            equ	3859	;# 
   756   000F14                     ANSELB          equ	3860	;# 
   757   000F15                     IOCCF           equ	3861	;# 
   758   000F16                     IOCCN           equ	3862	;# 
   759   000F17                     IOCCP           equ	3863	;# 
   760   000F18                     INLVLC          equ	3864	;# 
   761   000F19                     SLRCONC         equ	3865	;# 
   762   000F1A                     ODCONC          equ	3866	;# 
   763   000F1B                     WPUC            equ	3867	;# 
   764   000F1C                     ANSELC          equ	3868	;# 
   765   000F22                     IOCEF           equ	3874	;# 
   766   000F23                     IOCEN           equ	3875	;# 
   767   000F24                     IOCEP           equ	3876	;# 
   768   000F25                     INLVLE          equ	3877	;# 
   769   000F28                     WPUE            equ	3880	;# 
   770   000F2A                     HLVDCON0        equ	3882	;# 
   771   000F2B                     HLVDCON1        equ	3883	;# 
   772   000F2C                     FVRCON          equ	3884	;# 
   773   000F2D                     ZCDCON          equ	3885	;# 
   774   000F2E                     DAC1CON0        equ	3886	;# 
   775   000F2F                     DAC1CON1        equ	3887	;# 
   776   000F30                     CM2CON0         equ	3888	;# 
   777   000F31                     CM2CON1         equ	3889	;# 
   778   000F32                     CM2NCH          equ	3890	;# 
   779   000F33                     CM2PCH          equ	3891	;# 
   780   000F34                     CM1CON0         equ	3892	;# 
   781   000F35                     CM1CON1         equ	3893	;# 
   782   000F36                     CM1NCH          equ	3894	;# 
   783   000F37                     CM1PCH          equ	3895	;# 
   784   000F38                     CMOUT           equ	3896	;# 
   785   000F39                     CLKRCON         equ	3897	;# 
   786   000F3A                     CLKRCLK         equ	3898	;# 
   787   000F3B                     CWG1CLK         equ	3899	;# 
   788   000F3B                     CWG1CLKCON      equ	3899	;# 
   789   000F3C                     CWG1ISM         equ	3900	;# 
   790   000F3D                     CWG1DBR         equ	3901	;# 
   791   000F3E                     CWG1DBF         equ	3902	;# 
   792   000F3F                     CWG1CON0        equ	3903	;# 
   793   000F40                     CWG1CON1        equ	3904	;# 
   794   000F41                     CWG1AS0         equ	3905	;# 
   795   000F42                     CWG1AS1         equ	3906	;# 
   796   000F43                     CWG1STR         equ	3907	;# 
   797   000F44                     SCANLADR        equ	3908	;# 
   798   000F44                     SCANLADRL       equ	3908	;# 
   799   000F45                     SCANLADRH       equ	3909	;# 
   800   000F46                     SCANLADRU       equ	3910	;# 
   801   000F47                     SCANHADR        equ	3911	;# 
   802   000F47                     SCANHADRL       equ	3911	;# 
   803   000F48                     SCANHADRH       equ	3912	;# 
   804   000F49                     SCANHADRU       equ	3913	;# 
   805   000F4A                     SCANCON0        equ	3914	;# 
   806   000F4B                     SCANTRIG        equ	3915	;# 
   807   000F4C                     MDCON0          equ	3916	;# 
   808   000F4D                     MDCON1          equ	3917	;# 
   809   000F4E                     MDSRC           equ	3918	;# 
   810   000F4F                     MDCARL          equ	3919	;# 
   811   000F50                     MDCARH          equ	3920	;# 
   812   000F51                     ADACT           equ	3921	;# 
   813   000F52                     ADCLK           equ	3922	;# 
   814   000F53                     ADREF           equ	3923	;# 
   815   000F54                     ADCON1          equ	3924	;# 
   816   000F55                     ADCON2          equ	3925	;# 
   817   000F56                     ADCON3          equ	3926	;# 
   818   000F57                     ADACQ           equ	3927	;# 
   819   000F58                     ADCAP           equ	3928	;# 
   820   000F59                     ADPRE           equ	3929	;# 
   821   000F5A                     ADPCH           equ	3930	;# 
   822   000F5B                     ADCON0          equ	3931	;# 
   823   000F5C                     ADPREV          equ	3932	;# 
   824   000F5C                     ADPREVL         equ	3932	;# 
   825   000F5D                     ADPREVH         equ	3933	;# 
   826   000F5E                     ADRES           equ	3934	;# 
   827   000F5E                     ADRESL          equ	3934	;# 
   828   000F5F                     ADRESH          equ	3935	;# 
   829   000F60                     ADSTAT          equ	3936	;# 
   830   000F61                     ADRPT           equ	3937	;# 
   831   000F62                     ADCNT           equ	3938	;# 
   832   000F63                     ADSTPT          equ	3939	;# 
   833   000F63                     ADSTPTL         equ	3939	;# 
   834   000F64                     ADSTPTH         equ	3940	;# 
   835   000F65                     ADLTH           equ	3941	;# 
   836   000F65                     ADLTHL          equ	3941	;# 
   837   000F66                     ADLTHH          equ	3942	;# 
   838   000F67                     ADUTH           equ	3943	;# 
   839   000F67                     ADUTHL          equ	3943	;# 
   840   000F68                     ADUTHH          equ	3944	;# 
   841   000F69                     ADERR           equ	3945	;# 
   842   000F69                     ADERRL          equ	3945	;# 
   843   000F6A                     ADERRH          equ	3946	;# 
   844   000F6B                     ADACC           equ	3947	;# 
   845   000F6B                     ADACCL          equ	3947	;# 
   846   000F6C                     ADACCH          equ	3948	;# 
   847   000F6D                     ADFLTR          equ	3949	;# 
   848   000F6D                     ADFLTRL         equ	3949	;# 
   849   000F6E                     ADFLTRH         equ	3950	;# 
   850   000F6F                     CRCDATA         equ	3951	;# 
   851   000F6F                     CRCDATL         equ	3951	;# 
   852   000F70                     CRCDATH         equ	3952	;# 
   853   000F71                     CRCACC          equ	3953	;# 
   854   000F71                     CRCACCL         equ	3953	;# 
   855   000F72                     CRCACCH         equ	3954	;# 
   856   000F73                     CRCSHFT         equ	3955	;# 
   857   000F73                     CRCSHIFTL       equ	3955	;# 
   858   000F74                     CRCSHIFTH       equ	3956	;# 
   859   000F75                     CRCXOR          equ	3957	;# 
   860   000F75                     CRCXORL         equ	3957	;# 
   861   000F76                     CRCXORH         equ	3958	;# 
   862   000F77                     CRCCON0         equ	3959	;# 
   863   000F78                     CRCCON1         equ	3960	;# 
   864   000F79                     NVMADR          equ	3961	;# 
   865   000F79                     NVMADRL         equ	3961	;# 
   866   000F7A                     NVMADRH         equ	3962	;# 
   867   000F7B                     NVMADRU         equ	3963	;# 
   868   000F7C                     NVMDAT          equ	3964	;# 
   869   000F7C                     NVMDATL         equ	3964	;# 
   870   000F7D                     NVMDATH         equ	3965	;# 
   871   000F7F                     NVMCON0         equ	3967	;# 
   872   000F80                     NVMCON1         equ	3968	;# 
   873   000F81                     NVMCON2         equ	3969	;# 
   874   000F82                     LATA            equ	3970	;# 
   875   000F83                     LATB            equ	3971	;# 
   876   000F84                     LATC            equ	3972	;# 
   877   000F87                     TRISA           equ	3975	;# 
   878   000F87                     DDRA            equ	3975	;# 
   879   000F88                     TRISB           equ	3976	;# 
   880   000F88                     DDRB            equ	3976	;# 
   881   000F89                     TRISC           equ	3977	;# 
   882   000F89                     DDRC            equ	3977	;# 
   883   000F8C                     PORTA           equ	3980	;# 
   884   000F8D                     PORTB           equ	3981	;# 
   885   000F8E                     PORTC           equ	3982	;# 
   886   000F90                     PORTE           equ	3984	;# 
   887   000F91                     SSP1BUF         equ	3985	;# 
   888   000F92                     SSP1ADD         equ	3986	;# 
   889   000F93                     SSP1MSK         equ	3987	;# 
   890   000F94                     SSP1STAT        equ	3988	;# 
   891   000F95                     SSP1CON1        equ	3989	;# 
   892   000F96                     SSP1CON2        equ	3990	;# 
   893   000F97                     SSP1CON3        equ	3991	;# 
   894   000F98                     RC1REG          equ	3992	;# 
   895   000F98                     RCREG           equ	3992	;# 
   896   000F98                     RCREG1          equ	3992	;# 
   897   000F99                     TX1REG          equ	3993	;# 
   898   000F99                     TXREG1          equ	3993	;# 
   899   000F99                     TXREG           equ	3993	;# 
   900   000F9A                     SP1BRG          equ	3994	;# 
   901   000F9A                     SPBRG           equ	3994	;# 
   902   000F9A                     SP1BRGL         equ	3994	;# 
   903   000F9A                     SPBRG1          equ	3994	;# 
   904   000F9A                     SPBRGL          equ	3994	;# 
   905   000F9B                     SP1BRGH         equ	3995	;# 
   906   000F9B                     SPBRGH          equ	3995	;# 
   907   000F9B                     SPBRGH1         equ	3995	;# 
   908   000F9C                     RC1STA          equ	3996	;# 
   909   000F9C                     RCSTA1          equ	3996	;# 
   910   000F9C                     RCSTA           equ	3996	;# 
   911   000F9D                     TX1STA          equ	3997	;# 
   912   000F9D                     TXSTA1          equ	3997	;# 
   913   000F9D                     TXSTA           equ	3997	;# 
   914   000F9E                     BAUD1CON        equ	3998	;# 
   915   000F9E                     BAUDCON1        equ	3998	;# 
   916   000F9E                     BAUDCTL1        equ	3998	;# 
   917   000F9E                     BAUDCON         equ	3998	;# 
   918   000F9E                     BAUDCTL         equ	3998	;# 
   919   000F9F                     PWM4DC          equ	3999	;# 
   920   000F9F                     PWM4DCL         equ	3999	;# 
   921   000FA0                     PWM4DCH         equ	4000	;# 
   922   000FA1                     PWM4CON         equ	4001	;# 
   923   000FA2                     PWM3DC          equ	4002	;# 
   924   000FA2                     PWM3DCL         equ	4002	;# 
   925   000FA3                     PWM3DCH         equ	4003	;# 
   926   000FA4                     PWM3CON         equ	4004	;# 
   927   000FA5                     CCPR2           equ	4005	;# 
   928   000FA5                     CCPR2L          equ	4005	;# 
   929   000FA6                     CCPR2H          equ	4006	;# 
   930   000FA7                     CCP2CON         equ	4007	;# 
   931   000FA8                     CCP2CAP         equ	4008	;# 
   932   000FA9                     CCPR1           equ	4009	;# 
   933   000FA9                     CCPR1L          equ	4009	;# 
   934   000FAA                     CCPR1H          equ	4010	;# 
   935   000FAB                     CCP1CON         equ	4011	;# 
   936   000FAC                     CCP1CAP         equ	4012	;# 
   937   000FAD                     CCPTMRS         equ	4013	;# 
   938   000FAE                     T6TMR           equ	4014	;# 
   939   000FAE                     TMR6            equ	4014	;# 
   940   000FAF                     T6PR            equ	4015	;# 
   941   000FAF                     PR6             equ	4015	;# 
   942   000FB0                     T6CON           equ	4016	;# 
   943   000FB1                     T6HLT           equ	4017	;# 
   944   000FB2                     T6CLKCON        equ	4018	;# 
   945   000FB2                     T6CLK           equ	4018	;# 
   946   000FB3                     T6RST           equ	4019	;# 
   947   000FB4                     T4TMR           equ	4020	;# 
   948   000FB4                     TMR4            equ	4020	;# 
   949   000FB5                     T4PR            equ	4021	;# 
   950   000FB5                     PR4             equ	4021	;# 
   951   000FB6                     T4CON           equ	4022	;# 
   952   000FB7                     T4HLT           equ	4023	;# 
   953   000FB8                     T4CLKCON        equ	4024	;# 
   954   000FB8                     T4CLK           equ	4024	;# 
   955   000FB9                     T4RST           equ	4025	;# 
   956   000FBA                     T2TMR           equ	4026	;# 
   957   000FBA                     TMR2            equ	4026	;# 
   958   000FBB                     T2PR            equ	4027	;# 
   959   000FBB                     PR2             equ	4027	;# 
   960   000FBC                     T2CON           equ	4028	;# 
   961   000FBD                     T2HLT           equ	4029	;# 
   962   000FBE                     T2CLKCON        equ	4030	;# 
   963   000FBE                     T2CLK           equ	4030	;# 
   964   000FBF                     T2RST           equ	4031	;# 
   965   000FC0                     TMR5            equ	4032	;# 
   966   000FC0                     TMR5L           equ	4032	;# 
   967   000FC1                     TMR5H           equ	4033	;# 
   968   000FC2                     T5CON           equ	4034	;# 
   969   000FC2                     TMR5CON         equ	4034	;# 
   970   000FC3                     T5GCON          equ	4035	;# 
   971   000FC3                     TMR5GCON        equ	4035	;# 
   972   000FC4                     T5GATE          equ	4036	;# 
   973   000FC4                     TMR5GATE        equ	4036	;# 
   974   000FC5                     T5CLK           equ	4037	;# 
   975   000FC5                     TMR5CLK         equ	4037	;# 
   976   000FC5                     PR5             equ	4037	;# 
   977   000FC6                     TMR3            equ	4038	;# 
   978   000FC6                     TMR3L           equ	4038	;# 
   979   000FC7                     TMR3H           equ	4039	;# 
   980   000FC8                     T3CON           equ	4040	;# 
   981   000FC8                     TMR3CON         equ	4040	;# 
   982   000FC9                     T3GCON          equ	4041	;# 
   983   000FC9                     TMR3GCON        equ	4041	;# 
   984   000FCA                     T3GATE          equ	4042	;# 
   985   000FCA                     TMR3GATE        equ	4042	;# 
   986   000FCB                     T3CLK           equ	4043	;# 
   987   000FCB                     TMR3CLK         equ	4043	;# 
   988   000FCB                     PR3             equ	4043	;# 
   989   000FCC                     TMR1            equ	4044	;# 
   990   000FCC                     TMR1L           equ	4044	;# 
   991   000FCD                     TMR1H           equ	4045	;# 
   992   000FCE                     T1CON           equ	4046	;# 
   993   000FCE                     TMR1CON         equ	4046	;# 
   994   000FCF                     T1GCON          equ	4047	;# 
   995   000FCF                     TMR1GCON        equ	4047	;# 
   996   000FD0                     T1GATE          equ	4048	;# 
   997   000FD0                     TMR1GATE        equ	4048	;# 
   998   000FD1                     T1CLK           equ	4049	;# 
   999   000FD1                     TMR1CLK         equ	4049	;# 
  1000   000FD1                     PR1             equ	4049	;# 
  1001   000FD2                     TMR0L           equ	4050	;# 
  1002   000FD2                     TMR0            equ	4050	;# 
  1003   000FD3                     TMR0H           equ	4051	;# 
  1004   000FD3                     PR0             equ	4051	;# 
  1005   000FD4                     T0CON0          equ	4052	;# 
  1006   000FD5                     T0CON1          equ	4053	;# 
  1007   000FD6                     PCON1           equ	4054	;# 
  1008   000FD7                     PCON0           equ	4055	;# 
  1009   000FD8                     STATUS          equ	4056	;# 
  1010   000FD9                     FSR2            equ	4057	;# 
  1011   000FD9                     FSR2L           equ	4057	;# 
  1012   000FDA                     FSR2H           equ	4058	;# 
  1013   000FDB                     PLUSW2          equ	4059	;# 
  1014   000FDC                     PREINC2         equ	4060	;# 
  1015   000FDD                     POSTDEC2        equ	4061	;# 
  1016   000FDE                     POSTINC2        equ	4062	;# 
  1017   000FDF                     INDF2           equ	4063	;# 
  1018   000FE0                     BSR             equ	4064	;# 
  1019   000FE1                     FSR1            equ	4065	;# 
  1020   000FE1                     FSR1L           equ	4065	;# 
  1021   000FE2                     FSR1H           equ	4066	;# 
  1022   000FE3                     PLUSW1          equ	4067	;# 
  1023   000FE4                     PREINC1         equ	4068	;# 
  1024   000FE5                     POSTDEC1        equ	4069	;# 
  1025   000FE6                     POSTINC1        equ	4070	;# 
  1026   000FE7                     INDF1           equ	4071	;# 
  1027   000FE8                     WREG            equ	4072	;# 
  1028   000FE9                     FSR0            equ	4073	;# 
  1029   000FE9                     FSR0L           equ	4073	;# 
  1030   000FEA                     FSR0H           equ	4074	;# 
  1031   000FEB                     PLUSW0          equ	4075	;# 
  1032   000FEC                     PREINC0         equ	4076	;# 
  1033   000FED                     POSTDEC0        equ	4077	;# 
  1034   000FEE                     POSTINC0        equ	4078	;# 
  1035   000FEF                     INDF0           equ	4079	;# 
  1036   000FF2                     INTCON          equ	4082	;# 
  1037   000FF3                     PROD            equ	4083	;# 
  1038   000FF3                     PRODL           equ	4083	;# 
  1039   000FF4                     PRODH           equ	4084	;# 
  1040   000FF5                     TABLAT          equ	4085	;# 
  1041   000FF6                     TBLPTR          equ	4086	;# 
  1042   000FF6                     TBLPTRL         equ	4086	;# 
  1043   000FF7                     TBLPTRH         equ	4087	;# 
  1044   000FF8                     TBLPTRU         equ	4088	;# 
  1045   000FF9                     PCLAT           equ	4089	;# 
  1046   000FF9                     PC              equ	4089	;# 
  1047   000FF9                     PCL             equ	4089	;# 
  1048   000FFA                     PCLATH          equ	4090	;# 
  1049   000FFB                     PCLATU          equ	4091	;# 
  1050   000FFC                     STKPTR          equ	4092	;# 
  1051   000FFD                     TOS             equ	4093	;# 
  1052   000FFD                     TOSL            equ	4093	;# 
  1053   000FFE                     TOSH            equ	4094	;# 
  1054   000FFF                     TOSU            equ	4095	;# 
  1055   000E9B                     PPSLOCK         equ	3739	;# 
  1056   000E9C                     INT0PPS         equ	3740	;# 
  1057   000E9D                     INT1PPS         equ	3741	;# 
  1058   000E9E                     INT2PPS         equ	3742	;# 
  1059   000E9F                     T0CKIPPS        equ	3743	;# 
  1060   000EA0                     T1CKIPPS        equ	3744	;# 
  1061   000EA1                     T1GPPS          equ	3745	;# 
  1062   000EA2                     T3CKIPPS        equ	3746	;# 
  1063   000EA3                     T3GPPS          equ	3747	;# 
  1064   000EA4                     T5CKIPPS        equ	3748	;# 
  1065   000EA5                     T5GPPS          equ	3749	;# 
  1066   000EA6                     T2INPPS         equ	3750	;# 
  1067   000EA7                     T4INPPS         equ	3751	;# 
  1068   000EA8                     T6INPPS         equ	3752	;# 
  1069   000EA9                     ADACTPPS        equ	3753	;# 
  1070   000EAA                     CCP1PPS         equ	3754	;# 
  1071   000EAB                     CCP2PPS         equ	3755	;# 
  1072   000EAC                     CWG1PPS         equ	3756	;# 
  1073   000EAC                     CWGPPS          equ	3756	;# 
  1074   000EAC                     CWGINPPS        equ	3756	;# 
  1075   000EAC                     CWG1INPPS       equ	3756	;# 
  1076   000EAD                     MDCARLPPS       equ	3757	;# 
  1077   000EAE                     MDCARHPPS       equ	3758	;# 
  1078   000EAF                     MDSRCPPS        equ	3759	;# 
  1079   000EB0                     RX1PPS          equ	3760	;# 
  1080   000EB0                     RXPPS           equ	3760	;# 
  1081   000EB0                     RXDT1PPS        equ	3760	;# 
  1082   000EB1                     CK1PPS          equ	3761	;# 
  1083   000EB1                     TXPPS           equ	3761	;# 
  1084   000EB1                     CKPPS           equ	3761	;# 
  1085   000EB1                     TXCK1PPS        equ	3761	;# 
  1086   000EB1                     TX1PPS          equ	3761	;# 
  1087   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1088   000EB2                     SSPCLKPPS       equ	3762	;# 
  1089   000EB3                     SSP1DATPPS      equ	3763	;# 
  1090   000EB3                     SSPDATPPS       equ	3763	;# 
  1091   000EB4                     SSP1SSPPS       equ	3764	;# 
  1092   000EB4                     SSPSSPPS        equ	3764	;# 
  1093   000EB5                     IPR0            equ	3765	;# 
  1094   000EB6                     IPR1            equ	3766	;# 
  1095   000EB7                     IPR2            equ	3767	;# 
  1096   000EB8                     IPR3            equ	3768	;# 
  1097   000EB9                     IPR4            equ	3769	;# 
  1098   000EBA                     IPR5            equ	3770	;# 
  1099   000EBB                     IPR6            equ	3771	;# 
  1100   000EBC                     IPR7            equ	3772	;# 
  1101   000EBD                     PIE0            equ	3773	;# 
  1102   000EBE                     PIE1            equ	3774	;# 
  1103   000EBF                     PIE2            equ	3775	;# 
  1104   000EC0                     PIE3            equ	3776	;# 
  1105   000EC1                     PIE4            equ	3777	;# 
  1106   000EC2                     PIE5            equ	3778	;# 
  1107   000EC3                     PIE6            equ	3779	;# 
  1108   000EC4                     PIE7            equ	3780	;# 
  1109   000EC5                     PIR0            equ	3781	;# 
  1110   000EC6                     PIR1            equ	3782	;# 
  1111   000EC7                     PIR2            equ	3783	;# 
  1112   000EC8                     PIR3            equ	3784	;# 
  1113   000EC9                     PIR4            equ	3785	;# 
  1114   000ECA                     PIR5            equ	3786	;# 
  1115   000ECB                     PIR6            equ	3787	;# 
  1116   000ECC                     PIR7            equ	3788	;# 
  1117   000ECD                     WDTCON0         equ	3789	;# 
  1118   000ECE                     WDTCON1         equ	3790	;# 
  1119   000ECF                     WDTPSL          equ	3791	;# 
  1120   000ED0                     WDTPSH          equ	3792	;# 
  1121   000ED1                     WDTTMR          equ	3793	;# 
  1122   000ED2                     CPUDOZE         equ	3794	;# 
  1123   000ED3                     OSCCON1         equ	3795	;# 
  1124   000ED4                     OSCCON2         equ	3796	;# 
  1125   000ED5                     OSCCON3         equ	3797	;# 
  1126   000ED6                     OSCSTAT         equ	3798	;# 
  1127   000ED6                     OSCSTAT1        equ	3798	;# 
  1128   000ED7                     OSCEN           equ	3799	;# 
  1129   000ED8                     OSCTUNE         equ	3800	;# 
  1130   000ED9                     OSCFRQ          equ	3801	;# 
  1131   000ED9                     OSCFREQ         equ	3801	;# 
  1132   000EDA                     VREGCON         equ	3802	;# 
  1133   000EDB                     BORCON          equ	3803	;# 
  1134   000EDC                     PMD0            equ	3804	;# 
  1135   000EDD                     PMD1            equ	3805	;# 
  1136   000EDE                     PMD2            equ	3806	;# 
  1137   000EDF                     PMD3            equ	3807	;# 
  1138   000EE0                     PMD4            equ	3808	;# 
  1139   000EE1                     PMD5            equ	3809	;# 
  1140   000EE2                     RA0PPS          equ	3810	;# 
  1141   000EE3                     RA1PPS          equ	3811	;# 
  1142   000EE4                     RA2PPS          equ	3812	;# 
  1143   000EE5                     RA3PPS          equ	3813	;# 
  1144   000EE6                     RA4PPS          equ	3814	;# 
  1145   000EE7                     RA5PPS          equ	3815	;# 
  1146   000EE8                     RA6PPS          equ	3816	;# 
  1147   000EE9                     RA7PPS          equ	3817	;# 
  1148   000EEA                     RB0PPS          equ	3818	;# 
  1149   000EEB                     RB1PPS          equ	3819	;# 
  1150   000EEC                     RB2PPS          equ	3820	;# 
  1151   000EED                     RB3PPS          equ	3821	;# 
  1152   000EEE                     RB4PPS          equ	3822	;# 
  1153   000EEF                     RB5PPS          equ	3823	;# 
  1154   000EF0                     RB6PPS          equ	3824	;# 
  1155   000EF1                     RB7PPS          equ	3825	;# 
  1156   000EF2                     RC0PPS          equ	3826	;# 
  1157   000EF3                     RC1PPS          equ	3827	;# 
  1158   000EF4                     RC2PPS          equ	3828	;# 
  1159   000EF5                     RC3PPS          equ	3829	;# 
  1160   000EF6                     RC4PPS          equ	3830	;# 
  1161   000EF7                     RC5PPS          equ	3831	;# 
  1162   000EF8                     RC6PPS          equ	3832	;# 
  1163   000EF9                     RC7PPS          equ	3833	;# 
  1164   000F05                     IOCAF           equ	3845	;# 
  1165   000F06                     IOCAN           equ	3846	;# 
  1166   000F07                     IOCAP           equ	3847	;# 
  1167   000F08                     INLVLA          equ	3848	;# 
  1168   000F09                     SLRCONA         equ	3849	;# 
  1169   000F0A                     ODCONA          equ	3850	;# 
  1170   000F0B                     WPUA            equ	3851	;# 
  1171   000F0C                     ANSELA          equ	3852	;# 
  1172   000F0D                     IOCBF           equ	3853	;# 
  1173   000F0E                     IOCBN           equ	3854	;# 
  1174   000F0F                     IOCBP           equ	3855	;# 
  1175   000F10                     INLVLB          equ	3856	;# 
  1176   000F11                     SLRCONB         equ	3857	;# 
  1177   000F12                     ODCONB          equ	3858	;# 
  1178   000F13                     WPUB            equ	3859	;# 
  1179   000F14                     ANSELB          equ	3860	;# 
  1180   000F15                     IOCCF           equ	3861	;# 
  1181   000F16                     IOCCN           equ	3862	;# 
  1182   000F17                     IOCCP           equ	3863	;# 
  1183   000F18                     INLVLC          equ	3864	;# 
  1184   000F19                     SLRCONC         equ	3865	;# 
  1185   000F1A                     ODCONC          equ	3866	;# 
  1186   000F1B                     WPUC            equ	3867	;# 
  1187   000F1C                     ANSELC          equ	3868	;# 
  1188   000F22                     IOCEF           equ	3874	;# 
  1189   000F23                     IOCEN           equ	3875	;# 
  1190   000F24                     IOCEP           equ	3876	;# 
  1191   000F25                     INLVLE          equ	3877	;# 
  1192   000F28                     WPUE            equ	3880	;# 
  1193   000F2A                     HLVDCON0        equ	3882	;# 
  1194   000F2B                     HLVDCON1        equ	3883	;# 
  1195   000F2C                     FVRCON          equ	3884	;# 
  1196   000F2D                     ZCDCON          equ	3885	;# 
  1197   000F2E                     DAC1CON0        equ	3886	;# 
  1198   000F2F                     DAC1CON1        equ	3887	;# 
  1199   000F30                     CM2CON0         equ	3888	;# 
  1200   000F31                     CM2CON1         equ	3889	;# 
  1201   000F32                     CM2NCH          equ	3890	;# 
  1202   000F33                     CM2PCH          equ	3891	;# 
  1203   000F34                     CM1CON0         equ	3892	;# 
  1204   000F35                     CM1CON1         equ	3893	;# 
  1205   000F36                     CM1NCH          equ	3894	;# 
  1206   000F37                     CM1PCH          equ	3895	;# 
  1207   000F38                     CMOUT           equ	3896	;# 
  1208   000F39                     CLKRCON         equ	3897	;# 
  1209   000F3A                     CLKRCLK         equ	3898	;# 
  1210   000F3B                     CWG1CLK         equ	3899	;# 
  1211   000F3B                     CWG1CLKCON      equ	3899	;# 
  1212   000F3C                     CWG1ISM         equ	3900	;# 
  1213   000F3D                     CWG1DBR         equ	3901	;# 
  1214   000F3E                     CWG1DBF         equ	3902	;# 
  1215   000F3F                     CWG1CON0        equ	3903	;# 
  1216   000F40                     CWG1CON1        equ	3904	;# 
  1217   000F41                     CWG1AS0         equ	3905	;# 
  1218   000F42                     CWG1AS1         equ	3906	;# 
  1219   000F43                     CWG1STR         equ	3907	;# 
  1220   000F44                     SCANLADR        equ	3908	;# 
  1221   000F44                     SCANLADRL       equ	3908	;# 
  1222   000F45                     SCANLADRH       equ	3909	;# 
  1223   000F46                     SCANLADRU       equ	3910	;# 
  1224   000F47                     SCANHADR        equ	3911	;# 
  1225   000F47                     SCANHADRL       equ	3911	;# 
  1226   000F48                     SCANHADRH       equ	3912	;# 
  1227   000F49                     SCANHADRU       equ	3913	;# 
  1228   000F4A                     SCANCON0        equ	3914	;# 
  1229   000F4B                     SCANTRIG        equ	3915	;# 
  1230   000F4C                     MDCON0          equ	3916	;# 
  1231   000F4D                     MDCON1          equ	3917	;# 
  1232   000F4E                     MDSRC           equ	3918	;# 
  1233   000F4F                     MDCARL          equ	3919	;# 
  1234   000F50                     MDCARH          equ	3920	;# 
  1235   000F51                     ADACT           equ	3921	;# 
  1236   000F52                     ADCLK           equ	3922	;# 
  1237   000F53                     ADREF           equ	3923	;# 
  1238   000F54                     ADCON1          equ	3924	;# 
  1239   000F55                     ADCON2          equ	3925	;# 
  1240   000F56                     ADCON3          equ	3926	;# 
  1241   000F57                     ADACQ           equ	3927	;# 
  1242   000F58                     ADCAP           equ	3928	;# 
  1243   000F59                     ADPRE           equ	3929	;# 
  1244   000F5A                     ADPCH           equ	3930	;# 
  1245   000F5B                     ADCON0          equ	3931	;# 
  1246   000F5C                     ADPREV          equ	3932	;# 
  1247   000F5C                     ADPREVL         equ	3932	;# 
  1248   000F5D                     ADPREVH         equ	3933	;# 
  1249   000F5E                     ADRES           equ	3934	;# 
  1250   000F5E                     ADRESL          equ	3934	;# 
  1251   000F5F                     ADRESH          equ	3935	;# 
  1252   000F60                     ADSTAT          equ	3936	;# 
  1253   000F61                     ADRPT           equ	3937	;# 
  1254   000F62                     ADCNT           equ	3938	;# 
  1255   000F63                     ADSTPT          equ	3939	;# 
  1256   000F63                     ADSTPTL         equ	3939	;# 
  1257   000F64                     ADSTPTH         equ	3940	;# 
  1258   000F65                     ADLTH           equ	3941	;# 
  1259   000F65                     ADLTHL          equ	3941	;# 
  1260   000F66                     ADLTHH          equ	3942	;# 
  1261   000F67                     ADUTH           equ	3943	;# 
  1262   000F67                     ADUTHL          equ	3943	;# 
  1263   000F68                     ADUTHH          equ	3944	;# 
  1264   000F69                     ADERR           equ	3945	;# 
  1265   000F69                     ADERRL          equ	3945	;# 
  1266   000F6A                     ADERRH          equ	3946	;# 
  1267   000F6B                     ADACC           equ	3947	;# 
  1268   000F6B                     ADACCL          equ	3947	;# 
  1269   000F6C                     ADACCH          equ	3948	;# 
  1270   000F6D                     ADFLTR          equ	3949	;# 
  1271   000F6D                     ADFLTRL         equ	3949	;# 
  1272   000F6E                     ADFLTRH         equ	3950	;# 
  1273   000F6F                     CRCDATA         equ	3951	;# 
  1274   000F6F                     CRCDATL         equ	3951	;# 
  1275   000F70                     CRCDATH         equ	3952	;# 
  1276   000F71                     CRCACC          equ	3953	;# 
  1277   000F71                     CRCACCL         equ	3953	;# 
  1278   000F72                     CRCACCH         equ	3954	;# 
  1279   000F73                     CRCSHFT         equ	3955	;# 
  1280   000F73                     CRCSHIFTL       equ	3955	;# 
  1281   000F74                     CRCSHIFTH       equ	3956	;# 
  1282   000F75                     CRCXOR          equ	3957	;# 
  1283   000F75                     CRCXORL         equ	3957	;# 
  1284   000F76                     CRCXORH         equ	3958	;# 
  1285   000F77                     CRCCON0         equ	3959	;# 
  1286   000F78                     CRCCON1         equ	3960	;# 
  1287   000F79                     NVMADR          equ	3961	;# 
  1288   000F79                     NVMADRL         equ	3961	;# 
  1289   000F7A                     NVMADRH         equ	3962	;# 
  1290   000F7B                     NVMADRU         equ	3963	;# 
  1291   000F7C                     NVMDAT          equ	3964	;# 
  1292   000F7C                     NVMDATL         equ	3964	;# 
  1293   000F7D                     NVMDATH         equ	3965	;# 
  1294   000F7F                     NVMCON0         equ	3967	;# 
  1295   000F80                     NVMCON1         equ	3968	;# 
  1296   000F81                     NVMCON2         equ	3969	;# 
  1297   000F82                     LATA            equ	3970	;# 
  1298   000F83                     LATB            equ	3971	;# 
  1299   000F84                     LATC            equ	3972	;# 
  1300   000F87                     TRISA           equ	3975	;# 
  1301   000F87                     DDRA            equ	3975	;# 
  1302   000F88                     TRISB           equ	3976	;# 
  1303   000F88                     DDRB            equ	3976	;# 
  1304   000F89                     TRISC           equ	3977	;# 
  1305   000F89                     DDRC            equ	3977	;# 
  1306   000F8C                     PORTA           equ	3980	;# 
  1307   000F8D                     PORTB           equ	3981	;# 
  1308   000F8E                     PORTC           equ	3982	;# 
  1309   000F90                     PORTE           equ	3984	;# 
  1310   000F91                     SSP1BUF         equ	3985	;# 
  1311   000F92                     SSP1ADD         equ	3986	;# 
  1312   000F93                     SSP1MSK         equ	3987	;# 
  1313   000F94                     SSP1STAT        equ	3988	;# 
  1314   000F95                     SSP1CON1        equ	3989	;# 
  1315   000F96                     SSP1CON2        equ	3990	;# 
  1316   000F97                     SSP1CON3        equ	3991	;# 
  1317   000F98                     RC1REG          equ	3992	;# 
  1318   000F98                     RCREG           equ	3992	;# 
  1319   000F98                     RCREG1          equ	3992	;# 
  1320   000F99                     TX1REG          equ	3993	;# 
  1321   000F99                     TXREG1          equ	3993	;# 
  1322   000F99                     TXREG           equ	3993	;# 
  1323   000F9A                     SP1BRG          equ	3994	;# 
  1324   000F9A                     SPBRG           equ	3994	;# 
  1325   000F9A                     SP1BRGL         equ	3994	;# 
  1326   000F9A                     SPBRG1          equ	3994	;# 
  1327   000F9A                     SPBRGL          equ	3994	;# 
  1328   000F9B                     SP1BRGH         equ	3995	;# 
  1329   000F9B                     SPBRGH          equ	3995	;# 
  1330   000F9B                     SPBRGH1         equ	3995	;# 
  1331   000F9C                     RC1STA          equ	3996	;# 
  1332   000F9C                     RCSTA1          equ	3996	;# 
  1333   000F9C                     RCSTA           equ	3996	;# 
  1334   000F9D                     TX1STA          equ	3997	;# 
  1335   000F9D                     TXSTA1          equ	3997	;# 
  1336   000F9D                     TXSTA           equ	3997	;# 
  1337   000F9E                     BAUD1CON        equ	3998	;# 
  1338   000F9E                     BAUDCON1        equ	3998	;# 
  1339   000F9E                     BAUDCTL1        equ	3998	;# 
  1340   000F9E                     BAUDCON         equ	3998	;# 
  1341   000F9E                     BAUDCTL         equ	3998	;# 
  1342   000F9F                     PWM4DC          equ	3999	;# 
  1343   000F9F                     PWM4DCL         equ	3999	;# 
  1344   000FA0                     PWM4DCH         equ	4000	;# 
  1345   000FA1                     PWM4CON         equ	4001	;# 
  1346   000FA2                     PWM3DC          equ	4002	;# 
  1347   000FA2                     PWM3DCL         equ	4002	;# 
  1348   000FA3                     PWM3DCH         equ	4003	;# 
  1349   000FA4                     PWM3CON         equ	4004	;# 
  1350   000FA5                     CCPR2           equ	4005	;# 
  1351   000FA5                     CCPR2L          equ	4005	;# 
  1352   000FA6                     CCPR2H          equ	4006	;# 
  1353   000FA7                     CCP2CON         equ	4007	;# 
  1354   000FA8                     CCP2CAP         equ	4008	;# 
  1355   000FA9                     CCPR1           equ	4009	;# 
  1356   000FA9                     CCPR1L          equ	4009	;# 
  1357   000FAA                     CCPR1H          equ	4010	;# 
  1358   000FAB                     CCP1CON         equ	4011	;# 
  1359   000FAC                     CCP1CAP         equ	4012	;# 
  1360   000FAD                     CCPTMRS         equ	4013	;# 
  1361   000FAE                     T6TMR           equ	4014	;# 
  1362   000FAE                     TMR6            equ	4014	;# 
  1363   000FAF                     T6PR            equ	4015	;# 
  1364   000FAF                     PR6             equ	4015	;# 
  1365   000FB0                     T6CON           equ	4016	;# 
  1366   000FB1                     T6HLT           equ	4017	;# 
  1367   000FB2                     T6CLKCON        equ	4018	;# 
  1368   000FB2                     T6CLK           equ	4018	;# 
  1369   000FB3                     T6RST           equ	4019	;# 
  1370   000FB4                     T4TMR           equ	4020	;# 
  1371   000FB4                     TMR4            equ	4020	;# 
  1372   000FB5                     T4PR            equ	4021	;# 
  1373   000FB5                     PR4             equ	4021	;# 
  1374   000FB6                     T4CON           equ	4022	;# 
  1375   000FB7                     T4HLT           equ	4023	;# 
  1376   000FB8                     T4CLKCON        equ	4024	;# 
  1377   000FB8                     T4CLK           equ	4024	;# 
  1378   000FB9                     T4RST           equ	4025	;# 
  1379   000FBA                     T2TMR           equ	4026	;# 
  1380   000FBA                     TMR2            equ	4026	;# 
  1381   000FBB                     T2PR            equ	4027	;# 
  1382   000FBB                     PR2             equ	4027	;# 
  1383   000FBC                     T2CON           equ	4028	;# 
  1384   000FBD                     T2HLT           equ	4029	;# 
  1385   000FBE                     T2CLKCON        equ	4030	;# 
  1386   000FBE                     T2CLK           equ	4030	;# 
  1387   000FBF                     T2RST           equ	4031	;# 
  1388   000FC0                     TMR5            equ	4032	;# 
  1389   000FC0                     TMR5L           equ	4032	;# 
  1390   000FC1                     TMR5H           equ	4033	;# 
  1391   000FC2                     T5CON           equ	4034	;# 
  1392   000FC2                     TMR5CON         equ	4034	;# 
  1393   000FC3                     T5GCON          equ	4035	;# 
  1394   000FC3                     TMR5GCON        equ	4035	;# 
  1395   000FC4                     T5GATE          equ	4036	;# 
  1396   000FC4                     TMR5GATE        equ	4036	;# 
  1397   000FC5                     T5CLK           equ	4037	;# 
  1398   000FC5                     TMR5CLK         equ	4037	;# 
  1399   000FC5                     PR5             equ	4037	;# 
  1400   000FC6                     TMR3            equ	4038	;# 
  1401   000FC6                     TMR3L           equ	4038	;# 
  1402   000FC7                     TMR3H           equ	4039	;# 
  1403   000FC8                     T3CON           equ	4040	;# 
  1404   000FC8                     TMR3CON         equ	4040	;# 
  1405   000FC9                     T3GCON          equ	4041	;# 
  1406   000FC9                     TMR3GCON        equ	4041	;# 
  1407   000FCA                     T3GATE          equ	4042	;# 
  1408   000FCA                     TMR3GATE        equ	4042	;# 
  1409   000FCB                     T3CLK           equ	4043	;# 
  1410   000FCB                     TMR3CLK         equ	4043	;# 
  1411   000FCB                     PR3             equ	4043	;# 
  1412   000FCC                     TMR1            equ	4044	;# 
  1413   000FCC                     TMR1L           equ	4044	;# 
  1414   000FCD                     TMR1H           equ	4045	;# 
  1415   000FCE                     T1CON           equ	4046	;# 
  1416   000FCE                     TMR1CON         equ	4046	;# 
  1417   000FCF                     T1GCON          equ	4047	;# 
  1418   000FCF                     TMR1GCON        equ	4047	;# 
  1419   000FD0                     T1GATE          equ	4048	;# 
  1420   000FD0                     TMR1GATE        equ	4048	;# 
  1421   000FD1                     T1CLK           equ	4049	;# 
  1422   000FD1                     TMR1CLK         equ	4049	;# 
  1423   000FD1                     PR1             equ	4049	;# 
  1424   000FD2                     TMR0L           equ	4050	;# 
  1425   000FD2                     TMR0            equ	4050	;# 
  1426   000FD3                     TMR0H           equ	4051	;# 
  1427   000FD3                     PR0             equ	4051	;# 
  1428   000FD4                     T0CON0          equ	4052	;# 
  1429   000FD5                     T0CON1          equ	4053	;# 
  1430   000FD6                     PCON1           equ	4054	;# 
  1431   000FD7                     PCON0           equ	4055	;# 
  1432   000FD8                     STATUS          equ	4056	;# 
  1433   000FD9                     FSR2            equ	4057	;# 
  1434   000FD9                     FSR2L           equ	4057	;# 
  1435   000FDA                     FSR2H           equ	4058	;# 
  1436   000FDB                     PLUSW2          equ	4059	;# 
  1437   000FDC                     PREINC2         equ	4060	;# 
  1438   000FDD                     POSTDEC2        equ	4061	;# 
  1439   000FDE                     POSTINC2        equ	4062	;# 
  1440   000FDF                     INDF2           equ	4063	;# 
  1441   000FE0                     BSR             equ	4064	;# 
  1442   000FE1                     FSR1            equ	4065	;# 
  1443   000FE1                     FSR1L           equ	4065	;# 
  1444   000FE2                     FSR1H           equ	4066	;# 
  1445   000FE3                     PLUSW1          equ	4067	;# 
  1446   000FE4                     PREINC1         equ	4068	;# 
  1447   000FE5                     POSTDEC1        equ	4069	;# 
  1448   000FE6                     POSTINC1        equ	4070	;# 
  1449   000FE7                     INDF1           equ	4071	;# 
  1450   000FE8                     WREG            equ	4072	;# 
  1451   000FE9                     FSR0            equ	4073	;# 
  1452   000FE9                     FSR0L           equ	4073	;# 
  1453   000FEA                     FSR0H           equ	4074	;# 
  1454   000FEB                     PLUSW0          equ	4075	;# 
  1455   000FEC                     PREINC0         equ	4076	;# 
  1456   000FED                     POSTDEC0        equ	4077	;# 
  1457   000FEE                     POSTINC0        equ	4078	;# 
  1458   000FEF                     INDF0           equ	4079	;# 
  1459   000FF2                     INTCON          equ	4082	;# 
  1460   000FF3                     PROD            equ	4083	;# 
  1461   000FF3                     PRODL           equ	4083	;# 
  1462   000FF4                     PRODH           equ	4084	;# 
  1463   000FF5                     TABLAT          equ	4085	;# 
  1464   000FF6                     TBLPTR          equ	4086	;# 
  1465   000FF6                     TBLPTRL         equ	4086	;# 
  1466   000FF7                     TBLPTRH         equ	4087	;# 
  1467   000FF8                     TBLPTRU         equ	4088	;# 
  1468   000FF9                     PCLAT           equ	4089	;# 
  1469   000FF9                     PC              equ	4089	;# 
  1470   000FF9                     PCL             equ	4089	;# 
  1471   000FFA                     PCLATH          equ	4090	;# 
  1472   000FFB                     PCLATU          equ	4091	;# 
  1473   000FFC                     STKPTR          equ	4092	;# 
  1474   000FFD                     TOS             equ	4093	;# 
  1475   000FFD                     TOSL            equ	4093	;# 
  1476   000FFE                     TOSH            equ	4094	;# 
  1477   000FFF                     TOSU            equ	4095	;# 
  1478   000E9B                     PPSLOCK         equ	3739	;# 
  1479   000E9C                     INT0PPS         equ	3740	;# 
  1480   000E9D                     INT1PPS         equ	3741	;# 
  1481   000E9E                     INT2PPS         equ	3742	;# 
  1482   000E9F                     T0CKIPPS        equ	3743	;# 
  1483   000EA0                     T1CKIPPS        equ	3744	;# 
  1484   000EA1                     T1GPPS          equ	3745	;# 
  1485   000EA2                     T3CKIPPS        equ	3746	;# 
  1486   000EA3                     T3GPPS          equ	3747	;# 
  1487   000EA4                     T5CKIPPS        equ	3748	;# 
  1488   000EA5                     T5GPPS          equ	3749	;# 
  1489   000EA6                     T2INPPS         equ	3750	;# 
  1490   000EA7                     T4INPPS         equ	3751	;# 
  1491   000EA8                     T6INPPS         equ	3752	;# 
  1492   000EA9                     ADACTPPS        equ	3753	;# 
  1493   000EAA                     CCP1PPS         equ	3754	;# 
  1494   000EAB                     CCP2PPS         equ	3755	;# 
  1495   000EAC                     CWG1PPS         equ	3756	;# 
  1496   000EAC                     CWGPPS          equ	3756	;# 
  1497   000EAC                     CWGINPPS        equ	3756	;# 
  1498   000EAC                     CWG1INPPS       equ	3756	;# 
  1499   000EAD                     MDCARLPPS       equ	3757	;# 
  1500   000EAE                     MDCARHPPS       equ	3758	;# 
  1501   000EAF                     MDSRCPPS        equ	3759	;# 
  1502   000EB0                     RX1PPS          equ	3760	;# 
  1503   000EB0                     RXPPS           equ	3760	;# 
  1504   000EB0                     RXDT1PPS        equ	3760	;# 
  1505   000EB1                     CK1PPS          equ	3761	;# 
  1506   000EB1                     TXPPS           equ	3761	;# 
  1507   000EB1                     CKPPS           equ	3761	;# 
  1508   000EB1                     TXCK1PPS        equ	3761	;# 
  1509   000EB1                     TX1PPS          equ	3761	;# 
  1510   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1511   000EB2                     SSPCLKPPS       equ	3762	;# 
  1512   000EB3                     SSP1DATPPS      equ	3763	;# 
  1513   000EB3                     SSPDATPPS       equ	3763	;# 
  1514   000EB4                     SSP1SSPPS       equ	3764	;# 
  1515   000EB4                     SSPSSPPS        equ	3764	;# 
  1516   000EB5                     IPR0            equ	3765	;# 
  1517   000EB6                     IPR1            equ	3766	;# 
  1518   000EB7                     IPR2            equ	3767	;# 
  1519   000EB8                     IPR3            equ	3768	;# 
  1520   000EB9                     IPR4            equ	3769	;# 
  1521   000EBA                     IPR5            equ	3770	;# 
  1522   000EBB                     IPR6            equ	3771	;# 
  1523   000EBC                     IPR7            equ	3772	;# 
  1524   000EBD                     PIE0            equ	3773	;# 
  1525   000EBE                     PIE1            equ	3774	;# 
  1526   000EBF                     PIE2            equ	3775	;# 
  1527   000EC0                     PIE3            equ	3776	;# 
  1528   000EC1                     PIE4            equ	3777	;# 
  1529   000EC2                     PIE5            equ	3778	;# 
  1530   000EC3                     PIE6            equ	3779	;# 
  1531   000EC4                     PIE7            equ	3780	;# 
  1532   000EC5                     PIR0            equ	3781	;# 
  1533   000EC6                     PIR1            equ	3782	;# 
  1534   000EC7                     PIR2            equ	3783	;# 
  1535   000EC8                     PIR3            equ	3784	;# 
  1536   000EC9                     PIR4            equ	3785	;# 
  1537   000ECA                     PIR5            equ	3786	;# 
  1538   000ECB                     PIR6            equ	3787	;# 
  1539   000ECC                     PIR7            equ	3788	;# 
  1540   000ECD                     WDTCON0         equ	3789	;# 
  1541   000ECE                     WDTCON1         equ	3790	;# 
  1542   000ECF                     WDTPSL          equ	3791	;# 
  1543   000ED0                     WDTPSH          equ	3792	;# 
  1544   000ED1                     WDTTMR          equ	3793	;# 
  1545   000ED2                     CPUDOZE         equ	3794	;# 
  1546   000ED3                     OSCCON1         equ	3795	;# 
  1547   000ED4                     OSCCON2         equ	3796	;# 
  1548   000ED5                     OSCCON3         equ	3797	;# 
  1549   000ED6                     OSCSTAT         equ	3798	;# 
  1550   000ED6                     OSCSTAT1        equ	3798	;# 
  1551   000ED7                     OSCEN           equ	3799	;# 
  1552   000ED8                     OSCTUNE         equ	3800	;# 
  1553   000ED9                     OSCFRQ          equ	3801	;# 
  1554   000ED9                     OSCFREQ         equ	3801	;# 
  1555   000EDA                     VREGCON         equ	3802	;# 
  1556   000EDB                     BORCON          equ	3803	;# 
  1557   000EDC                     PMD0            equ	3804	;# 
  1558   000EDD                     PMD1            equ	3805	;# 
  1559   000EDE                     PMD2            equ	3806	;# 
  1560   000EDF                     PMD3            equ	3807	;# 
  1561   000EE0                     PMD4            equ	3808	;# 
  1562   000EE1                     PMD5            equ	3809	;# 
  1563   000EE2                     RA0PPS          equ	3810	;# 
  1564   000EE3                     RA1PPS          equ	3811	;# 
  1565   000EE4                     RA2PPS          equ	3812	;# 
  1566   000EE5                     RA3PPS          equ	3813	;# 
  1567   000EE6                     RA4PPS          equ	3814	;# 
  1568   000EE7                     RA5PPS          equ	3815	;# 
  1569   000EE8                     RA6PPS          equ	3816	;# 
  1570   000EE9                     RA7PPS          equ	3817	;# 
  1571   000EEA                     RB0PPS          equ	3818	;# 
  1572   000EEB                     RB1PPS          equ	3819	;# 
  1573   000EEC                     RB2PPS          equ	3820	;# 
  1574   000EED                     RB3PPS          equ	3821	;# 
  1575   000EEE                     RB4PPS          equ	3822	;# 
  1576   000EEF                     RB5PPS          equ	3823	;# 
  1577   000EF0                     RB6PPS          equ	3824	;# 
  1578   000EF1                     RB7PPS          equ	3825	;# 
  1579   000EF2                     RC0PPS          equ	3826	;# 
  1580   000EF3                     RC1PPS          equ	3827	;# 
  1581   000EF4                     RC2PPS          equ	3828	;# 
  1582   000EF5                     RC3PPS          equ	3829	;# 
  1583   000EF6                     RC4PPS          equ	3830	;# 
  1584   000EF7                     RC5PPS          equ	3831	;# 
  1585   000EF8                     RC6PPS          equ	3832	;# 
  1586   000EF9                     RC7PPS          equ	3833	;# 
  1587   000F05                     IOCAF           equ	3845	;# 
  1588   000F06                     IOCAN           equ	3846	;# 
  1589   000F07                     IOCAP           equ	3847	;# 
  1590   000F08                     INLVLA          equ	3848	;# 
  1591   000F09                     SLRCONA         equ	3849	;# 
  1592   000F0A                     ODCONA          equ	3850	;# 
  1593   000F0B                     WPUA            equ	3851	;# 
  1594   000F0C                     ANSELA          equ	3852	;# 
  1595   000F0D                     IOCBF           equ	3853	;# 
  1596   000F0E                     IOCBN           equ	3854	;# 
  1597   000F0F                     IOCBP           equ	3855	;# 
  1598   000F10                     INLVLB          equ	3856	;# 
  1599   000F11                     SLRCONB         equ	3857	;# 
  1600   000F12                     ODCONB          equ	3858	;# 
  1601   000F13                     WPUB            equ	3859	;# 
  1602   000F14                     ANSELB          equ	3860	;# 
  1603   000F15                     IOCCF           equ	3861	;# 
  1604   000F16                     IOCCN           equ	3862	;# 
  1605   000F17                     IOCCP           equ	3863	;# 
  1606   000F18                     INLVLC          equ	3864	;# 
  1607   000F19                     SLRCONC         equ	3865	;# 
  1608   000F1A                     ODCONC          equ	3866	;# 
  1609   000F1B                     WPUC            equ	3867	;# 
  1610   000F1C                     ANSELC          equ	3868	;# 
  1611   000F22                     IOCEF           equ	3874	;# 
  1612   000F23                     IOCEN           equ	3875	;# 
  1613   000F24                     IOCEP           equ	3876	;# 
  1614   000F25                     INLVLE          equ	3877	;# 
  1615   000F28                     WPUE            equ	3880	;# 
  1616   000F2A                     HLVDCON0        equ	3882	;# 
  1617   000F2B                     HLVDCON1        equ	3883	;# 
  1618   000F2C                     FVRCON          equ	3884	;# 
  1619   000F2D                     ZCDCON          equ	3885	;# 
  1620   000F2E                     DAC1CON0        equ	3886	;# 
  1621   000F2F                     DAC1CON1        equ	3887	;# 
  1622   000F30                     CM2CON0         equ	3888	;# 
  1623   000F31                     CM2CON1         equ	3889	;# 
  1624   000F32                     CM2NCH          equ	3890	;# 
  1625   000F33                     CM2PCH          equ	3891	;# 
  1626   000F34                     CM1CON0         equ	3892	;# 
  1627   000F35                     CM1CON1         equ	3893	;# 
  1628   000F36                     CM1NCH          equ	3894	;# 
  1629   000F37                     CM1PCH          equ	3895	;# 
  1630   000F38                     CMOUT           equ	3896	;# 
  1631   000F39                     CLKRCON         equ	3897	;# 
  1632   000F3A                     CLKRCLK         equ	3898	;# 
  1633   000F3B                     CWG1CLK         equ	3899	;# 
  1634   000F3B                     CWG1CLKCON      equ	3899	;# 
  1635   000F3C                     CWG1ISM         equ	3900	;# 
  1636   000F3D                     CWG1DBR         equ	3901	;# 
  1637   000F3E                     CWG1DBF         equ	3902	;# 
  1638   000F3F                     CWG1CON0        equ	3903	;# 
  1639   000F40                     CWG1CON1        equ	3904	;# 
  1640   000F41                     CWG1AS0         equ	3905	;# 
  1641   000F42                     CWG1AS1         equ	3906	;# 
  1642   000F43                     CWG1STR         equ	3907	;# 
  1643   000F44                     SCANLADR        equ	3908	;# 
  1644   000F44                     SCANLADRL       equ	3908	;# 
  1645   000F45                     SCANLADRH       equ	3909	;# 
  1646   000F46                     SCANLADRU       equ	3910	;# 
  1647   000F47                     SCANHADR        equ	3911	;# 
  1648   000F47                     SCANHADRL       equ	3911	;# 
  1649   000F48                     SCANHADRH       equ	3912	;# 
  1650   000F49                     SCANHADRU       equ	3913	;# 
  1651   000F4A                     SCANCON0        equ	3914	;# 
  1652   000F4B                     SCANTRIG        equ	3915	;# 
  1653   000F4C                     MDCON0          equ	3916	;# 
  1654   000F4D                     MDCON1          equ	3917	;# 
  1655   000F4E                     MDSRC           equ	3918	;# 
  1656   000F4F                     MDCARL          equ	3919	;# 
  1657   000F50                     MDCARH          equ	3920	;# 
  1658   000F51                     ADACT           equ	3921	;# 
  1659   000F52                     ADCLK           equ	3922	;# 
  1660   000F53                     ADREF           equ	3923	;# 
  1661   000F54                     ADCON1          equ	3924	;# 
  1662   000F55                     ADCON2          equ	3925	;# 
  1663   000F56                     ADCON3          equ	3926	;# 
  1664   000F57                     ADACQ           equ	3927	;# 
  1665   000F58                     ADCAP           equ	3928	;# 
  1666   000F59                     ADPRE           equ	3929	;# 
  1667   000F5A                     ADPCH           equ	3930	;# 
  1668   000F5B                     ADCON0          equ	3931	;# 
  1669   000F5C                     ADPREV          equ	3932	;# 
  1670   000F5C                     ADPREVL         equ	3932	;# 
  1671   000F5D                     ADPREVH         equ	3933	;# 
  1672   000F5E                     ADRES           equ	3934	;# 
  1673   000F5E                     ADRESL          equ	3934	;# 
  1674   000F5F                     ADRESH          equ	3935	;# 
  1675   000F60                     ADSTAT          equ	3936	;# 
  1676   000F61                     ADRPT           equ	3937	;# 
  1677   000F62                     ADCNT           equ	3938	;# 
  1678   000F63                     ADSTPT          equ	3939	;# 
  1679   000F63                     ADSTPTL         equ	3939	;# 
  1680   000F64                     ADSTPTH         equ	3940	;# 
  1681   000F65                     ADLTH           equ	3941	;# 
  1682   000F65                     ADLTHL          equ	3941	;# 
  1683   000F66                     ADLTHH          equ	3942	;# 
  1684   000F67                     ADUTH           equ	3943	;# 
  1685   000F67                     ADUTHL          equ	3943	;# 
  1686   000F68                     ADUTHH          equ	3944	;# 
  1687   000F69                     ADERR           equ	3945	;# 
  1688   000F69                     ADERRL          equ	3945	;# 
  1689   000F6A                     ADERRH          equ	3946	;# 
  1690   000F6B                     ADACC           equ	3947	;# 
  1691   000F6B                     ADACCL          equ	3947	;# 
  1692   000F6C                     ADACCH          equ	3948	;# 
  1693   000F6D                     ADFLTR          equ	3949	;# 
  1694   000F6D                     ADFLTRL         equ	3949	;# 
  1695   000F6E                     ADFLTRH         equ	3950	;# 
  1696   000F6F                     CRCDATA         equ	3951	;# 
  1697   000F6F                     CRCDATL         equ	3951	;# 
  1698   000F70                     CRCDATH         equ	3952	;# 
  1699   000F71                     CRCACC          equ	3953	;# 
  1700   000F71                     CRCACCL         equ	3953	;# 
  1701   000F72                     CRCACCH         equ	3954	;# 
  1702   000F73                     CRCSHFT         equ	3955	;# 
  1703   000F73                     CRCSHIFTL       equ	3955	;# 
  1704   000F74                     CRCSHIFTH       equ	3956	;# 
  1705   000F75                     CRCXOR          equ	3957	;# 
  1706   000F75                     CRCXORL         equ	3957	;# 
  1707   000F76                     CRCXORH         equ	3958	;# 
  1708   000F77                     CRCCON0         equ	3959	;# 
  1709   000F78                     CRCCON1         equ	3960	;# 
  1710   000F79                     NVMADR          equ	3961	;# 
  1711   000F79                     NVMADRL         equ	3961	;# 
  1712   000F7A                     NVMADRH         equ	3962	;# 
  1713   000F7B                     NVMADRU         equ	3963	;# 
  1714   000F7C                     NVMDAT          equ	3964	;# 
  1715   000F7C                     NVMDATL         equ	3964	;# 
  1716   000F7D                     NVMDATH         equ	3965	;# 
  1717   000F7F                     NVMCON0         equ	3967	;# 
  1718   000F80                     NVMCON1         equ	3968	;# 
  1719   000F81                     NVMCON2         equ	3969	;# 
  1720   000F82                     LATA            equ	3970	;# 
  1721   000F83                     LATB            equ	3971	;# 
  1722   000F84                     LATC            equ	3972	;# 
  1723   000F87                     TRISA           equ	3975	;# 
  1724   000F87                     DDRA            equ	3975	;# 
  1725   000F88                     TRISB           equ	3976	;# 
  1726   000F88                     DDRB            equ	3976	;# 
  1727   000F89                     TRISC           equ	3977	;# 
  1728   000F89                     DDRC            equ	3977	;# 
  1729   000F8C                     PORTA           equ	3980	;# 
  1730   000F8D                     PORTB           equ	3981	;# 
  1731   000F8E                     PORTC           equ	3982	;# 
  1732   000F90                     PORTE           equ	3984	;# 
  1733   000F91                     SSP1BUF         equ	3985	;# 
  1734   000F92                     SSP1ADD         equ	3986	;# 
  1735   000F93                     SSP1MSK         equ	3987	;# 
  1736   000F94                     SSP1STAT        equ	3988	;# 
  1737   000F95                     SSP1CON1        equ	3989	;# 
  1738   000F96                     SSP1CON2        equ	3990	;# 
  1739   000F97                     SSP1CON3        equ	3991	;# 
  1740   000F98                     RC1REG          equ	3992	;# 
  1741   000F98                     RCREG           equ	3992	;# 
  1742   000F98                     RCREG1          equ	3992	;# 
  1743   000F99                     TX1REG          equ	3993	;# 
  1744   000F99                     TXREG1          equ	3993	;# 
  1745   000F99                     TXREG           equ	3993	;# 
  1746   000F9A                     SP1BRG          equ	3994	;# 
  1747   000F9A                     SPBRG           equ	3994	;# 
  1748   000F9A                     SP1BRGL         equ	3994	;# 
  1749   000F9A                     SPBRG1          equ	3994	;# 
  1750   000F9A                     SPBRGL          equ	3994	;# 
  1751   000F9B                     SP1BRGH         equ	3995	;# 
  1752   000F9B                     SPBRGH          equ	3995	;# 
  1753   000F9B                     SPBRGH1         equ	3995	;# 
  1754   000F9C                     RC1STA          equ	3996	;# 
  1755   000F9C                     RCSTA1          equ	3996	;# 
  1756   000F9C                     RCSTA           equ	3996	;# 
  1757   000F9D                     TX1STA          equ	3997	;# 
  1758   000F9D                     TXSTA1          equ	3997	;# 
  1759   000F9D                     TXSTA           equ	3997	;# 
  1760   000F9E                     BAUD1CON        equ	3998	;# 
  1761   000F9E                     BAUDCON1        equ	3998	;# 
  1762   000F9E                     BAUDCTL1        equ	3998	;# 
  1763   000F9E                     BAUDCON         equ	3998	;# 
  1764   000F9E                     BAUDCTL         equ	3998	;# 
  1765   000F9F                     PWM4DC          equ	3999	;# 
  1766   000F9F                     PWM4DCL         equ	3999	;# 
  1767   000FA0                     PWM4DCH         equ	4000	;# 
  1768   000FA1                     PWM4CON         equ	4001	;# 
  1769   000FA2                     PWM3DC          equ	4002	;# 
  1770   000FA2                     PWM3DCL         equ	4002	;# 
  1771   000FA3                     PWM3DCH         equ	4003	;# 
  1772   000FA4                     PWM3CON         equ	4004	;# 
  1773   000FA5                     CCPR2           equ	4005	;# 
  1774   000FA5                     CCPR2L          equ	4005	;# 
  1775   000FA6                     CCPR2H          equ	4006	;# 
  1776   000FA7                     CCP2CON         equ	4007	;# 
  1777   000FA8                     CCP2CAP         equ	4008	;# 
  1778   000FA9                     CCPR1           equ	4009	;# 
  1779   000FA9                     CCPR1L          equ	4009	;# 
  1780   000FAA                     CCPR1H          equ	4010	;# 
  1781   000FAB                     CCP1CON         equ	4011	;# 
  1782   000FAC                     CCP1CAP         equ	4012	;# 
  1783   000FAD                     CCPTMRS         equ	4013	;# 
  1784   000FAE                     T6TMR           equ	4014	;# 
  1785   000FAE                     TMR6            equ	4014	;# 
  1786   000FAF                     T6PR            equ	4015	;# 
  1787   000FAF                     PR6             equ	4015	;# 
  1788   000FB0                     T6CON           equ	4016	;# 
  1789   000FB1                     T6HLT           equ	4017	;# 
  1790   000FB2                     T6CLKCON        equ	4018	;# 
  1791   000FB2                     T6CLK           equ	4018	;# 
  1792   000FB3                     T6RST           equ	4019	;# 
  1793   000FB4                     T4TMR           equ	4020	;# 
  1794   000FB4                     TMR4            equ	4020	;# 
  1795   000FB5                     T4PR            equ	4021	;# 
  1796   000FB5                     PR4             equ	4021	;# 
  1797   000FB6                     T4CON           equ	4022	;# 
  1798   000FB7                     T4HLT           equ	4023	;# 
  1799   000FB8                     T4CLKCON        equ	4024	;# 
  1800   000FB8                     T4CLK           equ	4024	;# 
  1801   000FB9                     T4RST           equ	4025	;# 
  1802   000FBA                     T2TMR           equ	4026	;# 
  1803   000FBA                     TMR2            equ	4026	;# 
  1804   000FBB                     T2PR            equ	4027	;# 
  1805   000FBB                     PR2             equ	4027	;# 
  1806   000FBC                     T2CON           equ	4028	;# 
  1807   000FBD                     T2HLT           equ	4029	;# 
  1808   000FBE                     T2CLKCON        equ	4030	;# 
  1809   000FBE                     T2CLK           equ	4030	;# 
  1810   000FBF                     T2RST           equ	4031	;# 
  1811   000FC0                     TMR5            equ	4032	;# 
  1812   000FC0                     TMR5L           equ	4032	;# 
  1813   000FC1                     TMR5H           equ	4033	;# 
  1814   000FC2                     T5CON           equ	4034	;# 
  1815   000FC2                     TMR5CON         equ	4034	;# 
  1816   000FC3                     T5GCON          equ	4035	;# 
  1817   000FC3                     TMR5GCON        equ	4035	;# 
  1818   000FC4                     T5GATE          equ	4036	;# 
  1819   000FC4                     TMR5GATE        equ	4036	;# 
  1820   000FC5                     T5CLK           equ	4037	;# 
  1821   000FC5                     TMR5CLK         equ	4037	;# 
  1822   000FC5                     PR5             equ	4037	;# 
  1823   000FC6                     TMR3            equ	4038	;# 
  1824   000FC6                     TMR3L           equ	4038	;# 
  1825   000FC7                     TMR3H           equ	4039	;# 
  1826   000FC8                     T3CON           equ	4040	;# 
  1827   000FC8                     TMR3CON         equ	4040	;# 
  1828   000FC9                     T3GCON          equ	4041	;# 
  1829   000FC9                     TMR3GCON        equ	4041	;# 
  1830   000FCA                     T3GATE          equ	4042	;# 
  1831   000FCA                     TMR3GATE        equ	4042	;# 
  1832   000FCB                     T3CLK           equ	4043	;# 
  1833   000FCB                     TMR3CLK         equ	4043	;# 
  1834   000FCB                     PR3             equ	4043	;# 
  1835   000FCC                     TMR1            equ	4044	;# 
  1836   000FCC                     TMR1L           equ	4044	;# 
  1837   000FCD                     TMR1H           equ	4045	;# 
  1838   000FCE                     T1CON           equ	4046	;# 
  1839   000FCE                     TMR1CON         equ	4046	;# 
  1840   000FCF                     T1GCON          equ	4047	;# 
  1841   000FCF                     TMR1GCON        equ	4047	;# 
  1842   000FD0                     T1GATE          equ	4048	;# 
  1843   000FD0                     TMR1GATE        equ	4048	;# 
  1844   000FD1                     T1CLK           equ	4049	;# 
  1845   000FD1                     TMR1CLK         equ	4049	;# 
  1846   000FD1                     PR1             equ	4049	;# 
  1847   000FD2                     TMR0L           equ	4050	;# 
  1848   000FD2                     TMR0            equ	4050	;# 
  1849   000FD3                     TMR0H           equ	4051	;# 
  1850   000FD3                     PR0             equ	4051	;# 
  1851   000FD4                     T0CON0          equ	4052	;# 
  1852   000FD5                     T0CON1          equ	4053	;# 
  1853   000FD6                     PCON1           equ	4054	;# 
  1854   000FD7                     PCON0           equ	4055	;# 
  1855   000FD8                     STATUS          equ	4056	;# 
  1856   000FD9                     FSR2            equ	4057	;# 
  1857   000FD9                     FSR2L           equ	4057	;# 
  1858   000FDA                     FSR2H           equ	4058	;# 
  1859   000FDB                     PLUSW2          equ	4059	;# 
  1860   000FDC                     PREINC2         equ	4060	;# 
  1861   000FDD                     POSTDEC2        equ	4061	;# 
  1862   000FDE                     POSTINC2        equ	4062	;# 
  1863   000FDF                     INDF2           equ	4063	;# 
  1864   000FE0                     BSR             equ	4064	;# 
  1865   000FE1                     FSR1            equ	4065	;# 
  1866   000FE1                     FSR1L           equ	4065	;# 
  1867   000FE2                     FSR1H           equ	4066	;# 
  1868   000FE3                     PLUSW1          equ	4067	;# 
  1869   000FE4                     PREINC1         equ	4068	;# 
  1870   000FE5                     POSTDEC1        equ	4069	;# 
  1871   000FE6                     POSTINC1        equ	4070	;# 
  1872   000FE7                     INDF1           equ	4071	;# 
  1873   000FE8                     WREG            equ	4072	;# 
  1874   000FE9                     FSR0            equ	4073	;# 
  1875   000FE9                     FSR0L           equ	4073	;# 
  1876   000FEA                     FSR0H           equ	4074	;# 
  1877   000FEB                     PLUSW0          equ	4075	;# 
  1878   000FEC                     PREINC0         equ	4076	;# 
  1879   000FED                     POSTDEC0        equ	4077	;# 
  1880   000FEE                     POSTINC0        equ	4078	;# 
  1881   000FEF                     INDF0           equ	4079	;# 
  1882   000FF2                     INTCON          equ	4082	;# 
  1883   000FF3                     PROD            equ	4083	;# 
  1884   000FF3                     PRODL           equ	4083	;# 
  1885   000FF4                     PRODH           equ	4084	;# 
  1886   000FF5                     TABLAT          equ	4085	;# 
  1887   000FF6                     TBLPTR          equ	4086	;# 
  1888   000FF6                     TBLPTRL         equ	4086	;# 
  1889   000FF7                     TBLPTRH         equ	4087	;# 
  1890   000FF8                     TBLPTRU         equ	4088	;# 
  1891   000FF9                     PCLAT           equ	4089	;# 
  1892   000FF9                     PC              equ	4089	;# 
  1893   000FF9                     PCL             equ	4089	;# 
  1894   000FFA                     PCLATH          equ	4090	;# 
  1895   000FFB                     PCLATU          equ	4091	;# 
  1896   000FFC                     STKPTR          equ	4092	;# 
  1897   000FFD                     TOS             equ	4093	;# 
  1898   000FFD                     TOSL            equ	4093	;# 
  1899   000FFE                     TOSH            equ	4094	;# 
  1900   000FFF                     TOSU            equ	4095	;# 
  1901   000E9B                     PPSLOCK         equ	3739	;# 
  1902   000E9C                     INT0PPS         equ	3740	;# 
  1903   000E9D                     INT1PPS         equ	3741	;# 
  1904   000E9E                     INT2PPS         equ	3742	;# 
  1905   000E9F                     T0CKIPPS        equ	3743	;# 
  1906   000EA0                     T1CKIPPS        equ	3744	;# 
  1907   000EA1                     T1GPPS          equ	3745	;# 
  1908   000EA2                     T3CKIPPS        equ	3746	;# 
  1909   000EA3                     T3GPPS          equ	3747	;# 
  1910   000EA4                     T5CKIPPS        equ	3748	;# 
  1911   000EA5                     T5GPPS          equ	3749	;# 
  1912   000EA6                     T2INPPS         equ	3750	;# 
  1913   000EA7                     T4INPPS         equ	3751	;# 
  1914   000EA8                     T6INPPS         equ	3752	;# 
  1915   000EA9                     ADACTPPS        equ	3753	;# 
  1916   000EAA                     CCP1PPS         equ	3754	;# 
  1917   000EAB                     CCP2PPS         equ	3755	;# 
  1918   000EAC                     CWG1PPS         equ	3756	;# 
  1919   000EAC                     CWGPPS          equ	3756	;# 
  1920   000EAC                     CWGINPPS        equ	3756	;# 
  1921   000EAC                     CWG1INPPS       equ	3756	;# 
  1922   000EAD                     MDCARLPPS       equ	3757	;# 
  1923   000EAE                     MDCARHPPS       equ	3758	;# 
  1924   000EAF                     MDSRCPPS        equ	3759	;# 
  1925   000EB0                     RX1PPS          equ	3760	;# 
  1926   000EB0                     RXPPS           equ	3760	;# 
  1927   000EB0                     RXDT1PPS        equ	3760	;# 
  1928   000EB1                     CK1PPS          equ	3761	;# 
  1929   000EB1                     TXPPS           equ	3761	;# 
  1930   000EB1                     CKPPS           equ	3761	;# 
  1931   000EB1                     TXCK1PPS        equ	3761	;# 
  1932   000EB1                     TX1PPS          equ	3761	;# 
  1933   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1934   000EB2                     SSPCLKPPS       equ	3762	;# 
  1935   000EB3                     SSP1DATPPS      equ	3763	;# 
  1936   000EB3                     SSPDATPPS       equ	3763	;# 
  1937   000EB4                     SSP1SSPPS       equ	3764	;# 
  1938   000EB4                     SSPSSPPS        equ	3764	;# 
  1939   000EB5                     IPR0            equ	3765	;# 
  1940   000EB6                     IPR1            equ	3766	;# 
  1941   000EB7                     IPR2            equ	3767	;# 
  1942   000EB8                     IPR3            equ	3768	;# 
  1943   000EB9                     IPR4            equ	3769	;# 
  1944   000EBA                     IPR5            equ	3770	;# 
  1945   000EBB                     IPR6            equ	3771	;# 
  1946   000EBC                     IPR7            equ	3772	;# 
  1947   000EBD                     PIE0            equ	3773	;# 
  1948   000EBE                     PIE1            equ	3774	;# 
  1949   000EBF                     PIE2            equ	3775	;# 
  1950   000EC0                     PIE3            equ	3776	;# 
  1951   000EC1                     PIE4            equ	3777	;# 
  1952   000EC2                     PIE5            equ	3778	;# 
  1953   000EC3                     PIE6            equ	3779	;# 
  1954   000EC4                     PIE7            equ	3780	;# 
  1955   000EC5                     PIR0            equ	3781	;# 
  1956   000EC6                     PIR1            equ	3782	;# 
  1957   000EC7                     PIR2            equ	3783	;# 
  1958   000EC8                     PIR3            equ	3784	;# 
  1959   000EC9                     PIR4            equ	3785	;# 
  1960   000ECA                     PIR5            equ	3786	;# 
  1961   000ECB                     PIR6            equ	3787	;# 
  1962   000ECC                     PIR7            equ	3788	;# 
  1963   000ECD                     WDTCON0         equ	3789	;# 
  1964   000ECE                     WDTCON1         equ	3790	;# 
  1965   000ECF                     WDTPSL          equ	3791	;# 
  1966   000ED0                     WDTPSH          equ	3792	;# 
  1967   000ED1                     WDTTMR          equ	3793	;# 
  1968   000ED2                     CPUDOZE         equ	3794	;# 
  1969   000ED3                     OSCCON1         equ	3795	;# 
  1970   000ED4                     OSCCON2         equ	3796	;# 
  1971   000ED5                     OSCCON3         equ	3797	;# 
  1972   000ED6                     OSCSTAT         equ	3798	;# 
  1973   000ED6                     OSCSTAT1        equ	3798	;# 
  1974   000ED7                     OSCEN           equ	3799	;# 
  1975   000ED8                     OSCTUNE         equ	3800	;# 
  1976   000ED9                     OSCFRQ          equ	3801	;# 
  1977   000ED9                     OSCFREQ         equ	3801	;# 
  1978   000EDA                     VREGCON         equ	3802	;# 
  1979   000EDB                     BORCON          equ	3803	;# 
  1980   000EDC                     PMD0            equ	3804	;# 
  1981   000EDD                     PMD1            equ	3805	;# 
  1982   000EDE                     PMD2            equ	3806	;# 
  1983   000EDF                     PMD3            equ	3807	;# 
  1984   000EE0                     PMD4            equ	3808	;# 
  1985   000EE1                     PMD5            equ	3809	;# 
  1986   000EE2                     RA0PPS          equ	3810	;# 
  1987   000EE3                     RA1PPS          equ	3811	;# 
  1988   000EE4                     RA2PPS          equ	3812	;# 
  1989   000EE5                     RA3PPS          equ	3813	;# 
  1990   000EE6                     RA4PPS          equ	3814	;# 
  1991   000EE7                     RA5PPS          equ	3815	;# 
  1992   000EE8                     RA6PPS          equ	3816	;# 
  1993   000EE9                     RA7PPS          equ	3817	;# 
  1994   000EEA                     RB0PPS          equ	3818	;# 
  1995   000EEB                     RB1PPS          equ	3819	;# 
  1996   000EEC                     RB2PPS          equ	3820	;# 
  1997   000EED                     RB3PPS          equ	3821	;# 
  1998   000EEE                     RB4PPS          equ	3822	;# 
  1999   000EEF                     RB5PPS          equ	3823	;# 
  2000   000EF0                     RB6PPS          equ	3824	;# 
  2001   000EF1                     RB7PPS          equ	3825	;# 
  2002   000EF2                     RC0PPS          equ	3826	;# 
  2003   000EF3                     RC1PPS          equ	3827	;# 
  2004   000EF4                     RC2PPS          equ	3828	;# 
  2005   000EF5                     RC3PPS          equ	3829	;# 
  2006   000EF6                     RC4PPS          equ	3830	;# 
  2007   000EF7                     RC5PPS          equ	3831	;# 
  2008   000EF8                     RC6PPS          equ	3832	;# 
  2009   000EF9                     RC7PPS          equ	3833	;# 
  2010   000F05                     IOCAF           equ	3845	;# 
  2011   000F06                     IOCAN           equ	3846	;# 
  2012   000F07                     IOCAP           equ	3847	;# 
  2013   000F08                     INLVLA          equ	3848	;# 
  2014   000F09                     SLRCONA         equ	3849	;# 
  2015   000F0A                     ODCONA          equ	3850	;# 
  2016   000F0B                     WPUA            equ	3851	;# 
  2017   000F0C                     ANSELA          equ	3852	;# 
  2018   000F0D                     IOCBF           equ	3853	;# 
  2019   000F0E                     IOCBN           equ	3854	;# 
  2020   000F0F                     IOCBP           equ	3855	;# 
  2021   000F10                     INLVLB          equ	3856	;# 
  2022   000F11                     SLRCONB         equ	3857	;# 
  2023   000F12                     ODCONB          equ	3858	;# 
  2024   000F13                     WPUB            equ	3859	;# 
  2025   000F14                     ANSELB          equ	3860	;# 
  2026   000F15                     IOCCF           equ	3861	;# 
  2027   000F16                     IOCCN           equ	3862	;# 
  2028   000F17                     IOCCP           equ	3863	;# 
  2029   000F18                     INLVLC          equ	3864	;# 
  2030   000F19                     SLRCONC         equ	3865	;# 
  2031   000F1A                     ODCONC          equ	3866	;# 
  2032   000F1B                     WPUC            equ	3867	;# 
  2033   000F1C                     ANSELC          equ	3868	;# 
  2034   000F22                     IOCEF           equ	3874	;# 
  2035   000F23                     IOCEN           equ	3875	;# 
  2036   000F24                     IOCEP           equ	3876	;# 
  2037   000F25                     INLVLE          equ	3877	;# 
  2038   000F28                     WPUE            equ	3880	;# 
  2039   000F2A                     HLVDCON0        equ	3882	;# 
  2040   000F2B                     HLVDCON1        equ	3883	;# 
  2041   000F2C                     FVRCON          equ	3884	;# 
  2042   000F2D                     ZCDCON          equ	3885	;# 
  2043   000F2E                     DAC1CON0        equ	3886	;# 
  2044   000F2F                     DAC1CON1        equ	3887	;# 
  2045   000F30                     CM2CON0         equ	3888	;# 
  2046   000F31                     CM2CON1         equ	3889	;# 
  2047   000F32                     CM2NCH          equ	3890	;# 
  2048   000F33                     CM2PCH          equ	3891	;# 
  2049   000F34                     CM1CON0         equ	3892	;# 
  2050   000F35                     CM1CON1         equ	3893	;# 
  2051   000F36                     CM1NCH          equ	3894	;# 
  2052   000F37                     CM1PCH          equ	3895	;# 
  2053   000F38                     CMOUT           equ	3896	;# 
  2054   000F39                     CLKRCON         equ	3897	;# 
  2055   000F3A                     CLKRCLK         equ	3898	;# 
  2056   000F3B                     CWG1CLK         equ	3899	;# 
  2057   000F3B                     CWG1CLKCON      equ	3899	;# 
  2058   000F3C                     CWG1ISM         equ	3900	;# 
  2059   000F3D                     CWG1DBR         equ	3901	;# 
  2060   000F3E                     CWG1DBF         equ	3902	;# 
  2061   000F3F                     CWG1CON0        equ	3903	;# 
  2062   000F40                     CWG1CON1        equ	3904	;# 
  2063   000F41                     CWG1AS0         equ	3905	;# 
  2064   000F42                     CWG1AS1         equ	3906	;# 
  2065   000F43                     CWG1STR         equ	3907	;# 
  2066   000F44                     SCANLADR        equ	3908	;# 
  2067   000F44                     SCANLADRL       equ	3908	;# 
  2068   000F45                     SCANLADRH       equ	3909	;# 
  2069   000F46                     SCANLADRU       equ	3910	;# 
  2070   000F47                     SCANHADR        equ	3911	;# 
  2071   000F47                     SCANHADRL       equ	3911	;# 
  2072   000F48                     SCANHADRH       equ	3912	;# 
  2073   000F49                     SCANHADRU       equ	3913	;# 
  2074   000F4A                     SCANCON0        equ	3914	;# 
  2075   000F4B                     SCANTRIG        equ	3915	;# 
  2076   000F4C                     MDCON0          equ	3916	;# 
  2077   000F4D                     MDCON1          equ	3917	;# 
  2078   000F4E                     MDSRC           equ	3918	;# 
  2079   000F4F                     MDCARL          equ	3919	;# 
  2080   000F50                     MDCARH          equ	3920	;# 
  2081   000F51                     ADACT           equ	3921	;# 
  2082   000F52                     ADCLK           equ	3922	;# 
  2083   000F53                     ADREF           equ	3923	;# 
  2084   000F54                     ADCON1          equ	3924	;# 
  2085   000F55                     ADCON2          equ	3925	;# 
  2086   000F56                     ADCON3          equ	3926	;# 
  2087   000F57                     ADACQ           equ	3927	;# 
  2088   000F58                     ADCAP           equ	3928	;# 
  2089   000F59                     ADPRE           equ	3929	;# 
  2090   000F5A                     ADPCH           equ	3930	;# 
  2091   000F5B                     ADCON0          equ	3931	;# 
  2092   000F5C                     ADPREV          equ	3932	;# 
  2093   000F5C                     ADPREVL         equ	3932	;# 
  2094   000F5D                     ADPREVH         equ	3933	;# 
  2095   000F5E                     ADRES           equ	3934	;# 
  2096   000F5E                     ADRESL          equ	3934	;# 
  2097   000F5F                     ADRESH          equ	3935	;# 
  2098   000F60                     ADSTAT          equ	3936	;# 
  2099   000F61                     ADRPT           equ	3937	;# 
  2100   000F62                     ADCNT           equ	3938	;# 
  2101   000F63                     ADSTPT          equ	3939	;# 
  2102   000F63                     ADSTPTL         equ	3939	;# 
  2103   000F64                     ADSTPTH         equ	3940	;# 
  2104   000F65                     ADLTH           equ	3941	;# 
  2105   000F65                     ADLTHL          equ	3941	;# 
  2106   000F66                     ADLTHH          equ	3942	;# 
  2107   000F67                     ADUTH           equ	3943	;# 
  2108   000F67                     ADUTHL          equ	3943	;# 
  2109   000F68                     ADUTHH          equ	3944	;# 
  2110   000F69                     ADERR           equ	3945	;# 
  2111   000F69                     ADERRL          equ	3945	;# 
  2112   000F6A                     ADERRH          equ	3946	;# 
  2113   000F6B                     ADACC           equ	3947	;# 
  2114   000F6B                     ADACCL          equ	3947	;# 
  2115   000F6C                     ADACCH          equ	3948	;# 
  2116   000F6D                     ADFLTR          equ	3949	;# 
  2117   000F6D                     ADFLTRL         equ	3949	;# 
  2118   000F6E                     ADFLTRH         equ	3950	;# 
  2119   000F6F                     CRCDATA         equ	3951	;# 
  2120   000F6F                     CRCDATL         equ	3951	;# 
  2121   000F70                     CRCDATH         equ	3952	;# 
  2122   000F71                     CRCACC          equ	3953	;# 
  2123   000F71                     CRCACCL         equ	3953	;# 
  2124   000F72                     CRCACCH         equ	3954	;# 
  2125   000F73                     CRCSHFT         equ	3955	;# 
  2126   000F73                     CRCSHIFTL       equ	3955	;# 
  2127   000F74                     CRCSHIFTH       equ	3956	;# 
  2128   000F75                     CRCXOR          equ	3957	;# 
  2129   000F75                     CRCXORL         equ	3957	;# 
  2130   000F76                     CRCXORH         equ	3958	;# 
  2131   000F77                     CRCCON0         equ	3959	;# 
  2132   000F78                     CRCCON1         equ	3960	;# 
  2133   000F79                     NVMADR          equ	3961	;# 
  2134   000F79                     NVMADRL         equ	3961	;# 
  2135   000F7A                     NVMADRH         equ	3962	;# 
  2136   000F7B                     NVMADRU         equ	3963	;# 
  2137   000F7C                     NVMDAT          equ	3964	;# 
  2138   000F7C                     NVMDATL         equ	3964	;# 
  2139   000F7D                     NVMDATH         equ	3965	;# 
  2140   000F7F                     NVMCON0         equ	3967	;# 
  2141   000F80                     NVMCON1         equ	3968	;# 
  2142   000F81                     NVMCON2         equ	3969	;# 
  2143   000F82                     LATA            equ	3970	;# 
  2144   000F83                     LATB            equ	3971	;# 
  2145   000F84                     LATC            equ	3972	;# 
  2146   000F87                     TRISA           equ	3975	;# 
  2147   000F87                     DDRA            equ	3975	;# 
  2148   000F88                     TRISB           equ	3976	;# 
  2149   000F88                     DDRB            equ	3976	;# 
  2150   000F89                     TRISC           equ	3977	;# 
  2151   000F89                     DDRC            equ	3977	;# 
  2152   000F8C                     PORTA           equ	3980	;# 
  2153   000F8D                     PORTB           equ	3981	;# 
  2154   000F8E                     PORTC           equ	3982	;# 
  2155   000F90                     PORTE           equ	3984	;# 
  2156   000F91                     SSP1BUF         equ	3985	;# 
  2157   000F92                     SSP1ADD         equ	3986	;# 
  2158   000F93                     SSP1MSK         equ	3987	;# 
  2159   000F94                     SSP1STAT        equ	3988	;# 
  2160   000F95                     SSP1CON1        equ	3989	;# 
  2161   000F96                     SSP1CON2        equ	3990	;# 
  2162   000F97                     SSP1CON3        equ	3991	;# 
  2163   000F98                     RC1REG          equ	3992	;# 
  2164   000F98                     RCREG           equ	3992	;# 
  2165   000F98                     RCREG1          equ	3992	;# 
  2166   000F99                     TX1REG          equ	3993	;# 
  2167   000F99                     TXREG1          equ	3993	;# 
  2168   000F99                     TXREG           equ	3993	;# 
  2169   000F9A                     SP1BRG          equ	3994	;# 
  2170   000F9A                     SPBRG           equ	3994	;# 
  2171   000F9A                     SP1BRGL         equ	3994	;# 
  2172   000F9A                     SPBRG1          equ	3994	;# 
  2173   000F9A                     SPBRGL          equ	3994	;# 
  2174   000F9B                     SP1BRGH         equ	3995	;# 
  2175   000F9B                     SPBRGH          equ	3995	;# 
  2176   000F9B                     SPBRGH1         equ	3995	;# 
  2177   000F9C                     RC1STA          equ	3996	;# 
  2178   000F9C                     RCSTA1          equ	3996	;# 
  2179   000F9C                     RCSTA           equ	3996	;# 
  2180   000F9D                     TX1STA          equ	3997	;# 
  2181   000F9D                     TXSTA1          equ	3997	;# 
  2182   000F9D                     TXSTA           equ	3997	;# 
  2183   000F9E                     BAUD1CON        equ	3998	;# 
  2184   000F9E                     BAUDCON1        equ	3998	;# 
  2185   000F9E                     BAUDCTL1        equ	3998	;# 
  2186   000F9E                     BAUDCON         equ	3998	;# 
  2187   000F9E                     BAUDCTL         equ	3998	;# 
  2188   000F9F                     PWM4DC          equ	3999	;# 
  2189   000F9F                     PWM4DCL         equ	3999	;# 
  2190   000FA0                     PWM4DCH         equ	4000	;# 
  2191   000FA1                     PWM4CON         equ	4001	;# 
  2192   000FA2                     PWM3DC          equ	4002	;# 
  2193   000FA2                     PWM3DCL         equ	4002	;# 
  2194   000FA3                     PWM3DCH         equ	4003	;# 
  2195   000FA4                     PWM3CON         equ	4004	;# 
  2196   000FA5                     CCPR2           equ	4005	;# 
  2197   000FA5                     CCPR2L          equ	4005	;# 
  2198   000FA6                     CCPR2H          equ	4006	;# 
  2199   000FA7                     CCP2CON         equ	4007	;# 
  2200   000FA8                     CCP2CAP         equ	4008	;# 
  2201   000FA9                     CCPR1           equ	4009	;# 
  2202   000FA9                     CCPR1L          equ	4009	;# 
  2203   000FAA                     CCPR1H          equ	4010	;# 
  2204   000FAB                     CCP1CON         equ	4011	;# 
  2205   000FAC                     CCP1CAP         equ	4012	;# 
  2206   000FAD                     CCPTMRS         equ	4013	;# 
  2207   000FAE                     T6TMR           equ	4014	;# 
  2208   000FAE                     TMR6            equ	4014	;# 
  2209   000FAF                     T6PR            equ	4015	;# 
  2210   000FAF                     PR6             equ	4015	;# 
  2211   000FB0                     T6CON           equ	4016	;# 
  2212   000FB1                     T6HLT           equ	4017	;# 
  2213   000FB2                     T6CLKCON        equ	4018	;# 
  2214   000FB2                     T6CLK           equ	4018	;# 
  2215   000FB3                     T6RST           equ	4019	;# 
  2216   000FB4                     T4TMR           equ	4020	;# 
  2217   000FB4                     TMR4            equ	4020	;# 
  2218   000FB5                     T4PR            equ	4021	;# 
  2219   000FB5                     PR4             equ	4021	;# 
  2220   000FB6                     T4CON           equ	4022	;# 
  2221   000FB7                     T4HLT           equ	4023	;# 
  2222   000FB8                     T4CLKCON        equ	4024	;# 
  2223   000FB8                     T4CLK           equ	4024	;# 
  2224   000FB9                     T4RST           equ	4025	;# 
  2225   000FBA                     T2TMR           equ	4026	;# 
  2226   000FBA                     TMR2            equ	4026	;# 
  2227   000FBB                     T2PR            equ	4027	;# 
  2228   000FBB                     PR2             equ	4027	;# 
  2229   000FBC                     T2CON           equ	4028	;# 
  2230   000FBD                     T2HLT           equ	4029	;# 
  2231   000FBE                     T2CLKCON        equ	4030	;# 
  2232   000FBE                     T2CLK           equ	4030	;# 
  2233   000FBF                     T2RST           equ	4031	;# 
  2234   000FC0                     TMR5            equ	4032	;# 
  2235   000FC0                     TMR5L           equ	4032	;# 
  2236   000FC1                     TMR5H           equ	4033	;# 
  2237   000FC2                     T5CON           equ	4034	;# 
  2238   000FC2                     TMR5CON         equ	4034	;# 
  2239   000FC3                     T5GCON          equ	4035	;# 
  2240   000FC3                     TMR5GCON        equ	4035	;# 
  2241   000FC4                     T5GATE          equ	4036	;# 
  2242   000FC4                     TMR5GATE        equ	4036	;# 
  2243   000FC5                     T5CLK           equ	4037	;# 
  2244   000FC5                     TMR5CLK         equ	4037	;# 
  2245   000FC5                     PR5             equ	4037	;# 
  2246   000FC6                     TMR3            equ	4038	;# 
  2247   000FC6                     TMR3L           equ	4038	;# 
  2248   000FC7                     TMR3H           equ	4039	;# 
  2249   000FC8                     T3CON           equ	4040	;# 
  2250   000FC8                     TMR3CON         equ	4040	;# 
  2251   000FC9                     T3GCON          equ	4041	;# 
  2252   000FC9                     TMR3GCON        equ	4041	;# 
  2253   000FCA                     T3GATE          equ	4042	;# 
  2254   000FCA                     TMR3GATE        equ	4042	;# 
  2255   000FCB                     T3CLK           equ	4043	;# 
  2256   000FCB                     TMR3CLK         equ	4043	;# 
  2257   000FCB                     PR3             equ	4043	;# 
  2258   000FCC                     TMR1            equ	4044	;# 
  2259   000FCC                     TMR1L           equ	4044	;# 
  2260   000FCD                     TMR1H           equ	4045	;# 
  2261   000FCE                     T1CON           equ	4046	;# 
  2262   000FCE                     TMR1CON         equ	4046	;# 
  2263   000FCF                     T1GCON          equ	4047	;# 
  2264   000FCF                     TMR1GCON        equ	4047	;# 
  2265   000FD0                     T1GATE          equ	4048	;# 
  2266   000FD0                     TMR1GATE        equ	4048	;# 
  2267   000FD1                     T1CLK           equ	4049	;# 
  2268   000FD1                     TMR1CLK         equ	4049	;# 
  2269   000FD1                     PR1             equ	4049	;# 
  2270   000FD2                     TMR0L           equ	4050	;# 
  2271   000FD2                     TMR0            equ	4050	;# 
  2272   000FD3                     TMR0H           equ	4051	;# 
  2273   000FD3                     PR0             equ	4051	;# 
  2274   000FD4                     T0CON0          equ	4052	;# 
  2275   000FD5                     T0CON1          equ	4053	;# 
  2276   000FD6                     PCON1           equ	4054	;# 
  2277   000FD7                     PCON0           equ	4055	;# 
  2278   000FD8                     STATUS          equ	4056	;# 
  2279   000FD9                     FSR2            equ	4057	;# 
  2280   000FD9                     FSR2L           equ	4057	;# 
  2281   000FDA                     FSR2H           equ	4058	;# 
  2282   000FDB                     PLUSW2          equ	4059	;# 
  2283   000FDC                     PREINC2         equ	4060	;# 
  2284   000FDD                     POSTDEC2        equ	4061	;# 
  2285   000FDE                     POSTINC2        equ	4062	;# 
  2286   000FDF                     INDF2           equ	4063	;# 
  2287   000FE0                     BSR             equ	4064	;# 
  2288   000FE1                     FSR1            equ	4065	;# 
  2289   000FE1                     FSR1L           equ	4065	;# 
  2290   000FE2                     FSR1H           equ	4066	;# 
  2291   000FE3                     PLUSW1          equ	4067	;# 
  2292   000FE4                     PREINC1         equ	4068	;# 
  2293   000FE5                     POSTDEC1        equ	4069	;# 
  2294   000FE6                     POSTINC1        equ	4070	;# 
  2295   000FE7                     INDF1           equ	4071	;# 
  2296   000FE8                     WREG            equ	4072	;# 
  2297   000FE9                     FSR0            equ	4073	;# 
  2298   000FE9                     FSR0L           equ	4073	;# 
  2299   000FEA                     FSR0H           equ	4074	;# 
  2300   000FEB                     PLUSW0          equ	4075	;# 
  2301   000FEC                     PREINC0         equ	4076	;# 
  2302   000FED                     POSTDEC0        equ	4077	;# 
  2303   000FEE                     POSTINC0        equ	4078	;# 
  2304   000FEF                     INDF0           equ	4079	;# 
  2305   000FF2                     INTCON          equ	4082	;# 
  2306   000FF3                     PROD            equ	4083	;# 
  2307   000FF3                     PRODL           equ	4083	;# 
  2308   000FF4                     PRODH           equ	4084	;# 
  2309   000FF5                     TABLAT          equ	4085	;# 
  2310   000FF6                     TBLPTR          equ	4086	;# 
  2311   000FF6                     TBLPTRL         equ	4086	;# 
  2312   000FF7                     TBLPTRH         equ	4087	;# 
  2313   000FF8                     TBLPTRU         equ	4088	;# 
  2314   000FF9                     PCLAT           equ	4089	;# 
  2315   000FF9                     PC              equ	4089	;# 
  2316   000FF9                     PCL             equ	4089	;# 
  2317   000FFA                     PCLATH          equ	4090	;# 
  2318   000FFB                     PCLATU          equ	4091	;# 
  2319   000FFC                     STKPTR          equ	4092	;# 
  2320   000FFD                     TOS             equ	4093	;# 
  2321   000FFD                     TOSL            equ	4093	;# 
  2322   000FFE                     TOSH            equ	4094	;# 
  2323   000FFF                     TOSU            equ	4095	;# 
  2324   000E9B                     PPSLOCK         equ	3739	;# 
  2325   000E9C                     INT0PPS         equ	3740	;# 
  2326   000E9D                     INT1PPS         equ	3741	;# 
  2327   000E9E                     INT2PPS         equ	3742	;# 
  2328   000E9F                     T0CKIPPS        equ	3743	;# 
  2329   000EA0                     T1CKIPPS        equ	3744	;# 
  2330   000EA1                     T1GPPS          equ	3745	;# 
  2331   000EA2                     T3CKIPPS        equ	3746	;# 
  2332   000EA3                     T3GPPS          equ	3747	;# 
  2333   000EA4                     T5CKIPPS        equ	3748	;# 
  2334   000EA5                     T5GPPS          equ	3749	;# 
  2335   000EA6                     T2INPPS         equ	3750	;# 
  2336   000EA7                     T4INPPS         equ	3751	;# 
  2337   000EA8                     T6INPPS         equ	3752	;# 
  2338   000EA9                     ADACTPPS        equ	3753	;# 
  2339   000EAA                     CCP1PPS         equ	3754	;# 
  2340   000EAB                     CCP2PPS         equ	3755	;# 
  2341   000EAC                     CWG1PPS         equ	3756	;# 
  2342   000EAC                     CWGPPS          equ	3756	;# 
  2343   000EAC                     CWGINPPS        equ	3756	;# 
  2344   000EAC                     CWG1INPPS       equ	3756	;# 
  2345   000EAD                     MDCARLPPS       equ	3757	;# 
  2346   000EAE                     MDCARHPPS       equ	3758	;# 
  2347   000EAF                     MDSRCPPS        equ	3759	;# 
  2348   000EB0                     RX1PPS          equ	3760	;# 
  2349   000EB0                     RXPPS           equ	3760	;# 
  2350   000EB0                     RXDT1PPS        equ	3760	;# 
  2351   000EB1                     CK1PPS          equ	3761	;# 
  2352   000EB1                     TXPPS           equ	3761	;# 
  2353   000EB1                     CKPPS           equ	3761	;# 
  2354   000EB1                     TXCK1PPS        equ	3761	;# 
  2355   000EB1                     TX1PPS          equ	3761	;# 
  2356   000EB2                     SSP1CLKPPS      equ	3762	;# 
  2357   000EB2                     SSPCLKPPS       equ	3762	;# 
  2358   000EB3                     SSP1DATPPS      equ	3763	;# 
  2359   000EB3                     SSPDATPPS       equ	3763	;# 
  2360   000EB4                     SSP1SSPPS       equ	3764	;# 
  2361   000EB4                     SSPSSPPS        equ	3764	;# 
  2362   000EB5                     IPR0            equ	3765	;# 
  2363   000EB6                     IPR1            equ	3766	;# 
  2364   000EB7                     IPR2            equ	3767	;# 
  2365   000EB8                     IPR3            equ	3768	;# 
  2366   000EB9                     IPR4            equ	3769	;# 
  2367   000EBA                     IPR5            equ	3770	;# 
  2368   000EBB                     IPR6            equ	3771	;# 
  2369   000EBC                     IPR7            equ	3772	;# 
  2370   000EBD                     PIE0            equ	3773	;# 
  2371   000EBE                     PIE1            equ	3774	;# 
  2372   000EBF                     PIE2            equ	3775	;# 
  2373   000EC0                     PIE3            equ	3776	;# 
  2374   000EC1                     PIE4            equ	3777	;# 
  2375   000EC2                     PIE5            equ	3778	;# 
  2376   000EC3                     PIE6            equ	3779	;# 
  2377   000EC4                     PIE7            equ	3780	;# 
  2378   000EC5                     PIR0            equ	3781	;# 
  2379   000EC6                     PIR1            equ	3782	;# 
  2380   000EC7                     PIR2            equ	3783	;# 
  2381   000EC8                     PIR3            equ	3784	;# 
  2382   000EC9                     PIR4            equ	3785	;# 
  2383   000ECA                     PIR5            equ	3786	;# 
  2384   000ECB                     PIR6            equ	3787	;# 
  2385   000ECC                     PIR7            equ	3788	;# 
  2386   000ECD                     WDTCON0         equ	3789	;# 
  2387   000ECE                     WDTCON1         equ	3790	;# 
  2388   000ECF                     WDTPSL          equ	3791	;# 
  2389   000ED0                     WDTPSH          equ	3792	;# 
  2390   000ED1                     WDTTMR          equ	3793	;# 
  2391   000ED2                     CPUDOZE         equ	3794	;# 
  2392   000ED3                     OSCCON1         equ	3795	;# 
  2393   000ED4                     OSCCON2         equ	3796	;# 
  2394   000ED5                     OSCCON3         equ	3797	;# 
  2395   000ED6                     OSCSTAT         equ	3798	;# 
  2396   000ED6                     OSCSTAT1        equ	3798	;# 
  2397   000ED7                     OSCEN           equ	3799	;# 
  2398   000ED8                     OSCTUNE         equ	3800	;# 
  2399   000ED9                     OSCFRQ          equ	3801	;# 
  2400   000ED9                     OSCFREQ         equ	3801	;# 
  2401   000EDA                     VREGCON         equ	3802	;# 
  2402   000EDB                     BORCON          equ	3803	;# 
  2403   000EDC                     PMD0            equ	3804	;# 
  2404   000EDD                     PMD1            equ	3805	;# 
  2405   000EDE                     PMD2            equ	3806	;# 
  2406   000EDF                     PMD3            equ	3807	;# 
  2407   000EE0                     PMD4            equ	3808	;# 
  2408   000EE1                     PMD5            equ	3809	;# 
  2409   000EE2                     RA0PPS          equ	3810	;# 
  2410   000EE3                     RA1PPS          equ	3811	;# 
  2411   000EE4                     RA2PPS          equ	3812	;# 
  2412   000EE5                     RA3PPS          equ	3813	;# 
  2413   000EE6                     RA4PPS          equ	3814	;# 
  2414   000EE7                     RA5PPS          equ	3815	;# 
  2415   000EE8                     RA6PPS          equ	3816	;# 
  2416   000EE9                     RA7PPS          equ	3817	;# 
  2417   000EEA                     RB0PPS          equ	3818	;# 
  2418   000EEB                     RB1PPS          equ	3819	;# 
  2419   000EEC                     RB2PPS          equ	3820	;# 
  2420   000EED                     RB3PPS          equ	3821	;# 
  2421   000EEE                     RB4PPS          equ	3822	;# 
  2422   000EEF                     RB5PPS          equ	3823	;# 
  2423   000EF0                     RB6PPS          equ	3824	;# 
  2424   000EF1                     RB7PPS          equ	3825	;# 
  2425   000EF2                     RC0PPS          equ	3826	;# 
  2426   000EF3                     RC1PPS          equ	3827	;# 
  2427   000EF4                     RC2PPS          equ	3828	;# 
  2428   000EF5                     RC3PPS          equ	3829	;# 
  2429   000EF6                     RC4PPS          equ	3830	;# 
  2430   000EF7                     RC5PPS          equ	3831	;# 
  2431   000EF8                     RC6PPS          equ	3832	;# 
  2432   000EF9                     RC7PPS          equ	3833	;# 
  2433   000F05                     IOCAF           equ	3845	;# 
  2434   000F06                     IOCAN           equ	3846	;# 
  2435   000F07                     IOCAP           equ	3847	;# 
  2436   000F08                     INLVLA          equ	3848	;# 
  2437   000F09                     SLRCONA         equ	3849	;# 
  2438   000F0A                     ODCONA          equ	3850	;# 
  2439   000F0B                     WPUA            equ	3851	;# 
  2440   000F0C                     ANSELA          equ	3852	;# 
  2441   000F0D                     IOCBF           equ	3853	;# 
  2442   000F0E                     IOCBN           equ	3854	;# 
  2443   000F0F                     IOCBP           equ	3855	;# 
  2444   000F10                     INLVLB          equ	3856	;# 
  2445   000F11                     SLRCONB         equ	3857	;# 
  2446   000F12                     ODCONB          equ	3858	;# 
  2447   000F13                     WPUB            equ	3859	;# 
  2448   000F14                     ANSELB          equ	3860	;# 
  2449   000F15                     IOCCF           equ	3861	;# 
  2450   000F16                     IOCCN           equ	3862	;# 
  2451   000F17                     IOCCP           equ	3863	;# 
  2452   000F18                     INLVLC          equ	3864	;# 
  2453   000F19                     SLRCONC         equ	3865	;# 
  2454   000F1A                     ODCONC          equ	3866	;# 
  2455   000F1B                     WPUC            equ	3867	;# 
  2456   000F1C                     ANSELC          equ	3868	;# 
  2457   000F22                     IOCEF           equ	3874	;# 
  2458   000F23                     IOCEN           equ	3875	;# 
  2459   000F24                     IOCEP           equ	3876	;# 
  2460   000F25                     INLVLE          equ	3877	;# 
  2461   000F28                     WPUE            equ	3880	;# 
  2462   000F2A                     HLVDCON0        equ	3882	;# 
  2463   000F2B                     HLVDCON1        equ	3883	;# 
  2464   000F2C                     FVRCON          equ	3884	;# 
  2465   000F2D                     ZCDCON          equ	3885	;# 
  2466   000F2E                     DAC1CON0        equ	3886	;# 
  2467   000F2F                     DAC1CON1        equ	3887	;# 
  2468   000F30                     CM2CON0         equ	3888	;# 
  2469   000F31                     CM2CON1         equ	3889	;# 
  2470   000F32                     CM2NCH          equ	3890	;# 
  2471   000F33                     CM2PCH          equ	3891	;# 
  2472   000F34                     CM1CON0         equ	3892	;# 
  2473   000F35                     CM1CON1         equ	3893	;# 
  2474   000F36                     CM1NCH          equ	3894	;# 
  2475   000F37                     CM1PCH          equ	3895	;# 
  2476   000F38                     CMOUT           equ	3896	;# 
  2477   000F39                     CLKRCON         equ	3897	;# 
  2478   000F3A                     CLKRCLK         equ	3898	;# 
  2479   000F3B                     CWG1CLK         equ	3899	;# 
  2480   000F3B                     CWG1CLKCON      equ	3899	;# 
  2481   000F3C                     CWG1ISM         equ	3900	;# 
  2482   000F3D                     CWG1DBR         equ	3901	;# 
  2483   000F3E                     CWG1DBF         equ	3902	;# 
  2484   000F3F                     CWG1CON0        equ	3903	;# 
  2485   000F40                     CWG1CON1        equ	3904	;# 
  2486   000F41                     CWG1AS0         equ	3905	;# 
  2487   000F42                     CWG1AS1         equ	3906	;# 
  2488   000F43                     CWG1STR         equ	3907	;# 
  2489   000F44                     SCANLADR        equ	3908	;# 
  2490   000F44                     SCANLADRL       equ	3908	;# 
  2491   000F45                     SCANLADRH       equ	3909	;# 
  2492   000F46                     SCANLADRU       equ	3910	;# 
  2493   000F47                     SCANHADR        equ	3911	;# 
  2494   000F47                     SCANHADRL       equ	3911	;# 
  2495   000F48                     SCANHADRH       equ	3912	;# 
  2496   000F49                     SCANHADRU       equ	3913	;# 
  2497   000F4A                     SCANCON0        equ	3914	;# 
  2498   000F4B                     SCANTRIG        equ	3915	;# 
  2499   000F4C                     MDCON0          equ	3916	;# 
  2500   000F4D                     MDCON1          equ	3917	;# 
  2501   000F4E                     MDSRC           equ	3918	;# 
  2502   000F4F                     MDCARL          equ	3919	;# 
  2503   000F50                     MDCARH          equ	3920	;# 
  2504   000F51                     ADACT           equ	3921	;# 
  2505   000F52                     ADCLK           equ	3922	;# 
  2506   000F53                     ADREF           equ	3923	;# 
  2507   000F54                     ADCON1          equ	3924	;# 
  2508   000F55                     ADCON2          equ	3925	;# 
  2509   000F56                     ADCON3          equ	3926	;# 
  2510   000F57                     ADACQ           equ	3927	;# 
  2511   000F58                     ADCAP           equ	3928	;# 
  2512   000F59                     ADPRE           equ	3929	;# 
  2513   000F5A                     ADPCH           equ	3930	;# 
  2514   000F5B                     ADCON0          equ	3931	;# 
  2515   000F5C                     ADPREV          equ	3932	;# 
  2516   000F5C                     ADPREVL         equ	3932	;# 
  2517   000F5D                     ADPREVH         equ	3933	;# 
  2518   000F5E                     ADRES           equ	3934	;# 
  2519   000F5E                     ADRESL          equ	3934	;# 
  2520   000F5F                     ADRESH          equ	3935	;# 
  2521   000F60                     ADSTAT          equ	3936	;# 
  2522   000F61                     ADRPT           equ	3937	;# 
  2523   000F62                     ADCNT           equ	3938	;# 
  2524   000F63                     ADSTPT          equ	3939	;# 
  2525   000F63                     ADSTPTL         equ	3939	;# 
  2526   000F64                     ADSTPTH         equ	3940	;# 
  2527   000F65                     ADLTH           equ	3941	;# 
  2528   000F65                     ADLTHL          equ	3941	;# 
  2529   000F66                     ADLTHH          equ	3942	;# 
  2530   000F67                     ADUTH           equ	3943	;# 
  2531   000F67                     ADUTHL          equ	3943	;# 
  2532   000F68                     ADUTHH          equ	3944	;# 
  2533   000F69                     ADERR           equ	3945	;# 
  2534   000F69                     ADERRL          equ	3945	;# 
  2535   000F6A                     ADERRH          equ	3946	;# 
  2536   000F6B                     ADACC           equ	3947	;# 
  2537   000F6B                     ADACCL          equ	3947	;# 
  2538   000F6C                     ADACCH          equ	3948	;# 
  2539   000F6D                     ADFLTR          equ	3949	;# 
  2540   000F6D                     ADFLTRL         equ	3949	;# 
  2541   000F6E                     ADFLTRH         equ	3950	;# 
  2542   000F6F                     CRCDATA         equ	3951	;# 
  2543   000F6F                     CRCDATL         equ	3951	;# 
  2544   000F70                     CRCDATH         equ	3952	;# 
  2545   000F71                     CRCACC          equ	3953	;# 
  2546   000F71                     CRCACCL         equ	3953	;# 
  2547   000F72                     CRCACCH         equ	3954	;# 
  2548   000F73                     CRCSHFT         equ	3955	;# 
  2549   000F73                     CRCSHIFTL       equ	3955	;# 
  2550   000F74                     CRCSHIFTH       equ	3956	;# 
  2551   000F75                     CRCXOR          equ	3957	;# 
  2552   000F75                     CRCXORL         equ	3957	;# 
  2553   000F76                     CRCXORH         equ	3958	;# 
  2554   000F77                     CRCCON0         equ	3959	;# 
  2555   000F78                     CRCCON1         equ	3960	;# 
  2556   000F79                     NVMADR          equ	3961	;# 
  2557   000F79                     NVMADRL         equ	3961	;# 
  2558   000F7A                     NVMADRH         equ	3962	;# 
  2559   000F7B                     NVMADRU         equ	3963	;# 
  2560   000F7C                     NVMDAT          equ	3964	;# 
  2561   000F7C                     NVMDATL         equ	3964	;# 
  2562   000F7D                     NVMDATH         equ	3965	;# 
  2563   000F7F                     NVMCON0         equ	3967	;# 
  2564   000F80                     NVMCON1         equ	3968	;# 
  2565   000F81                     NVMCON2         equ	3969	;# 
  2566   000F82                     LATA            equ	3970	;# 
  2567   000F83                     LATB            equ	3971	;# 
  2568   000F84                     LATC            equ	3972	;# 
  2569   000F87                     TRISA           equ	3975	;# 
  2570   000F87                     DDRA            equ	3975	;# 
  2571   000F88                     TRISB           equ	3976	;# 
  2572   000F88                     DDRB            equ	3976	;# 
  2573   000F89                     TRISC           equ	3977	;# 
  2574   000F89                     DDRC            equ	3977	;# 
  2575   000F8C                     PORTA           equ	3980	;# 
  2576   000F8D                     PORTB           equ	3981	;# 
  2577   000F8E                     PORTC           equ	3982	;# 
  2578   000F90                     PORTE           equ	3984	;# 
  2579   000F91                     SSP1BUF         equ	3985	;# 
  2580   000F92                     SSP1ADD         equ	3986	;# 
  2581   000F93                     SSP1MSK         equ	3987	;# 
  2582   000F94                     SSP1STAT        equ	3988	;# 
  2583   000F95                     SSP1CON1        equ	3989	;# 
  2584   000F96                     SSP1CON2        equ	3990	;# 
  2585   000F97                     SSP1CON3        equ	3991	;# 
  2586   000F98                     RC1REG          equ	3992	;# 
  2587   000F98                     RCREG           equ	3992	;# 
  2588   000F98                     RCREG1          equ	3992	;# 
  2589   000F99                     TX1REG          equ	3993	;# 
  2590   000F99                     TXREG1          equ	3993	;# 
  2591   000F99                     TXREG           equ	3993	;# 
  2592   000F9A                     SP1BRG          equ	3994	;# 
  2593   000F9A                     SPBRG           equ	3994	;# 
  2594   000F9A                     SP1BRGL         equ	3994	;# 
  2595   000F9A                     SPBRG1          equ	3994	;# 
  2596   000F9A                     SPBRGL          equ	3994	;# 
  2597   000F9B                     SP1BRGH         equ	3995	;# 
  2598   000F9B                     SPBRGH          equ	3995	;# 
  2599   000F9B                     SPBRGH1         equ	3995	;# 
  2600   000F9C                     RC1STA          equ	3996	;# 
  2601   000F9C                     RCSTA1          equ	3996	;# 
  2602   000F9C                     RCSTA           equ	3996	;# 
  2603   000F9D                     TX1STA          equ	3997	;# 
  2604   000F9D                     TXSTA1          equ	3997	;# 
  2605   000F9D                     TXSTA           equ	3997	;# 
  2606   000F9E                     BAUD1CON        equ	3998	;# 
  2607   000F9E                     BAUDCON1        equ	3998	;# 
  2608   000F9E                     BAUDCTL1        equ	3998	;# 
  2609   000F9E                     BAUDCON         equ	3998	;# 
  2610   000F9E                     BAUDCTL         equ	3998	;# 
  2611   000F9F                     PWM4DC          equ	3999	;# 
  2612   000F9F                     PWM4DCL         equ	3999	;# 
  2613   000FA0                     PWM4DCH         equ	4000	;# 
  2614   000FA1                     PWM4CON         equ	4001	;# 
  2615   000FA2                     PWM3DC          equ	4002	;# 
  2616   000FA2                     PWM3DCL         equ	4002	;# 
  2617   000FA3                     PWM3DCH         equ	4003	;# 
  2618   000FA4                     PWM3CON         equ	4004	;# 
  2619   000FA5                     CCPR2           equ	4005	;# 
  2620   000FA5                     CCPR2L          equ	4005	;# 
  2621   000FA6                     CCPR2H          equ	4006	;# 
  2622   000FA7                     CCP2CON         equ	4007	;# 
  2623   000FA8                     CCP2CAP         equ	4008	;# 
  2624   000FA9                     CCPR1           equ	4009	;# 
  2625   000FA9                     CCPR1L          equ	4009	;# 
  2626   000FAA                     CCPR1H          equ	4010	;# 
  2627   000FAB                     CCP1CON         equ	4011	;# 
  2628   000FAC                     CCP1CAP         equ	4012	;# 
  2629   000FAD                     CCPTMRS         equ	4013	;# 
  2630   000FAE                     T6TMR           equ	4014	;# 
  2631   000FAE                     TMR6            equ	4014	;# 
  2632   000FAF                     T6PR            equ	4015	;# 
  2633   000FAF                     PR6             equ	4015	;# 
  2634   000FB0                     T6CON           equ	4016	;# 
  2635   000FB1                     T6HLT           equ	4017	;# 
  2636   000FB2                     T6CLKCON        equ	4018	;# 
  2637   000FB2                     T6CLK           equ	4018	;# 
  2638   000FB3                     T6RST           equ	4019	;# 
  2639   000FB4                     T4TMR           equ	4020	;# 
  2640   000FB4                     TMR4            equ	4020	;# 
  2641   000FB5                     T4PR            equ	4021	;# 
  2642   000FB5                     PR4             equ	4021	;# 
  2643   000FB6                     T4CON           equ	4022	;# 
  2644   000FB7                     T4HLT           equ	4023	;# 
  2645   000FB8                     T4CLKCON        equ	4024	;# 
  2646   000FB8                     T4CLK           equ	4024	;# 
  2647   000FB9                     T4RST           equ	4025	;# 
  2648   000FBA                     T2TMR           equ	4026	;# 
  2649   000FBA                     TMR2            equ	4026	;# 
  2650   000FBB                     T2PR            equ	4027	;# 
  2651   000FBB                     PR2             equ	4027	;# 
  2652   000FBC                     T2CON           equ	4028	;# 
  2653   000FBD                     T2HLT           equ	4029	;# 
  2654   000FBE                     T2CLKCON        equ	4030	;# 
  2655   000FBE                     T2CLK           equ	4030	;# 
  2656   000FBF                     T2RST           equ	4031	;# 
  2657   000FC0                     TMR5            equ	4032	;# 
  2658   000FC0                     TMR5L           equ	4032	;# 
  2659   000FC1                     TMR5H           equ	4033	;# 
  2660   000FC2                     T5CON           equ	4034	;# 
  2661   000FC2                     TMR5CON         equ	4034	;# 
  2662   000FC3                     T5GCON          equ	4035	;# 
  2663   000FC3                     TMR5GCON        equ	4035	;# 
  2664   000FC4                     T5GATE          equ	4036	;# 
  2665   000FC4                     TMR5GATE        equ	4036	;# 
  2666   000FC5                     T5CLK           equ	4037	;# 
  2667   000FC5                     TMR5CLK         equ	4037	;# 
  2668   000FC5                     PR5             equ	4037	;# 
  2669   000FC6                     TMR3            equ	4038	;# 
  2670   000FC6                     TMR3L           equ	4038	;# 
  2671   000FC7                     TMR3H           equ	4039	;# 
  2672   000FC8                     T3CON           equ	4040	;# 
  2673   000FC8                     TMR3CON         equ	4040	;# 
  2674   000FC9                     T3GCON          equ	4041	;# 
  2675   000FC9                     TMR3GCON        equ	4041	;# 
  2676   000FCA                     T3GATE          equ	4042	;# 
  2677   000FCA                     TMR3GATE        equ	4042	;# 
  2678   000FCB                     T3CLK           equ	4043	;# 
  2679   000FCB                     TMR3CLK         equ	4043	;# 
  2680   000FCB                     PR3             equ	4043	;# 
  2681   000FCC                     TMR1            equ	4044	;# 
  2682   000FCC                     TMR1L           equ	4044	;# 
  2683   000FCD                     TMR1H           equ	4045	;# 
  2684   000FCE                     T1CON           equ	4046	;# 
  2685   000FCE                     TMR1CON         equ	4046	;# 
  2686   000FCF                     T1GCON          equ	4047	;# 
  2687   000FCF                     TMR1GCON        equ	4047	;# 
  2688   000FD0                     T1GATE          equ	4048	;# 
  2689   000FD0                     TMR1GATE        equ	4048	;# 
  2690   000FD1                     T1CLK           equ	4049	;# 
  2691   000FD1                     TMR1CLK         equ	4049	;# 
  2692   000FD1                     PR1             equ	4049	;# 
  2693   000FD2                     TMR0L           equ	4050	;# 
  2694   000FD2                     TMR0            equ	4050	;# 
  2695   000FD3                     TMR0H           equ	4051	;# 
  2696   000FD3                     PR0             equ	4051	;# 
  2697   000FD4                     T0CON0          equ	4052	;# 
  2698   000FD5                     T0CON1          equ	4053	;# 
  2699   000FD6                     PCON1           equ	4054	;# 
  2700   000FD7                     PCON0           equ	4055	;# 
  2701   000FD8                     STATUS          equ	4056	;# 
  2702   000FD9                     FSR2            equ	4057	;# 
  2703   000FD9                     FSR2L           equ	4057	;# 
  2704   000FDA                     FSR2H           equ	4058	;# 
  2705   000FDB                     PLUSW2          equ	4059	;# 
  2706   000FDC                     PREINC2         equ	4060	;# 
  2707   000FDD                     POSTDEC2        equ	4061	;# 
  2708   000FDE                     POSTINC2        equ	4062	;# 
  2709   000FDF                     INDF2           equ	4063	;# 
  2710   000FE0                     BSR             equ	4064	;# 
  2711   000FE1                     FSR1            equ	4065	;# 
  2712   000FE1                     FSR1L           equ	4065	;# 
  2713   000FE2                     FSR1H           equ	4066	;# 
  2714   000FE3                     PLUSW1          equ	4067	;# 
  2715   000FE4                     PREINC1         equ	4068	;# 
  2716   000FE5                     POSTDEC1        equ	4069	;# 
  2717   000FE6                     POSTINC1        equ	4070	;# 
  2718   000FE7                     INDF1           equ	4071	;# 
  2719   000FE8                     WREG            equ	4072	;# 
  2720   000FE9                     FSR0            equ	4073	;# 
  2721   000FE9                     FSR0L           equ	4073	;# 
  2722   000FEA                     FSR0H           equ	4074	;# 
  2723   000FEB                     PLUSW0          equ	4075	;# 
  2724   000FEC                     PREINC0         equ	4076	;# 
  2725   000FED                     POSTDEC0        equ	4077	;# 
  2726   000FEE                     POSTINC0        equ	4078	;# 
  2727   000FEF                     INDF0           equ	4079	;# 
  2728   000FF2                     INTCON          equ	4082	;# 
  2729   000FF3                     PROD            equ	4083	;# 
  2730   000FF3                     PRODL           equ	4083	;# 
  2731   000FF4                     PRODH           equ	4084	;# 
  2732   000FF5                     TABLAT          equ	4085	;# 
  2733   000FF6                     TBLPTR          equ	4086	;# 
  2734   000FF6                     TBLPTRL         equ	4086	;# 
  2735   000FF7                     TBLPTRH         equ	4087	;# 
  2736   000FF8                     TBLPTRU         equ	4088	;# 
  2737   000FF9                     PCLAT           equ	4089	;# 
  2738   000FF9                     PC              equ	4089	;# 
  2739   000FF9                     PCL             equ	4089	;# 
  2740   000FFA                     PCLATH          equ	4090	;# 
  2741   000FFB                     PCLATU          equ	4091	;# 
  2742   000FFC                     STKPTR          equ	4092	;# 
  2743   000FFD                     TOS             equ	4093	;# 
  2744   000FFD                     TOSL            equ	4093	;# 
  2745   000FFE                     TOSH            equ	4094	;# 
  2746   000FFF                     TOSU            equ	4095	;# 
  2747   000E9B                     PPSLOCK         equ	3739	;# 
  2748   000E9C                     INT0PPS         equ	3740	;# 
  2749   000E9D                     INT1PPS         equ	3741	;# 
  2750   000E9E                     INT2PPS         equ	3742	;# 
  2751   000E9F                     T0CKIPPS        equ	3743	;# 
  2752   000EA0                     T1CKIPPS        equ	3744	;# 
  2753   000EA1                     T1GPPS          equ	3745	;# 
  2754   000EA2                     T3CKIPPS        equ	3746	;# 
  2755   000EA3                     T3GPPS          equ	3747	;# 
  2756   000EA4                     T5CKIPPS        equ	3748	;# 
  2757   000EA5                     T5GPPS          equ	3749	;# 
  2758   000EA6                     T2INPPS         equ	3750	;# 
  2759   000EA7                     T4INPPS         equ	3751	;# 
  2760   000EA8                     T6INPPS         equ	3752	;# 
  2761   000EA9                     ADACTPPS        equ	3753	;# 
  2762   000EAA                     CCP1PPS         equ	3754	;# 
  2763   000EAB                     CCP2PPS         equ	3755	;# 
  2764   000EAC                     CWG1PPS         equ	3756	;# 
  2765   000EAC                     CWGPPS          equ	3756	;# 
  2766   000EAC                     CWGINPPS        equ	3756	;# 
  2767   000EAC                     CWG1INPPS       equ	3756	;# 
  2768   000EAD                     MDCARLPPS       equ	3757	;# 
  2769   000EAE                     MDCARHPPS       equ	3758	;# 
  2770   000EAF                     MDSRCPPS        equ	3759	;# 
  2771   000EB0                     RX1PPS          equ	3760	;# 
  2772   000EB0                     RXPPS           equ	3760	;# 
  2773   000EB0                     RXDT1PPS        equ	3760	;# 
  2774   000EB1                     CK1PPS          equ	3761	;# 
  2775   000EB1                     TXPPS           equ	3761	;# 
  2776   000EB1                     CKPPS           equ	3761	;# 
  2777   000EB1                     TXCK1PPS        equ	3761	;# 
  2778   000EB1                     TX1PPS          equ	3761	;# 
  2779   000EB2                     SSP1CLKPPS      equ	3762	;# 
  2780   000EB2                     SSPCLKPPS       equ	3762	;# 
  2781   000EB3                     SSP1DATPPS      equ	3763	;# 
  2782   000EB3                     SSPDATPPS       equ	3763	;# 
  2783   000EB4                     SSP1SSPPS       equ	3764	;# 
  2784   000EB4                     SSPSSPPS        equ	3764	;# 
  2785   000EB5                     IPR0            equ	3765	;# 
  2786   000EB6                     IPR1            equ	3766	;# 
  2787   000EB7                     IPR2            equ	3767	;# 
  2788   000EB8                     IPR3            equ	3768	;# 
  2789   000EB9                     IPR4            equ	3769	;# 
  2790   000EBA                     IPR5            equ	3770	;# 
  2791   000EBB                     IPR6            equ	3771	;# 
  2792   000EBC                     IPR7            equ	3772	;# 
  2793   000EBD                     PIE0            equ	3773	;# 
  2794   000EBE                     PIE1            equ	3774	;# 
  2795   000EBF                     PIE2            equ	3775	;# 
  2796   000EC0                     PIE3            equ	3776	;# 
  2797   000EC1                     PIE4            equ	3777	;# 
  2798   000EC2                     PIE5            equ	3778	;# 
  2799   000EC3                     PIE6            equ	3779	;# 
  2800   000EC4                     PIE7            equ	3780	;# 
  2801   000EC5                     PIR0            equ	3781	;# 
  2802   000EC6                     PIR1            equ	3782	;# 
  2803   000EC7                     PIR2            equ	3783	;# 
  2804   000EC8                     PIR3            equ	3784	;# 
  2805   000EC9                     PIR4            equ	3785	;# 
  2806   000ECA                     PIR5            equ	3786	;# 
  2807   000ECB                     PIR6            equ	3787	;# 
  2808   000ECC                     PIR7            equ	3788	;# 
  2809   000ECD                     WDTCON0         equ	3789	;# 
  2810   000ECE                     WDTCON1         equ	3790	;# 
  2811   000ECF                     WDTPSL          equ	3791	;# 
  2812   000ED0                     WDTPSH          equ	3792	;# 
  2813   000ED1                     WDTTMR          equ	3793	;# 
  2814   000ED2                     CPUDOZE         equ	3794	;# 
  2815   000ED3                     OSCCON1         equ	3795	;# 
  2816   000ED4                     OSCCON2         equ	3796	;# 
  2817   000ED5                     OSCCON3         equ	3797	;# 
  2818   000ED6                     OSCSTAT         equ	3798	;# 
  2819   000ED6                     OSCSTAT1        equ	3798	;# 
  2820   000ED7                     OSCEN           equ	3799	;# 
  2821   000ED8                     OSCTUNE         equ	3800	;# 
  2822   000ED9                     OSCFRQ          equ	3801	;# 
  2823   000ED9                     OSCFREQ         equ	3801	;# 
  2824   000EDA                     VREGCON         equ	3802	;# 
  2825   000EDB                     BORCON          equ	3803	;# 
  2826   000EDC                     PMD0            equ	3804	;# 
  2827   000EDD                     PMD1            equ	3805	;# 
  2828   000EDE                     PMD2            equ	3806	;# 
  2829   000EDF                     PMD3            equ	3807	;# 
  2830   000EE0                     PMD4            equ	3808	;# 
  2831   000EE1                     PMD5            equ	3809	;# 
  2832   000EE2                     RA0PPS          equ	3810	;# 
  2833   000EE3                     RA1PPS          equ	3811	;# 
  2834   000EE4                     RA2PPS          equ	3812	;# 
  2835   000EE5                     RA3PPS          equ	3813	;# 
  2836   000EE6                     RA4PPS          equ	3814	;# 
  2837   000EE7                     RA5PPS          equ	3815	;# 
  2838   000EE8                     RA6PPS          equ	3816	;# 
  2839   000EE9                     RA7PPS          equ	3817	;# 
  2840   000EEA                     RB0PPS          equ	3818	;# 
  2841   000EEB                     RB1PPS          equ	3819	;# 
  2842   000EEC                     RB2PPS          equ	3820	;# 
  2843   000EED                     RB3PPS          equ	3821	;# 
  2844   000EEE                     RB4PPS          equ	3822	;# 
  2845   000EEF                     RB5PPS          equ	3823	;# 
  2846   000EF0                     RB6PPS          equ	3824	;# 
  2847   000EF1                     RB7PPS          equ	3825	;# 
  2848   000EF2                     RC0PPS          equ	3826	;# 
  2849   000EF3                     RC1PPS          equ	3827	;# 
  2850   000EF4                     RC2PPS          equ	3828	;# 
  2851   000EF5                     RC3PPS          equ	3829	;# 
  2852   000EF6                     RC4PPS          equ	3830	;# 
  2853   000EF7                     RC5PPS          equ	3831	;# 
  2854   000EF8                     RC6PPS          equ	3832	;# 
  2855   000EF9                     RC7PPS          equ	3833	;# 
  2856   000F05                     IOCAF           equ	3845	;# 
  2857   000F06                     IOCAN           equ	3846	;# 
  2858   000F07                     IOCAP           equ	3847	;# 
  2859   000F08                     INLVLA          equ	3848	;# 
  2860   000F09                     SLRCONA         equ	3849	;# 
  2861   000F0A                     ODCONA          equ	3850	;# 
  2862   000F0B                     WPUA            equ	3851	;# 
  2863   000F0C                     ANSELA          equ	3852	;# 
  2864   000F0D                     IOCBF           equ	3853	;# 
  2865   000F0E                     IOCBN           equ	3854	;# 
  2866   000F0F                     IOCBP           equ	3855	;# 
  2867   000F10                     INLVLB          equ	3856	;# 
  2868   000F11                     SLRCONB         equ	3857	;# 
  2869   000F12                     ODCONB          equ	3858	;# 
  2870   000F13                     WPUB            equ	3859	;# 
  2871   000F14                     ANSELB          equ	3860	;# 
  2872   000F15                     IOCCF           equ	3861	;# 
  2873   000F16                     IOCCN           equ	3862	;# 
  2874   000F17                     IOCCP           equ	3863	;# 
  2875   000F18                     INLVLC          equ	3864	;# 
  2876   000F19                     SLRCONC         equ	3865	;# 
  2877   000F1A                     ODCONC          equ	3866	;# 
  2878   000F1B                     WPUC            equ	3867	;# 
  2879   000F1C                     ANSELC          equ	3868	;# 
  2880   000F22                     IOCEF           equ	3874	;# 
  2881   000F23                     IOCEN           equ	3875	;# 
  2882   000F24                     IOCEP           equ	3876	;# 
  2883   000F25                     INLVLE          equ	3877	;# 
  2884   000F28                     WPUE            equ	3880	;# 
  2885   000F2A                     HLVDCON0        equ	3882	;# 
  2886   000F2B                     HLVDCON1        equ	3883	;# 
  2887   000F2C                     FVRCON          equ	3884	;# 
  2888   000F2D                     ZCDCON          equ	3885	;# 
  2889   000F2E                     DAC1CON0        equ	3886	;# 
  2890   000F2F                     DAC1CON1        equ	3887	;# 
  2891   000F30                     CM2CON0         equ	3888	;# 
  2892   000F31                     CM2CON1         equ	3889	;# 
  2893   000F32                     CM2NCH          equ	3890	;# 
  2894   000F33                     CM2PCH          equ	3891	;# 
  2895   000F34                     CM1CON0         equ	3892	;# 
  2896   000F35                     CM1CON1         equ	3893	;# 
  2897   000F36                     CM1NCH          equ	3894	;# 
  2898   000F37                     CM1PCH          equ	3895	;# 
  2899   000F38                     CMOUT           equ	3896	;# 
  2900   000F39                     CLKRCON         equ	3897	;# 
  2901   000F3A                     CLKRCLK         equ	3898	;# 
  2902   000F3B                     CWG1CLK         equ	3899	;# 
  2903   000F3B                     CWG1CLKCON      equ	3899	;# 
  2904   000F3C                     CWG1ISM         equ	3900	;# 
  2905   000F3D                     CWG1DBR         equ	3901	;# 
  2906   000F3E                     CWG1DBF         equ	3902	;# 
  2907   000F3F                     CWG1CON0        equ	3903	;# 
  2908   000F40                     CWG1CON1        equ	3904	;# 
  2909   000F41                     CWG1AS0         equ	3905	;# 
  2910   000F42                     CWG1AS1         equ	3906	;# 
  2911   000F43                     CWG1STR         equ	3907	;# 
  2912   000F44                     SCANLADR        equ	3908	;# 
  2913   000F44                     SCANLADRL       equ	3908	;# 
  2914   000F45                     SCANLADRH       equ	3909	;# 
  2915   000F46                     SCANLADRU       equ	3910	;# 
  2916   000F47                     SCANHADR        equ	3911	;# 
  2917   000F47                     SCANHADRL       equ	3911	;# 
  2918   000F48                     SCANHADRH       equ	3912	;# 
  2919   000F49                     SCANHADRU       equ	3913	;# 
  2920   000F4A                     SCANCON0        equ	3914	;# 
  2921   000F4B                     SCANTRIG        equ	3915	;# 
  2922   000F4C                     MDCON0          equ	3916	;# 
  2923   000F4D                     MDCON1          equ	3917	;# 
  2924   000F4E                     MDSRC           equ	3918	;# 
  2925   000F4F                     MDCARL          equ	3919	;# 
  2926   000F50                     MDCARH          equ	3920	;# 
  2927   000F51                     ADACT           equ	3921	;# 
  2928   000F52                     ADCLK           equ	3922	;# 
  2929   000F53                     ADREF           equ	3923	;# 
  2930   000F54                     ADCON1          equ	3924	;# 
  2931   000F55                     ADCON2          equ	3925	;# 
  2932   000F56                     ADCON3          equ	3926	;# 
  2933   000F57                     ADACQ           equ	3927	;# 
  2934   000F58                     ADCAP           equ	3928	;# 
  2935   000F59                     ADPRE           equ	3929	;# 
  2936   000F5A                     ADPCH           equ	3930	;# 
  2937   000F5B                     ADCON0          equ	3931	;# 
  2938   000F5C                     ADPREV          equ	3932	;# 
  2939   000F5C                     ADPREVL         equ	3932	;# 
  2940   000F5D                     ADPREVH         equ	3933	;# 
  2941   000F5E                     ADRES           equ	3934	;# 
  2942   000F5E                     ADRESL          equ	3934	;# 
  2943   000F5F                     ADRESH          equ	3935	;# 
  2944   000F60                     ADSTAT          equ	3936	;# 
  2945   000F61                     ADRPT           equ	3937	;# 
  2946   000F62                     ADCNT           equ	3938	;# 
  2947   000F63                     ADSTPT          equ	3939	;# 
  2948   000F63                     ADSTPTL         equ	3939	;# 
  2949   000F64                     ADSTPTH         equ	3940	;# 
  2950   000F65                     ADLTH           equ	3941	;# 
  2951   000F65                     ADLTHL          equ	3941	;# 
  2952   000F66                     ADLTHH          equ	3942	;# 
  2953   000F67                     ADUTH           equ	3943	;# 
  2954   000F67                     ADUTHL          equ	3943	;# 
  2955   000F68                     ADUTHH          equ	3944	;# 
  2956   000F69                     ADERR           equ	3945	;# 
  2957   000F69                     ADERRL          equ	3945	;# 
  2958   000F6A                     ADERRH          equ	3946	;# 
  2959   000F6B                     ADACC           equ	3947	;# 
  2960   000F6B                     ADACCL          equ	3947	;# 
  2961   000F6C                     ADACCH          equ	3948	;# 
  2962   000F6D                     ADFLTR          equ	3949	;# 
  2963   000F6D                     ADFLTRL         equ	3949	;# 
  2964   000F6E                     ADFLTRH         equ	3950	;# 
  2965   000F6F                     CRCDATA         equ	3951	;# 
  2966   000F6F                     CRCDATL         equ	3951	;# 
  2967   000F70                     CRCDATH         equ	3952	;# 
  2968   000F71                     CRCACC          equ	3953	;# 
  2969   000F71                     CRCACCL         equ	3953	;# 
  2970   000F72                     CRCACCH         equ	3954	;# 
  2971   000F73                     CRCSHFT         equ	3955	;# 
  2972   000F73                     CRCSHIFTL       equ	3955	;# 
  2973   000F74                     CRCSHIFTH       equ	3956	;# 
  2974   000F75                     CRCXOR          equ	3957	;# 
  2975   000F75                     CRCXORL         equ	3957	;# 
  2976   000F76                     CRCXORH         equ	3958	;# 
  2977   000F77                     CRCCON0         equ	3959	;# 
  2978   000F78                     CRCCON1         equ	3960	;# 
  2979   000F79                     NVMADR          equ	3961	;# 
  2980   000F79                     NVMADRL         equ	3961	;# 
  2981   000F7A                     NVMADRH         equ	3962	;# 
  2982   000F7B                     NVMADRU         equ	3963	;# 
  2983   000F7C                     NVMDAT          equ	3964	;# 
  2984   000F7C                     NVMDATL         equ	3964	;# 
  2985   000F7D                     NVMDATH         equ	3965	;# 
  2986   000F7F                     NVMCON0         equ	3967	;# 
  2987   000F80                     NVMCON1         equ	3968	;# 
  2988   000F81                     NVMCON2         equ	3969	;# 
  2989   000F82                     LATA            equ	3970	;# 
  2990   000F83                     LATB            equ	3971	;# 
  2991   000F84                     LATC            equ	3972	;# 
  2992   000F87                     TRISA           equ	3975	;# 
  2993   000F87                     DDRA            equ	3975	;# 
  2994   000F88                     TRISB           equ	3976	;# 
  2995   000F88                     DDRB            equ	3976	;# 
  2996   000F89                     TRISC           equ	3977	;# 
  2997   000F89                     DDRC            equ	3977	;# 
  2998   000F8C                     PORTA           equ	3980	;# 
  2999   000F8D                     PORTB           equ	3981	;# 
  3000   000F8E                     PORTC           equ	3982	;# 
  3001   000F90                     PORTE           equ	3984	;# 
  3002   000F91                     SSP1BUF         equ	3985	;# 
  3003   000F92                     SSP1ADD         equ	3986	;# 
  3004   000F93                     SSP1MSK         equ	3987	;# 
  3005   000F94                     SSP1STAT        equ	3988	;# 
  3006   000F95                     SSP1CON1        equ	3989	;# 
  3007   000F96                     SSP1CON2        equ	3990	;# 
  3008   000F97                     SSP1CON3        equ	3991	;# 
  3009   000F98                     RC1REG          equ	3992	;# 
  3010   000F98                     RCREG           equ	3992	;# 
  3011   000F98                     RCREG1          equ	3992	;# 
  3012   000F99                     TX1REG          equ	3993	;# 
  3013   000F99                     TXREG1          equ	3993	;# 
  3014   000F99                     TXREG           equ	3993	;# 
  3015   000F9A                     SP1BRG          equ	3994	;# 
  3016   000F9A                     SPBRG           equ	3994	;# 
  3017   000F9A                     SP1BRGL         equ	3994	;# 
  3018   000F9A                     SPBRG1          equ	3994	;# 
  3019   000F9A                     SPBRGL          equ	3994	;# 
  3020   000F9B                     SP1BRGH         equ	3995	;# 
  3021   000F9B                     SPBRGH          equ	3995	;# 
  3022   000F9B                     SPBRGH1         equ	3995	;# 
  3023   000F9C                     RC1STA          equ	3996	;# 
  3024   000F9C                     RCSTA1          equ	3996	;# 
  3025   000F9C                     RCSTA           equ	3996	;# 
  3026   000F9D                     TX1STA          equ	3997	;# 
  3027   000F9D                     TXSTA1          equ	3997	;# 
  3028   000F9D                     TXSTA           equ	3997	;# 
  3029   000F9E                     BAUD1CON        equ	3998	;# 
  3030   000F9E                     BAUDCON1        equ	3998	;# 
  3031   000F9E                     BAUDCTL1        equ	3998	;# 
  3032   000F9E                     BAUDCON         equ	3998	;# 
  3033   000F9E                     BAUDCTL         equ	3998	;# 
  3034   000F9F                     PWM4DC          equ	3999	;# 
  3035   000F9F                     PWM4DCL         equ	3999	;# 
  3036   000FA0                     PWM4DCH         equ	4000	;# 
  3037   000FA1                     PWM4CON         equ	4001	;# 
  3038   000FA2                     PWM3DC          equ	4002	;# 
  3039   000FA2                     PWM3DCL         equ	4002	;# 
  3040   000FA3                     PWM3DCH         equ	4003	;# 
  3041   000FA4                     PWM3CON         equ	4004	;# 
  3042   000FA5                     CCPR2           equ	4005	;# 
  3043   000FA5                     CCPR2L          equ	4005	;# 
  3044   000FA6                     CCPR2H          equ	4006	;# 
  3045   000FA7                     CCP2CON         equ	4007	;# 
  3046   000FA8                     CCP2CAP         equ	4008	;# 
  3047   000FA9                     CCPR1           equ	4009	;# 
  3048   000FA9                     CCPR1L          equ	4009	;# 
  3049   000FAA                     CCPR1H          equ	4010	;# 
  3050   000FAB                     CCP1CON         equ	4011	;# 
  3051   000FAC                     CCP1CAP         equ	4012	;# 
  3052   000FAD                     CCPTMRS         equ	4013	;# 
  3053   000FAE                     T6TMR           equ	4014	;# 
  3054   000FAE                     TMR6            equ	4014	;# 
  3055   000FAF                     T6PR            equ	4015	;# 
  3056   000FAF                     PR6             equ	4015	;# 
  3057   000FB0                     T6CON           equ	4016	;# 
  3058   000FB1                     T6HLT           equ	4017	;# 
  3059   000FB2                     T6CLKCON        equ	4018	;# 
  3060   000FB2                     T6CLK           equ	4018	;# 
  3061   000FB3                     T6RST           equ	4019	;# 
  3062   000FB4                     T4TMR           equ	4020	;# 
  3063   000FB4                     TMR4            equ	4020	;# 
  3064   000FB5                     T4PR            equ	4021	;# 
  3065   000FB5                     PR4             equ	4021	;# 
  3066   000FB6                     T4CON           equ	4022	;# 
  3067   000FB7                     T4HLT           equ	4023	;# 
  3068   000FB8                     T4CLKCON        equ	4024	;# 
  3069   000FB8                     T4CLK           equ	4024	;# 
  3070   000FB9                     T4RST           equ	4025	;# 
  3071   000FBA                     T2TMR           equ	4026	;# 
  3072   000FBA                     TMR2            equ	4026	;# 
  3073   000FBB                     T2PR            equ	4027	;# 
  3074   000FBB                     PR2             equ	4027	;# 
  3075   000FBC                     T2CON           equ	4028	;# 
  3076   000FBD                     T2HLT           equ	4029	;# 
  3077   000FBE                     T2CLKCON        equ	4030	;# 
  3078   000FBE                     T2CLK           equ	4030	;# 
  3079   000FBF                     T2RST           equ	4031	;# 
  3080   000FC0                     TMR5            equ	4032	;# 
  3081   000FC0                     TMR5L           equ	4032	;# 
  3082   000FC1                     TMR5H           equ	4033	;# 
  3083   000FC2                     T5CON           equ	4034	;# 
  3084   000FC2                     TMR5CON         equ	4034	;# 
  3085   000FC3                     T5GCON          equ	4035	;# 
  3086   000FC3                     TMR5GCON        equ	4035	;# 
  3087   000FC4                     T5GATE          equ	4036	;# 
  3088   000FC4                     TMR5GATE        equ	4036	;# 
  3089   000FC5                     T5CLK           equ	4037	;# 
  3090   000FC5                     TMR5CLK         equ	4037	;# 
  3091   000FC5                     PR5             equ	4037	;# 
  3092   000FC6                     TMR3            equ	4038	;# 
  3093   000FC6                     TMR3L           equ	4038	;# 
  3094   000FC7                     TMR3H           equ	4039	;# 
  3095   000FC8                     T3CON           equ	4040	;# 
  3096   000FC8                     TMR3CON         equ	4040	;# 
  3097   000FC9                     T3GCON          equ	4041	;# 
  3098   000FC9                     TMR3GCON        equ	4041	;# 
  3099   000FCA                     T3GATE          equ	4042	;# 
  3100   000FCA                     TMR3GATE        equ	4042	;# 
  3101   000FCB                     T3CLK           equ	4043	;# 
  3102   000FCB                     TMR3CLK         equ	4043	;# 
  3103   000FCB                     PR3             equ	4043	;# 
  3104   000FCC                     TMR1            equ	4044	;# 
  3105   000FCC                     TMR1L           equ	4044	;# 
  3106   000FCD                     TMR1H           equ	4045	;# 
  3107   000FCE                     T1CON           equ	4046	;# 
  3108   000FCE                     TMR1CON         equ	4046	;# 
  3109   000FCF                     T1GCON          equ	4047	;# 
  3110   000FCF                     TMR1GCON        equ	4047	;# 
  3111   000FD0                     T1GATE          equ	4048	;# 
  3112   000FD0                     TMR1GATE        equ	4048	;# 
  3113   000FD1                     T1CLK           equ	4049	;# 
  3114   000FD1                     TMR1CLK         equ	4049	;# 
  3115   000FD1                     PR1             equ	4049	;# 
  3116   000FD2                     TMR0L           equ	4050	;# 
  3117   000FD2                     TMR0            equ	4050	;# 
  3118   000FD3                     TMR0H           equ	4051	;# 
  3119   000FD3                     PR0             equ	4051	;# 
  3120   000FD4                     T0CON0          equ	4052	;# 
  3121   000FD5                     T0CON1          equ	4053	;# 
  3122   000FD6                     PCON1           equ	4054	;# 
  3123   000FD7                     PCON0           equ	4055	;# 
  3124   000FD8                     STATUS          equ	4056	;# 
  3125   000FD9                     FSR2            equ	4057	;# 
  3126   000FD9                     FSR2L           equ	4057	;# 
  3127   000FDA                     FSR2H           equ	4058	;# 
  3128   000FDB                     PLUSW2          equ	4059	;# 
  3129   000FDC                     PREINC2         equ	4060	;# 
  3130   000FDD                     POSTDEC2        equ	4061	;# 
  3131   000FDE                     POSTINC2        equ	4062	;# 
  3132   000FDF                     INDF2           equ	4063	;# 
  3133   000FE0                     BSR             equ	4064	;# 
  3134   000FE1                     FSR1            equ	4065	;# 
  3135   000FE1                     FSR1L           equ	4065	;# 
  3136   000FE2                     FSR1H           equ	4066	;# 
  3137   000FE3                     PLUSW1          equ	4067	;# 
  3138   000FE4                     PREINC1         equ	4068	;# 
  3139   000FE5                     POSTDEC1        equ	4069	;# 
  3140   000FE6                     POSTINC1        equ	4070	;# 
  3141   000FE7                     INDF1           equ	4071	;# 
  3142   000FE8                     WREG            equ	4072	;# 
  3143   000FE9                     FSR0            equ	4073	;# 
  3144   000FE9                     FSR0L           equ	4073	;# 
  3145   000FEA                     FSR0H           equ	4074	;# 
  3146   000FEB                     PLUSW0          equ	4075	;# 
  3147   000FEC                     PREINC0         equ	4076	;# 
  3148   000FED                     POSTDEC0        equ	4077	;# 
  3149   000FEE                     POSTINC0        equ	4078	;# 
  3150   000FEF                     INDF0           equ	4079	;# 
  3151   000FF2                     INTCON          equ	4082	;# 
  3152   000FF3                     PROD            equ	4083	;# 
  3153   000FF3                     PRODL           equ	4083	;# 
  3154   000FF4                     PRODH           equ	4084	;# 
  3155   000FF5                     TABLAT          equ	4085	;# 
  3156   000FF6                     TBLPTR          equ	4086	;# 
  3157   000FF6                     TBLPTRL         equ	4086	;# 
  3158   000FF7                     TBLPTRH         equ	4087	;# 
  3159   000FF8                     TBLPTRU         equ	4088	;# 
  3160   000FF9                     PCLAT           equ	4089	;# 
  3161   000FF9                     PC              equ	4089	;# 
  3162   000FF9                     PCL             equ	4089	;# 
  3163   000FFA                     PCLATH          equ	4090	;# 
  3164   000FFB                     PCLATU          equ	4091	;# 
  3165   000FFC                     STKPTR          equ	4092	;# 
  3166   000FFD                     TOS             equ	4093	;# 
  3167   000FFD                     TOSL            equ	4093	;# 
  3168   000FFE                     TOSH            equ	4094	;# 
  3169   000FFF                     TOSU            equ	4095	;# 
  3170   000E9B                     PPSLOCK         equ	3739	;# 
  3171   000E9C                     INT0PPS         equ	3740	;# 
  3172   000E9D                     INT1PPS         equ	3741	;# 
  3173   000E9E                     INT2PPS         equ	3742	;# 
  3174   000E9F                     T0CKIPPS        equ	3743	;# 
  3175   000EA0                     T1CKIPPS        equ	3744	;# 
  3176   000EA1                     T1GPPS          equ	3745	;# 
  3177   000EA2                     T3CKIPPS        equ	3746	;# 
  3178   000EA3                     T3GPPS          equ	3747	;# 
  3179   000EA4                     T5CKIPPS        equ	3748	;# 
  3180   000EA5                     T5GPPS          equ	3749	;# 
  3181   000EA6                     T2INPPS         equ	3750	;# 
  3182   000EA7                     T4INPPS         equ	3751	;# 
  3183   000EA8                     T6INPPS         equ	3752	;# 
  3184   000EA9                     ADACTPPS        equ	3753	;# 
  3185   000EAA                     CCP1PPS         equ	3754	;# 
  3186   000EAB                     CCP2PPS         equ	3755	;# 
  3187   000EAC                     CWG1PPS         equ	3756	;# 
  3188   000EAC                     CWGPPS          equ	3756	;# 
  3189   000EAC                     CWGINPPS        equ	3756	;# 
  3190   000EAC                     CWG1INPPS       equ	3756	;# 
  3191   000EAD                     MDCARLPPS       equ	3757	;# 
  3192   000EAE                     MDCARHPPS       equ	3758	;# 
  3193   000EAF                     MDSRCPPS        equ	3759	;# 
  3194   000EB0                     RX1PPS          equ	3760	;# 
  3195   000EB0                     RXPPS           equ	3760	;# 
  3196   000EB0                     RXDT1PPS        equ	3760	;# 
  3197   000EB1                     CK1PPS          equ	3761	;# 
  3198   000EB1                     TXPPS           equ	3761	;# 
  3199   000EB1                     CKPPS           equ	3761	;# 
  3200   000EB1                     TXCK1PPS        equ	3761	;# 
  3201   000EB1                     TX1PPS          equ	3761	;# 
  3202   000EB2                     SSP1CLKPPS      equ	3762	;# 
  3203   000EB2                     SSPCLKPPS       equ	3762	;# 
  3204   000EB3                     SSP1DATPPS      equ	3763	;# 
  3205   000EB3                     SSPDATPPS       equ	3763	;# 
  3206   000EB4                     SSP1SSPPS       equ	3764	;# 
  3207   000EB4                     SSPSSPPS        equ	3764	;# 
  3208   000EB5                     IPR0            equ	3765	;# 
  3209   000EB6                     IPR1            equ	3766	;# 
  3210   000EB7                     IPR2            equ	3767	;# 
  3211   000EB8                     IPR3            equ	3768	;# 
  3212   000EB9                     IPR4            equ	3769	;# 
  3213   000EBA                     IPR5            equ	3770	;# 
  3214   000EBB                     IPR6            equ	3771	;# 
  3215   000EBC                     IPR7            equ	3772	;# 
  3216   000EBD                     PIE0            equ	3773	;# 
  3217   000EBE                     PIE1            equ	3774	;# 
  3218   000EBF                     PIE2            equ	3775	;# 
  3219   000EC0                     PIE3            equ	3776	;# 
  3220   000EC1                     PIE4            equ	3777	;# 
  3221   000EC2                     PIE5            equ	3778	;# 
  3222   000EC3                     PIE6            equ	3779	;# 
  3223   000EC4                     PIE7            equ	3780	;# 
  3224   000EC5                     PIR0            equ	3781	;# 
  3225   000EC6                     PIR1            equ	3782	;# 
  3226   000EC7                     PIR2            equ	3783	;# 
  3227   000EC8                     PIR3            equ	3784	;# 
  3228   000EC9                     PIR4            equ	3785	;# 
  3229   000ECA                     PIR5            equ	3786	;# 
  3230   000ECB                     PIR6            equ	3787	;# 
  3231   000ECC                     PIR7            equ	3788	;# 
  3232   000ECD                     WDTCON0         equ	3789	;# 
  3233   000ECE                     WDTCON1         equ	3790	;# 
  3234   000ECF                     WDTPSL          equ	3791	;# 
  3235   000ED0                     WDTPSH          equ	3792	;# 
  3236   000ED1                     WDTTMR          equ	3793	;# 
  3237   000ED2                     CPUDOZE         equ	3794	;# 
  3238   000ED3                     OSCCON1         equ	3795	;# 
  3239   000ED4                     OSCCON2         equ	3796	;# 
  3240   000ED5                     OSCCON3         equ	3797	;# 
  3241   000ED6                     OSCSTAT         equ	3798	;# 
  3242   000ED6                     OSCSTAT1        equ	3798	;# 
  3243   000ED7                     OSCEN           equ	3799	;# 
  3244   000ED8                     OSCTUNE         equ	3800	;# 
  3245   000ED9                     OSCFRQ          equ	3801	;# 
  3246   000ED9                     OSCFREQ         equ	3801	;# 
  3247   000EDA                     VREGCON         equ	3802	;# 
  3248   000EDB                     BORCON          equ	3803	;# 
  3249   000EDC                     PMD0            equ	3804	;# 
  3250   000EDD                     PMD1            equ	3805	;# 
  3251   000EDE                     PMD2            equ	3806	;# 
  3252   000EDF                     PMD3            equ	3807	;# 
  3253   000EE0                     PMD4            equ	3808	;# 
  3254   000EE1                     PMD5            equ	3809	;# 
  3255   000EE2                     RA0PPS          equ	3810	;# 
  3256   000EE3                     RA1PPS          equ	3811	;# 
  3257   000EE4                     RA2PPS          equ	3812	;# 
  3258   000EE5                     RA3PPS          equ	3813	;# 
  3259   000EE6                     RA4PPS          equ	3814	;# 
  3260   000EE7                     RA5PPS          equ	3815	;# 
  3261   000EE8                     RA6PPS          equ	3816	;# 
  3262   000EE9                     RA7PPS          equ	3817	;# 
  3263   000EEA                     RB0PPS          equ	3818	;# 
  3264   000EEB                     RB1PPS          equ	3819	;# 
  3265   000EEC                     RB2PPS          equ	3820	;# 
  3266   000EED                     RB3PPS          equ	3821	;# 
  3267   000EEE                     RB4PPS          equ	3822	;# 
  3268   000EEF                     RB5PPS          equ	3823	;# 
  3269   000EF0                     RB6PPS          equ	3824	;# 
  3270   000EF1                     RB7PPS          equ	3825	;# 
  3271   000EF2                     RC0PPS          equ	3826	;# 
  3272   000EF3                     RC1PPS          equ	3827	;# 
  3273   000EF4                     RC2PPS          equ	3828	;# 
  3274   000EF5                     RC3PPS          equ	3829	;# 
  3275   000EF6                     RC4PPS          equ	3830	;# 
  3276   000EF7                     RC5PPS          equ	3831	;# 
  3277   000EF8                     RC6PPS          equ	3832	;# 
  3278   000EF9                     RC7PPS          equ	3833	;# 
  3279   000F05                     IOCAF           equ	3845	;# 
  3280   000F06                     IOCAN           equ	3846	;# 
  3281   000F07                     IOCAP           equ	3847	;# 
  3282   000F08                     INLVLA          equ	3848	;# 
  3283   000F09                     SLRCONA         equ	3849	;# 
  3284   000F0A                     ODCONA          equ	3850	;# 
  3285   000F0B                     WPUA            equ	3851	;# 
  3286   000F0C                     ANSELA          equ	3852	;# 
  3287   000F0D                     IOCBF           equ	3853	;# 
  3288   000F0E                     IOCBN           equ	3854	;# 
  3289   000F0F                     IOCBP           equ	3855	;# 
  3290   000F10                     INLVLB          equ	3856	;# 
  3291   000F11                     SLRCONB         equ	3857	;# 
  3292   000F12                     ODCONB          equ	3858	;# 
  3293   000F13                     WPUB            equ	3859	;# 
  3294   000F14                     ANSELB          equ	3860	;# 
  3295   000F15                     IOCCF           equ	3861	;# 
  3296   000F16                     IOCCN           equ	3862	;# 
  3297   000F17                     IOCCP           equ	3863	;# 
  3298   000F18                     INLVLC          equ	3864	;# 
  3299   000F19                     SLRCONC         equ	3865	;# 
  3300   000F1A                     ODCONC          equ	3866	;# 
  3301   000F1B                     WPUC            equ	3867	;# 
  3302   000F1C                     ANSELC          equ	3868	;# 
  3303   000F22                     IOCEF           equ	3874	;# 
  3304   000F23                     IOCEN           equ	3875	;# 
  3305   000F24                     IOCEP           equ	3876	;# 
  3306   000F25                     INLVLE          equ	3877	;# 
  3307   000F28                     WPUE            equ	3880	;# 
  3308   000F2A                     HLVDCON0        equ	3882	;# 
  3309   000F2B                     HLVDCON1        equ	3883	;# 
  3310   000F2C                     FVRCON          equ	3884	;# 
  3311   000F2D                     ZCDCON          equ	3885	;# 
  3312   000F2E                     DAC1CON0        equ	3886	;# 
  3313   000F2F                     DAC1CON1        equ	3887	;# 
  3314   000F30                     CM2CON0         equ	3888	;# 
  3315   000F31                     CM2CON1         equ	3889	;# 
  3316   000F32                     CM2NCH          equ	3890	;# 
  3317   000F33                     CM2PCH          equ	3891	;# 
  3318   000F34                     CM1CON0         equ	3892	;# 
  3319   000F35                     CM1CON1         equ	3893	;# 
  3320   000F36                     CM1NCH          equ	3894	;# 
  3321   000F37                     CM1PCH          equ	3895	;# 
  3322   000F38                     CMOUT           equ	3896	;# 
  3323   000F39                     CLKRCON         equ	3897	;# 
  3324   000F3A                     CLKRCLK         equ	3898	;# 
  3325   000F3B                     CWG1CLK         equ	3899	;# 
  3326   000F3B                     CWG1CLKCON      equ	3899	;# 
  3327   000F3C                     CWG1ISM         equ	3900	;# 
  3328   000F3D                     CWG1DBR         equ	3901	;# 
  3329   000F3E                     CWG1DBF         equ	3902	;# 
  3330   000F3F                     CWG1CON0        equ	3903	;# 
  3331   000F40                     CWG1CON1        equ	3904	;# 
  3332   000F41                     CWG1AS0         equ	3905	;# 
  3333   000F42                     CWG1AS1         equ	3906	;# 
  3334   000F43                     CWG1STR         equ	3907	;# 
  3335   000F44                     SCANLADR        equ	3908	;# 
  3336   000F44                     SCANLADRL       equ	3908	;# 
  3337   000F45                     SCANLADRH       equ	3909	;# 
  3338   000F46                     SCANLADRU       equ	3910	;# 
  3339   000F47                     SCANHADR        equ	3911	;# 
  3340   000F47                     SCANHADRL       equ	3911	;# 
  3341   000F48                     SCANHADRH       equ	3912	;# 
  3342   000F49                     SCANHADRU       equ	3913	;# 
  3343   000F4A                     SCANCON0        equ	3914	;# 
  3344   000F4B                     SCANTRIG        equ	3915	;# 
  3345   000F4C                     MDCON0          equ	3916	;# 
  3346   000F4D                     MDCON1          equ	3917	;# 
  3347   000F4E                     MDSRC           equ	3918	;# 
  3348   000F4F                     MDCARL          equ	3919	;# 
  3349   000F50                     MDCARH          equ	3920	;# 
  3350   000F51                     ADACT           equ	3921	;# 
  3351   000F52                     ADCLK           equ	3922	;# 
  3352   000F53                     ADREF           equ	3923	;# 
  3353   000F54                     ADCON1          equ	3924	;# 
  3354   000F55                     ADCON2          equ	3925	;# 
  3355   000F56                     ADCON3          equ	3926	;# 
  3356   000F57                     ADACQ           equ	3927	;# 
  3357   000F58                     ADCAP           equ	3928	;# 
  3358   000F59                     ADPRE           equ	3929	;# 
  3359   000F5A                     ADPCH           equ	3930	;# 
  3360   000F5B                     ADCON0          equ	3931	;# 
  3361   000F5C                     ADPREV          equ	3932	;# 
  3362   000F5C                     ADPREVL         equ	3932	;# 
  3363   000F5D                     ADPREVH         equ	3933	;# 
  3364   000F5E                     ADRES           equ	3934	;# 
  3365   000F5E                     ADRESL          equ	3934	;# 
  3366   000F5F                     ADRESH          equ	3935	;# 
  3367   000F60                     ADSTAT          equ	3936	;# 
  3368   000F61                     ADRPT           equ	3937	;# 
  3369   000F62                     ADCNT           equ	3938	;# 
  3370   000F63                     ADSTPT          equ	3939	;# 
  3371   000F63                     ADSTPTL         equ	3939	;# 
  3372   000F64                     ADSTPTH         equ	3940	;# 
  3373   000F65                     ADLTH           equ	3941	;# 
  3374   000F65                     ADLTHL          equ	3941	;# 
  3375   000F66                     ADLTHH          equ	3942	;# 
  3376   000F67                     ADUTH           equ	3943	;# 
  3377   000F67                     ADUTHL          equ	3943	;# 
  3378   000F68                     ADUTHH          equ	3944	;# 
  3379   000F69                     ADERR           equ	3945	;# 
  3380   000F69                     ADERRL          equ	3945	;# 
  3381   000F6A                     ADERRH          equ	3946	;# 
  3382   000F6B                     ADACC           equ	3947	;# 
  3383   000F6B                     ADACCL          equ	3947	;# 
  3384   000F6C                     ADACCH          equ	3948	;# 
  3385   000F6D                     ADFLTR          equ	3949	;# 
  3386   000F6D                     ADFLTRL         equ	3949	;# 
  3387   000F6E                     ADFLTRH         equ	3950	;# 
  3388   000F6F                     CRCDATA         equ	3951	;# 
  3389   000F6F                     CRCDATL         equ	3951	;# 
  3390   000F70                     CRCDATH         equ	3952	;# 
  3391   000F71                     CRCACC          equ	3953	;# 
  3392   000F71                     CRCACCL         equ	3953	;# 
  3393   000F72                     CRCACCH         equ	3954	;# 
  3394   000F73                     CRCSHFT         equ	3955	;# 
  3395   000F73                     CRCSHIFTL       equ	3955	;# 
  3396   000F74                     CRCSHIFTH       equ	3956	;# 
  3397   000F75                     CRCXOR          equ	3957	;# 
  3398   000F75                     CRCXORL         equ	3957	;# 
  3399   000F76                     CRCXORH         equ	3958	;# 
  3400   000F77                     CRCCON0         equ	3959	;# 
  3401   000F78                     CRCCON1         equ	3960	;# 
  3402   000F79                     NVMADR          equ	3961	;# 
  3403   000F79                     NVMADRL         equ	3961	;# 
  3404   000F7A                     NVMADRH         equ	3962	;# 
  3405   000F7B                     NVMADRU         equ	3963	;# 
  3406   000F7C                     NVMDAT          equ	3964	;# 
  3407   000F7C                     NVMDATL         equ	3964	;# 
  3408   000F7D                     NVMDATH         equ	3965	;# 
  3409   000F7F                     NVMCON0         equ	3967	;# 
  3410   000F80                     NVMCON1         equ	3968	;# 
  3411   000F81                     NVMCON2         equ	3969	;# 
  3412   000F82                     LATA            equ	3970	;# 
  3413   000F83                     LATB            equ	3971	;# 
  3414   000F84                     LATC            equ	3972	;# 
  3415   000F87                     TRISA           equ	3975	;# 
  3416   000F87                     DDRA            equ	3975	;# 
  3417   000F88                     TRISB           equ	3976	;# 
  3418   000F88                     DDRB            equ	3976	;# 
  3419   000F89                     TRISC           equ	3977	;# 
  3420   000F89                     DDRC            equ	3977	;# 
  3421   000F8C                     PORTA           equ	3980	;# 
  3422   000F8D                     PORTB           equ	3981	;# 
  3423   000F8E                     PORTC           equ	3982	;# 
  3424   000F90                     PORTE           equ	3984	;# 
  3425   000F91                     SSP1BUF         equ	3985	;# 
  3426   000F92                     SSP1ADD         equ	3986	;# 
  3427   000F93                     SSP1MSK         equ	3987	;# 
  3428   000F94                     SSP1STAT        equ	3988	;# 
  3429   000F95                     SSP1CON1        equ	3989	;# 
  3430   000F96                     SSP1CON2        equ	3990	;# 
  3431   000F97                     SSP1CON3        equ	3991	;# 
  3432   000F98                     RC1REG          equ	3992	;# 
  3433   000F98                     RCREG           equ	3992	;# 
  3434   000F98                     RCREG1          equ	3992	;# 
  3435   000F99                     TX1REG          equ	3993	;# 
  3436   000F99                     TXREG1          equ	3993	;# 
  3437   000F99                     TXREG           equ	3993	;# 
  3438   000F9A                     SP1BRG          equ	3994	;# 
  3439   000F9A                     SPBRG           equ	3994	;# 
  3440   000F9A                     SP1BRGL         equ	3994	;# 
  3441   000F9A                     SPBRG1          equ	3994	;# 
  3442   000F9A                     SPBRGL          equ	3994	;# 
  3443   000F9B                     SP1BRGH         equ	3995	;# 
  3444   000F9B                     SPBRGH          equ	3995	;# 
  3445   000F9B                     SPBRGH1         equ	3995	;# 
  3446   000F9C                     RC1STA          equ	3996	;# 
  3447   000F9C                     RCSTA1          equ	3996	;# 
  3448   000F9C                     RCSTA           equ	3996	;# 
  3449   000F9D                     TX1STA          equ	3997	;# 
  3450   000F9D                     TXSTA1          equ	3997	;# 
  3451   000F9D                     TXSTA           equ	3997	;# 
  3452   000F9E                     BAUD1CON        equ	3998	;# 
  3453   000F9E                     BAUDCON1        equ	3998	;# 
  3454   000F9E                     BAUDCTL1        equ	3998	;# 
  3455   000F9E                     BAUDCON         equ	3998	;# 
  3456   000F9E                     BAUDCTL         equ	3998	;# 
  3457   000F9F                     PWM4DC          equ	3999	;# 
  3458   000F9F                     PWM4DCL         equ	3999	;# 
  3459   000FA0                     PWM4DCH         equ	4000	;# 
  3460   000FA1                     PWM4CON         equ	4001	;# 
  3461   000FA2                     PWM3DC          equ	4002	;# 
  3462   000FA2                     PWM3DCL         equ	4002	;# 
  3463   000FA3                     PWM3DCH         equ	4003	;# 
  3464   000FA4                     PWM3CON         equ	4004	;# 
  3465   000FA5                     CCPR2           equ	4005	;# 
  3466   000FA5                     CCPR2L          equ	4005	;# 
  3467   000FA6                     CCPR2H          equ	4006	;# 
  3468   000FA7                     CCP2CON         equ	4007	;# 
  3469   000FA8                     CCP2CAP         equ	4008	;# 
  3470   000FA9                     CCPR1           equ	4009	;# 
  3471   000FA9                     CCPR1L          equ	4009	;# 
  3472   000FAA                     CCPR1H          equ	4010	;# 
  3473   000FAB                     CCP1CON         equ	4011	;# 
  3474   000FAC                     CCP1CAP         equ	4012	;# 
  3475   000FAD                     CCPTMRS         equ	4013	;# 
  3476   000FAE                     T6TMR           equ	4014	;# 
  3477   000FAE                     TMR6            equ	4014	;# 
  3478   000FAF                     T6PR            equ	4015	;# 
  3479   000FAF                     PR6             equ	4015	;# 
  3480   000FB0                     T6CON           equ	4016	;# 
  3481   000FB1                     T6HLT           equ	4017	;# 
  3482   000FB2                     T6CLKCON        equ	4018	;# 
  3483   000FB2                     T6CLK           equ	4018	;# 
  3484   000FB3                     T6RST           equ	4019	;# 
  3485   000FB4                     T4TMR           equ	4020	;# 
  3486   000FB4                     TMR4            equ	4020	;# 
  3487   000FB5                     T4PR            equ	4021	;# 
  3488   000FB5                     PR4             equ	4021	;# 
  3489   000FB6                     T4CON           equ	4022	;# 
  3490   000FB7                     T4HLT           equ	4023	;# 
  3491   000FB8                     T4CLKCON        equ	4024	;# 
  3492   000FB8                     T4CLK           equ	4024	;# 
  3493   000FB9                     T4RST           equ	4025	;# 
  3494   000FBA                     T2TMR           equ	4026	;# 
  3495   000FBA                     TMR2            equ	4026	;# 
  3496   000FBB                     T2PR            equ	4027	;# 
  3497   000FBB                     PR2             equ	4027	;# 
  3498   000FBC                     T2CON           equ	4028	;# 
  3499   000FBD                     T2HLT           equ	4029	;# 
  3500   000FBE                     T2CLKCON        equ	4030	;# 
  3501   000FBE                     T2CLK           equ	4030	;# 
  3502   000FBF                     T2RST           equ	4031	;# 
  3503   000FC0                     TMR5            equ	4032	;# 
  3504   000FC0                     TMR5L           equ	4032	;# 
  3505   000FC1                     TMR5H           equ	4033	;# 
  3506   000FC2                     T5CON           equ	4034	;# 
  3507   000FC2                     TMR5CON         equ	4034	;# 
  3508   000FC3                     T5GCON          equ	4035	;# 
  3509   000FC3                     TMR5GCON        equ	4035	;# 
  3510   000FC4                     T5GATE          equ	4036	;# 
  3511   000FC4                     TMR5GATE        equ	4036	;# 
  3512   000FC5                     T5CLK           equ	4037	;# 
  3513   000FC5                     TMR5CLK         equ	4037	;# 
  3514   000FC5                     PR5             equ	4037	;# 
  3515   000FC6                     TMR3            equ	4038	;# 
  3516   000FC6                     TMR3L           equ	4038	;# 
  3517   000FC7                     TMR3H           equ	4039	;# 
  3518   000FC8                     T3CON           equ	4040	;# 
  3519   000FC8                     TMR3CON         equ	4040	;# 
  3520   000FC9                     T3GCON          equ	4041	;# 
  3521   000FC9                     TMR3GCON        equ	4041	;# 
  3522   000FCA                     T3GATE          equ	4042	;# 
  3523   000FCA                     TMR3GATE        equ	4042	;# 
  3524   000FCB                     T3CLK           equ	4043	;# 
  3525   000FCB                     TMR3CLK         equ	4043	;# 
  3526   000FCB                     PR3             equ	4043	;# 
  3527   000FCC                     TMR1            equ	4044	;# 
  3528   000FCC                     TMR1L           equ	4044	;# 
  3529   000FCD                     TMR1H           equ	4045	;# 
  3530   000FCE                     T1CON           equ	4046	;# 
  3531   000FCE                     TMR1CON         equ	4046	;# 
  3532   000FCF                     T1GCON          equ	4047	;# 
  3533   000FCF                     TMR1GCON        equ	4047	;# 
  3534   000FD0                     T1GATE          equ	4048	;# 
  3535   000FD0                     TMR1GATE        equ	4048	;# 
  3536   000FD1                     T1CLK           equ	4049	;# 
  3537   000FD1                     TMR1CLK         equ	4049	;# 
  3538   000FD1                     PR1             equ	4049	;# 
  3539   000FD2                     TMR0L           equ	4050	;# 
  3540   000FD2                     TMR0            equ	4050	;# 
  3541   000FD3                     TMR0H           equ	4051	;# 
  3542   000FD3                     PR0             equ	4051	;# 
  3543   000FD4                     T0CON0          equ	4052	;# 
  3544   000FD5                     T0CON1          equ	4053	;# 
  3545   000FD6                     PCON1           equ	4054	;# 
  3546   000FD7                     PCON0           equ	4055	;# 
  3547   000FD8                     STATUS          equ	4056	;# 
  3548   000FD9                     FSR2            equ	4057	;# 
  3549   000FD9                     FSR2L           equ	4057	;# 
  3550   000FDA                     FSR2H           equ	4058	;# 
  3551   000FDB                     PLUSW2          equ	4059	;# 
  3552   000FDC                     PREINC2         equ	4060	;# 
  3553   000FDD                     POSTDEC2        equ	4061	;# 
  3554   000FDE                     POSTINC2        equ	4062	;# 
  3555   000FDF                     INDF2           equ	4063	;# 
  3556   000FE0                     BSR             equ	4064	;# 
  3557   000FE1                     FSR1            equ	4065	;# 
  3558   000FE1                     FSR1L           equ	4065	;# 
  3559   000FE2                     FSR1H           equ	4066	;# 
  3560   000FE3                     PLUSW1          equ	4067	;# 
  3561   000FE4                     PREINC1         equ	4068	;# 
  3562   000FE5                     POSTDEC1        equ	4069	;# 
  3563   000FE6                     POSTINC1        equ	4070	;# 
  3564   000FE7                     INDF1           equ	4071	;# 
  3565   000FE8                     WREG            equ	4072	;# 
  3566   000FE9                     FSR0            equ	4073	;# 
  3567   000FE9                     FSR0L           equ	4073	;# 
  3568   000FEA                     FSR0H           equ	4074	;# 
  3569   000FEB                     PLUSW0          equ	4075	;# 
  3570   000FEC                     PREINC0         equ	4076	;# 
  3571   000FED                     POSTDEC0        equ	4077	;# 
  3572   000FEE                     POSTINC0        equ	4078	;# 
  3573   000FEF                     INDF0           equ	4079	;# 
  3574   000FF2                     INTCON          equ	4082	;# 
  3575   000FF3                     PROD            equ	4083	;# 
  3576   000FF3                     PRODL           equ	4083	;# 
  3577   000FF4                     PRODH           equ	4084	;# 
  3578   000FF5                     TABLAT          equ	4085	;# 
  3579   000FF6                     TBLPTR          equ	4086	;# 
  3580   000FF6                     TBLPTRL         equ	4086	;# 
  3581   000FF7                     TBLPTRH         equ	4087	;# 
  3582   000FF8                     TBLPTRU         equ	4088	;# 
  3583   000FF9                     PCLAT           equ	4089	;# 
  3584   000FF9                     PC              equ	4089	;# 
  3585   000FF9                     PCL             equ	4089	;# 
  3586   000FFA                     PCLATH          equ	4090	;# 
  3587   000FFB                     PCLATU          equ	4091	;# 
  3588   000FFC                     STKPTR          equ	4092	;# 
  3589   000FFD                     TOS             equ	4093	;# 
  3590   000FFD                     TOSL            equ	4093	;# 
  3591   000FFE                     TOSH            equ	4094	;# 
  3592   000FFF                     TOSU            equ	4095	;# 
  3593   000E9B                     PPSLOCK         equ	3739	;# 
  3594   000E9C                     INT0PPS         equ	3740	;# 
  3595   000E9D                     INT1PPS         equ	3741	;# 
  3596   000E9E                     INT2PPS         equ	3742	;# 
  3597   000E9F                     T0CKIPPS        equ	3743	;# 
  3598   000EA0                     T1CKIPPS        equ	3744	;# 
  3599   000EA1                     T1GPPS          equ	3745	;# 
  3600   000EA2                     T3CKIPPS        equ	3746	;# 
  3601   000EA3                     T3GPPS          equ	3747	;# 
  3602   000EA4                     T5CKIPPS        equ	3748	;# 
  3603   000EA5                     T5GPPS          equ	3749	;# 
  3604   000EA6                     T2INPPS         equ	3750	;# 
  3605   000EA7                     T4INPPS         equ	3751	;# 
  3606   000EA8                     T6INPPS         equ	3752	;# 
  3607   000EA9                     ADACTPPS        equ	3753	;# 
  3608   000EAA                     CCP1PPS         equ	3754	;# 
  3609   000EAB                     CCP2PPS         equ	3755	;# 
  3610   000EAC                     CWG1PPS         equ	3756	;# 
  3611   000EAC                     CWGPPS          equ	3756	;# 
  3612   000EAC                     CWGINPPS        equ	3756	;# 
  3613   000EAC                     CWG1INPPS       equ	3756	;# 
  3614   000EAD                     MDCARLPPS       equ	3757	;# 
  3615   000EAE                     MDCARHPPS       equ	3758	;# 
  3616   000EAF                     MDSRCPPS        equ	3759	;# 
  3617   000EB0                     RX1PPS          equ	3760	;# 
  3618   000EB0                     RXPPS           equ	3760	;# 
  3619   000EB0                     RXDT1PPS        equ	3760	;# 
  3620   000EB1                     CK1PPS          equ	3761	;# 
  3621   000EB1                     TXPPS           equ	3761	;# 
  3622   000EB1                     CKPPS           equ	3761	;# 
  3623   000EB1                     TXCK1PPS        equ	3761	;# 
  3624   000EB1                     TX1PPS          equ	3761	;# 
  3625   000EB2                     SSP1CLKPPS      equ	3762	;# 
  3626   000EB2                     SSPCLKPPS       equ	3762	;# 
  3627   000EB3                     SSP1DATPPS      equ	3763	;# 
  3628   000EB3                     SSPDATPPS       equ	3763	;# 
  3629   000EB4                     SSP1SSPPS       equ	3764	;# 
  3630   000EB4                     SSPSSPPS        equ	3764	;# 
  3631   000EB5                     IPR0            equ	3765	;# 
  3632   000EB6                     IPR1            equ	3766	;# 
  3633   000EB7                     IPR2            equ	3767	;# 
  3634   000EB8                     IPR3            equ	3768	;# 
  3635   000EB9                     IPR4            equ	3769	;# 
  3636   000EBA                     IPR5            equ	3770	;# 
  3637   000EBB                     IPR6            equ	3771	;# 
  3638   000EBC                     IPR7            equ	3772	;# 
  3639   000EBD                     PIE0            equ	3773	;# 
  3640   000EBE                     PIE1            equ	3774	;# 
  3641   000EBF                     PIE2            equ	3775	;# 
  3642   000EC0                     PIE3            equ	3776	;# 
  3643   000EC1                     PIE4            equ	3777	;# 
  3644   000EC2                     PIE5            equ	3778	;# 
  3645   000EC3                     PIE6            equ	3779	;# 
  3646   000EC4                     PIE7            equ	3780	;# 
  3647   000EC5                     PIR0            equ	3781	;# 
  3648   000EC6                     PIR1            equ	3782	;# 
  3649   000EC7                     PIR2            equ	3783	;# 
  3650   000EC8                     PIR3            equ	3784	;# 
  3651   000EC9                     PIR4            equ	3785	;# 
  3652   000ECA                     PIR5            equ	3786	;# 
  3653   000ECB                     PIR6            equ	3787	;# 
  3654   000ECC                     PIR7            equ	3788	;# 
  3655   000ECD                     WDTCON0         equ	3789	;# 
  3656   000ECE                     WDTCON1         equ	3790	;# 
  3657   000ECF                     WDTPSL          equ	3791	;# 
  3658   000ED0                     WDTPSH          equ	3792	;# 
  3659   000ED1                     WDTTMR          equ	3793	;# 
  3660   000ED2                     CPUDOZE         equ	3794	;# 
  3661   000ED3                     OSCCON1         equ	3795	;# 
  3662   000ED4                     OSCCON2         equ	3796	;# 
  3663   000ED5                     OSCCON3         equ	3797	;# 
  3664   000ED6                     OSCSTAT         equ	3798	;# 
  3665   000ED6                     OSCSTAT1        equ	3798	;# 
  3666   000ED7                     OSCEN           equ	3799	;# 
  3667   000ED8                     OSCTUNE         equ	3800	;# 
  3668   000ED9                     OSCFRQ          equ	3801	;# 
  3669   000ED9                     OSCFREQ         equ	3801	;# 
  3670   000EDA                     VREGCON         equ	3802	;# 
  3671   000EDB                     BORCON          equ	3803	;# 
  3672   000EDC                     PMD0            equ	3804	;# 
  3673   000EDD                     PMD1            equ	3805	;# 
  3674   000EDE                     PMD2            equ	3806	;# 
  3675   000EDF                     PMD3            equ	3807	;# 
  3676   000EE0                     PMD4            equ	3808	;# 
  3677   000EE1                     PMD5            equ	3809	;# 
  3678   000EE2                     RA0PPS          equ	3810	;# 
  3679   000EE3                     RA1PPS          equ	3811	;# 
  3680   000EE4                     RA2PPS          equ	3812	;# 
  3681   000EE5                     RA3PPS          equ	3813	;# 
  3682   000EE6                     RA4PPS          equ	3814	;# 
  3683   000EE7                     RA5PPS          equ	3815	;# 
  3684   000EE8                     RA6PPS          equ	3816	;# 
  3685   000EE9                     RA7PPS          equ	3817	;# 
  3686   000EEA                     RB0PPS          equ	3818	;# 
  3687   000EEB                     RB1PPS          equ	3819	;# 
  3688   000EEC                     RB2PPS          equ	3820	;# 
  3689   000EED                     RB3PPS          equ	3821	;# 
  3690   000EEE                     RB4PPS          equ	3822	;# 
  3691   000EEF                     RB5PPS          equ	3823	;# 
  3692   000EF0                     RB6PPS          equ	3824	;# 
  3693   000EF1                     RB7PPS          equ	3825	;# 
  3694   000EF2                     RC0PPS          equ	3826	;# 
  3695   000EF3                     RC1PPS          equ	3827	;# 
  3696   000EF4                     RC2PPS          equ	3828	;# 
  3697   000EF5                     RC3PPS          equ	3829	;# 
  3698   000EF6                     RC4PPS          equ	3830	;# 
  3699   000EF7                     RC5PPS          equ	3831	;# 
  3700   000EF8                     RC6PPS          equ	3832	;# 
  3701   000EF9                     RC7PPS          equ	3833	;# 
  3702   000F05                     IOCAF           equ	3845	;# 
  3703   000F06                     IOCAN           equ	3846	;# 
  3704   000F07                     IOCAP           equ	3847	;# 
  3705   000F08                     INLVLA          equ	3848	;# 
  3706   000F09                     SLRCONA         equ	3849	;# 
  3707   000F0A                     ODCONA          equ	3850	;# 
  3708   000F0B                     WPUA            equ	3851	;# 
  3709   000F0C                     ANSELA          equ	3852	;# 
  3710   000F0D                     IOCBF           equ	3853	;# 
  3711   000F0E                     IOCBN           equ	3854	;# 
  3712   000F0F                     IOCBP           equ	3855	;# 
  3713   000F10                     INLVLB          equ	3856	;# 
  3714   000F11                     SLRCONB         equ	3857	;# 
  3715   000F12                     ODCONB          equ	3858	;# 
  3716   000F13                     WPUB            equ	3859	;# 
  3717   000F14                     ANSELB          equ	3860	;# 
  3718   000F15                     IOCCF           equ	3861	;# 
  3719   000F16                     IOCCN           equ	3862	;# 
  3720   000F17                     IOCCP           equ	3863	;# 
  3721   000F18                     INLVLC          equ	3864	;# 
  3722   000F19                     SLRCONC         equ	3865	;# 
  3723   000F1A                     ODCONC          equ	3866	;# 
  3724   000F1B                     WPUC            equ	3867	;# 
  3725   000F1C                     ANSELC          equ	3868	;# 
  3726   000F22                     IOCEF           equ	3874	;# 
  3727   000F23                     IOCEN           equ	3875	;# 
  3728   000F24                     IOCEP           equ	3876	;# 
  3729   000F25                     INLVLE          equ	3877	;# 
  3730   000F28                     WPUE            equ	3880	;# 
  3731   000F2A                     HLVDCON0        equ	3882	;# 
  3732   000F2B                     HLVDCON1        equ	3883	;# 
  3733   000F2C                     FVRCON          equ	3884	;# 
  3734   000F2D                     ZCDCON          equ	3885	;# 
  3735   000F2E                     DAC1CON0        equ	3886	;# 
  3736   000F2F                     DAC1CON1        equ	3887	;# 
  3737   000F30                     CM2CON0         equ	3888	;# 
  3738   000F31                     CM2CON1         equ	3889	;# 
  3739   000F32                     CM2NCH          equ	3890	;# 
  3740   000F33                     CM2PCH          equ	3891	;# 
  3741   000F34                     CM1CON0         equ	3892	;# 
  3742   000F35                     CM1CON1         equ	3893	;# 
  3743   000F36                     CM1NCH          equ	3894	;# 
  3744   000F37                     CM1PCH          equ	3895	;# 
  3745   000F38                     CMOUT           equ	3896	;# 
  3746   000F39                     CLKRCON         equ	3897	;# 
  3747   000F3A                     CLKRCLK         equ	3898	;# 
  3748   000F3B                     CWG1CLK         equ	3899	;# 
  3749   000F3B                     CWG1CLKCON      equ	3899	;# 
  3750   000F3C                     CWG1ISM         equ	3900	;# 
  3751   000F3D                     CWG1DBR         equ	3901	;# 
  3752   000F3E                     CWG1DBF         equ	3902	;# 
  3753   000F3F                     CWG1CON0        equ	3903	;# 
  3754   000F40                     CWG1CON1        equ	3904	;# 
  3755   000F41                     CWG1AS0         equ	3905	;# 
  3756   000F42                     CWG1AS1         equ	3906	;# 
  3757   000F43                     CWG1STR         equ	3907	;# 
  3758   000F44                     SCANLADR        equ	3908	;# 
  3759   000F44                     SCANLADRL       equ	3908	;# 
  3760   000F45                     SCANLADRH       equ	3909	;# 
  3761   000F46                     SCANLADRU       equ	3910	;# 
  3762   000F47                     SCANHADR        equ	3911	;# 
  3763   000F47                     SCANHADRL       equ	3911	;# 
  3764   000F48                     SCANHADRH       equ	3912	;# 
  3765   000F49                     SCANHADRU       equ	3913	;# 
  3766   000F4A                     SCANCON0        equ	3914	;# 
  3767   000F4B                     SCANTRIG        equ	3915	;# 
  3768   000F4C                     MDCON0          equ	3916	;# 
  3769   000F4D                     MDCON1          equ	3917	;# 
  3770   000F4E                     MDSRC           equ	3918	;# 
  3771   000F4F                     MDCARL          equ	3919	;# 
  3772   000F50                     MDCARH          equ	3920	;# 
  3773   000F51                     ADACT           equ	3921	;# 
  3774   000F52                     ADCLK           equ	3922	;# 
  3775   000F53                     ADREF           equ	3923	;# 
  3776   000F54                     ADCON1          equ	3924	;# 
  3777   000F55                     ADCON2          equ	3925	;# 
  3778   000F56                     ADCON3          equ	3926	;# 
  3779   000F57                     ADACQ           equ	3927	;# 
  3780   000F58                     ADCAP           equ	3928	;# 
  3781   000F59                     ADPRE           equ	3929	;# 
  3782   000F5A                     ADPCH           equ	3930	;# 
  3783   000F5B                     ADCON0          equ	3931	;# 
  3784   000F5C                     ADPREV          equ	3932	;# 
  3785   000F5C                     ADPREVL         equ	3932	;# 
  3786   000F5D                     ADPREVH         equ	3933	;# 
  3787   000F5E                     ADRES           equ	3934	;# 
  3788   000F5E                     ADRESL          equ	3934	;# 
  3789   000F5F                     ADRESH          equ	3935	;# 
  3790   000F60                     ADSTAT          equ	3936	;# 
  3791   000F61                     ADRPT           equ	3937	;# 
  3792   000F62                     ADCNT           equ	3938	;# 
  3793   000F63                     ADSTPT          equ	3939	;# 
  3794   000F63                     ADSTPTL         equ	3939	;# 
  3795   000F64                     ADSTPTH         equ	3940	;# 
  3796   000F65                     ADLTH           equ	3941	;# 
  3797   000F65                     ADLTHL          equ	3941	;# 
  3798   000F66                     ADLTHH          equ	3942	;# 
  3799   000F67                     ADUTH           equ	3943	;# 
  3800   000F67                     ADUTHL          equ	3943	;# 
  3801   000F68                     ADUTHH          equ	3944	;# 
  3802   000F69                     ADERR           equ	3945	;# 
  3803   000F69                     ADERRL          equ	3945	;# 
  3804   000F6A                     ADERRH          equ	3946	;# 
  3805   000F6B                     ADACC           equ	3947	;# 
  3806   000F6B                     ADACCL          equ	3947	;# 
  3807   000F6C                     ADACCH          equ	3948	;# 
  3808   000F6D                     ADFLTR          equ	3949	;# 
  3809   000F6D                     ADFLTRL         equ	3949	;# 
  3810   000F6E                     ADFLTRH         equ	3950	;# 
  3811   000F6F                     CRCDATA         equ	3951	;# 
  3812   000F6F                     CRCDATL         equ	3951	;# 
  3813   000F70                     CRCDATH         equ	3952	;# 
  3814   000F71                     CRCACC          equ	3953	;# 
  3815   000F71                     CRCACCL         equ	3953	;# 
  3816   000F72                     CRCACCH         equ	3954	;# 
  3817   000F73                     CRCSHFT         equ	3955	;# 
  3818   000F73                     CRCSHIFTL       equ	3955	;# 
  3819   000F74                     CRCSHIFTH       equ	3956	;# 
  3820   000F75                     CRCXOR          equ	3957	;# 
  3821   000F75                     CRCXORL         equ	3957	;# 
  3822   000F76                     CRCXORH         equ	3958	;# 
  3823   000F77                     CRCCON0         equ	3959	;# 
  3824   000F78                     CRCCON1         equ	3960	;# 
  3825   000F79                     NVMADR          equ	3961	;# 
  3826   000F79                     NVMADRL         equ	3961	;# 
  3827   000F7A                     NVMADRH         equ	3962	;# 
  3828   000F7B                     NVMADRU         equ	3963	;# 
  3829   000F7C                     NVMDAT          equ	3964	;# 
  3830   000F7C                     NVMDATL         equ	3964	;# 
  3831   000F7D                     NVMDATH         equ	3965	;# 
  3832   000F7F                     NVMCON0         equ	3967	;# 
  3833   000F80                     NVMCON1         equ	3968	;# 
  3834   000F81                     NVMCON2         equ	3969	;# 
  3835   000F82                     LATA            equ	3970	;# 
  3836   000F83                     LATB            equ	3971	;# 
  3837   000F84                     LATC            equ	3972	;# 
  3838   000F87                     TRISA           equ	3975	;# 
  3839   000F87                     DDRA            equ	3975	;# 
  3840   000F88                     TRISB           equ	3976	;# 
  3841   000F88                     DDRB            equ	3976	;# 
  3842   000F89                     TRISC           equ	3977	;# 
  3843   000F89                     DDRC            equ	3977	;# 
  3844   000F8C                     PORTA           equ	3980	;# 
  3845   000F8D                     PORTB           equ	3981	;# 
  3846   000F8E                     PORTC           equ	3982	;# 
  3847   000F90                     PORTE           equ	3984	;# 
  3848   000F91                     SSP1BUF         equ	3985	;# 
  3849   000F92                     SSP1ADD         equ	3986	;# 
  3850   000F93                     SSP1MSK         equ	3987	;# 
  3851   000F94                     SSP1STAT        equ	3988	;# 
  3852   000F95                     SSP1CON1        equ	3989	;# 
  3853   000F96                     SSP1CON2        equ	3990	;# 
  3854   000F97                     SSP1CON3        equ	3991	;# 
  3855   000F98                     RC1REG          equ	3992	;# 
  3856   000F98                     RCREG           equ	3992	;# 
  3857   000F98                     RCREG1          equ	3992	;# 
  3858   000F99                     TX1REG          equ	3993	;# 
  3859   000F99                     TXREG1          equ	3993	;# 
  3860   000F99                     TXREG           equ	3993	;# 
  3861   000F9A                     SP1BRG          equ	3994	;# 
  3862   000F9A                     SPBRG           equ	3994	;# 
  3863   000F9A                     SP1BRGL         equ	3994	;# 
  3864   000F9A                     SPBRG1          equ	3994	;# 
  3865   000F9A                     SPBRGL          equ	3994	;# 
  3866   000F9B                     SP1BRGH         equ	3995	;# 
  3867   000F9B                     SPBRGH          equ	3995	;# 
  3868   000F9B                     SPBRGH1         equ	3995	;# 
  3869   000F9C                     RC1STA          equ	3996	;# 
  3870   000F9C                     RCSTA1          equ	3996	;# 
  3871   000F9C                     RCSTA           equ	3996	;# 
  3872   000F9D                     TX1STA          equ	3997	;# 
  3873   000F9D                     TXSTA1          equ	3997	;# 
  3874   000F9D                     TXSTA           equ	3997	;# 
  3875   000F9E                     BAUD1CON        equ	3998	;# 
  3876   000F9E                     BAUDCON1        equ	3998	;# 
  3877   000F9E                     BAUDCTL1        equ	3998	;# 
  3878   000F9E                     BAUDCON         equ	3998	;# 
  3879   000F9E                     BAUDCTL         equ	3998	;# 
  3880   000F9F                     PWM4DC          equ	3999	;# 
  3881   000F9F                     PWM4DCL         equ	3999	;# 
  3882   000FA0                     PWM4DCH         equ	4000	;# 
  3883   000FA1                     PWM4CON         equ	4001	;# 
  3884   000FA2                     PWM3DC          equ	4002	;# 
  3885   000FA2                     PWM3DCL         equ	4002	;# 
  3886   000FA3                     PWM3DCH         equ	4003	;# 
  3887   000FA4                     PWM3CON         equ	4004	;# 
  3888   000FA5                     CCPR2           equ	4005	;# 
  3889   000FA5                     CCPR2L          equ	4005	;# 
  3890   000FA6                     CCPR2H          equ	4006	;# 
  3891   000FA7                     CCP2CON         equ	4007	;# 
  3892   000FA8                     CCP2CAP         equ	4008	;# 
  3893   000FA9                     CCPR1           equ	4009	;# 
  3894   000FA9                     CCPR1L          equ	4009	;# 
  3895   000FAA                     CCPR1H          equ	4010	;# 
  3896   000FAB                     CCP1CON         equ	4011	;# 
  3897   000FAC                     CCP1CAP         equ	4012	;# 
  3898   000FAD                     CCPTMRS         equ	4013	;# 
  3899   000FAE                     T6TMR           equ	4014	;# 
  3900   000FAE                     TMR6            equ	4014	;# 
  3901   000FAF                     T6PR            equ	4015	;# 
  3902   000FAF                     PR6             equ	4015	;# 
  3903   000FB0                     T6CON           equ	4016	;# 
  3904   000FB1                     T6HLT           equ	4017	;# 
  3905   000FB2                     T6CLKCON        equ	4018	;# 
  3906   000FB2                     T6CLK           equ	4018	;# 
  3907   000FB3                     T6RST           equ	4019	;# 
  3908   000FB4                     T4TMR           equ	4020	;# 
  3909   000FB4                     TMR4            equ	4020	;# 
  3910   000FB5                     T4PR            equ	4021	;# 
  3911   000FB5                     PR4             equ	4021	;# 
  3912   000FB6                     T4CON           equ	4022	;# 
  3913   000FB7                     T4HLT           equ	4023	;# 
  3914   000FB8                     T4CLKCON        equ	4024	;# 
  3915   000FB8                     T4CLK           equ	4024	;# 
  3916   000FB9                     T4RST           equ	4025	;# 
  3917   000FBA                     T2TMR           equ	4026	;# 
  3918   000FBA                     TMR2            equ	4026	;# 
  3919   000FBB                     T2PR            equ	4027	;# 
  3920   000FBB                     PR2             equ	4027	;# 
  3921   000FBC                     T2CON           equ	4028	;# 
  3922   000FBD                     T2HLT           equ	4029	;# 
  3923   000FBE                     T2CLKCON        equ	4030	;# 
  3924   000FBE                     T2CLK           equ	4030	;# 
  3925   000FBF                     T2RST           equ	4031	;# 
  3926   000FC0                     TMR5            equ	4032	;# 
  3927   000FC0                     TMR5L           equ	4032	;# 
  3928   000FC1                     TMR5H           equ	4033	;# 
  3929   000FC2                     T5CON           equ	4034	;# 
  3930   000FC2                     TMR5CON         equ	4034	;# 
  3931   000FC3                     T5GCON          equ	4035	;# 
  3932   000FC3                     TMR5GCON        equ	4035	;# 
  3933   000FC4                     T5GATE          equ	4036	;# 
  3934   000FC4                     TMR5GATE        equ	4036	;# 
  3935   000FC5                     T5CLK           equ	4037	;# 
  3936   000FC5                     TMR5CLK         equ	4037	;# 
  3937   000FC5                     PR5             equ	4037	;# 
  3938   000FC6                     TMR3            equ	4038	;# 
  3939   000FC6                     TMR3L           equ	4038	;# 
  3940   000FC7                     TMR3H           equ	4039	;# 
  3941   000FC8                     T3CON           equ	4040	;# 
  3942   000FC8                     TMR3CON         equ	4040	;# 
  3943   000FC9                     T3GCON          equ	4041	;# 
  3944   000FC9                     TMR3GCON        equ	4041	;# 
  3945   000FCA                     T3GATE          equ	4042	;# 
  3946   000FCA                     TMR3GATE        equ	4042	;# 
  3947   000FCB                     T3CLK           equ	4043	;# 
  3948   000FCB                     TMR3CLK         equ	4043	;# 
  3949   000FCB                     PR3             equ	4043	;# 
  3950   000FCC                     TMR1            equ	4044	;# 
  3951   000FCC                     TMR1L           equ	4044	;# 
  3952   000FCD                     TMR1H           equ	4045	;# 
  3953   000FCE                     T1CON           equ	4046	;# 
  3954   000FCE                     TMR1CON         equ	4046	;# 
  3955   000FCF                     T1GCON          equ	4047	;# 
  3956   000FCF                     TMR1GCON        equ	4047	;# 
  3957   000FD0                     T1GATE          equ	4048	;# 
  3958   000FD0                     TMR1GATE        equ	4048	;# 
  3959   000FD1                     T1CLK           equ	4049	;# 
  3960   000FD1                     TMR1CLK         equ	4049	;# 
  3961   000FD1                     PR1             equ	4049	;# 
  3962   000FD2                     TMR0L           equ	4050	;# 
  3963   000FD2                     TMR0            equ	4050	;# 
  3964   000FD3                     TMR0H           equ	4051	;# 
  3965   000FD3                     PR0             equ	4051	;# 
  3966   000FD4                     T0CON0          equ	4052	;# 
  3967   000FD5                     T0CON1          equ	4053	;# 
  3968   000FD6                     PCON1           equ	4054	;# 
  3969   000FD7                     PCON0           equ	4055	;# 
  3970   000FD8                     STATUS          equ	4056	;# 
  3971   000FD9                     FSR2            equ	4057	;# 
  3972   000FD9                     FSR2L           equ	4057	;# 
  3973   000FDA                     FSR2H           equ	4058	;# 
  3974   000FDB                     PLUSW2          equ	4059	;# 
  3975   000FDC                     PREINC2         equ	4060	;# 
  3976   000FDD                     POSTDEC2        equ	4061	;# 
  3977   000FDE                     POSTINC2        equ	4062	;# 
  3978   000FDF                     INDF2           equ	4063	;# 
  3979   000FE0                     BSR             equ	4064	;# 
  3980   000FE1                     FSR1            equ	4065	;# 
  3981   000FE1                     FSR1L           equ	4065	;# 
  3982   000FE2                     FSR1H           equ	4066	;# 
  3983   000FE3                     PLUSW1          equ	4067	;# 
  3984   000FE4                     PREINC1         equ	4068	;# 
  3985   000FE5                     POSTDEC1        equ	4069	;# 
  3986   000FE6                     POSTINC1        equ	4070	;# 
  3987   000FE7                     INDF1           equ	4071	;# 
  3988   000FE8                     WREG            equ	4072	;# 
  3989   000FE9                     FSR0            equ	4073	;# 
  3990   000FE9                     FSR0L           equ	4073	;# 
  3991   000FEA                     FSR0H           equ	4074	;# 
  3992   000FEB                     PLUSW0          equ	4075	;# 
  3993   000FEC                     PREINC0         equ	4076	;# 
  3994   000FED                     POSTDEC0        equ	4077	;# 
  3995   000FEE                     POSTINC0        equ	4078	;# 
  3996   000FEF                     INDF0           equ	4079	;# 
  3997   000FF2                     INTCON          equ	4082	;# 
  3998   000FF3                     PROD            equ	4083	;# 
  3999   000FF3                     PRODL           equ	4083	;# 
  4000   000FF4                     PRODH           equ	4084	;# 
  4001   000FF5                     TABLAT          equ	4085	;# 
  4002   000FF6                     TBLPTR          equ	4086	;# 
  4003   000FF6                     TBLPTRL         equ	4086	;# 
  4004   000FF7                     TBLPTRH         equ	4087	;# 
  4005   000FF8                     TBLPTRU         equ	4088	;# 
  4006   000FF9                     PCLAT           equ	4089	;# 
  4007   000FF9                     PC              equ	4089	;# 
  4008   000FF9                     PCL             equ	4089	;# 
  4009   000FFA                     PCLATH          equ	4090	;# 
  4010   000FFB                     PCLATU          equ	4091	;# 
  4011   000FFC                     STKPTR          equ	4092	;# 
  4012   000FFD                     TOS             equ	4093	;# 
  4013   000FFD                     TOSL            equ	4093	;# 
  4014   000FFE                     TOSH            equ	4094	;# 
  4015   000FFF                     TOSU            equ	4095	;# 
  4016   000E9B                     PPSLOCK         equ	3739	;# 
  4017   000E9C                     INT0PPS         equ	3740	;# 
  4018   000E9D                     INT1PPS         equ	3741	;# 
  4019   000E9E                     INT2PPS         equ	3742	;# 
  4020   000E9F                     T0CKIPPS        equ	3743	;# 
  4021   000EA0                     T1CKIPPS        equ	3744	;# 
  4022   000EA1                     T1GPPS          equ	3745	;# 
  4023   000EA2                     T3CKIPPS        equ	3746	;# 
  4024   000EA3                     T3GPPS          equ	3747	;# 
  4025   000EA4                     T5CKIPPS        equ	3748	;# 
  4026   000EA5                     T5GPPS          equ	3749	;# 
  4027   000EA6                     T2INPPS         equ	3750	;# 
  4028   000EA7                     T4INPPS         equ	3751	;# 
  4029   000EA8                     T6INPPS         equ	3752	;# 
  4030   000EA9                     ADACTPPS        equ	3753	;# 
  4031   000EAA                     CCP1PPS         equ	3754	;# 
  4032   000EAB                     CCP2PPS         equ	3755	;# 
  4033   000EAC                     CWG1PPS         equ	3756	;# 
  4034   000EAC                     CWGPPS          equ	3756	;# 
  4035   000EAC                     CWGINPPS        equ	3756	;# 
  4036   000EAC                     CWG1INPPS       equ	3756	;# 
  4037   000EAD                     MDCARLPPS       equ	3757	;# 
  4038   000EAE                     MDCARHPPS       equ	3758	;# 
  4039   000EAF                     MDSRCPPS        equ	3759	;# 
  4040   000EB0                     RX1PPS          equ	3760	;# 
  4041   000EB0                     RXPPS           equ	3760	;# 
  4042   000EB0                     RXDT1PPS        equ	3760	;# 
  4043   000EB1                     CK1PPS          equ	3761	;# 
  4044   000EB1                     TXPPS           equ	3761	;# 
  4045   000EB1                     CKPPS           equ	3761	;# 
  4046   000EB1                     TXCK1PPS        equ	3761	;# 
  4047   000EB1                     TX1PPS          equ	3761	;# 
  4048   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4049   000EB2                     SSPCLKPPS       equ	3762	;# 
  4050   000EB3                     SSP1DATPPS      equ	3763	;# 
  4051   000EB3                     SSPDATPPS       equ	3763	;# 
  4052   000EB4                     SSP1SSPPS       equ	3764	;# 
  4053   000EB4                     SSPSSPPS        equ	3764	;# 
  4054   000EB5                     IPR0            equ	3765	;# 
  4055   000EB6                     IPR1            equ	3766	;# 
  4056   000EB7                     IPR2            equ	3767	;# 
  4057   000EB8                     IPR3            equ	3768	;# 
  4058   000EB9                     IPR4            equ	3769	;# 
  4059   000EBA                     IPR5            equ	3770	;# 
  4060   000EBB                     IPR6            equ	3771	;# 
  4061   000EBC                     IPR7            equ	3772	;# 
  4062   000EBD                     PIE0            equ	3773	;# 
  4063   000EBE                     PIE1            equ	3774	;# 
  4064   000EBF                     PIE2            equ	3775	;# 
  4065   000EC0                     PIE3            equ	3776	;# 
  4066   000EC1                     PIE4            equ	3777	;# 
  4067   000EC2                     PIE5            equ	3778	;# 
  4068   000EC3                     PIE6            equ	3779	;# 
  4069   000EC4                     PIE7            equ	3780	;# 
  4070   000EC5                     PIR0            equ	3781	;# 
  4071   000EC6                     PIR1            equ	3782	;# 
  4072   000EC7                     PIR2            equ	3783	;# 
  4073   000EC8                     PIR3            equ	3784	;# 
  4074   000EC9                     PIR4            equ	3785	;# 
  4075   000ECA                     PIR5            equ	3786	;# 
  4076   000ECB                     PIR6            equ	3787	;# 
  4077   000ECC                     PIR7            equ	3788	;# 
  4078   000ECD                     WDTCON0         equ	3789	;# 
  4079   000ECE                     WDTCON1         equ	3790	;# 
  4080   000ECF                     WDTPSL          equ	3791	;# 
  4081   000ED0                     WDTPSH          equ	3792	;# 
  4082   000ED1                     WDTTMR          equ	3793	;# 
  4083   000ED2                     CPUDOZE         equ	3794	;# 
  4084   000ED3                     OSCCON1         equ	3795	;# 
  4085   000ED4                     OSCCON2         equ	3796	;# 
  4086   000ED5                     OSCCON3         equ	3797	;# 
  4087   000ED6                     OSCSTAT         equ	3798	;# 
  4088   000ED6                     OSCSTAT1        equ	3798	;# 
  4089   000ED7                     OSCEN           equ	3799	;# 
  4090   000ED8                     OSCTUNE         equ	3800	;# 
  4091   000ED9                     OSCFRQ          equ	3801	;# 
  4092   000ED9                     OSCFREQ         equ	3801	;# 
  4093   000EDA                     VREGCON         equ	3802	;# 
  4094   000EDB                     BORCON          equ	3803	;# 
  4095   000EDC                     PMD0            equ	3804	;# 
  4096   000EDD                     PMD1            equ	3805	;# 
  4097   000EDE                     PMD2            equ	3806	;# 
  4098   000EDF                     PMD3            equ	3807	;# 
  4099   000EE0                     PMD4            equ	3808	;# 
  4100   000EE1                     PMD5            equ	3809	;# 
  4101   000EE2                     RA0PPS          equ	3810	;# 
  4102   000EE3                     RA1PPS          equ	3811	;# 
  4103   000EE4                     RA2PPS          equ	3812	;# 
  4104   000EE5                     RA3PPS          equ	3813	;# 
  4105   000EE6                     RA4PPS          equ	3814	;# 
  4106   000EE7                     RA5PPS          equ	3815	;# 
  4107   000EE8                     RA6PPS          equ	3816	;# 
  4108   000EE9                     RA7PPS          equ	3817	;# 
  4109   000EEA                     RB0PPS          equ	3818	;# 
  4110   000EEB                     RB1PPS          equ	3819	;# 
  4111   000EEC                     RB2PPS          equ	3820	;# 
  4112   000EED                     RB3PPS          equ	3821	;# 
  4113   000EEE                     RB4PPS          equ	3822	;# 
  4114   000EEF                     RB5PPS          equ	3823	;# 
  4115   000EF0                     RB6PPS          equ	3824	;# 
  4116   000EF1                     RB7PPS          equ	3825	;# 
  4117   000EF2                     RC0PPS          equ	3826	;# 
  4118   000EF3                     RC1PPS          equ	3827	;# 
  4119   000EF4                     RC2PPS          equ	3828	;# 
  4120   000EF5                     RC3PPS          equ	3829	;# 
  4121   000EF6                     RC4PPS          equ	3830	;# 
  4122   000EF7                     RC5PPS          equ	3831	;# 
  4123   000EF8                     RC6PPS          equ	3832	;# 
  4124   000EF9                     RC7PPS          equ	3833	;# 
  4125   000F05                     IOCAF           equ	3845	;# 
  4126   000F06                     IOCAN           equ	3846	;# 
  4127   000F07                     IOCAP           equ	3847	;# 
  4128   000F08                     INLVLA          equ	3848	;# 
  4129   000F09                     SLRCONA         equ	3849	;# 
  4130   000F0A                     ODCONA          equ	3850	;# 
  4131   000F0B                     WPUA            equ	3851	;# 
  4132   000F0C                     ANSELA          equ	3852	;# 
  4133   000F0D                     IOCBF           equ	3853	;# 
  4134   000F0E                     IOCBN           equ	3854	;# 
  4135   000F0F                     IOCBP           equ	3855	;# 
  4136   000F10                     INLVLB          equ	3856	;# 
  4137   000F11                     SLRCONB         equ	3857	;# 
  4138   000F12                     ODCONB          equ	3858	;# 
  4139   000F13                     WPUB            equ	3859	;# 
  4140   000F14                     ANSELB          equ	3860	;# 
  4141   000F15                     IOCCF           equ	3861	;# 
  4142   000F16                     IOCCN           equ	3862	;# 
  4143   000F17                     IOCCP           equ	3863	;# 
  4144   000F18                     INLVLC          equ	3864	;# 
  4145   000F19                     SLRCONC         equ	3865	;# 
  4146   000F1A                     ODCONC          equ	3866	;# 
  4147   000F1B                     WPUC            equ	3867	;# 
  4148   000F1C                     ANSELC          equ	3868	;# 
  4149   000F22                     IOCEF           equ	3874	;# 
  4150   000F23                     IOCEN           equ	3875	;# 
  4151   000F24                     IOCEP           equ	3876	;# 
  4152   000F25                     INLVLE          equ	3877	;# 
  4153   000F28                     WPUE            equ	3880	;# 
  4154   000F2A                     HLVDCON0        equ	3882	;# 
  4155   000F2B                     HLVDCON1        equ	3883	;# 
  4156   000F2C                     FVRCON          equ	3884	;# 
  4157   000F2D                     ZCDCON          equ	3885	;# 
  4158   000F2E                     DAC1CON0        equ	3886	;# 
  4159   000F2F                     DAC1CON1        equ	3887	;# 
  4160   000F30                     CM2CON0         equ	3888	;# 
  4161   000F31                     CM2CON1         equ	3889	;# 
  4162   000F32                     CM2NCH          equ	3890	;# 
  4163   000F33                     CM2PCH          equ	3891	;# 
  4164   000F34                     CM1CON0         equ	3892	;# 
  4165   000F35                     CM1CON1         equ	3893	;# 
  4166   000F36                     CM1NCH          equ	3894	;# 
  4167   000F37                     CM1PCH          equ	3895	;# 
  4168   000F38                     CMOUT           equ	3896	;# 
  4169   000F39                     CLKRCON         equ	3897	;# 
  4170   000F3A                     CLKRCLK         equ	3898	;# 
  4171   000F3B                     CWG1CLK         equ	3899	;# 
  4172   000F3B                     CWG1CLKCON      equ	3899	;# 
  4173   000F3C                     CWG1ISM         equ	3900	;# 
  4174   000F3D                     CWG1DBR         equ	3901	;# 
  4175   000F3E                     CWG1DBF         equ	3902	;# 
  4176   000F3F                     CWG1CON0        equ	3903	;# 
  4177   000F40                     CWG1CON1        equ	3904	;# 
  4178   000F41                     CWG1AS0         equ	3905	;# 
  4179   000F42                     CWG1AS1         equ	3906	;# 
  4180   000F43                     CWG1STR         equ	3907	;# 
  4181   000F44                     SCANLADR        equ	3908	;# 
  4182   000F44                     SCANLADRL       equ	3908	;# 
  4183   000F45                     SCANLADRH       equ	3909	;# 
  4184   000F46                     SCANLADRU       equ	3910	;# 
  4185   000F47                     SCANHADR        equ	3911	;# 
  4186   000F47                     SCANHADRL       equ	3911	;# 
  4187   000F48                     SCANHADRH       equ	3912	;# 
  4188   000F49                     SCANHADRU       equ	3913	;# 
  4189   000F4A                     SCANCON0        equ	3914	;# 
  4190   000F4B                     SCANTRIG        equ	3915	;# 
  4191   000F4C                     MDCON0          equ	3916	;# 
  4192   000F4D                     MDCON1          equ	3917	;# 
  4193   000F4E                     MDSRC           equ	3918	;# 
  4194   000F4F                     MDCARL          equ	3919	;# 
  4195   000F50                     MDCARH          equ	3920	;# 
  4196   000F51                     ADACT           equ	3921	;# 
  4197   000F52                     ADCLK           equ	3922	;# 
  4198   000F53                     ADREF           equ	3923	;# 
  4199   000F54                     ADCON1          equ	3924	;# 
  4200   000F55                     ADCON2          equ	3925	;# 
  4201   000F56                     ADCON3          equ	3926	;# 
  4202   000F57                     ADACQ           equ	3927	;# 
  4203   000F58                     ADCAP           equ	3928	;# 
  4204   000F59                     ADPRE           equ	3929	;# 
  4205   000F5A                     ADPCH           equ	3930	;# 
  4206   000F5B                     ADCON0          equ	3931	;# 
  4207   000F5C                     ADPREV          equ	3932	;# 
  4208   000F5C                     ADPREVL         equ	3932	;# 
  4209   000F5D                     ADPREVH         equ	3933	;# 
  4210   000F5E                     ADRES           equ	3934	;# 
  4211   000F5E                     ADRESL          equ	3934	;# 
  4212   000F5F                     ADRESH          equ	3935	;# 
  4213   000F60                     ADSTAT          equ	3936	;# 
  4214   000F61                     ADRPT           equ	3937	;# 
  4215   000F62                     ADCNT           equ	3938	;# 
  4216   000F63                     ADSTPT          equ	3939	;# 
  4217   000F63                     ADSTPTL         equ	3939	;# 
  4218   000F64                     ADSTPTH         equ	3940	;# 
  4219   000F65                     ADLTH           equ	3941	;# 
  4220   000F65                     ADLTHL          equ	3941	;# 
  4221   000F66                     ADLTHH          equ	3942	;# 
  4222   000F67                     ADUTH           equ	3943	;# 
  4223   000F67                     ADUTHL          equ	3943	;# 
  4224   000F68                     ADUTHH          equ	3944	;# 
  4225   000F69                     ADERR           equ	3945	;# 
  4226   000F69                     ADERRL          equ	3945	;# 
  4227   000F6A                     ADERRH          equ	3946	;# 
  4228   000F6B                     ADACC           equ	3947	;# 
  4229   000F6B                     ADACCL          equ	3947	;# 
  4230   000F6C                     ADACCH          equ	3948	;# 
  4231   000F6D                     ADFLTR          equ	3949	;# 
  4232   000F6D                     ADFLTRL         equ	3949	;# 
  4233   000F6E                     ADFLTRH         equ	3950	;# 
  4234   000F6F                     CRCDATA         equ	3951	;# 
  4235   000F6F                     CRCDATL         equ	3951	;# 
  4236   000F70                     CRCDATH         equ	3952	;# 
  4237   000F71                     CRCACC          equ	3953	;# 
  4238   000F71                     CRCACCL         equ	3953	;# 
  4239   000F72                     CRCACCH         equ	3954	;# 
  4240   000F73                     CRCSHFT         equ	3955	;# 
  4241   000F73                     CRCSHIFTL       equ	3955	;# 
  4242   000F74                     CRCSHIFTH       equ	3956	;# 
  4243   000F75                     CRCXOR          equ	3957	;# 
  4244   000F75                     CRCXORL         equ	3957	;# 
  4245   000F76                     CRCXORH         equ	3958	;# 
  4246   000F77                     CRCCON0         equ	3959	;# 
  4247   000F78                     CRCCON1         equ	3960	;# 
  4248   000F79                     NVMADR          equ	3961	;# 
  4249   000F79                     NVMADRL         equ	3961	;# 
  4250   000F7A                     NVMADRH         equ	3962	;# 
  4251   000F7B                     NVMADRU         equ	3963	;# 
  4252   000F7C                     NVMDAT          equ	3964	;# 
  4253   000F7C                     NVMDATL         equ	3964	;# 
  4254   000F7D                     NVMDATH         equ	3965	;# 
  4255   000F7F                     NVMCON0         equ	3967	;# 
  4256   000F80                     NVMCON1         equ	3968	;# 
  4257   000F81                     NVMCON2         equ	3969	;# 
  4258   000F82                     LATA            equ	3970	;# 
  4259   000F83                     LATB            equ	3971	;# 
  4260   000F84                     LATC            equ	3972	;# 
  4261   000F87                     TRISA           equ	3975	;# 
  4262   000F87                     DDRA            equ	3975	;# 
  4263   000F88                     TRISB           equ	3976	;# 
  4264   000F88                     DDRB            equ	3976	;# 
  4265   000F89                     TRISC           equ	3977	;# 
  4266   000F89                     DDRC            equ	3977	;# 
  4267   000F8C                     PORTA           equ	3980	;# 
  4268   000F8D                     PORTB           equ	3981	;# 
  4269   000F8E                     PORTC           equ	3982	;# 
  4270   000F90                     PORTE           equ	3984	;# 
  4271   000F91                     SSP1BUF         equ	3985	;# 
  4272   000F92                     SSP1ADD         equ	3986	;# 
  4273   000F93                     SSP1MSK         equ	3987	;# 
  4274   000F94                     SSP1STAT        equ	3988	;# 
  4275   000F95                     SSP1CON1        equ	3989	;# 
  4276   000F96                     SSP1CON2        equ	3990	;# 
  4277   000F97                     SSP1CON3        equ	3991	;# 
  4278   000F98                     RC1REG          equ	3992	;# 
  4279   000F98                     RCREG           equ	3992	;# 
  4280   000F98                     RCREG1          equ	3992	;# 
  4281   000F99                     TX1REG          equ	3993	;# 
  4282   000F99                     TXREG1          equ	3993	;# 
  4283   000F99                     TXREG           equ	3993	;# 
  4284   000F9A                     SP1BRG          equ	3994	;# 
  4285   000F9A                     SPBRG           equ	3994	;# 
  4286   000F9A                     SP1BRGL         equ	3994	;# 
  4287   000F9A                     SPBRG1          equ	3994	;# 
  4288   000F9A                     SPBRGL          equ	3994	;# 
  4289   000F9B                     SP1BRGH         equ	3995	;# 
  4290   000F9B                     SPBRGH          equ	3995	;# 
  4291   000F9B                     SPBRGH1         equ	3995	;# 
  4292   000F9C                     RC1STA          equ	3996	;# 
  4293   000F9C                     RCSTA1          equ	3996	;# 
  4294   000F9C                     RCSTA           equ	3996	;# 
  4295   000F9D                     TX1STA          equ	3997	;# 
  4296   000F9D                     TXSTA1          equ	3997	;# 
  4297   000F9D                     TXSTA           equ	3997	;# 
  4298   000F9E                     BAUD1CON        equ	3998	;# 
  4299   000F9E                     BAUDCON1        equ	3998	;# 
  4300   000F9E                     BAUDCTL1        equ	3998	;# 
  4301   000F9E                     BAUDCON         equ	3998	;# 
  4302   000F9E                     BAUDCTL         equ	3998	;# 
  4303   000F9F                     PWM4DC          equ	3999	;# 
  4304   000F9F                     PWM4DCL         equ	3999	;# 
  4305   000FA0                     PWM4DCH         equ	4000	;# 
  4306   000FA1                     PWM4CON         equ	4001	;# 
  4307   000FA2                     PWM3DC          equ	4002	;# 
  4308   000FA2                     PWM3DCL         equ	4002	;# 
  4309   000FA3                     PWM3DCH         equ	4003	;# 
  4310   000FA4                     PWM3CON         equ	4004	;# 
  4311   000FA5                     CCPR2           equ	4005	;# 
  4312   000FA5                     CCPR2L          equ	4005	;# 
  4313   000FA6                     CCPR2H          equ	4006	;# 
  4314   000FA7                     CCP2CON         equ	4007	;# 
  4315   000FA8                     CCP2CAP         equ	4008	;# 
  4316   000FA9                     CCPR1           equ	4009	;# 
  4317   000FA9                     CCPR1L          equ	4009	;# 
  4318   000FAA                     CCPR1H          equ	4010	;# 
  4319   000FAB                     CCP1CON         equ	4011	;# 
  4320   000FAC                     CCP1CAP         equ	4012	;# 
  4321   000FAD                     CCPTMRS         equ	4013	;# 
  4322   000FAE                     T6TMR           equ	4014	;# 
  4323   000FAE                     TMR6            equ	4014	;# 
  4324   000FAF                     T6PR            equ	4015	;# 
  4325   000FAF                     PR6             equ	4015	;# 
  4326   000FB0                     T6CON           equ	4016	;# 
  4327   000FB1                     T6HLT           equ	4017	;# 
  4328   000FB2                     T6CLKCON        equ	4018	;# 
  4329   000FB2                     T6CLK           equ	4018	;# 
  4330   000FB3                     T6RST           equ	4019	;# 
  4331   000FB4                     T4TMR           equ	4020	;# 
  4332   000FB4                     TMR4            equ	4020	;# 
  4333   000FB5                     T4PR            equ	4021	;# 
  4334   000FB5                     PR4             equ	4021	;# 
  4335   000FB6                     T4CON           equ	4022	;# 
  4336   000FB7                     T4HLT           equ	4023	;# 
  4337   000FB8                     T4CLKCON        equ	4024	;# 
  4338   000FB8                     T4CLK           equ	4024	;# 
  4339   000FB9                     T4RST           equ	4025	;# 
  4340   000FBA                     T2TMR           equ	4026	;# 
  4341   000FBA                     TMR2            equ	4026	;# 
  4342   000FBB                     T2PR            equ	4027	;# 
  4343   000FBB                     PR2             equ	4027	;# 
  4344   000FBC                     T2CON           equ	4028	;# 
  4345   000FBD                     T2HLT           equ	4029	;# 
  4346   000FBE                     T2CLKCON        equ	4030	;# 
  4347   000FBE                     T2CLK           equ	4030	;# 
  4348   000FBF                     T2RST           equ	4031	;# 
  4349   000FC0                     TMR5            equ	4032	;# 
  4350   000FC0                     TMR5L           equ	4032	;# 
  4351   000FC1                     TMR5H           equ	4033	;# 
  4352   000FC2                     T5CON           equ	4034	;# 
  4353   000FC2                     TMR5CON         equ	4034	;# 
  4354   000FC3                     T5GCON          equ	4035	;# 
  4355   000FC3                     TMR5GCON        equ	4035	;# 
  4356   000FC4                     T5GATE          equ	4036	;# 
  4357   000FC4                     TMR5GATE        equ	4036	;# 
  4358   000FC5                     T5CLK           equ	4037	;# 
  4359   000FC5                     TMR5CLK         equ	4037	;# 
  4360   000FC5                     PR5             equ	4037	;# 
  4361   000FC6                     TMR3            equ	4038	;# 
  4362   000FC6                     TMR3L           equ	4038	;# 
  4363   000FC7                     TMR3H           equ	4039	;# 
  4364   000FC8                     T3CON           equ	4040	;# 
  4365   000FC8                     TMR3CON         equ	4040	;# 
  4366   000FC9                     T3GCON          equ	4041	;# 
  4367   000FC9                     TMR3GCON        equ	4041	;# 
  4368   000FCA                     T3GATE          equ	4042	;# 
  4369   000FCA                     TMR3GATE        equ	4042	;# 
  4370   000FCB                     T3CLK           equ	4043	;# 
  4371   000FCB                     TMR3CLK         equ	4043	;# 
  4372   000FCB                     PR3             equ	4043	;# 
  4373   000FCC                     TMR1            equ	4044	;# 
  4374   000FCC                     TMR1L           equ	4044	;# 
  4375   000FCD                     TMR1H           equ	4045	;# 
  4376   000FCE                     T1CON           equ	4046	;# 
  4377   000FCE                     TMR1CON         equ	4046	;# 
  4378   000FCF                     T1GCON          equ	4047	;# 
  4379   000FCF                     TMR1GCON        equ	4047	;# 
  4380   000FD0                     T1GATE          equ	4048	;# 
  4381   000FD0                     TMR1GATE        equ	4048	;# 
  4382   000FD1                     T1CLK           equ	4049	;# 
  4383   000FD1                     TMR1CLK         equ	4049	;# 
  4384   000FD1                     PR1             equ	4049	;# 
  4385   000FD2                     TMR0L           equ	4050	;# 
  4386   000FD2                     TMR0            equ	4050	;# 
  4387   000FD3                     TMR0H           equ	4051	;# 
  4388   000FD3                     PR0             equ	4051	;# 
  4389   000FD4                     T0CON0          equ	4052	;# 
  4390   000FD5                     T0CON1          equ	4053	;# 
  4391   000FD6                     PCON1           equ	4054	;# 
  4392   000FD7                     PCON0           equ	4055	;# 
  4393   000FD8                     STATUS          equ	4056	;# 
  4394   000FD9                     FSR2            equ	4057	;# 
  4395   000FD9                     FSR2L           equ	4057	;# 
  4396   000FDA                     FSR2H           equ	4058	;# 
  4397   000FDB                     PLUSW2          equ	4059	;# 
  4398   000FDC                     PREINC2         equ	4060	;# 
  4399   000FDD                     POSTDEC2        equ	4061	;# 
  4400   000FDE                     POSTINC2        equ	4062	;# 
  4401   000FDF                     INDF2           equ	4063	;# 
  4402   000FE0                     BSR             equ	4064	;# 
  4403   000FE1                     FSR1            equ	4065	;# 
  4404   000FE1                     FSR1L           equ	4065	;# 
  4405   000FE2                     FSR1H           equ	4066	;# 
  4406   000FE3                     PLUSW1          equ	4067	;# 
  4407   000FE4                     PREINC1         equ	4068	;# 
  4408   000FE5                     POSTDEC1        equ	4069	;# 
  4409   000FE6                     POSTINC1        equ	4070	;# 
  4410   000FE7                     INDF1           equ	4071	;# 
  4411   000FE8                     WREG            equ	4072	;# 
  4412   000FE9                     FSR0            equ	4073	;# 
  4413   000FE9                     FSR0L           equ	4073	;# 
  4414   000FEA                     FSR0H           equ	4074	;# 
  4415   000FEB                     PLUSW0          equ	4075	;# 
  4416   000FEC                     PREINC0         equ	4076	;# 
  4417   000FED                     POSTDEC0        equ	4077	;# 
  4418   000FEE                     POSTINC0        equ	4078	;# 
  4419   000FEF                     INDF0           equ	4079	;# 
  4420   000FF2                     INTCON          equ	4082	;# 
  4421   000FF3                     PROD            equ	4083	;# 
  4422   000FF3                     PRODL           equ	4083	;# 
  4423   000FF4                     PRODH           equ	4084	;# 
  4424   000FF5                     TABLAT          equ	4085	;# 
  4425   000FF6                     TBLPTR          equ	4086	;# 
  4426   000FF6                     TBLPTRL         equ	4086	;# 
  4427   000FF7                     TBLPTRH         equ	4087	;# 
  4428   000FF8                     TBLPTRU         equ	4088	;# 
  4429   000FF9                     PCLAT           equ	4089	;# 
  4430   000FF9                     PC              equ	4089	;# 
  4431   000FF9                     PCL             equ	4089	;# 
  4432   000FFA                     PCLATH          equ	4090	;# 
  4433   000FFB                     PCLATU          equ	4091	;# 
  4434   000FFC                     STKPTR          equ	4092	;# 
  4435   000FFD                     TOS             equ	4093	;# 
  4436   000FFD                     TOSL            equ	4093	;# 
  4437   000FFE                     TOSH            equ	4094	;# 
  4438   000FFF                     TOSU            equ	4095	;# 
  4439   000E9B                     PPSLOCK         equ	3739	;# 
  4440   000E9C                     INT0PPS         equ	3740	;# 
  4441   000E9D                     INT1PPS         equ	3741	;# 
  4442   000E9E                     INT2PPS         equ	3742	;# 
  4443   000E9F                     T0CKIPPS        equ	3743	;# 
  4444   000EA0                     T1CKIPPS        equ	3744	;# 
  4445   000EA1                     T1GPPS          equ	3745	;# 
  4446   000EA2                     T3CKIPPS        equ	3746	;# 
  4447   000EA3                     T3GPPS          equ	3747	;# 
  4448   000EA4                     T5CKIPPS        equ	3748	;# 
  4449   000EA5                     T5GPPS          equ	3749	;# 
  4450   000EA6                     T2INPPS         equ	3750	;# 
  4451   000EA7                     T4INPPS         equ	3751	;# 
  4452   000EA8                     T6INPPS         equ	3752	;# 
  4453   000EA9                     ADACTPPS        equ	3753	;# 
  4454   000EAA                     CCP1PPS         equ	3754	;# 
  4455   000EAB                     CCP2PPS         equ	3755	;# 
  4456   000EAC                     CWG1PPS         equ	3756	;# 
  4457   000EAC                     CWGPPS          equ	3756	;# 
  4458   000EAC                     CWGINPPS        equ	3756	;# 
  4459   000EAC                     CWG1INPPS       equ	3756	;# 
  4460   000EAD                     MDCARLPPS       equ	3757	;# 
  4461   000EAE                     MDCARHPPS       equ	3758	;# 
  4462   000EAF                     MDSRCPPS        equ	3759	;# 
  4463   000EB0                     RX1PPS          equ	3760	;# 
  4464   000EB0                     RXPPS           equ	3760	;# 
  4465   000EB0                     RXDT1PPS        equ	3760	;# 
  4466   000EB1                     CK1PPS          equ	3761	;# 
  4467   000EB1                     TXPPS           equ	3761	;# 
  4468   000EB1                     CKPPS           equ	3761	;# 
  4469   000EB1                     TXCK1PPS        equ	3761	;# 
  4470   000EB1                     TX1PPS          equ	3761	;# 
  4471   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4472   000EB2                     SSPCLKPPS       equ	3762	;# 
  4473   000EB3                     SSP1DATPPS      equ	3763	;# 
  4474   000EB3                     SSPDATPPS       equ	3763	;# 
  4475   000EB4                     SSP1SSPPS       equ	3764	;# 
  4476   000EB4                     SSPSSPPS        equ	3764	;# 
  4477   000EB5                     IPR0            equ	3765	;# 
  4478   000EB6                     IPR1            equ	3766	;# 
  4479   000EB7                     IPR2            equ	3767	;# 
  4480   000EB8                     IPR3            equ	3768	;# 
  4481   000EB9                     IPR4            equ	3769	;# 
  4482   000EBA                     IPR5            equ	3770	;# 
  4483   000EBB                     IPR6            equ	3771	;# 
  4484   000EBC                     IPR7            equ	3772	;# 
  4485   000EBD                     PIE0            equ	3773	;# 
  4486   000EBE                     PIE1            equ	3774	;# 
  4487   000EBF                     PIE2            equ	3775	;# 
  4488   000EC0                     PIE3            equ	3776	;# 
  4489   000EC1                     PIE4            equ	3777	;# 
  4490   000EC2                     PIE5            equ	3778	;# 
  4491   000EC3                     PIE6            equ	3779	;# 
  4492   000EC4                     PIE7            equ	3780	;# 
  4493   000EC5                     PIR0            equ	3781	;# 
  4494   000EC6                     PIR1            equ	3782	;# 
  4495   000EC7                     PIR2            equ	3783	;# 
  4496   000EC8                     PIR3            equ	3784	;# 
  4497   000EC9                     PIR4            equ	3785	;# 
  4498   000ECA                     PIR5            equ	3786	;# 
  4499   000ECB                     PIR6            equ	3787	;# 
  4500   000ECC                     PIR7            equ	3788	;# 
  4501   000ECD                     WDTCON0         equ	3789	;# 
  4502   000ECE                     WDTCON1         equ	3790	;# 
  4503   000ECF                     WDTPSL          equ	3791	;# 
  4504   000ED0                     WDTPSH          equ	3792	;# 
  4505   000ED1                     WDTTMR          equ	3793	;# 
  4506   000ED2                     CPUDOZE         equ	3794	;# 
  4507   000ED3                     OSCCON1         equ	3795	;# 
  4508   000ED4                     OSCCON2         equ	3796	;# 
  4509   000ED5                     OSCCON3         equ	3797	;# 
  4510   000ED6                     OSCSTAT         equ	3798	;# 
  4511   000ED6                     OSCSTAT1        equ	3798	;# 
  4512   000ED7                     OSCEN           equ	3799	;# 
  4513   000ED8                     OSCTUNE         equ	3800	;# 
  4514   000ED9                     OSCFRQ          equ	3801	;# 
  4515   000ED9                     OSCFREQ         equ	3801	;# 
  4516   000EDA                     VREGCON         equ	3802	;# 
  4517   000EDB                     BORCON          equ	3803	;# 
  4518   000EDC                     PMD0            equ	3804	;# 
  4519   000EDD                     PMD1            equ	3805	;# 
  4520   000EDE                     PMD2            equ	3806	;# 
  4521   000EDF                     PMD3            equ	3807	;# 
  4522   000EE0                     PMD4            equ	3808	;# 
  4523   000EE1                     PMD5            equ	3809	;# 
  4524   000EE2                     RA0PPS          equ	3810	;# 
  4525   000EE3                     RA1PPS          equ	3811	;# 
  4526   000EE4                     RA2PPS          equ	3812	;# 
  4527   000EE5                     RA3PPS          equ	3813	;# 
  4528   000EE6                     RA4PPS          equ	3814	;# 
  4529   000EE7                     RA5PPS          equ	3815	;# 
  4530   000EE8                     RA6PPS          equ	3816	;# 
  4531   000EE9                     RA7PPS          equ	3817	;# 
  4532   000EEA                     RB0PPS          equ	3818	;# 
  4533   000EEB                     RB1PPS          equ	3819	;# 
  4534   000EEC                     RB2PPS          equ	3820	;# 
  4535   000EED                     RB3PPS          equ	3821	;# 
  4536   000EEE                     RB4PPS          equ	3822	;# 
  4537   000EEF                     RB5PPS          equ	3823	;# 
  4538   000EF0                     RB6PPS          equ	3824	;# 
  4539   000EF1                     RB7PPS          equ	3825	;# 
  4540   000EF2                     RC0PPS          equ	3826	;# 
  4541   000EF3                     RC1PPS          equ	3827	;# 
  4542   000EF4                     RC2PPS          equ	3828	;# 
  4543   000EF5                     RC3PPS          equ	3829	;# 
  4544   000EF6                     RC4PPS          equ	3830	;# 
  4545   000EF7                     RC5PPS          equ	3831	;# 
  4546   000EF8                     RC6PPS          equ	3832	;# 
  4547   000EF9                     RC7PPS          equ	3833	;# 
  4548   000F05                     IOCAF           equ	3845	;# 
  4549   000F06                     IOCAN           equ	3846	;# 
  4550   000F07                     IOCAP           equ	3847	;# 
  4551   000F08                     INLVLA          equ	3848	;# 
  4552   000F09                     SLRCONA         equ	3849	;# 
  4553   000F0A                     ODCONA          equ	3850	;# 
  4554   000F0B                     WPUA            equ	3851	;# 
  4555   000F0C                     ANSELA          equ	3852	;# 
  4556   000F0D                     IOCBF           equ	3853	;# 
  4557   000F0E                     IOCBN           equ	3854	;# 
  4558   000F0F                     IOCBP           equ	3855	;# 
  4559   000F10                     INLVLB          equ	3856	;# 
  4560   000F11                     SLRCONB         equ	3857	;# 
  4561   000F12                     ODCONB          equ	3858	;# 
  4562   000F13                     WPUB            equ	3859	;# 
  4563   000F14                     ANSELB          equ	3860	;# 
  4564   000F15                     IOCCF           equ	3861	;# 
  4565   000F16                     IOCCN           equ	3862	;# 
  4566   000F17                     IOCCP           equ	3863	;# 
  4567   000F18                     INLVLC          equ	3864	;# 
  4568   000F19                     SLRCONC         equ	3865	;# 
  4569   000F1A                     ODCONC          equ	3866	;# 
  4570   000F1B                     WPUC            equ	3867	;# 
  4571   000F1C                     ANSELC          equ	3868	;# 
  4572   000F22                     IOCEF           equ	3874	;# 
  4573   000F23                     IOCEN           equ	3875	;# 
  4574   000F24                     IOCEP           equ	3876	;# 
  4575   000F25                     INLVLE          equ	3877	;# 
  4576   000F28                     WPUE            equ	3880	;# 
  4577   000F2A                     HLVDCON0        equ	3882	;# 
  4578   000F2B                     HLVDCON1        equ	3883	;# 
  4579   000F2C                     FVRCON          equ	3884	;# 
  4580   000F2D                     ZCDCON          equ	3885	;# 
  4581   000F2E                     DAC1CON0        equ	3886	;# 
  4582   000F2F                     DAC1CON1        equ	3887	;# 
  4583   000F30                     CM2CON0         equ	3888	;# 
  4584   000F31                     CM2CON1         equ	3889	;# 
  4585   000F32                     CM2NCH          equ	3890	;# 
  4586   000F33                     CM2PCH          equ	3891	;# 
  4587   000F34                     CM1CON0         equ	3892	;# 
  4588   000F35                     CM1CON1         equ	3893	;# 
  4589   000F36                     CM1NCH          equ	3894	;# 
  4590   000F37                     CM1PCH          equ	3895	;# 
  4591   000F38                     CMOUT           equ	3896	;# 
  4592   000F39                     CLKRCON         equ	3897	;# 
  4593   000F3A                     CLKRCLK         equ	3898	;# 
  4594   000F3B                     CWG1CLK         equ	3899	;# 
  4595   000F3B                     CWG1CLKCON      equ	3899	;# 
  4596   000F3C                     CWG1ISM         equ	3900	;# 
  4597   000F3D                     CWG1DBR         equ	3901	;# 
  4598   000F3E                     CWG1DBF         equ	3902	;# 
  4599   000F3F                     CWG1CON0        equ	3903	;# 
  4600   000F40                     CWG1CON1        equ	3904	;# 
  4601   000F41                     CWG1AS0         equ	3905	;# 
  4602   000F42                     CWG1AS1         equ	3906	;# 
  4603   000F43                     CWG1STR         equ	3907	;# 
  4604   000F44                     SCANLADR        equ	3908	;# 
  4605   000F44                     SCANLADRL       equ	3908	;# 
  4606   000F45                     SCANLADRH       equ	3909	;# 
  4607   000F46                     SCANLADRU       equ	3910	;# 
  4608   000F47                     SCANHADR        equ	3911	;# 
  4609   000F47                     SCANHADRL       equ	3911	;# 
  4610   000F48                     SCANHADRH       equ	3912	;# 
  4611   000F49                     SCANHADRU       equ	3913	;# 
  4612   000F4A                     SCANCON0        equ	3914	;# 
  4613   000F4B                     SCANTRIG        equ	3915	;# 
  4614   000F4C                     MDCON0          equ	3916	;# 
  4615   000F4D                     MDCON1          equ	3917	;# 
  4616   000F4E                     MDSRC           equ	3918	;# 
  4617   000F4F                     MDCARL          equ	3919	;# 
  4618   000F50                     MDCARH          equ	3920	;# 
  4619   000F51                     ADACT           equ	3921	;# 
  4620   000F52                     ADCLK           equ	3922	;# 
  4621   000F53                     ADREF           equ	3923	;# 
  4622   000F54                     ADCON1          equ	3924	;# 
  4623   000F55                     ADCON2          equ	3925	;# 
  4624   000F56                     ADCON3          equ	3926	;# 
  4625   000F57                     ADACQ           equ	3927	;# 
  4626   000F58                     ADCAP           equ	3928	;# 
  4627   000F59                     ADPRE           equ	3929	;# 
  4628   000F5A                     ADPCH           equ	3930	;# 
  4629   000F5B                     ADCON0          equ	3931	;# 
  4630   000F5C                     ADPREV          equ	3932	;# 
  4631   000F5C                     ADPREVL         equ	3932	;# 
  4632   000F5D                     ADPREVH         equ	3933	;# 
  4633   000F5E                     ADRES           equ	3934	;# 
  4634   000F5E                     ADRESL          equ	3934	;# 
  4635   000F5F                     ADRESH          equ	3935	;# 
  4636   000F60                     ADSTAT          equ	3936	;# 
  4637   000F61                     ADRPT           equ	3937	;# 
  4638   000F62                     ADCNT           equ	3938	;# 
  4639   000F63                     ADSTPT          equ	3939	;# 
  4640   000F63                     ADSTPTL         equ	3939	;# 
  4641   000F64                     ADSTPTH         equ	3940	;# 
  4642   000F65                     ADLTH           equ	3941	;# 
  4643   000F65                     ADLTHL          equ	3941	;# 
  4644   000F66                     ADLTHH          equ	3942	;# 
  4645   000F67                     ADUTH           equ	3943	;# 
  4646   000F67                     ADUTHL          equ	3943	;# 
  4647   000F68                     ADUTHH          equ	3944	;# 
  4648   000F69                     ADERR           equ	3945	;# 
  4649   000F69                     ADERRL          equ	3945	;# 
  4650   000F6A                     ADERRH          equ	3946	;# 
  4651   000F6B                     ADACC           equ	3947	;# 
  4652   000F6B                     ADACCL          equ	3947	;# 
  4653   000F6C                     ADACCH          equ	3948	;# 
  4654   000F6D                     ADFLTR          equ	3949	;# 
  4655   000F6D                     ADFLTRL         equ	3949	;# 
  4656   000F6E                     ADFLTRH         equ	3950	;# 
  4657   000F6F                     CRCDATA         equ	3951	;# 
  4658   000F6F                     CRCDATL         equ	3951	;# 
  4659   000F70                     CRCDATH         equ	3952	;# 
  4660   000F71                     CRCACC          equ	3953	;# 
  4661   000F71                     CRCACCL         equ	3953	;# 
  4662   000F72                     CRCACCH         equ	3954	;# 
  4663   000F73                     CRCSHFT         equ	3955	;# 
  4664   000F73                     CRCSHIFTL       equ	3955	;# 
  4665   000F74                     CRCSHIFTH       equ	3956	;# 
  4666   000F75                     CRCXOR          equ	3957	;# 
  4667   000F75                     CRCXORL         equ	3957	;# 
  4668   000F76                     CRCXORH         equ	3958	;# 
  4669   000F77                     CRCCON0         equ	3959	;# 
  4670   000F78                     CRCCON1         equ	3960	;# 
  4671   000F79                     NVMADR          equ	3961	;# 
  4672   000F79                     NVMADRL         equ	3961	;# 
  4673   000F7A                     NVMADRH         equ	3962	;# 
  4674   000F7B                     NVMADRU         equ	3963	;# 
  4675   000F7C                     NVMDAT          equ	3964	;# 
  4676   000F7C                     NVMDATL         equ	3964	;# 
  4677   000F7D                     NVMDATH         equ	3965	;# 
  4678   000F7F                     NVMCON0         equ	3967	;# 
  4679   000F80                     NVMCON1         equ	3968	;# 
  4680   000F81                     NVMCON2         equ	3969	;# 
  4681   000F82                     LATA            equ	3970	;# 
  4682   000F83                     LATB            equ	3971	;# 
  4683   000F84                     LATC            equ	3972	;# 
  4684   000F87                     TRISA           equ	3975	;# 
  4685   000F87                     DDRA            equ	3975	;# 
  4686   000F88                     TRISB           equ	3976	;# 
  4687   000F88                     DDRB            equ	3976	;# 
  4688   000F89                     TRISC           equ	3977	;# 
  4689   000F89                     DDRC            equ	3977	;# 
  4690   000F8C                     PORTA           equ	3980	;# 
  4691   000F8D                     PORTB           equ	3981	;# 
  4692   000F8E                     PORTC           equ	3982	;# 
  4693   000F90                     PORTE           equ	3984	;# 
  4694   000F91                     SSP1BUF         equ	3985	;# 
  4695   000F92                     SSP1ADD         equ	3986	;# 
  4696   000F93                     SSP1MSK         equ	3987	;# 
  4697   000F94                     SSP1STAT        equ	3988	;# 
  4698   000F95                     SSP1CON1        equ	3989	;# 
  4699   000F96                     SSP1CON2        equ	3990	;# 
  4700   000F97                     SSP1CON3        equ	3991	;# 
  4701   000F98                     RC1REG          equ	3992	;# 
  4702   000F98                     RCREG           equ	3992	;# 
  4703   000F98                     RCREG1          equ	3992	;# 
  4704   000F99                     TX1REG          equ	3993	;# 
  4705   000F99                     TXREG1          equ	3993	;# 
  4706   000F99                     TXREG           equ	3993	;# 
  4707   000F9A                     SP1BRG          equ	3994	;# 
  4708   000F9A                     SPBRG           equ	3994	;# 
  4709   000F9A                     SP1BRGL         equ	3994	;# 
  4710   000F9A                     SPBRG1          equ	3994	;# 
  4711   000F9A                     SPBRGL          equ	3994	;# 
  4712   000F9B                     SP1BRGH         equ	3995	;# 
  4713   000F9B                     SPBRGH          equ	3995	;# 
  4714   000F9B                     SPBRGH1         equ	3995	;# 
  4715   000F9C                     RC1STA          equ	3996	;# 
  4716   000F9C                     RCSTA1          equ	3996	;# 
  4717   000F9C                     RCSTA           equ	3996	;# 
  4718   000F9D                     TX1STA          equ	3997	;# 
  4719   000F9D                     TXSTA1          equ	3997	;# 
  4720   000F9D                     TXSTA           equ	3997	;# 
  4721   000F9E                     BAUD1CON        equ	3998	;# 
  4722   000F9E                     BAUDCON1        equ	3998	;# 
  4723   000F9E                     BAUDCTL1        equ	3998	;# 
  4724   000F9E                     BAUDCON         equ	3998	;# 
  4725   000F9E                     BAUDCTL         equ	3998	;# 
  4726   000F9F                     PWM4DC          equ	3999	;# 
  4727   000F9F                     PWM4DCL         equ	3999	;# 
  4728   000FA0                     PWM4DCH         equ	4000	;# 
  4729   000FA1                     PWM4CON         equ	4001	;# 
  4730   000FA2                     PWM3DC          equ	4002	;# 
  4731   000FA2                     PWM3DCL         equ	4002	;# 
  4732   000FA3                     PWM3DCH         equ	4003	;# 
  4733   000FA4                     PWM3CON         equ	4004	;# 
  4734   000FA5                     CCPR2           equ	4005	;# 
  4735   000FA5                     CCPR2L          equ	4005	;# 
  4736   000FA6                     CCPR2H          equ	4006	;# 
  4737   000FA7                     CCP2CON         equ	4007	;# 
  4738   000FA8                     CCP2CAP         equ	4008	;# 
  4739   000FA9                     CCPR1           equ	4009	;# 
  4740   000FA9                     CCPR1L          equ	4009	;# 
  4741   000FAA                     CCPR1H          equ	4010	;# 
  4742   000FAB                     CCP1CON         equ	4011	;# 
  4743   000FAC                     CCP1CAP         equ	4012	;# 
  4744   000FAD                     CCPTMRS         equ	4013	;# 
  4745   000FAE                     T6TMR           equ	4014	;# 
  4746   000FAE                     TMR6            equ	4014	;# 
  4747   000FAF                     T6PR            equ	4015	;# 
  4748   000FAF                     PR6             equ	4015	;# 
  4749   000FB0                     T6CON           equ	4016	;# 
  4750   000FB1                     T6HLT           equ	4017	;# 
  4751   000FB2                     T6CLKCON        equ	4018	;# 
  4752   000FB2                     T6CLK           equ	4018	;# 
  4753   000FB3                     T6RST           equ	4019	;# 
  4754   000FB4                     T4TMR           equ	4020	;# 
  4755   000FB4                     TMR4            equ	4020	;# 
  4756   000FB5                     T4PR            equ	4021	;# 
  4757   000FB5                     PR4             equ	4021	;# 
  4758   000FB6                     T4CON           equ	4022	;# 
  4759   000FB7                     T4HLT           equ	4023	;# 
  4760   000FB8                     T4CLKCON        equ	4024	;# 
  4761   000FB8                     T4CLK           equ	4024	;# 
  4762   000FB9                     T4RST           equ	4025	;# 
  4763   000FBA                     T2TMR           equ	4026	;# 
  4764   000FBA                     TMR2            equ	4026	;# 
  4765   000FBB                     T2PR            equ	4027	;# 
  4766   000FBB                     PR2             equ	4027	;# 
  4767   000FBC                     T2CON           equ	4028	;# 
  4768   000FBD                     T2HLT           equ	4029	;# 
  4769   000FBE                     T2CLKCON        equ	4030	;# 
  4770   000FBE                     T2CLK           equ	4030	;# 
  4771   000FBF                     T2RST           equ	4031	;# 
  4772   000FC0                     TMR5            equ	4032	;# 
  4773   000FC0                     TMR5L           equ	4032	;# 
  4774   000FC1                     TMR5H           equ	4033	;# 
  4775   000FC2                     T5CON           equ	4034	;# 
  4776   000FC2                     TMR5CON         equ	4034	;# 
  4777   000FC3                     T5GCON          equ	4035	;# 
  4778   000FC3                     TMR5GCON        equ	4035	;# 
  4779   000FC4                     T5GATE          equ	4036	;# 
  4780   000FC4                     TMR5GATE        equ	4036	;# 
  4781   000FC5                     T5CLK           equ	4037	;# 
  4782   000FC5                     TMR5CLK         equ	4037	;# 
  4783   000FC5                     PR5             equ	4037	;# 
  4784   000FC6                     TMR3            equ	4038	;# 
  4785   000FC6                     TMR3L           equ	4038	;# 
  4786   000FC7                     TMR3H           equ	4039	;# 
  4787   000FC8                     T3CON           equ	4040	;# 
  4788   000FC8                     TMR3CON         equ	4040	;# 
  4789   000FC9                     T3GCON          equ	4041	;# 
  4790   000FC9                     TMR3GCON        equ	4041	;# 
  4791   000FCA                     T3GATE          equ	4042	;# 
  4792   000FCA                     TMR3GATE        equ	4042	;# 
  4793   000FCB                     T3CLK           equ	4043	;# 
  4794   000FCB                     TMR3CLK         equ	4043	;# 
  4795   000FCB                     PR3             equ	4043	;# 
  4796   000FCC                     TMR1            equ	4044	;# 
  4797   000FCC                     TMR1L           equ	4044	;# 
  4798   000FCD                     TMR1H           equ	4045	;# 
  4799   000FCE                     T1CON           equ	4046	;# 
  4800   000FCE                     TMR1CON         equ	4046	;# 
  4801   000FCF                     T1GCON          equ	4047	;# 
  4802   000FCF                     TMR1GCON        equ	4047	;# 
  4803   000FD0                     T1GATE          equ	4048	;# 
  4804   000FD0                     TMR1GATE        equ	4048	;# 
  4805   000FD1                     T1CLK           equ	4049	;# 
  4806   000FD1                     TMR1CLK         equ	4049	;# 
  4807   000FD1                     PR1             equ	4049	;# 
  4808   000FD2                     TMR0L           equ	4050	;# 
  4809   000FD2                     TMR0            equ	4050	;# 
  4810   000FD3                     TMR0H           equ	4051	;# 
  4811   000FD3                     PR0             equ	4051	;# 
  4812   000FD4                     T0CON0          equ	4052	;# 
  4813   000FD5                     T0CON1          equ	4053	;# 
  4814   000FD6                     PCON1           equ	4054	;# 
  4815   000FD7                     PCON0           equ	4055	;# 
  4816   000FD8                     STATUS          equ	4056	;# 
  4817   000FD9                     FSR2            equ	4057	;# 
  4818   000FD9                     FSR2L           equ	4057	;# 
  4819   000FDA                     FSR2H           equ	4058	;# 
  4820   000FDB                     PLUSW2          equ	4059	;# 
  4821   000FDC                     PREINC2         equ	4060	;# 
  4822   000FDD                     POSTDEC2        equ	4061	;# 
  4823   000FDE                     POSTINC2        equ	4062	;# 
  4824   000FDF                     INDF2           equ	4063	;# 
  4825   000FE0                     BSR             equ	4064	;# 
  4826   000FE1                     FSR1            equ	4065	;# 
  4827   000FE1                     FSR1L           equ	4065	;# 
  4828   000FE2                     FSR1H           equ	4066	;# 
  4829   000FE3                     PLUSW1          equ	4067	;# 
  4830   000FE4                     PREINC1         equ	4068	;# 
  4831   000FE5                     POSTDEC1        equ	4069	;# 
  4832   000FE6                     POSTINC1        equ	4070	;# 
  4833   000FE7                     INDF1           equ	4071	;# 
  4834   000FE8                     WREG            equ	4072	;# 
  4835   000FE9                     FSR0            equ	4073	;# 
  4836   000FE9                     FSR0L           equ	4073	;# 
  4837   000FEA                     FSR0H           equ	4074	;# 
  4838   000FEB                     PLUSW0          equ	4075	;# 
  4839   000FEC                     PREINC0         equ	4076	;# 
  4840   000FED                     POSTDEC0        equ	4077	;# 
  4841   000FEE                     POSTINC0        equ	4078	;# 
  4842   000FEF                     INDF0           equ	4079	;# 
  4843   000FF2                     INTCON          equ	4082	;# 
  4844   000FF3                     PROD            equ	4083	;# 
  4845   000FF3                     PRODL           equ	4083	;# 
  4846   000FF4                     PRODH           equ	4084	;# 
  4847   000FF5                     TABLAT          equ	4085	;# 
  4848   000FF6                     TBLPTR          equ	4086	;# 
  4849   000FF6                     TBLPTRL         equ	4086	;# 
  4850   000FF7                     TBLPTRH         equ	4087	;# 
  4851   000FF8                     TBLPTRU         equ	4088	;# 
  4852   000FF9                     PCLAT           equ	4089	;# 
  4853   000FF9                     PC              equ	4089	;# 
  4854   000FF9                     PCL             equ	4089	;# 
  4855   000FFA                     PCLATH          equ	4090	;# 
  4856   000FFB                     PCLATU          equ	4091	;# 
  4857   000FFC                     STKPTR          equ	4092	;# 
  4858   000FFD                     TOS             equ	4093	;# 
  4859   000FFD                     TOSL            equ	4093	;# 
  4860   000FFE                     TOSH            equ	4094	;# 
  4861   000FFF                     TOSU            equ	4095	;# 
  4862   000E9B                     PPSLOCK         equ	3739	;# 
  4863   000E9C                     INT0PPS         equ	3740	;# 
  4864   000E9D                     INT1PPS         equ	3741	;# 
  4865   000E9E                     INT2PPS         equ	3742	;# 
  4866   000E9F                     T0CKIPPS        equ	3743	;# 
  4867   000EA0                     T1CKIPPS        equ	3744	;# 
  4868   000EA1                     T1GPPS          equ	3745	;# 
  4869   000EA2                     T3CKIPPS        equ	3746	;# 
  4870   000EA3                     T3GPPS          equ	3747	;# 
  4871   000EA4                     T5CKIPPS        equ	3748	;# 
  4872   000EA5                     T5GPPS          equ	3749	;# 
  4873   000EA6                     T2INPPS         equ	3750	;# 
  4874   000EA7                     T4INPPS         equ	3751	;# 
  4875   000EA8                     T6INPPS         equ	3752	;# 
  4876   000EA9                     ADACTPPS        equ	3753	;# 
  4877   000EAA                     CCP1PPS         equ	3754	;# 
  4878   000EAB                     CCP2PPS         equ	3755	;# 
  4879   000EAC                     CWG1PPS         equ	3756	;# 
  4880   000EAC                     CWGPPS          equ	3756	;# 
  4881   000EAC                     CWGINPPS        equ	3756	;# 
  4882   000EAC                     CWG1INPPS       equ	3756	;# 
  4883   000EAD                     MDCARLPPS       equ	3757	;# 
  4884   000EAE                     MDCARHPPS       equ	3758	;# 
  4885   000EAF                     MDSRCPPS        equ	3759	;# 
  4886   000EB0                     RX1PPS          equ	3760	;# 
  4887   000EB0                     RXPPS           equ	3760	;# 
  4888   000EB0                     RXDT1PPS        equ	3760	;# 
  4889   000EB1                     CK1PPS          equ	3761	;# 
  4890   000EB1                     TXPPS           equ	3761	;# 
  4891   000EB1                     CKPPS           equ	3761	;# 
  4892   000EB1                     TXCK1PPS        equ	3761	;# 
  4893   000EB1                     TX1PPS          equ	3761	;# 
  4894   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4895   000EB2                     SSPCLKPPS       equ	3762	;# 
  4896   000EB3                     SSP1DATPPS      equ	3763	;# 
  4897   000EB3                     SSPDATPPS       equ	3763	;# 
  4898   000EB4                     SSP1SSPPS       equ	3764	;# 
  4899   000EB4                     SSPSSPPS        equ	3764	;# 
  4900   000EB5                     IPR0            equ	3765	;# 
  4901   000EB6                     IPR1            equ	3766	;# 
  4902   000EB7                     IPR2            equ	3767	;# 
  4903   000EB8                     IPR3            equ	3768	;# 
  4904   000EB9                     IPR4            equ	3769	;# 
  4905   000EBA                     IPR5            equ	3770	;# 
  4906   000EBB                     IPR6            equ	3771	;# 
  4907   000EBC                     IPR7            equ	3772	;# 
  4908   000EBD                     PIE0            equ	3773	;# 
  4909   000EBE                     PIE1            equ	3774	;# 
  4910   000EBF                     PIE2            equ	3775	;# 
  4911   000EC0                     PIE3            equ	3776	;# 
  4912   000EC1                     PIE4            equ	3777	;# 
  4913   000EC2                     PIE5            equ	3778	;# 
  4914   000EC3                     PIE6            equ	3779	;# 
  4915   000EC4                     PIE7            equ	3780	;# 
  4916   000EC5                     PIR0            equ	3781	;# 
  4917   000EC6                     PIR1            equ	3782	;# 
  4918   000EC7                     PIR2            equ	3783	;# 
  4919   000EC8                     PIR3            equ	3784	;# 
  4920   000EC9                     PIR4            equ	3785	;# 
  4921   000ECA                     PIR5            equ	3786	;# 
  4922   000ECB                     PIR6            equ	3787	;# 
  4923   000ECC                     PIR7            equ	3788	;# 
  4924   000ECD                     WDTCON0         equ	3789	;# 
  4925   000ECE                     WDTCON1         equ	3790	;# 
  4926   000ECF                     WDTPSL          equ	3791	;# 
  4927   000ED0                     WDTPSH          equ	3792	;# 
  4928   000ED1                     WDTTMR          equ	3793	;# 
  4929   000ED2                     CPUDOZE         equ	3794	;# 
  4930   000ED3                     OSCCON1         equ	3795	;# 
  4931   000ED4                     OSCCON2         equ	3796	;# 
  4932   000ED5                     OSCCON3         equ	3797	;# 
  4933   000ED6                     OSCSTAT         equ	3798	;# 
  4934   000ED6                     OSCSTAT1        equ	3798	;# 
  4935   000ED7                     OSCEN           equ	3799	;# 
  4936   000ED8                     OSCTUNE         equ	3800	;# 
  4937   000ED9                     OSCFRQ          equ	3801	;# 
  4938   000ED9                     OSCFREQ         equ	3801	;# 
  4939   000EDA                     VREGCON         equ	3802	;# 
  4940   000EDB                     BORCON          equ	3803	;# 
  4941   000EDC                     PMD0            equ	3804	;# 
  4942   000EDD                     PMD1            equ	3805	;# 
  4943   000EDE                     PMD2            equ	3806	;# 
  4944   000EDF                     PMD3            equ	3807	;# 
  4945   000EE0                     PMD4            equ	3808	;# 
  4946   000EE1                     PMD5            equ	3809	;# 
  4947   000EE2                     RA0PPS          equ	3810	;# 
  4948   000EE3                     RA1PPS          equ	3811	;# 
  4949   000EE4                     RA2PPS          equ	3812	;# 
  4950   000EE5                     RA3PPS          equ	3813	;# 
  4951   000EE6                     RA4PPS          equ	3814	;# 
  4952   000EE7                     RA5PPS          equ	3815	;# 
  4953   000EE8                     RA6PPS          equ	3816	;# 
  4954   000EE9                     RA7PPS          equ	3817	;# 
  4955   000EEA                     RB0PPS          equ	3818	;# 
  4956   000EEB                     RB1PPS          equ	3819	;# 
  4957   000EEC                     RB2PPS          equ	3820	;# 
  4958   000EED                     RB3PPS          equ	3821	;# 
  4959   000EEE                     RB4PPS          equ	3822	;# 
  4960   000EEF                     RB5PPS          equ	3823	;# 
  4961   000EF0                     RB6PPS          equ	3824	;# 
  4962   000EF1                     RB7PPS          equ	3825	;# 
  4963   000EF2                     RC0PPS          equ	3826	;# 
  4964   000EF3                     RC1PPS          equ	3827	;# 
  4965   000EF4                     RC2PPS          equ	3828	;# 
  4966   000EF5                     RC3PPS          equ	3829	;# 
  4967   000EF6                     RC4PPS          equ	3830	;# 
  4968   000EF7                     RC5PPS          equ	3831	;# 
  4969   000EF8                     RC6PPS          equ	3832	;# 
  4970   000EF9                     RC7PPS          equ	3833	;# 
  4971   000F05                     IOCAF           equ	3845	;# 
  4972   000F06                     IOCAN           equ	3846	;# 
  4973   000F07                     IOCAP           equ	3847	;# 
  4974   000F08                     INLVLA          equ	3848	;# 
  4975   000F09                     SLRCONA         equ	3849	;# 
  4976   000F0A                     ODCONA          equ	3850	;# 
  4977   000F0B                     WPUA            equ	3851	;# 
  4978   000F0C                     ANSELA          equ	3852	;# 
  4979   000F0D                     IOCBF           equ	3853	;# 
  4980   000F0E                     IOCBN           equ	3854	;# 
  4981   000F0F                     IOCBP           equ	3855	;# 
  4982   000F10                     INLVLB          equ	3856	;# 
  4983   000F11                     SLRCONB         equ	3857	;# 
  4984   000F12                     ODCONB          equ	3858	;# 
  4985   000F13                     WPUB            equ	3859	;# 
  4986   000F14                     ANSELB          equ	3860	;# 
  4987   000F15                     IOCCF           equ	3861	;# 
  4988   000F16                     IOCCN           equ	3862	;# 
  4989   000F17                     IOCCP           equ	3863	;# 
  4990   000F18                     INLVLC          equ	3864	;# 
  4991   000F19                     SLRCONC         equ	3865	;# 
  4992   000F1A                     ODCONC          equ	3866	;# 
  4993   000F1B                     WPUC            equ	3867	;# 
  4994   000F1C                     ANSELC          equ	3868	;# 
  4995   000F22                     IOCEF           equ	3874	;# 
  4996   000F23                     IOCEN           equ	3875	;# 
  4997   000F24                     IOCEP           equ	3876	;# 
  4998   000F25                     INLVLE          equ	3877	;# 
  4999   000F28                     WPUE            equ	3880	;# 
  5000   000F2A                     HLVDCON0        equ	3882	;# 
  5001   000F2B                     HLVDCON1        equ	3883	;# 
  5002   000F2C                     FVRCON          equ	3884	;# 
  5003   000F2D                     ZCDCON          equ	3885	;# 
  5004   000F2E                     DAC1CON0        equ	3886	;# 
  5005   000F2F                     DAC1CON1        equ	3887	;# 
  5006   000F30                     CM2CON0         equ	3888	;# 
  5007   000F31                     CM2CON1         equ	3889	;# 
  5008   000F32                     CM2NCH          equ	3890	;# 
  5009   000F33                     CM2PCH          equ	3891	;# 
  5010   000F34                     CM1CON0         equ	3892	;# 
  5011   000F35                     CM1CON1         equ	3893	;# 
  5012   000F36                     CM1NCH          equ	3894	;# 
  5013   000F37                     CM1PCH          equ	3895	;# 
  5014   000F38                     CMOUT           equ	3896	;# 
  5015   000F39                     CLKRCON         equ	3897	;# 
  5016   000F3A                     CLKRCLK         equ	3898	;# 
  5017   000F3B                     CWG1CLK         equ	3899	;# 
  5018   000F3B                     CWG1CLKCON      equ	3899	;# 
  5019   000F3C                     CWG1ISM         equ	3900	;# 
  5020   000F3D                     CWG1DBR         equ	3901	;# 
  5021   000F3E                     CWG1DBF         equ	3902	;# 
  5022   000F3F                     CWG1CON0        equ	3903	;# 
  5023   000F40                     CWG1CON1        equ	3904	;# 
  5024   000F41                     CWG1AS0         equ	3905	;# 
  5025   000F42                     CWG1AS1         equ	3906	;# 
  5026   000F43                     CWG1STR         equ	3907	;# 
  5027   000F44                     SCANLADR        equ	3908	;# 
  5028   000F44                     SCANLADRL       equ	3908	;# 
  5029   000F45                     SCANLADRH       equ	3909	;# 
  5030   000F46                     SCANLADRU       equ	3910	;# 
  5031   000F47                     SCANHADR        equ	3911	;# 
  5032   000F47                     SCANHADRL       equ	3911	;# 
  5033   000F48                     SCANHADRH       equ	3912	;# 
  5034   000F49                     SCANHADRU       equ	3913	;# 
  5035   000F4A                     SCANCON0        equ	3914	;# 
  5036   000F4B                     SCANTRIG        equ	3915	;# 
  5037   000F4C                     MDCON0          equ	3916	;# 
  5038   000F4D                     MDCON1          equ	3917	;# 
  5039   000F4E                     MDSRC           equ	3918	;# 
  5040   000F4F                     MDCARL          equ	3919	;# 
  5041   000F50                     MDCARH          equ	3920	;# 
  5042   000F51                     ADACT           equ	3921	;# 
  5043   000F52                     ADCLK           equ	3922	;# 
  5044   000F53                     ADREF           equ	3923	;# 
  5045   000F54                     ADCON1          equ	3924	;# 
  5046   000F55                     ADCON2          equ	3925	;# 
  5047   000F56                     ADCON3          equ	3926	;# 
  5048   000F57                     ADACQ           equ	3927	;# 
  5049   000F58                     ADCAP           equ	3928	;# 
  5050   000F59                     ADPRE           equ	3929	;# 
  5051   000F5A                     ADPCH           equ	3930	;# 
  5052   000F5B                     ADCON0          equ	3931	;# 
  5053   000F5C                     ADPREV          equ	3932	;# 
  5054   000F5C                     ADPREVL         equ	3932	;# 
  5055   000F5D                     ADPREVH         equ	3933	;# 
  5056   000F5E                     ADRES           equ	3934	;# 
  5057   000F5E                     ADRESL          equ	3934	;# 
  5058   000F5F                     ADRESH          equ	3935	;# 
  5059   000F60                     ADSTAT          equ	3936	;# 
  5060   000F61                     ADRPT           equ	3937	;# 
  5061   000F62                     ADCNT           equ	3938	;# 
  5062   000F63                     ADSTPT          equ	3939	;# 
  5063   000F63                     ADSTPTL         equ	3939	;# 
  5064   000F64                     ADSTPTH         equ	3940	;# 
  5065   000F65                     ADLTH           equ	3941	;# 
  5066   000F65                     ADLTHL          equ	3941	;# 
  5067   000F66                     ADLTHH          equ	3942	;# 
  5068   000F67                     ADUTH           equ	3943	;# 
  5069   000F67                     ADUTHL          equ	3943	;# 
  5070   000F68                     ADUTHH          equ	3944	;# 
  5071   000F69                     ADERR           equ	3945	;# 
  5072   000F69                     ADERRL          equ	3945	;# 
  5073   000F6A                     ADERRH          equ	3946	;# 
  5074   000F6B                     ADACC           equ	3947	;# 
  5075   000F6B                     ADACCL          equ	3947	;# 
  5076   000F6C                     ADACCH          equ	3948	;# 
  5077   000F6D                     ADFLTR          equ	3949	;# 
  5078   000F6D                     ADFLTRL         equ	3949	;# 
  5079   000F6E                     ADFLTRH         equ	3950	;# 
  5080   000F6F                     CRCDATA         equ	3951	;# 
  5081   000F6F                     CRCDATL         equ	3951	;# 
  5082   000F70                     CRCDATH         equ	3952	;# 
  5083   000F71                     CRCACC          equ	3953	;# 
  5084   000F71                     CRCACCL         equ	3953	;# 
  5085   000F72                     CRCACCH         equ	3954	;# 
  5086   000F73                     CRCSHFT         equ	3955	;# 
  5087   000F73                     CRCSHIFTL       equ	3955	;# 
  5088   000F74                     CRCSHIFTH       equ	3956	;# 
  5089   000F75                     CRCXOR          equ	3957	;# 
  5090   000F75                     CRCXORL         equ	3957	;# 
  5091   000F76                     CRCXORH         equ	3958	;# 
  5092   000F77                     CRCCON0         equ	3959	;# 
  5093   000F78                     CRCCON1         equ	3960	;# 
  5094   000F79                     NVMADR          equ	3961	;# 
  5095   000F79                     NVMADRL         equ	3961	;# 
  5096   000F7A                     NVMADRH         equ	3962	;# 
  5097   000F7B                     NVMADRU         equ	3963	;# 
  5098   000F7C                     NVMDAT          equ	3964	;# 
  5099   000F7C                     NVMDATL         equ	3964	;# 
  5100   000F7D                     NVMDATH         equ	3965	;# 
  5101   000F7F                     NVMCON0         equ	3967	;# 
  5102   000F80                     NVMCON1         equ	3968	;# 
  5103   000F81                     NVMCON2         equ	3969	;# 
  5104   000F82                     LATA            equ	3970	;# 
  5105   000F83                     LATB            equ	3971	;# 
  5106   000F84                     LATC            equ	3972	;# 
  5107   000F87                     TRISA           equ	3975	;# 
  5108   000F87                     DDRA            equ	3975	;# 
  5109   000F88                     TRISB           equ	3976	;# 
  5110   000F88                     DDRB            equ	3976	;# 
  5111   000F89                     TRISC           equ	3977	;# 
  5112   000F89                     DDRC            equ	3977	;# 
  5113   000F8C                     PORTA           equ	3980	;# 
  5114   000F8D                     PORTB           equ	3981	;# 
  5115   000F8E                     PORTC           equ	3982	;# 
  5116   000F90                     PORTE           equ	3984	;# 
  5117   000F91                     SSP1BUF         equ	3985	;# 
  5118   000F92                     SSP1ADD         equ	3986	;# 
  5119   000F93                     SSP1MSK         equ	3987	;# 
  5120   000F94                     SSP1STAT        equ	3988	;# 
  5121   000F95                     SSP1CON1        equ	3989	;# 
  5122   000F96                     SSP1CON2        equ	3990	;# 
  5123   000F97                     SSP1CON3        equ	3991	;# 
  5124   000F98                     RC1REG          equ	3992	;# 
  5125   000F98                     RCREG           equ	3992	;# 
  5126   000F98                     RCREG1          equ	3992	;# 
  5127   000F99                     TX1REG          equ	3993	;# 
  5128   000F99                     TXREG1          equ	3993	;# 
  5129   000F99                     TXREG           equ	3993	;# 
  5130   000F9A                     SP1BRG          equ	3994	;# 
  5131   000F9A                     SPBRG           equ	3994	;# 
  5132   000F9A                     SP1BRGL         equ	3994	;# 
  5133   000F9A                     SPBRG1          equ	3994	;# 
  5134   000F9A                     SPBRGL          equ	3994	;# 
  5135   000F9B                     SP1BRGH         equ	3995	;# 
  5136   000F9B                     SPBRGH          equ	3995	;# 
  5137   000F9B                     SPBRGH1         equ	3995	;# 
  5138   000F9C                     RC1STA          equ	3996	;# 
  5139   000F9C                     RCSTA1          equ	3996	;# 
  5140   000F9C                     RCSTA           equ	3996	;# 
  5141   000F9D                     TX1STA          equ	3997	;# 
  5142   000F9D                     TXSTA1          equ	3997	;# 
  5143   000F9D                     TXSTA           equ	3997	;# 
  5144   000F9E                     BAUD1CON        equ	3998	;# 
  5145   000F9E                     BAUDCON1        equ	3998	;# 
  5146   000F9E                     BAUDCTL1        equ	3998	;# 
  5147   000F9E                     BAUDCON         equ	3998	;# 
  5148   000F9E                     BAUDCTL         equ	3998	;# 
  5149   000F9F                     PWM4DC          equ	3999	;# 
  5150   000F9F                     PWM4DCL         equ	3999	;# 
  5151   000FA0                     PWM4DCH         equ	4000	;# 
  5152   000FA1                     PWM4CON         equ	4001	;# 
  5153   000FA2                     PWM3DC          equ	4002	;# 
  5154   000FA2                     PWM3DCL         equ	4002	;# 
  5155   000FA3                     PWM3DCH         equ	4003	;# 
  5156   000FA4                     PWM3CON         equ	4004	;# 
  5157   000FA5                     CCPR2           equ	4005	;# 
  5158   000FA5                     CCPR2L          equ	4005	;# 
  5159   000FA6                     CCPR2H          equ	4006	;# 
  5160   000FA7                     CCP2CON         equ	4007	;# 
  5161   000FA8                     CCP2CAP         equ	4008	;# 
  5162   000FA9                     CCPR1           equ	4009	;# 
  5163   000FA9                     CCPR1L          equ	4009	;# 
  5164   000FAA                     CCPR1H          equ	4010	;# 
  5165   000FAB                     CCP1CON         equ	4011	;# 
  5166   000FAC                     CCP1CAP         equ	4012	;# 
  5167   000FAD                     CCPTMRS         equ	4013	;# 
  5168   000FAE                     T6TMR           equ	4014	;# 
  5169   000FAE                     TMR6            equ	4014	;# 
  5170   000FAF                     T6PR            equ	4015	;# 
  5171   000FAF                     PR6             equ	4015	;# 
  5172   000FB0                     T6CON           equ	4016	;# 
  5173   000FB1                     T6HLT           equ	4017	;# 
  5174   000FB2                     T6CLKCON        equ	4018	;# 
  5175   000FB2                     T6CLK           equ	4018	;# 
  5176   000FB3                     T6RST           equ	4019	;# 
  5177   000FB4                     T4TMR           equ	4020	;# 
  5178   000FB4                     TMR4            equ	4020	;# 
  5179   000FB5                     T4PR            equ	4021	;# 
  5180   000FB5                     PR4             equ	4021	;# 
  5181   000FB6                     T4CON           equ	4022	;# 
  5182   000FB7                     T4HLT           equ	4023	;# 
  5183   000FB8                     T4CLKCON        equ	4024	;# 
  5184   000FB8                     T4CLK           equ	4024	;# 
  5185   000FB9                     T4RST           equ	4025	;# 
  5186   000FBA                     T2TMR           equ	4026	;# 
  5187   000FBA                     TMR2            equ	4026	;# 
  5188   000FBB                     T2PR            equ	4027	;# 
  5189   000FBB                     PR2             equ	4027	;# 
  5190   000FBC                     T2CON           equ	4028	;# 
  5191   000FBD                     T2HLT           equ	4029	;# 
  5192   000FBE                     T2CLKCON        equ	4030	;# 
  5193   000FBE                     T2CLK           equ	4030	;# 
  5194   000FBF                     T2RST           equ	4031	;# 
  5195   000FC0                     TMR5            equ	4032	;# 
  5196   000FC0                     TMR5L           equ	4032	;# 
  5197   000FC1                     TMR5H           equ	4033	;# 
  5198   000FC2                     T5CON           equ	4034	;# 
  5199   000FC2                     TMR5CON         equ	4034	;# 
  5200   000FC3                     T5GCON          equ	4035	;# 
  5201   000FC3                     TMR5GCON        equ	4035	;# 
  5202   000FC4                     T5GATE          equ	4036	;# 
  5203   000FC4                     TMR5GATE        equ	4036	;# 
  5204   000FC5                     T5CLK           equ	4037	;# 
  5205   000FC5                     TMR5CLK         equ	4037	;# 
  5206   000FC5                     PR5             equ	4037	;# 
  5207   000FC6                     TMR3            equ	4038	;# 
  5208   000FC6                     TMR3L           equ	4038	;# 
  5209   000FC7                     TMR3H           equ	4039	;# 
  5210   000FC8                     T3CON           equ	4040	;# 
  5211   000FC8                     TMR3CON         equ	4040	;# 
  5212   000FC9                     T3GCON          equ	4041	;# 
  5213   000FC9                     TMR3GCON        equ	4041	;# 
  5214   000FCA                     T3GATE          equ	4042	;# 
  5215   000FCA                     TMR3GATE        equ	4042	;# 
  5216   000FCB                     T3CLK           equ	4043	;# 
  5217   000FCB                     TMR3CLK         equ	4043	;# 
  5218   000FCB                     PR3             equ	4043	;# 
  5219   000FCC                     TMR1            equ	4044	;# 
  5220   000FCC                     TMR1L           equ	4044	;# 
  5221   000FCD                     TMR1H           equ	4045	;# 
  5222   000FCE                     T1CON           equ	4046	;# 
  5223   000FCE                     TMR1CON         equ	4046	;# 
  5224   000FCF                     T1GCON          equ	4047	;# 
  5225   000FCF                     TMR1GCON        equ	4047	;# 
  5226   000FD0                     T1GATE          equ	4048	;# 
  5227   000FD0                     TMR1GATE        equ	4048	;# 
  5228   000FD1                     T1CLK           equ	4049	;# 
  5229   000FD1                     TMR1CLK         equ	4049	;# 
  5230   000FD1                     PR1             equ	4049	;# 
  5231   000FD2                     TMR0L           equ	4050	;# 
  5232   000FD2                     TMR0            equ	4050	;# 
  5233   000FD3                     TMR0H           equ	4051	;# 
  5234   000FD3                     PR0             equ	4051	;# 
  5235   000FD4                     T0CON0          equ	4052	;# 
  5236   000FD5                     T0CON1          equ	4053	;# 
  5237   000FD6                     PCON1           equ	4054	;# 
  5238   000FD7                     PCON0           equ	4055	;# 
  5239   000FD8                     STATUS          equ	4056	;# 
  5240   000FD9                     FSR2            equ	4057	;# 
  5241   000FD9                     FSR2L           equ	4057	;# 
  5242   000FDA                     FSR2H           equ	4058	;# 
  5243   000FDB                     PLUSW2          equ	4059	;# 
  5244   000FDC                     PREINC2         equ	4060	;# 
  5245   000FDD                     POSTDEC2        equ	4061	;# 
  5246   000FDE                     POSTINC2        equ	4062	;# 
  5247   000FDF                     INDF2           equ	4063	;# 
  5248   000FE0                     BSR             equ	4064	;# 
  5249   000FE1                     FSR1            equ	4065	;# 
  5250   000FE1                     FSR1L           equ	4065	;# 
  5251   000FE2                     FSR1H           equ	4066	;# 
  5252   000FE3                     PLUSW1          equ	4067	;# 
  5253   000FE4                     PREINC1         equ	4068	;# 
  5254   000FE5                     POSTDEC1        equ	4069	;# 
  5255   000FE6                     POSTINC1        equ	4070	;# 
  5256   000FE7                     INDF1           equ	4071	;# 
  5257   000FE8                     WREG            equ	4072	;# 
  5258   000FE9                     FSR0            equ	4073	;# 
  5259   000FE9                     FSR0L           equ	4073	;# 
  5260   000FEA                     FSR0H           equ	4074	;# 
  5261   000FEB                     PLUSW0          equ	4075	;# 
  5262   000FEC                     PREINC0         equ	4076	;# 
  5263   000FED                     POSTDEC0        equ	4077	;# 
  5264   000FEE                     POSTINC0        equ	4078	;# 
  5265   000FEF                     INDF0           equ	4079	;# 
  5266   000FF2                     INTCON          equ	4082	;# 
  5267   000FF3                     PROD            equ	4083	;# 
  5268   000FF3                     PRODL           equ	4083	;# 
  5269   000FF4                     PRODH           equ	4084	;# 
  5270   000FF5                     TABLAT          equ	4085	;# 
  5271   000FF6                     TBLPTR          equ	4086	;# 
  5272   000FF6                     TBLPTRL         equ	4086	;# 
  5273   000FF7                     TBLPTRH         equ	4087	;# 
  5274   000FF8                     TBLPTRU         equ	4088	;# 
  5275   000FF9                     PCLAT           equ	4089	;# 
  5276   000FF9                     PC              equ	4089	;# 
  5277   000FF9                     PCL             equ	4089	;# 
  5278   000FFA                     PCLATH          equ	4090	;# 
  5279   000FFB                     PCLATU          equ	4091	;# 
  5280   000FFC                     STKPTR          equ	4092	;# 
  5281   000FFD                     TOS             equ	4093	;# 
  5282   000FFD                     TOSL            equ	4093	;# 
  5283   000FFE                     TOSH            equ	4094	;# 
  5284   000FFF                     TOSU            equ	4095	;# 
  5285   000E9B                     PPSLOCK         equ	3739	;# 
  5286   000E9C                     INT0PPS         equ	3740	;# 
  5287   000E9D                     INT1PPS         equ	3741	;# 
  5288   000E9E                     INT2PPS         equ	3742	;# 
  5289   000E9F                     T0CKIPPS        equ	3743	;# 
  5290   000EA0                     T1CKIPPS        equ	3744	;# 
  5291   000EA1                     T1GPPS          equ	3745	;# 
  5292   000EA2                     T3CKIPPS        equ	3746	;# 
  5293   000EA3                     T3GPPS          equ	3747	;# 
  5294   000EA4                     T5CKIPPS        equ	3748	;# 
  5295   000EA5                     T5GPPS          equ	3749	;# 
  5296   000EA6                     T2INPPS         equ	3750	;# 
  5297   000EA7                     T4INPPS         equ	3751	;# 
  5298   000EA8                     T6INPPS         equ	3752	;# 
  5299   000EA9                     ADACTPPS        equ	3753	;# 
  5300   000EAA                     CCP1PPS         equ	3754	;# 
  5301   000EAB                     CCP2PPS         equ	3755	;# 
  5302   000EAC                     CWG1PPS         equ	3756	;# 
  5303   000EAC                     CWGPPS          equ	3756	;# 
  5304   000EAC                     CWGINPPS        equ	3756	;# 
  5305   000EAC                     CWG1INPPS       equ	3756	;# 
  5306   000EAD                     MDCARLPPS       equ	3757	;# 
  5307   000EAE                     MDCARHPPS       equ	3758	;# 
  5308   000EAF                     MDSRCPPS        equ	3759	;# 
  5309   000EB0                     RX1PPS          equ	3760	;# 
  5310   000EB0                     RXPPS           equ	3760	;# 
  5311   000EB0                     RXDT1PPS        equ	3760	;# 
  5312   000EB1                     CK1PPS          equ	3761	;# 
  5313   000EB1                     TXPPS           equ	3761	;# 
  5314   000EB1                     CKPPS           equ	3761	;# 
  5315   000EB1                     TXCK1PPS        equ	3761	;# 
  5316   000EB1                     TX1PPS          equ	3761	;# 
  5317   000EB2                     SSP1CLKPPS      equ	3762	;# 
  5318   000EB2                     SSPCLKPPS       equ	3762	;# 
  5319   000EB3                     SSP1DATPPS      equ	3763	;# 
  5320   000EB3                     SSPDATPPS       equ	3763	;# 
  5321   000EB4                     SSP1SSPPS       equ	3764	;# 
  5322   000EB4                     SSPSSPPS        equ	3764	;# 
  5323   000EB5                     IPR0            equ	3765	;# 
  5324   000EB6                     IPR1            equ	3766	;# 
  5325   000EB7                     IPR2            equ	3767	;# 
  5326   000EB8                     IPR3            equ	3768	;# 
  5327   000EB9                     IPR4            equ	3769	;# 
  5328   000EBA                     IPR5            equ	3770	;# 
  5329   000EBB                     IPR6            equ	3771	;# 
  5330   000EBC                     IPR7            equ	3772	;# 
  5331   000EBD                     PIE0            equ	3773	;# 
  5332   000EBE                     PIE1            equ	3774	;# 
  5333   000EBF                     PIE2            equ	3775	;# 
  5334   000EC0                     PIE3            equ	3776	;# 
  5335   000EC1                     PIE4            equ	3777	;# 
  5336   000EC2                     PIE5            equ	3778	;# 
  5337   000EC3                     PIE6            equ	3779	;# 
  5338   000EC4                     PIE7            equ	3780	;# 
  5339   000EC5                     PIR0            equ	3781	;# 
  5340   000EC6                     PIR1            equ	3782	;# 
  5341   000EC7                     PIR2            equ	3783	;# 
  5342   000EC8                     PIR3            equ	3784	;# 
  5343   000EC9                     PIR4            equ	3785	;# 
  5344   000ECA                     PIR5            equ	3786	;# 
  5345   000ECB                     PIR6            equ	3787	;# 
  5346   000ECC                     PIR7            equ	3788	;# 
  5347   000ECD                     WDTCON0         equ	3789	;# 
  5348   000ECE                     WDTCON1         equ	3790	;# 
  5349   000ECF                     WDTPSL          equ	3791	;# 
  5350   000ED0                     WDTPSH          equ	3792	;# 
  5351   000ED1                     WDTTMR          equ	3793	;# 
  5352   000ED2                     CPUDOZE         equ	3794	;# 
  5353   000ED3                     OSCCON1         equ	3795	;# 
  5354   000ED4                     OSCCON2         equ	3796	;# 
  5355   000ED5                     OSCCON3         equ	3797	;# 
  5356   000ED6                     OSCSTAT         equ	3798	;# 
  5357   000ED6                     OSCSTAT1        equ	3798	;# 
  5358   000ED7                     OSCEN           equ	3799	;# 
  5359   000ED8                     OSCTUNE         equ	3800	;# 
  5360   000ED9                     OSCFRQ          equ	3801	;# 
  5361   000ED9                     OSCFREQ         equ	3801	;# 
  5362   000EDA                     VREGCON         equ	3802	;# 
  5363   000EDB                     BORCON          equ	3803	;# 
  5364   000EDC                     PMD0            equ	3804	;# 
  5365   000EDD                     PMD1            equ	3805	;# 
  5366   000EDE                     PMD2            equ	3806	;# 
  5367   000EDF                     PMD3            equ	3807	;# 
  5368   000EE0                     PMD4            equ	3808	;# 
  5369   000EE1                     PMD5            equ	3809	;# 
  5370   000EE2                     RA0PPS          equ	3810	;# 
  5371   000EE3                     RA1PPS          equ	3811	;# 
  5372   000EE4                     RA2PPS          equ	3812	;# 
  5373   000EE5                     RA3PPS          equ	3813	;# 
  5374   000EE6                     RA4PPS          equ	3814	;# 
  5375   000EE7                     RA5PPS          equ	3815	;# 
  5376   000EE8                     RA6PPS          equ	3816	;# 
  5377   000EE9                     RA7PPS          equ	3817	;# 
  5378   000EEA                     RB0PPS          equ	3818	;# 
  5379   000EEB                     RB1PPS          equ	3819	;# 
  5380   000EEC                     RB2PPS          equ	3820	;# 
  5381   000EED                     RB3PPS          equ	3821	;# 
  5382   000EEE                     RB4PPS          equ	3822	;# 
  5383   000EEF                     RB5PPS          equ	3823	;# 
  5384   000EF0                     RB6PPS          equ	3824	;# 
  5385   000EF1                     RB7PPS          equ	3825	;# 
  5386   000EF2                     RC0PPS          equ	3826	;# 
  5387   000EF3                     RC1PPS          equ	3827	;# 
  5388   000EF4                     RC2PPS          equ	3828	;# 
  5389   000EF5                     RC3PPS          equ	3829	;# 
  5390   000EF6                     RC4PPS          equ	3830	;# 
  5391   000EF7                     RC5PPS          equ	3831	;# 
  5392   000EF8                     RC6PPS          equ	3832	;# 
  5393   000EF9                     RC7PPS          equ	3833	;# 
  5394   000F05                     IOCAF           equ	3845	;# 
  5395   000F06                     IOCAN           equ	3846	;# 
  5396   000F07                     IOCAP           equ	3847	;# 
  5397   000F08                     INLVLA          equ	3848	;# 
  5398   000F09                     SLRCONA         equ	3849	;# 
  5399   000F0A                     ODCONA          equ	3850	;# 
  5400   000F0B                     WPUA            equ	3851	;# 
  5401   000F0C                     ANSELA          equ	3852	;# 
  5402   000F0D                     IOCBF           equ	3853	;# 
  5403   000F0E                     IOCBN           equ	3854	;# 
  5404   000F0F                     IOCBP           equ	3855	;# 
  5405   000F10                     INLVLB          equ	3856	;# 
  5406   000F11                     SLRCONB         equ	3857	;# 
  5407   000F12                     ODCONB          equ	3858	;# 
  5408   000F13                     WPUB            equ	3859	;# 
  5409   000F14                     ANSELB          equ	3860	;# 
  5410   000F15                     IOCCF           equ	3861	;# 
  5411   000F16                     IOCCN           equ	3862	;# 
  5412   000F17                     IOCCP           equ	3863	;# 
  5413   000F18                     INLVLC          equ	3864	;# 
  5414   000F19                     SLRCONC         equ	3865	;# 
  5415   000F1A                     ODCONC          equ	3866	;# 
  5416   000F1B                     WPUC            equ	3867	;# 
  5417   000F1C                     ANSELC          equ	3868	;# 
  5418   000F22                     IOCEF           equ	3874	;# 
  5419   000F23                     IOCEN           equ	3875	;# 
  5420   000F24                     IOCEP           equ	3876	;# 
  5421   000F25                     INLVLE          equ	3877	;# 
  5422   000F28                     WPUE            equ	3880	;# 
  5423   000F2A                     HLVDCON0        equ	3882	;# 
  5424   000F2B                     HLVDCON1        equ	3883	;# 
  5425   000F2C                     FVRCON          equ	3884	;# 
  5426   000F2D                     ZCDCON          equ	3885	;# 
  5427   000F2E                     DAC1CON0        equ	3886	;# 
  5428   000F2F                     DAC1CON1        equ	3887	;# 
  5429   000F30                     CM2CON0         equ	3888	;# 
  5430   000F31                     CM2CON1         equ	3889	;# 
  5431   000F32                     CM2NCH          equ	3890	;# 
  5432   000F33                     CM2PCH          equ	3891	;# 
  5433   000F34                     CM1CON0         equ	3892	;# 
  5434   000F35                     CM1CON1         equ	3893	;# 
  5435   000F36                     CM1NCH          equ	3894	;# 
  5436   000F37                     CM1PCH          equ	3895	;# 
  5437   000F38                     CMOUT           equ	3896	;# 
  5438   000F39                     CLKRCON         equ	3897	;# 
  5439   000F3A                     CLKRCLK         equ	3898	;# 
  5440   000F3B                     CWG1CLK         equ	3899	;# 
  5441   000F3B                     CWG1CLKCON      equ	3899	;# 
  5442   000F3C                     CWG1ISM         equ	3900	;# 
  5443   000F3D                     CWG1DBR         equ	3901	;# 
  5444   000F3E                     CWG1DBF         equ	3902	;# 
  5445   000F3F                     CWG1CON0        equ	3903	;# 
  5446   000F40                     CWG1CON1        equ	3904	;# 
  5447   000F41                     CWG1AS0         equ	3905	;# 
  5448   000F42                     CWG1AS1         equ	3906	;# 
  5449   000F43                     CWG1STR         equ	3907	;# 
  5450   000F44                     SCANLADR        equ	3908	;# 
  5451   000F44                     SCANLADRL       equ	3908	;# 
  5452   000F45                     SCANLADRH       equ	3909	;# 
  5453   000F46                     SCANLADRU       equ	3910	;# 
  5454   000F47                     SCANHADR        equ	3911	;# 
  5455   000F47                     SCANHADRL       equ	3911	;# 
  5456   000F48                     SCANHADRH       equ	3912	;# 
  5457   000F49                     SCANHADRU       equ	3913	;# 
  5458   000F4A                     SCANCON0        equ	3914	;# 
  5459   000F4B                     SCANTRIG        equ	3915	;# 
  5460   000F4C                     MDCON0          equ	3916	;# 
  5461   000F4D                     MDCON1          equ	3917	;# 
  5462   000F4E                     MDSRC           equ	3918	;# 
  5463   000F4F                     MDCARL          equ	3919	;# 
  5464   000F50                     MDCARH          equ	3920	;# 
  5465   000F51                     ADACT           equ	3921	;# 
  5466   000F52                     ADCLK           equ	3922	;# 
  5467   000F53                     ADREF           equ	3923	;# 
  5468   000F54                     ADCON1          equ	3924	;# 
  5469   000F55                     ADCON2          equ	3925	;# 
  5470   000F56                     ADCON3          equ	3926	;# 
  5471   000F57                     ADACQ           equ	3927	;# 
  5472   000F58                     ADCAP           equ	3928	;# 
  5473   000F59                     ADPRE           equ	3929	;# 
  5474   000F5A                     ADPCH           equ	3930	;# 
  5475   000F5B                     ADCON0          equ	3931	;# 
  5476   000F5C                     ADPREV          equ	3932	;# 
  5477   000F5C                     ADPREVL         equ	3932	;# 
  5478   000F5D                     ADPREVH         equ	3933	;# 
  5479   000F5E                     ADRES           equ	3934	;# 
  5480   000F5E                     ADRESL          equ	3934	;# 
  5481   000F5F                     ADRESH          equ	3935	;# 
  5482   000F60                     ADSTAT          equ	3936	;# 
  5483   000F61                     ADRPT           equ	3937	;# 
  5484   000F62                     ADCNT           equ	3938	;# 
  5485   000F63                     ADSTPT          equ	3939	;# 
  5486   000F63                     ADSTPTL         equ	3939	;# 
  5487   000F64                     ADSTPTH         equ	3940	;# 
  5488   000F65                     ADLTH           equ	3941	;# 
  5489   000F65                     ADLTHL          equ	3941	;# 
  5490   000F66                     ADLTHH          equ	3942	;# 
  5491   000F67                     ADUTH           equ	3943	;# 
  5492   000F67                     ADUTHL          equ	3943	;# 
  5493   000F68                     ADUTHH          equ	3944	;# 
  5494   000F69                     ADERR           equ	3945	;# 
  5495   000F69                     ADERRL          equ	3945	;# 
  5496   000F6A                     ADERRH          equ	3946	;# 
  5497   000F6B                     ADACC           equ	3947	;# 
  5498   000F6B                     ADACCL          equ	3947	;# 
  5499   000F6C                     ADACCH          equ	3948	;# 
  5500   000F6D                     ADFLTR          equ	3949	;# 
  5501   000F6D                     ADFLTRL         equ	3949	;# 
  5502   000F6E                     ADFLTRH         equ	3950	;# 
  5503   000F6F                     CRCDATA         equ	3951	;# 
  5504   000F6F                     CRCDATL         equ	3951	;# 
  5505   000F70                     CRCDATH         equ	3952	;# 
  5506   000F71                     CRCACC          equ	3953	;# 
  5507   000F71                     CRCACCL         equ	3953	;# 
  5508   000F72                     CRCACCH         equ	3954	;# 
  5509   000F73                     CRCSHFT         equ	3955	;# 
  5510   000F73                     CRCSHIFTL       equ	3955	;# 
  5511   000F74                     CRCSHIFTH       equ	3956	;# 
  5512   000F75                     CRCXOR          equ	3957	;# 
  5513   000F75                     CRCXORL         equ	3957	;# 
  5514   000F76                     CRCXORH         equ	3958	;# 
  5515   000F77                     CRCCON0         equ	3959	;# 
  5516   000F78                     CRCCON1         equ	3960	;# 
  5517   000F79                     NVMADR          equ	3961	;# 
  5518   000F79                     NVMADRL         equ	3961	;# 
  5519   000F7A                     NVMADRH         equ	3962	;# 
  5520   000F7B                     NVMADRU         equ	3963	;# 
  5521   000F7C                     NVMDAT          equ	3964	;# 
  5522   000F7C                     NVMDATL         equ	3964	;# 
  5523   000F7D                     NVMDATH         equ	3965	;# 
  5524   000F7F                     NVMCON0         equ	3967	;# 
  5525   000F80                     NVMCON1         equ	3968	;# 
  5526   000F81                     NVMCON2         equ	3969	;# 
  5527   000F82                     LATA            equ	3970	;# 
  5528   000F83                     LATB            equ	3971	;# 
  5529   000F84                     LATC            equ	3972	;# 
  5530   000F87                     TRISA           equ	3975	;# 
  5531   000F87                     DDRA            equ	3975	;# 
  5532   000F88                     TRISB           equ	3976	;# 
  5533   000F88                     DDRB            equ	3976	;# 
  5534   000F89                     TRISC           equ	3977	;# 
  5535   000F89                     DDRC            equ	3977	;# 
  5536   000F8C                     PORTA           equ	3980	;# 
  5537   000F8D                     PORTB           equ	3981	;# 
  5538   000F8E                     PORTC           equ	3982	;# 
  5539   000F90                     PORTE           equ	3984	;# 
  5540   000F91                     SSP1BUF         equ	3985	;# 
  5541   000F92                     SSP1ADD         equ	3986	;# 
  5542   000F93                     SSP1MSK         equ	3987	;# 
  5543   000F94                     SSP1STAT        equ	3988	;# 
  5544   000F95                     SSP1CON1        equ	3989	;# 
  5545   000F96                     SSP1CON2        equ	3990	;# 
  5546   000F97                     SSP1CON3        equ	3991	;# 
  5547   000F98                     RC1REG          equ	3992	;# 
  5548   000F98                     RCREG           equ	3992	;# 
  5549   000F98                     RCREG1          equ	3992	;# 
  5550   000F99                     TX1REG          equ	3993	;# 
  5551   000F99                     TXREG1          equ	3993	;# 
  5552   000F99                     TXREG           equ	3993	;# 
  5553   000F9A                     SP1BRG          equ	3994	;# 
  5554   000F9A                     SPBRG           equ	3994	;# 
  5555   000F9A                     SP1BRGL         equ	3994	;# 
  5556   000F9A                     SPBRG1          equ	3994	;# 
  5557   000F9A                     SPBRGL          equ	3994	;# 
  5558   000F9B                     SP1BRGH         equ	3995	;# 
  5559   000F9B                     SPBRGH          equ	3995	;# 
  5560   000F9B                     SPBRGH1         equ	3995	;# 
  5561   000F9C                     RC1STA          equ	3996	;# 
  5562   000F9C                     RCSTA1          equ	3996	;# 
  5563   000F9C                     RCSTA           equ	3996	;# 
  5564   000F9D                     TX1STA          equ	3997	;# 
  5565   000F9D                     TXSTA1          equ	3997	;# 
  5566   000F9D                     TXSTA           equ	3997	;# 
  5567   000F9E                     BAUD1CON        equ	3998	;# 
  5568   000F9E                     BAUDCON1        equ	3998	;# 
  5569   000F9E                     BAUDCTL1        equ	3998	;# 
  5570   000F9E                     BAUDCON         equ	3998	;# 
  5571   000F9E                     BAUDCTL         equ	3998	;# 
  5572   000F9F                     PWM4DC          equ	3999	;# 
  5573   000F9F                     PWM4DCL         equ	3999	;# 
  5574   000FA0                     PWM4DCH         equ	4000	;# 
  5575   000FA1                     PWM4CON         equ	4001	;# 
  5576   000FA2                     PWM3DC          equ	4002	;# 
  5577   000FA2                     PWM3DCL         equ	4002	;# 
  5578   000FA3                     PWM3DCH         equ	4003	;# 
  5579   000FA4                     PWM3CON         equ	4004	;# 
  5580   000FA5                     CCPR2           equ	4005	;# 
  5581   000FA5                     CCPR2L          equ	4005	;# 
  5582   000FA6                     CCPR2H          equ	4006	;# 
  5583   000FA7                     CCP2CON         equ	4007	;# 
  5584   000FA8                     CCP2CAP         equ	4008	;# 
  5585   000FA9                     CCPR1           equ	4009	;# 
  5586   000FA9                     CCPR1L          equ	4009	;# 
  5587   000FAA                     CCPR1H          equ	4010	;# 
  5588   000FAB                     CCP1CON         equ	4011	;# 
  5589   000FAC                     CCP1CAP         equ	4012	;# 
  5590   000FAD                     CCPTMRS         equ	4013	;# 
  5591   000FAE                     T6TMR           equ	4014	;# 
  5592   000FAE                     TMR6            equ	4014	;# 
  5593   000FAF                     T6PR            equ	4015	;# 
  5594   000FAF                     PR6             equ	4015	;# 
  5595   000FB0                     T6CON           equ	4016	;# 
  5596   000FB1                     T6HLT           equ	4017	;# 
  5597   000FB2                     T6CLKCON        equ	4018	;# 
  5598   000FB2                     T6CLK           equ	4018	;# 
  5599   000FB3                     T6RST           equ	4019	;# 
  5600   000FB4                     T4TMR           equ	4020	;# 
  5601   000FB4                     TMR4            equ	4020	;# 
  5602   000FB5                     T4PR            equ	4021	;# 
  5603   000FB5                     PR4             equ	4021	;# 
  5604   000FB6                     T4CON           equ	4022	;# 
  5605   000FB7                     T4HLT           equ	4023	;# 
  5606   000FB8                     T4CLKCON        equ	4024	;# 
  5607   000FB8                     T4CLK           equ	4024	;# 
  5608   000FB9                     T4RST           equ	4025	;# 
  5609   000FBA                     T2TMR           equ	4026	;# 
  5610   000FBA                     TMR2            equ	4026	;# 
  5611   000FBB                     T2PR            equ	4027	;# 
  5612   000FBB                     PR2             equ	4027	;# 
  5613   000FBC                     T2CON           equ	4028	;# 
  5614   000FBD                     T2HLT           equ	4029	;# 
  5615   000FBE                     T2CLKCON        equ	4030	;# 
  5616   000FBE                     T2CLK           equ	4030	;# 
  5617   000FBF                     T2RST           equ	4031	;# 
  5618   000FC0                     TMR5            equ	4032	;# 
  5619   000FC0                     TMR5L           equ	4032	;# 
  5620   000FC1                     TMR5H           equ	4033	;# 
  5621   000FC2                     T5CON           equ	4034	;# 
  5622   000FC2                     TMR5CON         equ	4034	;# 
  5623   000FC3                     T5GCON          equ	4035	;# 
  5624   000FC3                     TMR5GCON        equ	4035	;# 
  5625   000FC4                     T5GATE          equ	4036	;# 
  5626   000FC4                     TMR5GATE        equ	4036	;# 
  5627   000FC5                     T5CLK           equ	4037	;# 
  5628   000FC5                     TMR5CLK         equ	4037	;# 
  5629   000FC5                     PR5             equ	4037	;# 
  5630   000FC6                     TMR3            equ	4038	;# 
  5631   000FC6                     TMR3L           equ	4038	;# 
  5632   000FC7                     TMR3H           equ	4039	;# 
  5633   000FC8                     T3CON           equ	4040	;# 
  5634   000FC8                     TMR3CON         equ	4040	;# 
  5635   000FC9                     T3GCON          equ	4041	;# 
  5636   000FC9                     TMR3GCON        equ	4041	;# 
  5637   000FCA                     T3GATE          equ	4042	;# 
  5638   000FCA                     TMR3GATE        equ	4042	;# 
  5639   000FCB                     T3CLK           equ	4043	;# 
  5640   000FCB                     TMR3CLK         equ	4043	;# 
  5641   000FCB                     PR3             equ	4043	;# 
  5642   000FCC                     TMR1            equ	4044	;# 
  5643   000FCC                     TMR1L           equ	4044	;# 
  5644   000FCD                     TMR1H           equ	4045	;# 
  5645   000FCE                     T1CON           equ	4046	;# 
  5646   000FCE                     TMR1CON         equ	4046	;# 
  5647   000FCF                     T1GCON          equ	4047	;# 
  5648   000FCF                     TMR1GCON        equ	4047	;# 
  5649   000FD0                     T1GATE          equ	4048	;# 
  5650   000FD0                     TMR1GATE        equ	4048	;# 
  5651   000FD1                     T1CLK           equ	4049	;# 
  5652   000FD1                     TMR1CLK         equ	4049	;# 
  5653   000FD1                     PR1             equ	4049	;# 
  5654   000FD2                     TMR0L           equ	4050	;# 
  5655   000FD2                     TMR0            equ	4050	;# 
  5656   000FD3                     TMR0H           equ	4051	;# 
  5657   000FD3                     PR0             equ	4051	;# 
  5658   000FD4                     T0CON0          equ	4052	;# 
  5659   000FD5                     T0CON1          equ	4053	;# 
  5660   000FD6                     PCON1           equ	4054	;# 
  5661   000FD7                     PCON0           equ	4055	;# 
  5662   000FD8                     STATUS          equ	4056	;# 
  5663   000FD9                     FSR2            equ	4057	;# 
  5664   000FD9                     FSR2L           equ	4057	;# 
  5665   000FDA                     FSR2H           equ	4058	;# 
  5666   000FDB                     PLUSW2          equ	4059	;# 
  5667   000FDC                     PREINC2         equ	4060	;# 
  5668   000FDD                     POSTDEC2        equ	4061	;# 
  5669   000FDE                     POSTINC2        equ	4062	;# 
  5670   000FDF                     INDF2           equ	4063	;# 
  5671   000FE0                     BSR             equ	4064	;# 
  5672   000FE1                     FSR1            equ	4065	;# 
  5673   000FE1                     FSR1L           equ	4065	;# 
  5674   000FE2                     FSR1H           equ	4066	;# 
  5675   000FE3                     PLUSW1          equ	4067	;# 
  5676   000FE4                     PREINC1         equ	4068	;# 
  5677   000FE5                     POSTDEC1        equ	4069	;# 
  5678   000FE6                     POSTINC1        equ	4070	;# 
  5679   000FE7                     INDF1           equ	4071	;# 
  5680   000FE8                     WREG            equ	4072	;# 
  5681   000FE9                     FSR0            equ	4073	;# 
  5682   000FE9                     FSR0L           equ	4073	;# 
  5683   000FEA                     FSR0H           equ	4074	;# 
  5684   000FEB                     PLUSW0          equ	4075	;# 
  5685   000FEC                     PREINC0         equ	4076	;# 
  5686   000FED                     POSTDEC0        equ	4077	;# 
  5687   000FEE                     POSTINC0        equ	4078	;# 
  5688   000FEF                     INDF0           equ	4079	;# 
  5689   000FF2                     INTCON          equ	4082	;# 
  5690   000FF3                     PROD            equ	4083	;# 
  5691   000FF3                     PRODL           equ	4083	;# 
  5692   000FF4                     PRODH           equ	4084	;# 
  5693   000FF5                     TABLAT          equ	4085	;# 
  5694   000FF6                     TBLPTR          equ	4086	;# 
  5695   000FF6                     TBLPTRL         equ	4086	;# 
  5696   000FF7                     TBLPTRH         equ	4087	;# 
  5697   000FF8                     TBLPTRU         equ	4088	;# 
  5698   000FF9                     PCLAT           equ	4089	;# 
  5699   000FF9                     PC              equ	4089	;# 
  5700   000FF9                     PCL             equ	4089	;# 
  5701   000FFA                     PCLATH          equ	4090	;# 
  5702   000FFB                     PCLATU          equ	4091	;# 
  5703   000FFC                     STKPTR          equ	4092	;# 
  5704   000FFD                     TOS             equ	4093	;# 
  5705   000FFD                     TOSL            equ	4093	;# 
  5706   000FFE                     TOSH            equ	4094	;# 
  5707   000FFF                     TOSU            equ	4095	;# 
  5708   000E9B                     PPSLOCK         equ	3739	;# 
  5709   000E9C                     INT0PPS         equ	3740	;# 
  5710   000E9D                     INT1PPS         equ	3741	;# 
  5711   000E9E                     INT2PPS         equ	3742	;# 
  5712   000E9F                     T0CKIPPS        equ	3743	;# 
  5713   000EA0                     T1CKIPPS        equ	3744	;# 
  5714   000EA1                     T1GPPS          equ	3745	;# 
  5715   000EA2                     T3CKIPPS        equ	3746	;# 
  5716   000EA3                     T3GPPS          equ	3747	;# 
  5717   000EA4                     T5CKIPPS        equ	3748	;# 
  5718   000EA5                     T5GPPS          equ	3749	;# 
  5719   000EA6                     T2INPPS         equ	3750	;# 
  5720   000EA7                     T4INPPS         equ	3751	;# 
  5721   000EA8                     T6INPPS         equ	3752	;# 
  5722   000EA9                     ADACTPPS        equ	3753	;# 
  5723   000EAA                     CCP1PPS         equ	3754	;# 
  5724   000EAB                     CCP2PPS         equ	3755	;# 
  5725   000EAC                     CWG1PPS         equ	3756	;# 
  5726   000EAC                     CWGPPS          equ	3756	;# 
  5727   000EAC                     CWGINPPS        equ	3756	;# 
  5728   000EAC                     CWG1INPPS       equ	3756	;# 
  5729   000EAD                     MDCARLPPS       equ	3757	;# 
  5730   000EAE                     MDCARHPPS       equ	3758	;# 
  5731   000EAF                     MDSRCPPS        equ	3759	;# 
  5732   000EB0                     RX1PPS          equ	3760	;# 
  5733   000EB0                     RXPPS           equ	3760	;# 
  5734   000EB0                     RXDT1PPS        equ	3760	;# 
  5735   000EB1                     CK1PPS          equ	3761	;# 
  5736   000EB1                     TXPPS           equ	3761	;# 
  5737   000EB1                     CKPPS           equ	3761	;# 
  5738   000EB1                     TXCK1PPS        equ	3761	;# 
  5739   000EB1                     TX1PPS          equ	3761	;# 
  5740   000EB2                     SSP1CLKPPS      equ	3762	;# 
  5741   000EB2                     SSPCLKPPS       equ	3762	;# 
  5742   000EB3                     SSP1DATPPS      equ	3763	;# 
  5743   000EB3                     SSPDATPPS       equ	3763	;# 
  5744   000EB4                     SSP1SSPPS       equ	3764	;# 
  5745   000EB4                     SSPSSPPS        equ	3764	;# 
  5746   000EB5                     IPR0            equ	3765	;# 
  5747   000EB6                     IPR1            equ	3766	;# 
  5748   000EB7                     IPR2            equ	3767	;# 
  5749   000EB8                     IPR3            equ	3768	;# 
  5750   000EB9                     IPR4            equ	3769	;# 
  5751   000EBA                     IPR5            equ	3770	;# 
  5752   000EBB                     IPR6            equ	3771	;# 
  5753   000EBC                     IPR7            equ	3772	;# 
  5754   000EBD                     PIE0            equ	3773	;# 
  5755   000EBE                     PIE1            equ	3774	;# 
  5756   000EBF                     PIE2            equ	3775	;# 
  5757   000EC0                     PIE3            equ	3776	;# 
  5758   000EC1                     PIE4            equ	3777	;# 
  5759   000EC2                     PIE5            equ	3778	;# 
  5760   000EC3                     PIE6            equ	3779	;# 
  5761   000EC4                     PIE7            equ	3780	;# 
  5762   000EC5                     PIR0            equ	3781	;# 
  5763   000EC6                     PIR1            equ	3782	;# 
  5764   000EC7                     PIR2            equ	3783	;# 
  5765   000EC8                     PIR3            equ	3784	;# 
  5766   000EC9                     PIR4            equ	3785	;# 
  5767   000ECA                     PIR5            equ	3786	;# 
  5768   000ECB                     PIR6            equ	3787	;# 
  5769   000ECC                     PIR7            equ	3788	;# 
  5770   000ECD                     WDTCON0         equ	3789	;# 
  5771   000ECE                     WDTCON1         equ	3790	;# 
  5772   000ECF                     WDTPSL          equ	3791	;# 
  5773   000ED0                     WDTPSH          equ	3792	;# 
  5774   000ED1                     WDTTMR          equ	3793	;# 
  5775   000ED2                     CPUDOZE         equ	3794	;# 
  5776   000ED3                     OSCCON1         equ	3795	;# 
  5777   000ED4                     OSCCON2         equ	3796	;# 
  5778   000ED5                     OSCCON3         equ	3797	;# 
  5779   000ED6                     OSCSTAT         equ	3798	;# 
  5780   000ED6                     OSCSTAT1        equ	3798	;# 
  5781   000ED7                     OSCEN           equ	3799	;# 
  5782   000ED8                     OSCTUNE         equ	3800	;# 
  5783   000ED9                     OSCFRQ          equ	3801	;# 
  5784   000ED9                     OSCFREQ         equ	3801	;# 
  5785   000EDA                     VREGCON         equ	3802	;# 
  5786   000EDB                     BORCON          equ	3803	;# 
  5787   000EDC                     PMD0            equ	3804	;# 
  5788   000EDD                     PMD1            equ	3805	;# 
  5789   000EDE                     PMD2            equ	3806	;# 
  5790   000EDF                     PMD3            equ	3807	;# 
  5791   000EE0                     PMD4            equ	3808	;# 
  5792   000EE1                     PMD5            equ	3809	;# 
  5793   000EE2                     RA0PPS          equ	3810	;# 
  5794   000EE3                     RA1PPS          equ	3811	;# 
  5795   000EE4                     RA2PPS          equ	3812	;# 
  5796   000EE5                     RA3PPS          equ	3813	;# 
  5797   000EE6                     RA4PPS          equ	3814	;# 
  5798   000EE7                     RA5PPS          equ	3815	;# 
  5799   000EE8                     RA6PPS          equ	3816	;# 
  5800   000EE9                     RA7PPS          equ	3817	;# 
  5801   000EEA                     RB0PPS          equ	3818	;# 
  5802   000EEB                     RB1PPS          equ	3819	;# 
  5803   000EEC                     RB2PPS          equ	3820	;# 
  5804   000EED                     RB3PPS          equ	3821	;# 
  5805   000EEE                     RB4PPS          equ	3822	;# 
  5806   000EEF                     RB5PPS          equ	3823	;# 
  5807   000EF0                     RB6PPS          equ	3824	;# 
  5808   000EF1                     RB7PPS          equ	3825	;# 
  5809   000EF2                     RC0PPS          equ	3826	;# 
  5810   000EF3                     RC1PPS          equ	3827	;# 
  5811   000EF4                     RC2PPS          equ	3828	;# 
  5812   000EF5                     RC3PPS          equ	3829	;# 
  5813   000EF6                     RC4PPS          equ	3830	;# 
  5814   000EF7                     RC5PPS          equ	3831	;# 
  5815   000EF8                     RC6PPS          equ	3832	;# 
  5816   000EF9                     RC7PPS          equ	3833	;# 
  5817   000F05                     IOCAF           equ	3845	;# 
  5818   000F06                     IOCAN           equ	3846	;# 
  5819   000F07                     IOCAP           equ	3847	;# 
  5820   000F08                     INLVLA          equ	3848	;# 
  5821   000F09                     SLRCONA         equ	3849	;# 
  5822   000F0A                     ODCONA          equ	3850	;# 
  5823   000F0B                     WPUA            equ	3851	;# 
  5824   000F0C                     ANSELA          equ	3852	;# 
  5825   000F0D                     IOCBF           equ	3853	;# 
  5826   000F0E                     IOCBN           equ	3854	;# 
  5827   000F0F                     IOCBP           equ	3855	;# 
  5828   000F10                     INLVLB          equ	3856	;# 
  5829   000F11                     SLRCONB         equ	3857	;# 
  5830   000F12                     ODCONB          equ	3858	;# 
  5831   000F13                     WPUB            equ	3859	;# 
  5832   000F14                     ANSELB          equ	3860	;# 
  5833   000F15                     IOCCF           equ	3861	;# 
  5834   000F16                     IOCCN           equ	3862	;# 
  5835   000F17                     IOCCP           equ	3863	;# 
  5836   000F18                     INLVLC          equ	3864	;# 
  5837   000F19                     SLRCONC         equ	3865	;# 
  5838   000F1A                     ODCONC          equ	3866	;# 
  5839   000F1B                     WPUC            equ	3867	;# 
  5840   000F1C                     ANSELC          equ	3868	;# 
  5841   000F22                     IOCEF           equ	3874	;# 
  5842   000F23                     IOCEN           equ	3875	;# 
  5843   000F24                     IOCEP           equ	3876	;# 
  5844   000F25                     INLVLE          equ	3877	;# 
  5845   000F28                     WPUE            equ	3880	;# 
  5846   000F2A                     HLVDCON0        equ	3882	;# 
  5847   000F2B                     HLVDCON1        equ	3883	;# 
  5848   000F2C                     FVRCON          equ	3884	;# 
  5849   000F2D                     ZCDCON          equ	3885	;# 
  5850   000F2E                     DAC1CON0        equ	3886	;# 
  5851   000F2F                     DAC1CON1        equ	3887	;# 
  5852   000F30                     CM2CON0         equ	3888	;# 
  5853   000F31                     CM2CON1         equ	3889	;# 
  5854   000F32                     CM2NCH          equ	3890	;# 
  5855   000F33                     CM2PCH          equ	3891	;# 
  5856   000F34                     CM1CON0         equ	3892	;# 
  5857   000F35                     CM1CON1         equ	3893	;# 
  5858   000F36                     CM1NCH          equ	3894	;# 
  5859   000F37                     CM1PCH          equ	3895	;# 
  5860   000F38                     CMOUT           equ	3896	;# 
  5861   000F39                     CLKRCON         equ	3897	;# 
  5862   000F3A                     CLKRCLK         equ	3898	;# 
  5863   000F3B                     CWG1CLK         equ	3899	;# 
  5864   000F3B                     CWG1CLKCON      equ	3899	;# 
  5865   000F3C                     CWG1ISM         equ	3900	;# 
  5866   000F3D                     CWG1DBR         equ	3901	;# 
  5867   000F3E                     CWG1DBF         equ	3902	;# 
  5868   000F3F                     CWG1CON0        equ	3903	;# 
  5869   000F40                     CWG1CON1        equ	3904	;# 
  5870   000F41                     CWG1AS0         equ	3905	;# 
  5871   000F42                     CWG1AS1         equ	3906	;# 
  5872   000F43                     CWG1STR         equ	3907	;# 
  5873   000F44                     SCANLADR        equ	3908	;# 
  5874   000F44                     SCANLADRL       equ	3908	;# 
  5875   000F45                     SCANLADRH       equ	3909	;# 
  5876   000F46                     SCANLADRU       equ	3910	;# 
  5877   000F47                     SCANHADR        equ	3911	;# 
  5878   000F47                     SCANHADRL       equ	3911	;# 
  5879   000F48                     SCANHADRH       equ	3912	;# 
  5880   000F49                     SCANHADRU       equ	3913	;# 
  5881   000F4A                     SCANCON0        equ	3914	;# 
  5882   000F4B                     SCANTRIG        equ	3915	;# 
  5883   000F4C                     MDCON0          equ	3916	;# 
  5884   000F4D                     MDCON1          equ	3917	;# 
  5885   000F4E                     MDSRC           equ	3918	;# 
  5886   000F4F                     MDCARL          equ	3919	;# 
  5887   000F50                     MDCARH          equ	3920	;# 
  5888   000F51                     ADACT           equ	3921	;# 
  5889   000F52                     ADCLK           equ	3922	;# 
  5890   000F53                     ADREF           equ	3923	;# 
  5891   000F54                     ADCON1          equ	3924	;# 
  5892   000F55                     ADCON2          equ	3925	;# 
  5893   000F56                     ADCON3          equ	3926	;# 
  5894   000F57                     ADACQ           equ	3927	;# 
  5895   000F58                     ADCAP           equ	3928	;# 
  5896   000F59                     ADPRE           equ	3929	;# 
  5897   000F5A                     ADPCH           equ	3930	;# 
  5898   000F5B                     ADCON0          equ	3931	;# 
  5899   000F5C                     ADPREV          equ	3932	;# 
  5900   000F5C                     ADPREVL         equ	3932	;# 
  5901   000F5D                     ADPREVH         equ	3933	;# 
  5902   000F5E                     ADRES           equ	3934	;# 
  5903   000F5E                     ADRESL          equ	3934	;# 
  5904   000F5F                     ADRESH          equ	3935	;# 
  5905   000F60                     ADSTAT          equ	3936	;# 
  5906   000F61                     ADRPT           equ	3937	;# 
  5907   000F62                     ADCNT           equ	3938	;# 
  5908   000F63                     ADSTPT          equ	3939	;# 
  5909   000F63                     ADSTPTL         equ	3939	;# 
  5910   000F64                     ADSTPTH         equ	3940	;# 
  5911   000F65                     ADLTH           equ	3941	;# 
  5912   000F65                     ADLTHL          equ	3941	;# 
  5913   000F66                     ADLTHH          equ	3942	;# 
  5914   000F67                     ADUTH           equ	3943	;# 
  5915   000F67                     ADUTHL          equ	3943	;# 
  5916   000F68                     ADUTHH          equ	3944	;# 
  5917   000F69                     ADERR           equ	3945	;# 
  5918   000F69                     ADERRL          equ	3945	;# 
  5919   000F6A                     ADERRH          equ	3946	;# 
  5920   000F6B                     ADACC           equ	3947	;# 
  5921   000F6B                     ADACCL          equ	3947	;# 
  5922   000F6C                     ADACCH          equ	3948	;# 
  5923   000F6D                     ADFLTR          equ	3949	;# 
  5924   000F6D                     ADFLTRL         equ	3949	;# 
  5925   000F6E                     ADFLTRH         equ	3950	;# 
  5926   000F6F                     CRCDATA         equ	3951	;# 
  5927   000F6F                     CRCDATL         equ	3951	;# 
  5928   000F70                     CRCDATH         equ	3952	;# 
  5929   000F71                     CRCACC          equ	3953	;# 
  5930   000F71                     CRCACCL         equ	3953	;# 
  5931   000F72                     CRCACCH         equ	3954	;# 
  5932   000F73                     CRCSHFT         equ	3955	;# 
  5933   000F73                     CRCSHIFTL       equ	3955	;# 
  5934   000F74                     CRCSHIFTH       equ	3956	;# 
  5935   000F75                     CRCXOR          equ	3957	;# 
  5936   000F75                     CRCXORL         equ	3957	;# 
  5937   000F76                     CRCXORH         equ	3958	;# 
  5938   000F77                     CRCCON0         equ	3959	;# 
  5939   000F78                     CRCCON1         equ	3960	;# 
  5940   000F79                     NVMADR          equ	3961	;# 
  5941   000F79                     NVMADRL         equ	3961	;# 
  5942   000F7A                     NVMADRH         equ	3962	;# 
  5943   000F7B                     NVMADRU         equ	3963	;# 
  5944   000F7C                     NVMDAT          equ	3964	;# 
  5945   000F7C                     NVMDATL         equ	3964	;# 
  5946   000F7D                     NVMDATH         equ	3965	;# 
  5947   000F7F                     NVMCON0         equ	3967	;# 
  5948   000F80                     NVMCON1         equ	3968	;# 
  5949   000F81                     NVMCON2         equ	3969	;# 
  5950   000F82                     LATA            equ	3970	;# 
  5951   000F83                     LATB            equ	3971	;# 
  5952   000F84                     LATC            equ	3972	;# 
  5953   000F87                     TRISA           equ	3975	;# 
  5954   000F87                     DDRA            equ	3975	;# 
  5955   000F88                     TRISB           equ	3976	;# 
  5956   000F88                     DDRB            equ	3976	;# 
  5957   000F89                     TRISC           equ	3977	;# 
  5958   000F89                     DDRC            equ	3977	;# 
  5959   000F8C                     PORTA           equ	3980	;# 
  5960   000F8D                     PORTB           equ	3981	;# 
  5961   000F8E                     PORTC           equ	3982	;# 
  5962   000F90                     PORTE           equ	3984	;# 
  5963   000F91                     SSP1BUF         equ	3985	;# 
  5964   000F92                     SSP1ADD         equ	3986	;# 
  5965   000F93                     SSP1MSK         equ	3987	;# 
  5966   000F94                     SSP1STAT        equ	3988	;# 
  5967   000F95                     SSP1CON1        equ	3989	;# 
  5968   000F96                     SSP1CON2        equ	3990	;# 
  5969   000F97                     SSP1CON3        equ	3991	;# 
  5970   000F98                     RC1REG          equ	3992	;# 
  5971   000F98                     RCREG           equ	3992	;# 
  5972   000F98                     RCREG1          equ	3992	;# 
  5973   000F99                     TX1REG          equ	3993	;# 
  5974   000F99                     TXREG1          equ	3993	;# 
  5975   000F99                     TXREG           equ	3993	;# 
  5976   000F9A                     SP1BRG          equ	3994	;# 
  5977   000F9A                     SPBRG           equ	3994	;# 
  5978   000F9A                     SP1BRGL         equ	3994	;# 
  5979   000F9A                     SPBRG1          equ	3994	;# 
  5980   000F9A                     SPBRGL          equ	3994	;# 
  5981   000F9B                     SP1BRGH         equ	3995	;# 
  5982   000F9B                     SPBRGH          equ	3995	;# 
  5983   000F9B                     SPBRGH1         equ	3995	;# 
  5984   000F9C                     RC1STA          equ	3996	;# 
  5985   000F9C                     RCSTA1          equ	3996	;# 
  5986   000F9C                     RCSTA           equ	3996	;# 
  5987   000F9D                     TX1STA          equ	3997	;# 
  5988   000F9D                     TXSTA1          equ	3997	;# 
  5989   000F9D                     TXSTA           equ	3997	;# 
  5990   000F9E                     BAUD1CON        equ	3998	;# 
  5991   000F9E                     BAUDCON1        equ	3998	;# 
  5992   000F9E                     BAUDCTL1        equ	3998	;# 
  5993   000F9E                     BAUDCON         equ	3998	;# 
  5994   000F9E                     BAUDCTL         equ	3998	;# 
  5995   000F9F                     PWM4DC          equ	3999	;# 
  5996   000F9F                     PWM4DCL         equ	3999	;# 
  5997   000FA0                     PWM4DCH         equ	4000	;# 
  5998   000FA1                     PWM4CON         equ	4001	;# 
  5999   000FA2                     PWM3DC          equ	4002	;# 
  6000   000FA2                     PWM3DCL         equ	4002	;# 
  6001   000FA3                     PWM3DCH         equ	4003	;# 
  6002   000FA4                     PWM3CON         equ	4004	;# 
  6003   000FA5                     CCPR2           equ	4005	;# 
  6004   000FA5                     CCPR2L          equ	4005	;# 
  6005   000FA6                     CCPR2H          equ	4006	;# 
  6006   000FA7                     CCP2CON         equ	4007	;# 
  6007   000FA8                     CCP2CAP         equ	4008	;# 
  6008   000FA9                     CCPR1           equ	4009	;# 
  6009   000FA9                     CCPR1L          equ	4009	;# 
  6010   000FAA                     CCPR1H          equ	4010	;# 
  6011   000FAB                     CCP1CON         equ	4011	;# 
  6012   000FAC                     CCP1CAP         equ	4012	;# 
  6013   000FAD                     CCPTMRS         equ	4013	;# 
  6014   000FAE                     T6TMR           equ	4014	;# 
  6015   000FAE                     TMR6            equ	4014	;# 
  6016   000FAF                     T6PR            equ	4015	;# 
  6017   000FAF                     PR6             equ	4015	;# 
  6018   000FB0                     T6CON           equ	4016	;# 
  6019   000FB1                     T6HLT           equ	4017	;# 
  6020   000FB2                     T6CLKCON        equ	4018	;# 
  6021   000FB2                     T6CLK           equ	4018	;# 
  6022   000FB3                     T6RST           equ	4019	;# 
  6023   000FB4                     T4TMR           equ	4020	;# 
  6024   000FB4                     TMR4            equ	4020	;# 
  6025   000FB5                     T4PR            equ	4021	;# 
  6026   000FB5                     PR4             equ	4021	;# 
  6027   000FB6                     T4CON           equ	4022	;# 
  6028   000FB7                     T4HLT           equ	4023	;# 
  6029   000FB8                     T4CLKCON        equ	4024	;# 
  6030   000FB8                     T4CLK           equ	4024	;# 
  6031   000FB9                     T4RST           equ	4025	;# 
  6032   000FBA                     T2TMR           equ	4026	;# 
  6033   000FBA                     TMR2            equ	4026	;# 
  6034   000FBB                     T2PR            equ	4027	;# 
  6035   000FBB                     PR2             equ	4027	;# 
  6036   000FBC                     T2CON           equ	4028	;# 
  6037   000FBD                     T2HLT           equ	4029	;# 
  6038   000FBE                     T2CLKCON        equ	4030	;# 
  6039   000FBE                     T2CLK           equ	4030	;# 
  6040   000FBF                     T2RST           equ	4031	;# 
  6041   000FC0                     TMR5            equ	4032	;# 
  6042   000FC0                     TMR5L           equ	4032	;# 
  6043   000FC1                     TMR5H           equ	4033	;# 
  6044   000FC2                     T5CON           equ	4034	;# 
  6045   000FC2                     TMR5CON         equ	4034	;# 
  6046   000FC3                     T5GCON          equ	4035	;# 
  6047   000FC3                     TMR5GCON        equ	4035	;# 
  6048   000FC4                     T5GATE          equ	4036	;# 
  6049   000FC4                     TMR5GATE        equ	4036	;# 
  6050   000FC5                     T5CLK           equ	4037	;# 
  6051   000FC5                     TMR5CLK         equ	4037	;# 
  6052   000FC5                     PR5             equ	4037	;# 
  6053   000FC6                     TMR3            equ	4038	;# 
  6054   000FC6                     TMR3L           equ	4038	;# 
  6055   000FC7                     TMR3H           equ	4039	;# 
  6056   000FC8                     T3CON           equ	4040	;# 
  6057   000FC8                     TMR3CON         equ	4040	;# 
  6058   000FC9                     T3GCON          equ	4041	;# 
  6059   000FC9                     TMR3GCON        equ	4041	;# 
  6060   000FCA                     T3GATE          equ	4042	;# 
  6061   000FCA                     TMR3GATE        equ	4042	;# 
  6062   000FCB                     T3CLK           equ	4043	;# 
  6063   000FCB                     TMR3CLK         equ	4043	;# 
  6064   000FCB                     PR3             equ	4043	;# 
  6065   000FCC                     TMR1            equ	4044	;# 
  6066   000FCC                     TMR1L           equ	4044	;# 
  6067   000FCD                     TMR1H           equ	4045	;# 
  6068   000FCE                     T1CON           equ	4046	;# 
  6069   000FCE                     TMR1CON         equ	4046	;# 
  6070   000FCF                     T1GCON          equ	4047	;# 
  6071   000FCF                     TMR1GCON        equ	4047	;# 
  6072   000FD0                     T1GATE          equ	4048	;# 
  6073   000FD0                     TMR1GATE        equ	4048	;# 
  6074   000FD1                     T1CLK           equ	4049	;# 
  6075   000FD1                     TMR1CLK         equ	4049	;# 
  6076   000FD1                     PR1             equ	4049	;# 
  6077   000FD2                     TMR0L           equ	4050	;# 
  6078   000FD2                     TMR0            equ	4050	;# 
  6079   000FD3                     TMR0H           equ	4051	;# 
  6080   000FD3                     PR0             equ	4051	;# 
  6081   000FD4                     T0CON0          equ	4052	;# 
  6082   000FD5                     T0CON1          equ	4053	;# 
  6083   000FD6                     PCON1           equ	4054	;# 
  6084   000FD7                     PCON0           equ	4055	;# 
  6085   000FD8                     STATUS          equ	4056	;# 
  6086   000FD9                     FSR2            equ	4057	;# 
  6087   000FD9                     FSR2L           equ	4057	;# 
  6088   000FDA                     FSR2H           equ	4058	;# 
  6089   000FDB                     PLUSW2          equ	4059	;# 
  6090   000FDC                     PREINC2         equ	4060	;# 
  6091   000FDD                     POSTDEC2        equ	4061	;# 
  6092   000FDE                     POSTINC2        equ	4062	;# 
  6093   000FDF                     INDF2           equ	4063	;# 
  6094   000FE0                     BSR             equ	4064	;# 
  6095   000FE1                     FSR1            equ	4065	;# 
  6096   000FE1                     FSR1L           equ	4065	;# 
  6097   000FE2                     FSR1H           equ	4066	;# 
  6098   000FE3                     PLUSW1          equ	4067	;# 
  6099   000FE4                     PREINC1         equ	4068	;# 
  6100   000FE5                     POSTDEC1        equ	4069	;# 
  6101   000FE6                     POSTINC1        equ	4070	;# 
  6102   000FE7                     INDF1           equ	4071	;# 
  6103   000FE8                     WREG            equ	4072	;# 
  6104   000FE9                     FSR0            equ	4073	;# 
  6105   000FE9                     FSR0L           equ	4073	;# 
  6106   000FEA                     FSR0H           equ	4074	;# 
  6107   000FEB                     PLUSW0          equ	4075	;# 
  6108   000FEC                     PREINC0         equ	4076	;# 
  6109   000FED                     POSTDEC0        equ	4077	;# 
  6110   000FEE                     POSTINC0        equ	4078	;# 
  6111   000FEF                     INDF0           equ	4079	;# 
  6112   000FF2                     INTCON          equ	4082	;# 
  6113   000FF3                     PROD            equ	4083	;# 
  6114   000FF3                     PRODL           equ	4083	;# 
  6115   000FF4                     PRODH           equ	4084	;# 
  6116   000FF5                     TABLAT          equ	4085	;# 
  6117   000FF6                     TBLPTR          equ	4086	;# 
  6118   000FF6                     TBLPTRL         equ	4086	;# 
  6119   000FF7                     TBLPTRH         equ	4087	;# 
  6120   000FF8                     TBLPTRU         equ	4088	;# 
  6121   000FF9                     PCLAT           equ	4089	;# 
  6122   000FF9                     PC              equ	4089	;# 
  6123   000FF9                     PCL             equ	4089	;# 
  6124   000FFA                     PCLATH          equ	4090	;# 
  6125   000FFB                     PCLATU          equ	4091	;# 
  6126   000FFC                     STKPTR          equ	4092	;# 
  6127   000FFD                     TOS             equ	4093	;# 
  6128   000FFD                     TOSL            equ	4093	;# 
  6129   000FFE                     TOSH            equ	4094	;# 
  6130   000FFF                     TOSU            equ	4095	;# 
  6131   000E9B                     PPSLOCK         equ	3739	;# 
  6132   000E9C                     INT0PPS         equ	3740	;# 
  6133   000E9D                     INT1PPS         equ	3741	;# 
  6134   000E9E                     INT2PPS         equ	3742	;# 
  6135   000E9F                     T0CKIPPS        equ	3743	;# 
  6136   000EA0                     T1CKIPPS        equ	3744	;# 
  6137   000EA1                     T1GPPS          equ	3745	;# 
  6138   000EA2                     T3CKIPPS        equ	3746	;# 
  6139   000EA3                     T3GPPS          equ	3747	;# 
  6140   000EA4                     T5CKIPPS        equ	3748	;# 
  6141   000EA5                     T5GPPS          equ	3749	;# 
  6142   000EA6                     T2INPPS         equ	3750	;# 
  6143   000EA7                     T4INPPS         equ	3751	;# 
  6144   000EA8                     T6INPPS         equ	3752	;# 
  6145   000EA9                     ADACTPPS        equ	3753	;# 
  6146   000EAA                     CCP1PPS         equ	3754	;# 
  6147   000EAB                     CCP2PPS         equ	3755	;# 
  6148   000EAC                     CWG1PPS         equ	3756	;# 
  6149   000EAC                     CWGPPS          equ	3756	;# 
  6150   000EAC                     CWGINPPS        equ	3756	;# 
  6151   000EAC                     CWG1INPPS       equ	3756	;# 
  6152   000EAD                     MDCARLPPS       equ	3757	;# 
  6153   000EAE                     MDCARHPPS       equ	3758	;# 
  6154   000EAF                     MDSRCPPS        equ	3759	;# 
  6155   000EB0                     RX1PPS          equ	3760	;# 
  6156   000EB0                     RXPPS           equ	3760	;# 
  6157   000EB0                     RXDT1PPS        equ	3760	;# 
  6158   000EB1                     CK1PPS          equ	3761	;# 
  6159   000EB1                     TXPPS           equ	3761	;# 
  6160   000EB1                     CKPPS           equ	3761	;# 
  6161   000EB1                     TXCK1PPS        equ	3761	;# 
  6162   000EB1                     TX1PPS          equ	3761	;# 
  6163   000EB2                     SSP1CLKPPS      equ	3762	;# 
  6164   000EB2                     SSPCLKPPS       equ	3762	;# 
  6165   000EB3                     SSP1DATPPS      equ	3763	;# 
  6166   000EB3                     SSPDATPPS       equ	3763	;# 
  6167   000EB4                     SSP1SSPPS       equ	3764	;# 
  6168   000EB4                     SSPSSPPS        equ	3764	;# 
  6169   000EB5                     IPR0            equ	3765	;# 
  6170   000EB6                     IPR1            equ	3766	;# 
  6171   000EB7                     IPR2            equ	3767	;# 
  6172   000EB8                     IPR3            equ	3768	;# 
  6173   000EB9                     IPR4            equ	3769	;# 
  6174   000EBA                     IPR5            equ	3770	;# 
  6175   000EBB                     IPR6            equ	3771	;# 
  6176   000EBC                     IPR7            equ	3772	;# 
  6177   000EBD                     PIE0            equ	3773	;# 
  6178   000EBE                     PIE1            equ	3774	;# 
  6179   000EBF                     PIE2            equ	3775	;# 
  6180   000EC0                     PIE3            equ	3776	;# 
  6181   000EC1                     PIE4            equ	3777	;# 
  6182   000EC2                     PIE5            equ	3778	;# 
  6183   000EC3                     PIE6            equ	3779	;# 
  6184   000EC4                     PIE7            equ	3780	;# 
  6185   000EC5                     PIR0            equ	3781	;# 
  6186   000EC6                     PIR1            equ	3782	;# 
  6187   000EC7                     PIR2            equ	3783	;# 
  6188   000EC8                     PIR3            equ	3784	;# 
  6189   000EC9                     PIR4            equ	3785	;# 
  6190   000ECA                     PIR5            equ	3786	;# 
  6191   000ECB                     PIR6            equ	3787	;# 
  6192   000ECC                     PIR7            equ	3788	;# 
  6193   000ECD                     WDTCON0         equ	3789	;# 
  6194   000ECE                     WDTCON1         equ	3790	;# 
  6195   000ECF                     WDTPSL          equ	3791	;# 
  6196   000ED0                     WDTPSH          equ	3792	;# 
  6197   000ED1                     WDTTMR          equ	3793	;# 
  6198   000ED2                     CPUDOZE         equ	3794	;# 
  6199   000ED3                     OSCCON1         equ	3795	;# 
  6200   000ED4                     OSCCON2         equ	3796	;# 
  6201   000ED5                     OSCCON3         equ	3797	;# 
  6202   000ED6                     OSCSTAT         equ	3798	;# 
  6203   000ED6                     OSCSTAT1        equ	3798	;# 
  6204   000ED7                     OSCEN           equ	3799	;# 
  6205   000ED8                     OSCTUNE         equ	3800	;# 
  6206   000ED9                     OSCFRQ          equ	3801	;# 
  6207   000ED9                     OSCFREQ         equ	3801	;# 
  6208   000EDA                     VREGCON         equ	3802	;# 
  6209   000EDB                     BORCON          equ	3803	;# 
  6210   000EDC                     PMD0            equ	3804	;# 
  6211   000EDD                     PMD1            equ	3805	;# 
  6212   000EDE                     PMD2            equ	3806	;# 
  6213   000EDF                     PMD3            equ	3807	;# 
  6214   000EE0                     PMD4            equ	3808	;# 
  6215   000EE1                     PMD5            equ	3809	;# 
  6216   000EE2                     RA0PPS          equ	3810	;# 
  6217   000EE3                     RA1PPS          equ	3811	;# 
  6218   000EE4                     RA2PPS          equ	3812	;# 
  6219   000EE5                     RA3PPS          equ	3813	;# 
  6220   000EE6                     RA4PPS          equ	3814	;# 
  6221   000EE7                     RA5PPS          equ	3815	;# 
  6222   000EE8                     RA6PPS          equ	3816	;# 
  6223   000EE9                     RA7PPS          equ	3817	;# 
  6224   000EEA                     RB0PPS          equ	3818	;# 
  6225   000EEB                     RB1PPS          equ	3819	;# 
  6226   000EEC                     RB2PPS          equ	3820	;# 
  6227   000EED                     RB3PPS          equ	3821	;# 
  6228   000EEE                     RB4PPS          equ	3822	;# 
  6229   000EEF                     RB5PPS          equ	3823	;# 
  6230   000EF0                     RB6PPS          equ	3824	;# 
  6231   000EF1                     RB7PPS          equ	3825	;# 
  6232   000EF2                     RC0PPS          equ	3826	;# 
  6233   000EF3                     RC1PPS          equ	3827	;# 
  6234   000EF4                     RC2PPS          equ	3828	;# 
  6235   000EF5                     RC3PPS          equ	3829	;# 
  6236   000EF6                     RC4PPS          equ	3830	;# 
  6237   000EF7                     RC5PPS          equ	3831	;# 
  6238   000EF8                     RC6PPS          equ	3832	;# 
  6239   000EF9                     RC7PPS          equ	3833	;# 
  6240   000F05                     IOCAF           equ	3845	;# 
  6241   000F06                     IOCAN           equ	3846	;# 
  6242   000F07                     IOCAP           equ	3847	;# 
  6243   000F08                     INLVLA          equ	3848	;# 
  6244   000F09                     SLRCONA         equ	3849	;# 
  6245   000F0A                     ODCONA          equ	3850	;# 
  6246   000F0B                     WPUA            equ	3851	;# 
  6247   000F0C                     ANSELA          equ	3852	;# 
  6248   000F0D                     IOCBF           equ	3853	;# 
  6249   000F0E                     IOCBN           equ	3854	;# 
  6250   000F0F                     IOCBP           equ	3855	;# 
  6251   000F10                     INLVLB          equ	3856	;# 
  6252   000F11                     SLRCONB         equ	3857	;# 
  6253   000F12                     ODCONB          equ	3858	;# 
  6254   000F13                     WPUB            equ	3859	;# 
  6255   000F14                     ANSELB          equ	3860	;# 
  6256   000F15                     IOCCF           equ	3861	;# 
  6257   000F16                     IOCCN           equ	3862	;# 
  6258   000F17                     IOCCP           equ	3863	;# 
  6259   000F18                     INLVLC          equ	3864	;# 
  6260   000F19                     SLRCONC         equ	3865	;# 
  6261   000F1A                     ODCONC          equ	3866	;# 
  6262   000F1B                     WPUC            equ	3867	;# 
  6263   000F1C                     ANSELC          equ	3868	;# 
  6264   000F22                     IOCEF           equ	3874	;# 
  6265   000F23                     IOCEN           equ	3875	;# 
  6266   000F24                     IOCEP           equ	3876	;# 
  6267   000F25                     INLVLE          equ	3877	;# 
  6268   000F28                     WPUE            equ	3880	;# 
  6269   000F2A                     HLVDCON0        equ	3882	;# 
  6270   000F2B                     HLVDCON1        equ	3883	;# 
  6271   000F2C                     FVRCON          equ	3884	;# 
  6272   000F2D                     ZCDCON          equ	3885	;# 
  6273   000F2E                     DAC1CON0        equ	3886	;# 
  6274   000F2F                     DAC1CON1        equ	3887	;# 
  6275   000F30                     CM2CON0         equ	3888	;# 
  6276   000F31                     CM2CON1         equ	3889	;# 
  6277   000F32                     CM2NCH          equ	3890	;# 
  6278   000F33                     CM2PCH          equ	3891	;# 
  6279   000F34                     CM1CON0         equ	3892	;# 
  6280   000F35                     CM1CON1         equ	3893	;# 
  6281   000F36                     CM1NCH          equ	3894	;# 
  6282   000F37                     CM1PCH          equ	3895	;# 
  6283   000F38                     CMOUT           equ	3896	;# 
  6284   000F39                     CLKRCON         equ	3897	;# 
  6285   000F3A                     CLKRCLK         equ	3898	;# 
  6286   000F3B                     CWG1CLK         equ	3899	;# 
  6287   000F3B                     CWG1CLKCON      equ	3899	;# 
  6288   000F3C                     CWG1ISM         equ	3900	;# 
  6289   000F3D                     CWG1DBR         equ	3901	;# 
  6290   000F3E                     CWG1DBF         equ	3902	;# 
  6291   000F3F                     CWG1CON0        equ	3903	;# 
  6292   000F40                     CWG1CON1        equ	3904	;# 
  6293   000F41                     CWG1AS0         equ	3905	;# 
  6294   000F42                     CWG1AS1         equ	3906	;# 
  6295   000F43                     CWG1STR         equ	3907	;# 
  6296   000F44                     SCANLADR        equ	3908	;# 
  6297   000F44                     SCANLADRL       equ	3908	;# 
  6298   000F45                     SCANLADRH       equ	3909	;# 
  6299   000F46                     SCANLADRU       equ	3910	;# 
  6300   000F47                     SCANHADR        equ	3911	;# 
  6301   000F47                     SCANHADRL       equ	3911	;# 
  6302   000F48                     SCANHADRH       equ	3912	;# 
  6303   000F49                     SCANHADRU       equ	3913	;# 
  6304   000F4A                     SCANCON0        equ	3914	;# 
  6305   000F4B                     SCANTRIG        equ	3915	;# 
  6306   000F4C                     MDCON0          equ	3916	;# 
  6307   000F4D                     MDCON1          equ	3917	;# 
  6308   000F4E                     MDSRC           equ	3918	;# 
  6309   000F4F                     MDCARL          equ	3919	;# 
  6310   000F50                     MDCARH          equ	3920	;# 
  6311   000F51                     ADACT           equ	3921	;# 
  6312   000F52                     ADCLK           equ	3922	;# 
  6313   000F53                     ADREF           equ	3923	;# 
  6314   000F54                     ADCON1          equ	3924	;# 
  6315   000F55                     ADCON2          equ	3925	;# 
  6316   000F56                     ADCON3          equ	3926	;# 
  6317   000F57                     ADACQ           equ	3927	;# 
  6318   000F58                     ADCAP           equ	3928	;# 
  6319   000F59                     ADPRE           equ	3929	;# 
  6320   000F5A                     ADPCH           equ	3930	;# 
  6321   000F5B                     ADCON0          equ	3931	;# 
  6322   000F5C                     ADPREV          equ	3932	;# 
  6323   000F5C                     ADPREVL         equ	3932	;# 
  6324   000F5D                     ADPREVH         equ	3933	;# 
  6325   000F5E                     ADRES           equ	3934	;# 
  6326   000F5E                     ADRESL          equ	3934	;# 
  6327   000F5F                     ADRESH          equ	3935	;# 
  6328   000F60                     ADSTAT          equ	3936	;# 
  6329   000F61                     ADRPT           equ	3937	;# 
  6330   000F62                     ADCNT           equ	3938	;# 
  6331   000F63                     ADSTPT          equ	3939	;# 
  6332   000F63                     ADSTPTL         equ	3939	;# 
  6333   000F64                     ADSTPTH         equ	3940	;# 
  6334   000F65                     ADLTH           equ	3941	;# 
  6335   000F65                     ADLTHL          equ	3941	;# 
  6336   000F66                     ADLTHH          equ	3942	;# 
  6337   000F67                     ADUTH           equ	3943	;# 
  6338   000F67                     ADUTHL          equ	3943	;# 
  6339   000F68                     ADUTHH          equ	3944	;# 
  6340   000F69                     ADERR           equ	3945	;# 
  6341   000F69                     ADERRL          equ	3945	;# 
  6342   000F6A                     ADERRH          equ	3946	;# 
  6343   000F6B                     ADACC           equ	3947	;# 
  6344   000F6B                     ADACCL          equ	3947	;# 
  6345   000F6C                     ADACCH          equ	3948	;# 
  6346   000F6D                     ADFLTR          equ	3949	;# 
  6347   000F6D                     ADFLTRL         equ	3949	;# 
  6348   000F6E                     ADFLTRH         equ	3950	;# 
  6349   000F6F                     CRCDATA         equ	3951	;# 
  6350   000F6F                     CRCDATL         equ	3951	;# 
  6351   000F70                     CRCDATH         equ	3952	;# 
  6352   000F71                     CRCACC          equ	3953	;# 
  6353   000F71                     CRCACCL         equ	3953	;# 
  6354   000F72                     CRCACCH         equ	3954	;# 
  6355   000F73                     CRCSHFT         equ	3955	;# 
  6356   000F73                     CRCSHIFTL       equ	3955	;# 
  6357   000F74                     CRCSHIFTH       equ	3956	;# 
  6358   000F75                     CRCXOR          equ	3957	;# 
  6359   000F75                     CRCXORL         equ	3957	;# 
  6360   000F76                     CRCXORH         equ	3958	;# 
  6361   000F77                     CRCCON0         equ	3959	;# 
  6362   000F78                     CRCCON1         equ	3960	;# 
  6363   000F79                     NVMADR          equ	3961	;# 
  6364   000F79                     NVMADRL         equ	3961	;# 
  6365   000F7A                     NVMADRH         equ	3962	;# 
  6366   000F7B                     NVMADRU         equ	3963	;# 
  6367   000F7C                     NVMDAT          equ	3964	;# 
  6368   000F7C                     NVMDATL         equ	3964	;# 
  6369   000F7D                     NVMDATH         equ	3965	;# 
  6370   000F7F                     NVMCON0         equ	3967	;# 
  6371   000F80                     NVMCON1         equ	3968	;# 
  6372   000F81                     NVMCON2         equ	3969	;# 
  6373   000F82                     LATA            equ	3970	;# 
  6374   000F83                     LATB            equ	3971	;# 
  6375   000F84                     LATC            equ	3972	;# 
  6376   000F87                     TRISA           equ	3975	;# 
  6377   000F87                     DDRA            equ	3975	;# 
  6378   000F88                     TRISB           equ	3976	;# 
  6379   000F88                     DDRB            equ	3976	;# 
  6380   000F89                     TRISC           equ	3977	;# 
  6381   000F89                     DDRC            equ	3977	;# 
  6382   000F8C                     PORTA           equ	3980	;# 
  6383   000F8D                     PORTB           equ	3981	;# 
  6384   000F8E                     PORTC           equ	3982	;# 
  6385   000F90                     PORTE           equ	3984	;# 
  6386   000F91                     SSP1BUF         equ	3985	;# 
  6387   000F92                     SSP1ADD         equ	3986	;# 
  6388   000F93                     SSP1MSK         equ	3987	;# 
  6389   000F94                     SSP1STAT        equ	3988	;# 
  6390   000F95                     SSP1CON1        equ	3989	;# 
  6391   000F96                     SSP1CON2        equ	3990	;# 
  6392   000F97                     SSP1CON3        equ	3991	;# 
  6393   000F98                     RC1REG          equ	3992	;# 
  6394   000F98                     RCREG           equ	3992	;# 
  6395   000F98                     RCREG1          equ	3992	;# 
  6396   000F99                     TX1REG          equ	3993	;# 
  6397   000F99                     TXREG1          equ	3993	;# 
  6398   000F99                     TXREG           equ	3993	;# 
  6399   000F9A                     SP1BRG          equ	3994	;# 
  6400   000F9A                     SPBRG           equ	3994	;# 
  6401   000F9A                     SP1BRGL         equ	3994	;# 
  6402   000F9A                     SPBRG1          equ	3994	;# 
  6403   000F9A                     SPBRGL          equ	3994	;# 
  6404   000F9B                     SP1BRGH         equ	3995	;# 
  6405   000F9B                     SPBRGH          equ	3995	;# 
  6406   000F9B                     SPBRGH1         equ	3995	;# 
  6407   000F9C                     RC1STA          equ	3996	;# 
  6408   000F9C                     RCSTA1          equ	3996	;# 
  6409   000F9C                     RCSTA           equ	3996	;# 
  6410   000F9D                     TX1STA          equ	3997	;# 
  6411   000F9D                     TXSTA1          equ	3997	;# 
  6412   000F9D                     TXSTA           equ	3997	;# 
  6413   000F9E                     BAUD1CON        equ	3998	;# 
  6414   000F9E                     BAUDCON1        equ	3998	;# 
  6415   000F9E                     BAUDCTL1        equ	3998	;# 
  6416   000F9E                     BAUDCON         equ	3998	;# 
  6417   000F9E                     BAUDCTL         equ	3998	;# 
  6418   000F9F                     PWM4DC          equ	3999	;# 
  6419   000F9F                     PWM4DCL         equ	3999	;# 
  6420   000FA0                     PWM4DCH         equ	4000	;# 
  6421   000FA1                     PWM4CON         equ	4001	;# 
  6422   000FA2                     PWM3DC          equ	4002	;# 
  6423   000FA2                     PWM3DCL         equ	4002	;# 
  6424   000FA3                     PWM3DCH         equ	4003	;# 
  6425   000FA4                     PWM3CON         equ	4004	;# 
  6426   000FA5                     CCPR2           equ	4005	;# 
  6427   000FA5                     CCPR2L          equ	4005	;# 
  6428   000FA6                     CCPR2H          equ	4006	;# 
  6429   000FA7                     CCP2CON         equ	4007	;# 
  6430   000FA8                     CCP2CAP         equ	4008	;# 
  6431   000FA9                     CCPR1           equ	4009	;# 
  6432   000FA9                     CCPR1L          equ	4009	;# 
  6433   000FAA                     CCPR1H          equ	4010	;# 
  6434   000FAB                     CCP1CON         equ	4011	;# 
  6435   000FAC                     CCP1CAP         equ	4012	;# 
  6436   000FAD                     CCPTMRS         equ	4013	;# 
  6437   000FAE                     T6TMR           equ	4014	;# 
  6438   000FAE                     TMR6            equ	4014	;# 
  6439   000FAF                     T6PR            equ	4015	;# 
  6440   000FAF                     PR6             equ	4015	;# 
  6441   000FB0                     T6CON           equ	4016	;# 
  6442   000FB1                     T6HLT           equ	4017	;# 
  6443   000FB2                     T6CLKCON        equ	4018	;# 
  6444   000FB2                     T6CLK           equ	4018	;# 
  6445   000FB3                     T6RST           equ	4019	;# 
  6446   000FB4                     T4TMR           equ	4020	;# 
  6447   000FB4                     TMR4            equ	4020	;# 
  6448   000FB5                     T4PR            equ	4021	;# 
  6449   000FB5                     PR4             equ	4021	;# 
  6450   000FB6                     T4CON           equ	4022	;# 
  6451   000FB7                     T4HLT           equ	4023	;# 
  6452   000FB8                     T4CLKCON        equ	4024	;# 
  6453   000FB8                     T4CLK           equ	4024	;# 
  6454   000FB9                     T4RST           equ	4025	;# 
  6455   000FBA                     T2TMR           equ	4026	;# 
  6456   000FBA                     TMR2            equ	4026	;# 
  6457   000FBB                     T2PR            equ	4027	;# 
  6458   000FBB                     PR2             equ	4027	;# 
  6459   000FBC                     T2CON           equ	4028	;# 
  6460   000FBD                     T2HLT           equ	4029	;# 
  6461   000FBE                     T2CLKCON        equ	4030	;# 
  6462   000FBE                     T2CLK           equ	4030	;# 
  6463   000FBF                     T2RST           equ	4031	;# 
  6464   000FC0                     TMR5            equ	4032	;# 
  6465   000FC0                     TMR5L           equ	4032	;# 
  6466   000FC1                     TMR5H           equ	4033	;# 
  6467   000FC2                     T5CON           equ	4034	;# 
  6468   000FC2                     TMR5CON         equ	4034	;# 
  6469   000FC3                     T5GCON          equ	4035	;# 
  6470   000FC3                     TMR5GCON        equ	4035	;# 
  6471   000FC4                     T5GATE          equ	4036	;# 
  6472   000FC4                     TMR5GATE        equ	4036	;# 
  6473   000FC5                     T5CLK           equ	4037	;# 
  6474   000FC5                     TMR5CLK         equ	4037	;# 
  6475   000FC5                     PR5             equ	4037	;# 
  6476   000FC6                     TMR3            equ	4038	;# 
  6477   000FC6                     TMR3L           equ	4038	;# 
  6478   000FC7                     TMR3H           equ	4039	;# 
  6479   000FC8                     T3CON           equ	4040	;# 
  6480   000FC8                     TMR3CON         equ	4040	;# 
  6481   000FC9                     T3GCON          equ	4041	;# 
  6482   000FC9                     TMR3GCON        equ	4041	;# 
  6483   000FCA                     T3GATE          equ	4042	;# 
  6484   000FCA                     TMR3GATE        equ	4042	;# 
  6485   000FCB                     T3CLK           equ	4043	;# 
  6486   000FCB                     TMR3CLK         equ	4043	;# 
  6487   000FCB                     PR3             equ	4043	;# 
  6488   000FCC                     TMR1            equ	4044	;# 
  6489   000FCC                     TMR1L           equ	4044	;# 
  6490   000FCD                     TMR1H           equ	4045	;# 
  6491   000FCE                     T1CON           equ	4046	;# 
  6492   000FCE                     TMR1CON         equ	4046	;# 
  6493   000FCF                     T1GCON          equ	4047	;# 
  6494   000FCF                     TMR1GCON        equ	4047	;# 
  6495   000FD0                     T1GATE          equ	4048	;# 
  6496   000FD0                     TMR1GATE        equ	4048	;# 
  6497   000FD1                     T1CLK           equ	4049	;# 
  6498   000FD1                     TMR1CLK         equ	4049	;# 
  6499   000FD1                     PR1             equ	4049	;# 
  6500   000FD2                     TMR0L           equ	4050	;# 
  6501   000FD2                     TMR0            equ	4050	;# 
  6502   000FD3                     TMR0H           equ	4051	;# 
  6503   000FD3                     PR0             equ	4051	;# 
  6504   000FD4                     T0CON0          equ	4052	;# 
  6505   000FD5                     T0CON1          equ	4053	;# 
  6506   000FD6                     PCON1           equ	4054	;# 
  6507   000FD7                     PCON0           equ	4055	;# 
  6508   000FD8                     STATUS          equ	4056	;# 
  6509   000FD9                     FSR2            equ	4057	;# 
  6510   000FD9                     FSR2L           equ	4057	;# 
  6511   000FDA                     FSR2H           equ	4058	;# 
  6512   000FDB                     PLUSW2          equ	4059	;# 
  6513   000FDC                     PREINC2         equ	4060	;# 
  6514   000FDD                     POSTDEC2        equ	4061	;# 
  6515   000FDE                     POSTINC2        equ	4062	;# 
  6516   000FDF                     INDF2           equ	4063	;# 
  6517   000FE0                     BSR             equ	4064	;# 
  6518   000FE1                     FSR1            equ	4065	;# 
  6519   000FE1                     FSR1L           equ	4065	;# 
  6520   000FE2                     FSR1H           equ	4066	;# 
  6521   000FE3                     PLUSW1          equ	4067	;# 
  6522   000FE4                     PREINC1         equ	4068	;# 
  6523   000FE5                     POSTDEC1        equ	4069	;# 
  6524   000FE6                     POSTINC1        equ	4070	;# 
  6525   000FE7                     INDF1           equ	4071	;# 
  6526   000FE8                     WREG            equ	4072	;# 
  6527   000FE9                     FSR0            equ	4073	;# 
  6528   000FE9                     FSR0L           equ	4073	;# 
  6529   000FEA                     FSR0H           equ	4074	;# 
  6530   000FEB                     PLUSW0          equ	4075	;# 
  6531   000FEC                     PREINC0         equ	4076	;# 
  6532   000FED                     POSTDEC0        equ	4077	;# 
  6533   000FEE                     POSTINC0        equ	4078	;# 
  6534   000FEF                     INDF0           equ	4079	;# 
  6535   000FF2                     INTCON          equ	4082	;# 
  6536   000FF3                     PROD            equ	4083	;# 
  6537   000FF3                     PRODL           equ	4083	;# 
  6538   000FF4                     PRODH           equ	4084	;# 
  6539   000FF5                     TABLAT          equ	4085	;# 
  6540   000FF6                     TBLPTR          equ	4086	;# 
  6541   000FF6                     TBLPTRL         equ	4086	;# 
  6542   000FF7                     TBLPTRH         equ	4087	;# 
  6543   000FF8                     TBLPTRU         equ	4088	;# 
  6544   000FF9                     PCLAT           equ	4089	;# 
  6545   000FF9                     PC              equ	4089	;# 
  6546   000FF9                     PCL             equ	4089	;# 
  6547   000FFA                     PCLATH          equ	4090	;# 
  6548   000FFB                     PCLATU          equ	4091	;# 
  6549   000FFC                     STKPTR          equ	4092	;# 
  6550   000FFD                     TOS             equ	4093	;# 
  6551   000FFD                     TOSL            equ	4093	;# 
  6552   000FFE                     TOSH            equ	4094	;# 
  6553   000FFF                     TOSU            equ	4095	;# 
  6554   000E9B                     PPSLOCK         equ	3739	;# 
  6555   000E9C                     INT0PPS         equ	3740	;# 
  6556   000E9D                     INT1PPS         equ	3741	;# 
  6557   000E9E                     INT2PPS         equ	3742	;# 
  6558   000E9F                     T0CKIPPS        equ	3743	;# 
  6559   000EA0                     T1CKIPPS        equ	3744	;# 
  6560   000EA1                     T1GPPS          equ	3745	;# 
  6561   000EA2                     T3CKIPPS        equ	3746	;# 
  6562   000EA3                     T3GPPS          equ	3747	;# 
  6563   000EA4                     T5CKIPPS        equ	3748	;# 
  6564   000EA5                     T5GPPS          equ	3749	;# 
  6565   000EA6                     T2INPPS         equ	3750	;# 
  6566   000EA7                     T4INPPS         equ	3751	;# 
  6567   000EA8                     T6INPPS         equ	3752	;# 
  6568   000EA9                     ADACTPPS        equ	3753	;# 
  6569   000EAA                     CCP1PPS         equ	3754	;# 
  6570   000EAB                     CCP2PPS         equ	3755	;# 
  6571   000EAC                     CWG1PPS         equ	3756	;# 
  6572   000EAC                     CWGPPS          equ	3756	;# 
  6573   000EAC                     CWGINPPS        equ	3756	;# 
  6574   000EAC                     CWG1INPPS       equ	3756	;# 
  6575   000EAD                     MDCARLPPS       equ	3757	;# 
  6576   000EAE                     MDCARHPPS       equ	3758	;# 
  6577   000EAF                     MDSRCPPS        equ	3759	;# 
  6578   000EB0                     RX1PPS          equ	3760	;# 
  6579   000EB0                     RXPPS           equ	3760	;# 
  6580   000EB0                     RXDT1PPS        equ	3760	;# 
  6581   000EB1                     CK1PPS          equ	3761	;# 
  6582   000EB1                     TXPPS           equ	3761	;# 
  6583   000EB1                     CKPPS           equ	3761	;# 
  6584   000EB1                     TXCK1PPS        equ	3761	;# 
  6585   000EB1                     TX1PPS          equ	3761	;# 
  6586   000EB2                     SSP1CLKPPS      equ	3762	;# 
  6587   000EB2                     SSPCLKPPS       equ	3762	;# 
  6588   000EB3                     SSP1DATPPS      equ	3763	;# 
  6589   000EB3                     SSPDATPPS       equ	3763	;# 
  6590   000EB4                     SSP1SSPPS       equ	3764	;# 
  6591   000EB4                     SSPSSPPS        equ	3764	;# 
  6592   000EB5                     IPR0            equ	3765	;# 
  6593   000EB6                     IPR1            equ	3766	;# 
  6594   000EB7                     IPR2            equ	3767	;# 
  6595   000EB8                     IPR3            equ	3768	;# 
  6596   000EB9                     IPR4            equ	3769	;# 
  6597   000EBA                     IPR5            equ	3770	;# 
  6598   000EBB                     IPR6            equ	3771	;# 
  6599   000EBC                     IPR7            equ	3772	;# 
  6600   000EBD                     PIE0            equ	3773	;# 
  6601   000EBE                     PIE1            equ	3774	;# 
  6602   000EBF                     PIE2            equ	3775	;# 
  6603   000EC0                     PIE3            equ	3776	;# 
  6604   000EC1                     PIE4            equ	3777	;# 
  6605   000EC2                     PIE5            equ	3778	;# 
  6606   000EC3                     PIE6            equ	3779	;# 
  6607   000EC4                     PIE7            equ	3780	;# 
  6608   000EC5                     PIR0            equ	3781	;# 
  6609   000EC6                     PIR1            equ	3782	;# 
  6610   000EC7                     PIR2            equ	3783	;# 
  6611   000EC8                     PIR3            equ	3784	;# 
  6612   000EC9                     PIR4            equ	3785	;# 
  6613   000ECA                     PIR5            equ	3786	;# 
  6614   000ECB                     PIR6            equ	3787	;# 
  6615   000ECC                     PIR7            equ	3788	;# 
  6616   000ECD                     WDTCON0         equ	3789	;# 
  6617   000ECE                     WDTCON1         equ	3790	;# 
  6618   000ECF                     WDTPSL          equ	3791	;# 
  6619   000ED0                     WDTPSH          equ	3792	;# 
  6620   000ED1                     WDTTMR          equ	3793	;# 
  6621   000ED2                     CPUDOZE         equ	3794	;# 
  6622   000ED3                     OSCCON1         equ	3795	;# 
  6623   000ED4                     OSCCON2         equ	3796	;# 
  6624   000ED5                     OSCCON3         equ	3797	;# 
  6625   000ED6                     OSCSTAT         equ	3798	;# 
  6626   000ED6                     OSCSTAT1        equ	3798	;# 
  6627   000ED7                     OSCEN           equ	3799	;# 
  6628   000ED8                     OSCTUNE         equ	3800	;# 
  6629   000ED9                     OSCFRQ          equ	3801	;# 
  6630   000ED9                     OSCFREQ         equ	3801	;# 
  6631   000EDA                     VREGCON         equ	3802	;# 
  6632   000EDB                     BORCON          equ	3803	;# 
  6633   000EDC                     PMD0            equ	3804	;# 
  6634   000EDD                     PMD1            equ	3805	;# 
  6635   000EDE                     PMD2            equ	3806	;# 
  6636   000EDF                     PMD3            equ	3807	;# 
  6637   000EE0                     PMD4            equ	3808	;# 
  6638   000EE1                     PMD5            equ	3809	;# 
  6639   000EE2                     RA0PPS          equ	3810	;# 
  6640   000EE3                     RA1PPS          equ	3811	;# 
  6641   000EE4                     RA2PPS          equ	3812	;# 
  6642   000EE5                     RA3PPS          equ	3813	;# 
  6643   000EE6                     RA4PPS          equ	3814	;# 
  6644   000EE7                     RA5PPS          equ	3815	;# 
  6645   000EE8                     RA6PPS          equ	3816	;# 
  6646   000EE9                     RA7PPS          equ	3817	;# 
  6647   000EEA                     RB0PPS          equ	3818	;# 
  6648   000EEB                     RB1PPS          equ	3819	;# 
  6649   000EEC                     RB2PPS          equ	3820	;# 
  6650   000EED                     RB3PPS          equ	3821	;# 
  6651   000EEE                     RB4PPS          equ	3822	;# 
  6652   000EEF                     RB5PPS          equ	3823	;# 
  6653   000EF0                     RB6PPS          equ	3824	;# 
  6654   000EF1                     RB7PPS          equ	3825	;# 
  6655   000EF2                     RC0PPS          equ	3826	;# 
  6656   000EF3                     RC1PPS          equ	3827	;# 
  6657   000EF4                     RC2PPS          equ	3828	;# 
  6658   000EF5                     RC3PPS          equ	3829	;# 
  6659   000EF6                     RC4PPS          equ	3830	;# 
  6660   000EF7                     RC5PPS          equ	3831	;# 
  6661   000EF8                     RC6PPS          equ	3832	;# 
  6662   000EF9                     RC7PPS          equ	3833	;# 
  6663   000F05                     IOCAF           equ	3845	;# 
  6664   000F06                     IOCAN           equ	3846	;# 
  6665   000F07                     IOCAP           equ	3847	;# 
  6666   000F08                     INLVLA          equ	3848	;# 
  6667   000F09                     SLRCONA         equ	3849	;# 
  6668   000F0A                     ODCONA          equ	3850	;# 
  6669   000F0B                     WPUA            equ	3851	;# 
  6670   000F0C                     ANSELA          equ	3852	;# 
  6671   000F0D                     IOCBF           equ	3853	;# 
  6672   000F0E                     IOCBN           equ	3854	;# 
  6673   000F0F                     IOCBP           equ	3855	;# 
  6674   000F10                     INLVLB          equ	3856	;# 
  6675   000F11                     SLRCONB         equ	3857	;# 
  6676   000F12                     ODCONB          equ	3858	;# 
  6677   000F13                     WPUB            equ	3859	;# 
  6678   000F14                     ANSELB          equ	3860	;# 
  6679   000F15                     IOCCF           equ	3861	;# 
  6680   000F16                     IOCCN           equ	3862	;# 
  6681   000F17                     IOCCP           equ	3863	;# 
  6682   000F18                     INLVLC          equ	3864	;# 
  6683   000F19                     SLRCONC         equ	3865	;# 
  6684   000F1A                     ODCONC          equ	3866	;# 
  6685   000F1B                     WPUC            equ	3867	;# 
  6686   000F1C                     ANSELC          equ	3868	;# 
  6687   000F22                     IOCEF           equ	3874	;# 
  6688   000F23                     IOCEN           equ	3875	;# 
  6689   000F24                     IOCEP           equ	3876	;# 
  6690   000F25                     INLVLE          equ	3877	;# 
  6691   000F28                     WPUE            equ	3880	;# 
  6692   000F2A                     HLVDCON0        equ	3882	;# 
  6693   000F2B                     HLVDCON1        equ	3883	;# 
  6694   000F2C                     FVRCON          equ	3884	;# 
  6695   000F2D                     ZCDCON          equ	3885	;# 
  6696   000F2E                     DAC1CON0        equ	3886	;# 
  6697   000F2F                     DAC1CON1        equ	3887	;# 
  6698   000F30                     CM2CON0         equ	3888	;# 
  6699   000F31                     CM2CON1         equ	3889	;# 
  6700   000F32                     CM2NCH          equ	3890	;# 
  6701   000F33                     CM2PCH          equ	3891	;# 
  6702   000F34                     CM1CON0         equ	3892	;# 
  6703   000F35                     CM1CON1         equ	3893	;# 
  6704   000F36                     CM1NCH          equ	3894	;# 
  6705   000F37                     CM1PCH          equ	3895	;# 
  6706   000F38                     CMOUT           equ	3896	;# 
  6707   000F39                     CLKRCON         equ	3897	;# 
  6708   000F3A                     CLKRCLK         equ	3898	;# 
  6709   000F3B                     CWG1CLK         equ	3899	;# 
  6710   000F3B                     CWG1CLKCON      equ	3899	;# 
  6711   000F3C                     CWG1ISM         equ	3900	;# 
  6712   000F3D                     CWG1DBR         equ	3901	;# 
  6713   000F3E                     CWG1DBF         equ	3902	;# 
  6714   000F3F                     CWG1CON0        equ	3903	;# 
  6715   000F40                     CWG1CON1        equ	3904	;# 
  6716   000F41                     CWG1AS0         equ	3905	;# 
  6717   000F42                     CWG1AS1         equ	3906	;# 
  6718   000F43                     CWG1STR         equ	3907	;# 
  6719   000F44                     SCANLADR        equ	3908	;# 
  6720   000F44                     SCANLADRL       equ	3908	;# 
  6721   000F45                     SCANLADRH       equ	3909	;# 
  6722   000F46                     SCANLADRU       equ	3910	;# 
  6723   000F47                     SCANHADR        equ	3911	;# 
  6724   000F47                     SCANHADRL       equ	3911	;# 
  6725   000F48                     SCANHADRH       equ	3912	;# 
  6726   000F49                     SCANHADRU       equ	3913	;# 
  6727   000F4A                     SCANCON0        equ	3914	;# 
  6728   000F4B                     SCANTRIG        equ	3915	;# 
  6729   000F4C                     MDCON0          equ	3916	;# 
  6730   000F4D                     MDCON1          equ	3917	;# 
  6731   000F4E                     MDSRC           equ	3918	;# 
  6732   000F4F                     MDCARL          equ	3919	;# 
  6733   000F50                     MDCARH          equ	3920	;# 
  6734   000F51                     ADACT           equ	3921	;# 
  6735   000F52                     ADCLK           equ	3922	;# 
  6736   000F53                     ADREF           equ	3923	;# 
  6737   000F54                     ADCON1          equ	3924	;# 
  6738   000F55                     ADCON2          equ	3925	;# 
  6739   000F56                     ADCON3          equ	3926	;# 
  6740   000F57                     ADACQ           equ	3927	;# 
  6741   000F58                     ADCAP           equ	3928	;# 
  6742   000F59                     ADPRE           equ	3929	;# 
  6743   000F5A                     ADPCH           equ	3930	;# 
  6744   000F5B                     ADCON0          equ	3931	;# 
  6745   000F5C                     ADPREV          equ	3932	;# 
  6746   000F5C                     ADPREVL         equ	3932	;# 
  6747   000F5D                     ADPREVH         equ	3933	;# 
  6748   000F5E                     ADRES           equ	3934	;# 
  6749   000F5E                     ADRESL          equ	3934	;# 
  6750   000F5F                     ADRESH          equ	3935	;# 
  6751   000F60                     ADSTAT          equ	3936	;# 
  6752   000F61                     ADRPT           equ	3937	;# 
  6753   000F62                     ADCNT           equ	3938	;# 
  6754   000F63                     ADSTPT          equ	3939	;# 
  6755   000F63                     ADSTPTL         equ	3939	;# 
  6756   000F64                     ADSTPTH         equ	3940	;# 
  6757   000F65                     ADLTH           equ	3941	;# 
  6758   000F65                     ADLTHL          equ	3941	;# 
  6759   000F66                     ADLTHH          equ	3942	;# 
  6760   000F67                     ADUTH           equ	3943	;# 
  6761   000F67                     ADUTHL          equ	3943	;# 
  6762   000F68                     ADUTHH          equ	3944	;# 
  6763   000F69                     ADERR           equ	3945	;# 
  6764   000F69                     ADERRL          equ	3945	;# 
  6765   000F6A                     ADERRH          equ	3946	;# 
  6766   000F6B                     ADACC           equ	3947	;# 
  6767   000F6B                     ADACCL          equ	3947	;# 
  6768   000F6C                     ADACCH          equ	3948	;# 
  6769   000F6D                     ADFLTR          equ	3949	;# 
  6770   000F6D                     ADFLTRL         equ	3949	;# 
  6771   000F6E                     ADFLTRH         equ	3950	;# 
  6772   000F6F                     CRCDATA         equ	3951	;# 
  6773   000F6F                     CRCDATL         equ	3951	;# 
  6774   000F70                     CRCDATH         equ	3952	;# 
  6775   000F71                     CRCACC          equ	3953	;# 
  6776   000F71                     CRCACCL         equ	3953	;# 
  6777   000F72                     CRCACCH         equ	3954	;# 
  6778   000F73                     CRCSHFT         equ	3955	;# 
  6779   000F73                     CRCSHIFTL       equ	3955	;# 
  6780   000F74                     CRCSHIFTH       equ	3956	;# 
  6781   000F75                     CRCXOR          equ	3957	;# 
  6782   000F75                     CRCXORL         equ	3957	;# 
  6783   000F76                     CRCXORH         equ	3958	;# 
  6784   000F77                     CRCCON0         equ	3959	;# 
  6785   000F78                     CRCCON1         equ	3960	;# 
  6786   000F79                     NVMADR          equ	3961	;# 
  6787   000F79                     NVMADRL         equ	3961	;# 
  6788   000F7A                     NVMADRH         equ	3962	;# 
  6789   000F7B                     NVMADRU         equ	3963	;# 
  6790   000F7C                     NVMDAT          equ	3964	;# 
  6791   000F7C                     NVMDATL         equ	3964	;# 
  6792   000F7D                     NVMDATH         equ	3965	;# 
  6793   000F7F                     NVMCON0         equ	3967	;# 
  6794   000F80                     NVMCON1         equ	3968	;# 
  6795   000F81                     NVMCON2         equ	3969	;# 
  6796   000F82                     LATA            equ	3970	;# 
  6797   000F83                     LATB            equ	3971	;# 
  6798   000F84                     LATC            equ	3972	;# 
  6799   000F87                     TRISA           equ	3975	;# 
  6800   000F87                     DDRA            equ	3975	;# 
  6801   000F88                     TRISB           equ	3976	;# 
  6802   000F88                     DDRB            equ	3976	;# 
  6803   000F89                     TRISC           equ	3977	;# 
  6804   000F89                     DDRC            equ	3977	;# 
  6805   000F8C                     PORTA           equ	3980	;# 
  6806   000F8D                     PORTB           equ	3981	;# 
  6807   000F8E                     PORTC           equ	3982	;# 
  6808   000F90                     PORTE           equ	3984	;# 
  6809   000F91                     SSP1BUF         equ	3985	;# 
  6810   000F92                     SSP1ADD         equ	3986	;# 
  6811   000F93                     SSP1MSK         equ	3987	;# 
  6812   000F94                     SSP1STAT        equ	3988	;# 
  6813   000F95                     SSP1CON1        equ	3989	;# 
  6814   000F96                     SSP1CON2        equ	3990	;# 
  6815   000F97                     SSP1CON3        equ	3991	;# 
  6816   000F98                     RC1REG          equ	3992	;# 
  6817   000F98                     RCREG           equ	3992	;# 
  6818   000F98                     RCREG1          equ	3992	;# 
  6819   000F99                     TX1REG          equ	3993	;# 
  6820   000F99                     TXREG1          equ	3993	;# 
  6821   000F99                     TXREG           equ	3993	;# 
  6822   000F9A                     SP1BRG          equ	3994	;# 
  6823   000F9A                     SPBRG           equ	3994	;# 
  6824   000F9A                     SP1BRGL         equ	3994	;# 
  6825   000F9A                     SPBRG1          equ	3994	;# 
  6826   000F9A                     SPBRGL          equ	3994	;# 
  6827   000F9B                     SP1BRGH         equ	3995	;# 
  6828   000F9B                     SPBRGH          equ	3995	;# 
  6829   000F9B                     SPBRGH1         equ	3995	;# 
  6830   000F9C                     RC1STA          equ	3996	;# 
  6831   000F9C                     RCSTA1          equ	3996	;# 
  6832   000F9C                     RCSTA           equ	3996	;# 
  6833   000F9D                     TX1STA          equ	3997	;# 
  6834   000F9D                     TXSTA1          equ	3997	;# 
  6835   000F9D                     TXSTA           equ	3997	;# 
  6836   000F9E                     BAUD1CON        equ	3998	;# 
  6837   000F9E                     BAUDCON1        equ	3998	;# 
  6838   000F9E                     BAUDCTL1        equ	3998	;# 
  6839   000F9E                     BAUDCON         equ	3998	;# 
  6840   000F9E                     BAUDCTL         equ	3998	;# 
  6841   000F9F                     PWM4DC          equ	3999	;# 
  6842   000F9F                     PWM4DCL         equ	3999	;# 
  6843   000FA0                     PWM4DCH         equ	4000	;# 
  6844   000FA1                     PWM4CON         equ	4001	;# 
  6845   000FA2                     PWM3DC          equ	4002	;# 
  6846   000FA2                     PWM3DCL         equ	4002	;# 
  6847   000FA3                     PWM3DCH         equ	4003	;# 
  6848   000FA4                     PWM3CON         equ	4004	;# 
  6849   000FA5                     CCPR2           equ	4005	;# 
  6850   000FA5                     CCPR2L          equ	4005	;# 
  6851   000FA6                     CCPR2H          equ	4006	;# 
  6852   000FA7                     CCP2CON         equ	4007	;# 
  6853   000FA8                     CCP2CAP         equ	4008	;# 
  6854   000FA9                     CCPR1           equ	4009	;# 
  6855   000FA9                     CCPR1L          equ	4009	;# 
  6856   000FAA                     CCPR1H          equ	4010	;# 
  6857   000FAB                     CCP1CON         equ	4011	;# 
  6858   000FAC                     CCP1CAP         equ	4012	;# 
  6859   000FAD                     CCPTMRS         equ	4013	;# 
  6860   000FAE                     T6TMR           equ	4014	;# 
  6861   000FAE                     TMR6            equ	4014	;# 
  6862   000FAF                     T6PR            equ	4015	;# 
  6863   000FAF                     PR6             equ	4015	;# 
  6864   000FB0                     T6CON           equ	4016	;# 
  6865   000FB1                     T6HLT           equ	4017	;# 
  6866   000FB2                     T6CLKCON        equ	4018	;# 
  6867   000FB2                     T6CLK           equ	4018	;# 
  6868   000FB3                     T6RST           equ	4019	;# 
  6869   000FB4                     T4TMR           equ	4020	;# 
  6870   000FB4                     TMR4            equ	4020	;# 
  6871   000FB5                     T4PR            equ	4021	;# 
  6872   000FB5                     PR4             equ	4021	;# 
  6873   000FB6                     T4CON           equ	4022	;# 
  6874   000FB7                     T4HLT           equ	4023	;# 
  6875   000FB8                     T4CLKCON        equ	4024	;# 
  6876   000FB8                     T4CLK           equ	4024	;# 
  6877   000FB9                     T4RST           equ	4025	;# 
  6878   000FBA                     T2TMR           equ	4026	;# 
  6879   000FBA                     TMR2            equ	4026	;# 
  6880   000FBB                     T2PR            equ	4027	;# 
  6881   000FBB                     PR2             equ	4027	;# 
  6882   000FBC                     T2CON           equ	4028	;# 
  6883   000FBD                     T2HLT           equ	4029	;# 
  6884   000FBE                     T2CLKCON        equ	4030	;# 
  6885   000FBE                     T2CLK           equ	4030	;# 
  6886   000FBF                     T2RST           equ	4031	;# 
  6887   000FC0                     TMR5            equ	4032	;# 
  6888   000FC0                     TMR5L           equ	4032	;# 
  6889   000FC1                     TMR5H           equ	4033	;# 
  6890   000FC2                     T5CON           equ	4034	;# 
  6891   000FC2                     TMR5CON         equ	4034	;# 
  6892   000FC3                     T5GCON          equ	4035	;# 
  6893   000FC3                     TMR5GCON        equ	4035	;# 
  6894   000FC4                     T5GATE          equ	4036	;# 
  6895   000FC4                     TMR5GATE        equ	4036	;# 
  6896   000FC5                     T5CLK           equ	4037	;# 
  6897   000FC5                     TMR5CLK         equ	4037	;# 
  6898   000FC5                     PR5             equ	4037	;# 
  6899   000FC6                     TMR3            equ	4038	;# 
  6900   000FC6                     TMR3L           equ	4038	;# 
  6901   000FC7                     TMR3H           equ	4039	;# 
  6902   000FC8                     T3CON           equ	4040	;# 
  6903   000FC8                     TMR3CON         equ	4040	;# 
  6904   000FC9                     T3GCON          equ	4041	;# 
  6905   000FC9                     TMR3GCON        equ	4041	;# 
  6906   000FCA                     T3GATE          equ	4042	;# 
  6907   000FCA                     TMR3GATE        equ	4042	;# 
  6908   000FCB                     T3CLK           equ	4043	;# 
  6909   000FCB                     TMR3CLK         equ	4043	;# 
  6910   000FCB                     PR3             equ	4043	;# 
  6911   000FCC                     TMR1            equ	4044	;# 
  6912   000FCC                     TMR1L           equ	4044	;# 
  6913   000FCD                     TMR1H           equ	4045	;# 
  6914   000FCE                     T1CON           equ	4046	;# 
  6915   000FCE                     TMR1CON         equ	4046	;# 
  6916   000FCF                     T1GCON          equ	4047	;# 
  6917   000FCF                     TMR1GCON        equ	4047	;# 
  6918   000FD0                     T1GATE          equ	4048	;# 
  6919   000FD0                     TMR1GATE        equ	4048	;# 
  6920   000FD1                     T1CLK           equ	4049	;# 
  6921   000FD1                     TMR1CLK         equ	4049	;# 
  6922   000FD1                     PR1             equ	4049	;# 
  6923   000FD2                     TMR0L           equ	4050	;# 
  6924   000FD2                     TMR0            equ	4050	;# 
  6925   000FD3                     TMR0H           equ	4051	;# 
  6926   000FD3                     PR0             equ	4051	;# 
  6927   000FD4                     T0CON0          equ	4052	;# 
  6928   000FD5                     T0CON1          equ	4053	;# 
  6929   000FD6                     PCON1           equ	4054	;# 
  6930   000FD7                     PCON0           equ	4055	;# 
  6931   000FD8                     STATUS          equ	4056	;# 
  6932   000FD9                     FSR2            equ	4057	;# 
  6933   000FD9                     FSR2L           equ	4057	;# 
  6934   000FDA                     FSR2H           equ	4058	;# 
  6935   000FDB                     PLUSW2          equ	4059	;# 
  6936   000FDC                     PREINC2         equ	4060	;# 
  6937   000FDD                     POSTDEC2        equ	4061	;# 
  6938   000FDE                     POSTINC2        equ	4062	;# 
  6939   000FDF                     INDF2           equ	4063	;# 
  6940   000FE0                     BSR             equ	4064	;# 
  6941   000FE1                     FSR1            equ	4065	;# 
  6942   000FE1                     FSR1L           equ	4065	;# 
  6943   000FE2                     FSR1H           equ	4066	;# 
  6944   000FE3                     PLUSW1          equ	4067	;# 
  6945   000FE4                     PREINC1         equ	4068	;# 
  6946   000FE5                     POSTDEC1        equ	4069	;# 
  6947   000FE6                     POSTINC1        equ	4070	;# 
  6948   000FE7                     INDF1           equ	4071	;# 
  6949   000FE8                     WREG            equ	4072	;# 
  6950   000FE9                     FSR0            equ	4073	;# 
  6951   000FE9                     FSR0L           equ	4073	;# 
  6952   000FEA                     FSR0H           equ	4074	;# 
  6953   000FEB                     PLUSW0          equ	4075	;# 
  6954   000FEC                     PREINC0         equ	4076	;# 
  6955   000FED                     POSTDEC0        equ	4077	;# 
  6956   000FEE                     POSTINC0        equ	4078	;# 
  6957   000FEF                     INDF0           equ	4079	;# 
  6958   000FF2                     INTCON          equ	4082	;# 
  6959   000FF3                     PROD            equ	4083	;# 
  6960   000FF3                     PRODL           equ	4083	;# 
  6961   000FF4                     PRODH           equ	4084	;# 
  6962   000FF5                     TABLAT          equ	4085	;# 
  6963   000FF6                     TBLPTR          equ	4086	;# 
  6964   000FF6                     TBLPTRL         equ	4086	;# 
  6965   000FF7                     TBLPTRH         equ	4087	;# 
  6966   000FF8                     TBLPTRU         equ	4088	;# 
  6967   000FF9                     PCLAT           equ	4089	;# 
  6968   000FF9                     PC              equ	4089	;# 
  6969   000FF9                     PCL             equ	4089	;# 
  6970   000FFA                     PCLATH          equ	4090	;# 
  6971   000FFB                     PCLATU          equ	4091	;# 
  6972   000FFC                     STKPTR          equ	4092	;# 
  6973   000FFD                     TOS             equ	4093	;# 
  6974   000FFD                     TOSL            equ	4093	;# 
  6975   000FFE                     TOSH            equ	4094	;# 
  6976   000FFF                     TOSU            equ	4095	;# 
  6977   000E9B                     PPSLOCK         equ	3739	;# 
  6978   000E9C                     INT0PPS         equ	3740	;# 
  6979   000E9D                     INT1PPS         equ	3741	;# 
  6980   000E9E                     INT2PPS         equ	3742	;# 
  6981   000E9F                     T0CKIPPS        equ	3743	;# 
  6982   000EA0                     T1CKIPPS        equ	3744	;# 
  6983   000EA1                     T1GPPS          equ	3745	;# 
  6984   000EA2                     T3CKIPPS        equ	3746	;# 
  6985   000EA3                     T3GPPS          equ	3747	;# 
  6986   000EA4                     T5CKIPPS        equ	3748	;# 
  6987   000EA5                     T5GPPS          equ	3749	;# 
  6988   000EA6                     T2INPPS         equ	3750	;# 
  6989   000EA7                     T4INPPS         equ	3751	;# 
  6990   000EA8                     T6INPPS         equ	3752	;# 
  6991   000EA9                     ADACTPPS        equ	3753	;# 
  6992   000EAA                     CCP1PPS         equ	3754	;# 
  6993   000EAB                     CCP2PPS         equ	3755	;# 
  6994   000EAC                     CWG1PPS         equ	3756	;# 
  6995   000EAC                     CWGPPS          equ	3756	;# 
  6996   000EAC                     CWGINPPS        equ	3756	;# 
  6997   000EAC                     CWG1INPPS       equ	3756	;# 
  6998   000EAD                     MDCARLPPS       equ	3757	;# 
  6999   000EAE                     MDCARHPPS       equ	3758	;# 
  7000   000EAF                     MDSRCPPS        equ	3759	;# 
  7001   000EB0                     RX1PPS          equ	3760	;# 
  7002   000EB0                     RXPPS           equ	3760	;# 
  7003   000EB0                     RXDT1PPS        equ	3760	;# 
  7004   000EB1                     CK1PPS          equ	3761	;# 
  7005   000EB1                     TXPPS           equ	3761	;# 
  7006   000EB1                     CKPPS           equ	3761	;# 
  7007   000EB1                     TXCK1PPS        equ	3761	;# 
  7008   000EB1                     TX1PPS          equ	3761	;# 
  7009   000EB2                     SSP1CLKPPS      equ	3762	;# 
  7010   000EB2                     SSPCLKPPS       equ	3762	;# 
  7011   000EB3                     SSP1DATPPS      equ	3763	;# 
  7012   000EB3                     SSPDATPPS       equ	3763	;# 
  7013   000EB4                     SSP1SSPPS       equ	3764	;# 
  7014   000EB4                     SSPSSPPS        equ	3764	;# 
  7015   000EB5                     IPR0            equ	3765	;# 
  7016   000EB6                     IPR1            equ	3766	;# 
  7017   000EB7                     IPR2            equ	3767	;# 
  7018   000EB8                     IPR3            equ	3768	;# 
  7019   000EB9                     IPR4            equ	3769	;# 
  7020   000EBA                     IPR5            equ	3770	;# 
  7021   000EBB                     IPR6            equ	3771	;# 
  7022   000EBC                     IPR7            equ	3772	;# 
  7023   000EBD                     PIE0            equ	3773	;# 
  7024   000EBE                     PIE1            equ	3774	;# 
  7025   000EBF                     PIE2            equ	3775	;# 
  7026   000EC0                     PIE3            equ	3776	;# 
  7027   000EC1                     PIE4            equ	3777	;# 
  7028   000EC2                     PIE5            equ	3778	;# 
  7029   000EC3                     PIE6            equ	3779	;# 
  7030   000EC4                     PIE7            equ	3780	;# 
  7031   000EC5                     PIR0            equ	3781	;# 
  7032   000EC6                     PIR1            equ	3782	;# 
  7033   000EC7                     PIR2            equ	3783	;# 
  7034   000EC8                     PIR3            equ	3784	;# 
  7035   000EC9                     PIR4            equ	3785	;# 
  7036   000ECA                     PIR5            equ	3786	;# 
  7037   000ECB                     PIR6            equ	3787	;# 
  7038   000ECC                     PIR7            equ	3788	;# 
  7039   000ECD                     WDTCON0         equ	3789	;# 
  7040   000ECE                     WDTCON1         equ	3790	;# 
  7041   000ECF                     WDTPSL          equ	3791	;# 
  7042   000ED0                     WDTPSH          equ	3792	;# 
  7043   000ED1                     WDTTMR          equ	3793	;# 
  7044   000ED2                     CPUDOZE         equ	3794	;# 
  7045   000ED3                     OSCCON1         equ	3795	;# 
  7046   000ED4                     OSCCON2         equ	3796	;# 
  7047   000ED5                     OSCCON3         equ	3797	;# 
  7048   000ED6                     OSCSTAT         equ	3798	;# 
  7049   000ED6                     OSCSTAT1        equ	3798	;# 
  7050   000ED7                     OSCEN           equ	3799	;# 
  7051   000ED8                     OSCTUNE         equ	3800	;# 
  7052   000ED9                     OSCFRQ          equ	3801	;# 
  7053   000ED9                     OSCFREQ         equ	3801	;# 
  7054   000EDA                     VREGCON         equ	3802	;# 
  7055   000EDB                     BORCON          equ	3803	;# 
  7056   000EDC                     PMD0            equ	3804	;# 
  7057   000EDD                     PMD1            equ	3805	;# 
  7058   000EDE                     PMD2            equ	3806	;# 
  7059   000EDF                     PMD3            equ	3807	;# 
  7060   000EE0                     PMD4            equ	3808	;# 
  7061   000EE1                     PMD5            equ	3809	;# 
  7062   000EE2                     RA0PPS          equ	3810	;# 
  7063   000EE3                     RA1PPS          equ	3811	;# 
  7064   000EE4                     RA2PPS          equ	3812	;# 
  7065   000EE5                     RA3PPS          equ	3813	;# 
  7066   000EE6                     RA4PPS          equ	3814	;# 
  7067   000EE7                     RA5PPS          equ	3815	;# 
  7068   000EE8                     RA6PPS          equ	3816	;# 
  7069   000EE9                     RA7PPS          equ	3817	;# 
  7070   000EEA                     RB0PPS          equ	3818	;# 
  7071   000EEB                     RB1PPS          equ	3819	;# 
  7072   000EEC                     RB2PPS          equ	3820	;# 
  7073   000EED                     RB3PPS          equ	3821	;# 
  7074   000EEE                     RB4PPS          equ	3822	;# 
  7075   000EEF                     RB5PPS          equ	3823	;# 
  7076   000EF0                     RB6PPS          equ	3824	;# 
  7077   000EF1                     RB7PPS          equ	3825	;# 
  7078   000EF2                     RC0PPS          equ	3826	;# 
  7079   000EF3                     RC1PPS          equ	3827	;# 
  7080   000EF4                     RC2PPS          equ	3828	;# 
  7081   000EF5                     RC3PPS          equ	3829	;# 
  7082   000EF6                     RC4PPS          equ	3830	;# 
  7083   000EF7                     RC5PPS          equ	3831	;# 
  7084   000EF8                     RC6PPS          equ	3832	;# 
  7085   000EF9                     RC7PPS          equ	3833	;# 
  7086   000F05                     IOCAF           equ	3845	;# 
  7087   000F06                     IOCAN           equ	3846	;# 
  7088   000F07                     IOCAP           equ	3847	;# 
  7089   000F08                     INLVLA          equ	3848	;# 
  7090   000F09                     SLRCONA         equ	3849	;# 
  7091   000F0A                     ODCONA          equ	3850	;# 
  7092   000F0B                     WPUA            equ	3851	;# 
  7093   000F0C                     ANSELA          equ	3852	;# 
  7094   000F0D                     IOCBF           equ	3853	;# 
  7095   000F0E                     IOCBN           equ	3854	;# 
  7096   000F0F                     IOCBP           equ	3855	;# 
  7097   000F10                     INLVLB          equ	3856	;# 
  7098   000F11                     SLRCONB         equ	3857	;# 
  7099   000F12                     ODCONB          equ	3858	;# 
  7100   000F13                     WPUB            equ	3859	;# 
  7101   000F14                     ANSELB          equ	3860	;# 
  7102   000F15                     IOCCF           equ	3861	;# 
  7103   000F16                     IOCCN           equ	3862	;# 
  7104   000F17                     IOCCP           equ	3863	;# 
  7105   000F18                     INLVLC          equ	3864	;# 
  7106   000F19                     SLRCONC         equ	3865	;# 
  7107   000F1A                     ODCONC          equ	3866	;# 
  7108   000F1B                     WPUC            equ	3867	;# 
  7109   000F1C                     ANSELC          equ	3868	;# 
  7110   000F22                     IOCEF           equ	3874	;# 
  7111   000F23                     IOCEN           equ	3875	;# 
  7112   000F24                     IOCEP           equ	3876	;# 
  7113   000F25                     INLVLE          equ	3877	;# 
  7114   000F28                     WPUE            equ	3880	;# 
  7115   000F2A                     HLVDCON0        equ	3882	;# 
  7116   000F2B                     HLVDCON1        equ	3883	;# 
  7117   000F2C                     FVRCON          equ	3884	;# 
  7118   000F2D                     ZCDCON          equ	3885	;# 
  7119   000F2E                     DAC1CON0        equ	3886	;# 
  7120   000F2F                     DAC1CON1        equ	3887	;# 
  7121   000F30                     CM2CON0         equ	3888	;# 
  7122   000F31                     CM2CON1         equ	3889	;# 
  7123   000F32                     CM2NCH          equ	3890	;# 
  7124   000F33                     CM2PCH          equ	3891	;# 
  7125   000F34                     CM1CON0         equ	3892	;# 
  7126   000F35                     CM1CON1         equ	3893	;# 
  7127   000F36                     CM1NCH          equ	3894	;# 
  7128   000F37                     CM1PCH          equ	3895	;# 
  7129   000F38                     CMOUT           equ	3896	;# 
  7130   000F39                     CLKRCON         equ	3897	;# 
  7131   000F3A                     CLKRCLK         equ	3898	;# 
  7132   000F3B                     CWG1CLK         equ	3899	;# 
  7133   000F3B                     CWG1CLKCON      equ	3899	;# 
  7134   000F3C                     CWG1ISM         equ	3900	;# 
  7135   000F3D                     CWG1DBR         equ	3901	;# 
  7136   000F3E                     CWG1DBF         equ	3902	;# 
  7137   000F3F                     CWG1CON0        equ	3903	;# 
  7138   000F40                     CWG1CON1        equ	3904	;# 
  7139   000F41                     CWG1AS0         equ	3905	;# 
  7140   000F42                     CWG1AS1         equ	3906	;# 
  7141   000F43                     CWG1STR         equ	3907	;# 
  7142   000F44                     SCANLADR        equ	3908	;# 
  7143   000F44                     SCANLADRL       equ	3908	;# 
  7144   000F45                     SCANLADRH       equ	3909	;# 
  7145   000F46                     SCANLADRU       equ	3910	;# 
  7146   000F47                     SCANHADR        equ	3911	;# 
  7147   000F47                     SCANHADRL       equ	3911	;# 
  7148   000F48                     SCANHADRH       equ	3912	;# 
  7149   000F49                     SCANHADRU       equ	3913	;# 
  7150   000F4A                     SCANCON0        equ	3914	;# 
  7151   000F4B                     SCANTRIG        equ	3915	;# 
  7152   000F4C                     MDCON0          equ	3916	;# 
  7153   000F4D                     MDCON1          equ	3917	;# 
  7154   000F4E                     MDSRC           equ	3918	;# 
  7155   000F4F                     MDCARL          equ	3919	;# 
  7156   000F50                     MDCARH          equ	3920	;# 
  7157   000F51                     ADACT           equ	3921	;# 
  7158   000F52                     ADCLK           equ	3922	;# 
  7159   000F53                     ADREF           equ	3923	;# 
  7160   000F54                     ADCON1          equ	3924	;# 
  7161   000F55                     ADCON2          equ	3925	;# 
  7162   000F56                     ADCON3          equ	3926	;# 
  7163   000F57                     ADACQ           equ	3927	;# 
  7164   000F58                     ADCAP           equ	3928	;# 
  7165   000F59                     ADPRE           equ	3929	;# 
  7166   000F5A                     ADPCH           equ	3930	;# 
  7167   000F5B                     ADCON0          equ	3931	;# 
  7168   000F5C                     ADPREV          equ	3932	;# 
  7169   000F5C                     ADPREVL         equ	3932	;# 
  7170   000F5D                     ADPREVH         equ	3933	;# 
  7171   000F5E                     ADRES           equ	3934	;# 
  7172   000F5E                     ADRESL          equ	3934	;# 
  7173   000F5F                     ADRESH          equ	3935	;# 
  7174   000F60                     ADSTAT          equ	3936	;# 
  7175   000F61                     ADRPT           equ	3937	;# 
  7176   000F62                     ADCNT           equ	3938	;# 
  7177   000F63                     ADSTPT          equ	3939	;# 
  7178   000F63                     ADSTPTL         equ	3939	;# 
  7179   000F64                     ADSTPTH         equ	3940	;# 
  7180   000F65                     ADLTH           equ	3941	;# 
  7181   000F65                     ADLTHL          equ	3941	;# 
  7182   000F66                     ADLTHH          equ	3942	;# 
  7183   000F67                     ADUTH           equ	3943	;# 
  7184   000F67                     ADUTHL          equ	3943	;# 
  7185   000F68                     ADUTHH          equ	3944	;# 
  7186   000F69                     ADERR           equ	3945	;# 
  7187   000F69                     ADERRL          equ	3945	;# 
  7188   000F6A                     ADERRH          equ	3946	;# 
  7189   000F6B                     ADACC           equ	3947	;# 
  7190   000F6B                     ADACCL          equ	3947	;# 
  7191   000F6C                     ADACCH          equ	3948	;# 
  7192   000F6D                     ADFLTR          equ	3949	;# 
  7193   000F6D                     ADFLTRL         equ	3949	;# 
  7194   000F6E                     ADFLTRH         equ	3950	;# 
  7195   000F6F                     CRCDATA         equ	3951	;# 
  7196   000F6F                     CRCDATL         equ	3951	;# 
  7197   000F70                     CRCDATH         equ	3952	;# 
  7198   000F71                     CRCACC          equ	3953	;# 
  7199   000F71                     CRCACCL         equ	3953	;# 
  7200   000F72                     CRCACCH         equ	3954	;# 
  7201   000F73                     CRCSHFT         equ	3955	;# 
  7202   000F73                     CRCSHIFTL       equ	3955	;# 
  7203   000F74                     CRCSHIFTH       equ	3956	;# 
  7204   000F75                     CRCXOR          equ	3957	;# 
  7205   000F75                     CRCXORL         equ	3957	;# 
  7206   000F76                     CRCXORH         equ	3958	;# 
  7207   000F77                     CRCCON0         equ	3959	;# 
  7208   000F78                     CRCCON1         equ	3960	;# 
  7209   000F79                     NVMADR          equ	3961	;# 
  7210   000F79                     NVMADRL         equ	3961	;# 
  7211   000F7A                     NVMADRH         equ	3962	;# 
  7212   000F7B                     NVMADRU         equ	3963	;# 
  7213   000F7C                     NVMDAT          equ	3964	;# 
  7214   000F7C                     NVMDATL         equ	3964	;# 
  7215   000F7D                     NVMDATH         equ	3965	;# 
  7216   000F7F                     NVMCON0         equ	3967	;# 
  7217   000F80                     NVMCON1         equ	3968	;# 
  7218   000F81                     NVMCON2         equ	3969	;# 
  7219   000F82                     LATA            equ	3970	;# 
  7220   000F83                     LATB            equ	3971	;# 
  7221   000F84                     LATC            equ	3972	;# 
  7222   000F87                     TRISA           equ	3975	;# 
  7223   000F87                     DDRA            equ	3975	;# 
  7224   000F88                     TRISB           equ	3976	;# 
  7225   000F88                     DDRB            equ	3976	;# 
  7226   000F89                     TRISC           equ	3977	;# 
  7227   000F89                     DDRC            equ	3977	;# 
  7228   000F8C                     PORTA           equ	3980	;# 
  7229   000F8D                     PORTB           equ	3981	;# 
  7230   000F8E                     PORTC           equ	3982	;# 
  7231   000F90                     PORTE           equ	3984	;# 
  7232   000F91                     SSP1BUF         equ	3985	;# 
  7233   000F92                     SSP1ADD         equ	3986	;# 
  7234   000F93                     SSP1MSK         equ	3987	;# 
  7235   000F94                     SSP1STAT        equ	3988	;# 
  7236   000F95                     SSP1CON1        equ	3989	;# 
  7237   000F96                     SSP1CON2        equ	3990	;# 
  7238   000F97                     SSP1CON3        equ	3991	;# 
  7239   000F98                     RC1REG          equ	3992	;# 
  7240   000F98                     RCREG           equ	3992	;# 
  7241   000F98                     RCREG1          equ	3992	;# 
  7242   000F99                     TX1REG          equ	3993	;# 
  7243   000F99                     TXREG1          equ	3993	;# 
  7244   000F99                     TXREG           equ	3993	;# 
  7245   000F9A                     SP1BRG          equ	3994	;# 
  7246   000F9A                     SPBRG           equ	3994	;# 
  7247   000F9A                     SP1BRGL         equ	3994	;# 
  7248   000F9A                     SPBRG1          equ	3994	;# 
  7249   000F9A                     SPBRGL          equ	3994	;# 
  7250   000F9B                     SP1BRGH         equ	3995	;# 
  7251   000F9B                     SPBRGH          equ	3995	;# 
  7252   000F9B                     SPBRGH1         equ	3995	;# 
  7253   000F9C                     RC1STA          equ	3996	;# 
  7254   000F9C                     RCSTA1          equ	3996	;# 
  7255   000F9C                     RCSTA           equ	3996	;# 
  7256   000F9D                     TX1STA          equ	3997	;# 
  7257   000F9D                     TXSTA1          equ	3997	;# 
  7258   000F9D                     TXSTA           equ	3997	;# 
  7259   000F9E                     BAUD1CON        equ	3998	;# 
  7260   000F9E                     BAUDCON1        equ	3998	;# 
  7261   000F9E                     BAUDCTL1        equ	3998	;# 
  7262   000F9E                     BAUDCON         equ	3998	;# 
  7263   000F9E                     BAUDCTL         equ	3998	;# 
  7264   000F9F                     PWM4DC          equ	3999	;# 
  7265   000F9F                     PWM4DCL         equ	3999	;# 
  7266   000FA0                     PWM4DCH         equ	4000	;# 
  7267   000FA1                     PWM4CON         equ	4001	;# 
  7268   000FA2                     PWM3DC          equ	4002	;# 
  7269   000FA2                     PWM3DCL         equ	4002	;# 
  7270   000FA3                     PWM3DCH         equ	4003	;# 
  7271   000FA4                     PWM3CON         equ	4004	;# 
  7272   000FA5                     CCPR2           equ	4005	;# 
  7273   000FA5                     CCPR2L          equ	4005	;# 
  7274   000FA6                     CCPR2H          equ	4006	;# 
  7275   000FA7                     CCP2CON         equ	4007	;# 
  7276   000FA8                     CCP2CAP         equ	4008	;# 
  7277   000FA9                     CCPR1           equ	4009	;# 
  7278   000FA9                     CCPR1L          equ	4009	;# 
  7279   000FAA                     CCPR1H          equ	4010	;# 
  7280   000FAB                     CCP1CON         equ	4011	;# 
  7281   000FAC                     CCP1CAP         equ	4012	;# 
  7282   000FAD                     CCPTMRS         equ	4013	;# 
  7283   000FAE                     T6TMR           equ	4014	;# 
  7284   000FAE                     TMR6            equ	4014	;# 
  7285   000FAF                     T6PR            equ	4015	;# 
  7286   000FAF                     PR6             equ	4015	;# 
  7287   000FB0                     T6CON           equ	4016	;# 
  7288   000FB1                     T6HLT           equ	4017	;# 
  7289   000FB2                     T6CLKCON        equ	4018	;# 
  7290   000FB2                     T6CLK           equ	4018	;# 
  7291   000FB3                     T6RST           equ	4019	;# 
  7292   000FB4                     T4TMR           equ	4020	;# 
  7293   000FB4                     TMR4            equ	4020	;# 
  7294   000FB5                     T4PR            equ	4021	;# 
  7295   000FB5                     PR4             equ	4021	;# 
  7296   000FB6                     T4CON           equ	4022	;# 
  7297   000FB7                     T4HLT           equ	4023	;# 
  7298   000FB8                     T4CLKCON        equ	4024	;# 
  7299   000FB8                     T4CLK           equ	4024	;# 
  7300   000FB9                     T4RST           equ	4025	;# 
  7301   000FBA                     T2TMR           equ	4026	;# 
  7302   000FBA                     TMR2            equ	4026	;# 
  7303   000FBB                     T2PR            equ	4027	;# 
  7304   000FBB                     PR2             equ	4027	;# 
  7305   000FBC                     T2CON           equ	4028	;# 
  7306   000FBD                     T2HLT           equ	4029	;# 
  7307   000FBE                     T2CLKCON        equ	4030	;# 
  7308   000FBE                     T2CLK           equ	4030	;# 
  7309   000FBF                     T2RST           equ	4031	;# 
  7310   000FC0                     TMR5            equ	4032	;# 
  7311   000FC0                     TMR5L           equ	4032	;# 
  7312   000FC1                     TMR5H           equ	4033	;# 
  7313   000FC2                     T5CON           equ	4034	;# 
  7314   000FC2                     TMR5CON         equ	4034	;# 
  7315   000FC3                     T5GCON          equ	4035	;# 
  7316   000FC3                     TMR5GCON        equ	4035	;# 
  7317   000FC4                     T5GATE          equ	4036	;# 
  7318   000FC4                     TMR5GATE        equ	4036	;# 
  7319   000FC5                     T5CLK           equ	4037	;# 
  7320   000FC5                     TMR5CLK         equ	4037	;# 
  7321   000FC5                     PR5             equ	4037	;# 
  7322   000FC6                     TMR3            equ	4038	;# 
  7323   000FC6                     TMR3L           equ	4038	;# 
  7324   000FC7                     TMR3H           equ	4039	;# 
  7325   000FC8                     T3CON           equ	4040	;# 
  7326   000FC8                     TMR3CON         equ	4040	;# 
  7327   000FC9                     T3GCON          equ	4041	;# 
  7328   000FC9                     TMR3GCON        equ	4041	;# 
  7329   000FCA                     T3GATE          equ	4042	;# 
  7330   000FCA                     TMR3GATE        equ	4042	;# 
  7331   000FCB                     T3CLK           equ	4043	;# 
  7332   000FCB                     TMR3CLK         equ	4043	;# 
  7333   000FCB                     PR3             equ	4043	;# 
  7334   000FCC                     TMR1            equ	4044	;# 
  7335   000FCC                     TMR1L           equ	4044	;# 
  7336   000FCD                     TMR1H           equ	4045	;# 
  7337   000FCE                     T1CON           equ	4046	;# 
  7338   000FCE                     TMR1CON         equ	4046	;# 
  7339   000FCF                     T1GCON          equ	4047	;# 
  7340   000FCF                     TMR1GCON        equ	4047	;# 
  7341   000FD0                     T1GATE          equ	4048	;# 
  7342   000FD0                     TMR1GATE        equ	4048	;# 
  7343   000FD1                     T1CLK           equ	4049	;# 
  7344   000FD1                     TMR1CLK         equ	4049	;# 
  7345   000FD1                     PR1             equ	4049	;# 
  7346   000FD2                     TMR0L           equ	4050	;# 
  7347   000FD2                     TMR0            equ	4050	;# 
  7348   000FD3                     TMR0H           equ	4051	;# 
  7349   000FD3                     PR0             equ	4051	;# 
  7350   000FD4                     T0CON0          equ	4052	;# 
  7351   000FD5                     T0CON1          equ	4053	;# 
  7352   000FD6                     PCON1           equ	4054	;# 
  7353   000FD7                     PCON0           equ	4055	;# 
  7354   000FD8                     STATUS          equ	4056	;# 
  7355   000FD9                     FSR2            equ	4057	;# 
  7356   000FD9                     FSR2L           equ	4057	;# 
  7357   000FDA                     FSR2H           equ	4058	;# 
  7358   000FDB                     PLUSW2          equ	4059	;# 
  7359   000FDC                     PREINC2         equ	4060	;# 
  7360   000FDD                     POSTDEC2        equ	4061	;# 
  7361   000FDE                     POSTINC2        equ	4062	;# 
  7362   000FDF                     INDF2           equ	4063	;# 
  7363   000FE0                     BSR             equ	4064	;# 
  7364   000FE1                     FSR1            equ	4065	;# 
  7365   000FE1                     FSR1L           equ	4065	;# 
  7366   000FE2                     FSR1H           equ	4066	;# 
  7367   000FE3                     PLUSW1          equ	4067	;# 
  7368   000FE4                     PREINC1         equ	4068	;# 
  7369   000FE5                     POSTDEC1        equ	4069	;# 
  7370   000FE6                     POSTINC1        equ	4070	;# 
  7371   000FE7                     INDF1           equ	4071	;# 
  7372   000FE8                     WREG            equ	4072	;# 
  7373   000FE9                     FSR0            equ	4073	;# 
  7374   000FE9                     FSR0L           equ	4073	;# 
  7375   000FEA                     FSR0H           equ	4074	;# 
  7376   000FEB                     PLUSW0          equ	4075	;# 
  7377   000FEC                     PREINC0         equ	4076	;# 
  7378   000FED                     POSTDEC0        equ	4077	;# 
  7379   000FEE                     POSTINC0        equ	4078	;# 
  7380   000FEF                     INDF0           equ	4079	;# 
  7381   000FF2                     INTCON          equ	4082	;# 
  7382   000FF3                     PROD            equ	4083	;# 
  7383   000FF3                     PRODL           equ	4083	;# 
  7384   000FF4                     PRODH           equ	4084	;# 
  7385   000FF5                     TABLAT          equ	4085	;# 
  7386   000FF6                     TBLPTR          equ	4086	;# 
  7387   000FF6                     TBLPTRL         equ	4086	;# 
  7388   000FF7                     TBLPTRH         equ	4087	;# 
  7389   000FF8                     TBLPTRU         equ	4088	;# 
  7390   000FF9                     PCLAT           equ	4089	;# 
  7391   000FF9                     PC              equ	4089	;# 
  7392   000FF9                     PCL             equ	4089	;# 
  7393   000FFA                     PCLATH          equ	4090	;# 
  7394   000FFB                     PCLATU          equ	4091	;# 
  7395   000FFC                     STKPTR          equ	4092	;# 
  7396   000FFD                     TOS             equ	4093	;# 
  7397   000FFD                     TOSL            equ	4093	;# 
  7398   000FFE                     TOSH            equ	4094	;# 
  7399   000FFF                     TOSU            equ	4095	;# 
  7400   000E9B                     PPSLOCK         equ	3739	;# 
  7401   000E9C                     INT0PPS         equ	3740	;# 
  7402   000E9D                     INT1PPS         equ	3741	;# 
  7403   000E9E                     INT2PPS         equ	3742	;# 
  7404   000E9F                     T0CKIPPS        equ	3743	;# 
  7405   000EA0                     T1CKIPPS        equ	3744	;# 
  7406   000EA1                     T1GPPS          equ	3745	;# 
  7407   000EA2                     T3CKIPPS        equ	3746	;# 
  7408   000EA3                     T3GPPS          equ	3747	;# 
  7409   000EA4                     T5CKIPPS        equ	3748	;# 
  7410   000EA5                     T5GPPS          equ	3749	;# 
  7411   000EA6                     T2INPPS         equ	3750	;# 
  7412   000EA7                     T4INPPS         equ	3751	;# 
  7413   000EA8                     T6INPPS         equ	3752	;# 
  7414   000EA9                     ADACTPPS        equ	3753	;# 
  7415   000EAA                     CCP1PPS         equ	3754	;# 
  7416   000EAB                     CCP2PPS         equ	3755	;# 
  7417   000EAC                     CWG1PPS         equ	3756	;# 
  7418   000EAC                     CWGPPS          equ	3756	;# 
  7419   000EAC                     CWGINPPS        equ	3756	;# 
  7420   000EAC                     CWG1INPPS       equ	3756	;# 
  7421   000EAD                     MDCARLPPS       equ	3757	;# 
  7422   000EAE                     MDCARHPPS       equ	3758	;# 
  7423   000EAF                     MDSRCPPS        equ	3759	;# 
  7424   000EB0                     RX1PPS          equ	3760	;# 
  7425   000EB0                     RXPPS           equ	3760	;# 
  7426   000EB0                     RXDT1PPS        equ	3760	;# 
  7427   000EB1                     CK1PPS          equ	3761	;# 
  7428   000EB1                     TXPPS           equ	3761	;# 
  7429   000EB1                     CKPPS           equ	3761	;# 
  7430   000EB1                     TXCK1PPS        equ	3761	;# 
  7431   000EB1                     TX1PPS          equ	3761	;# 
  7432   000EB2                     SSP1CLKPPS      equ	3762	;# 
  7433   000EB2                     SSPCLKPPS       equ	3762	;# 
  7434   000EB3                     SSP1DATPPS      equ	3763	;# 
  7435   000EB3                     SSPDATPPS       equ	3763	;# 
  7436   000EB4                     SSP1SSPPS       equ	3764	;# 
  7437   000EB4                     SSPSSPPS        equ	3764	;# 
  7438   000EB5                     IPR0            equ	3765	;# 
  7439   000EB6                     IPR1            equ	3766	;# 
  7440   000EB7                     IPR2            equ	3767	;# 
  7441   000EB8                     IPR3            equ	3768	;# 
  7442   000EB9                     IPR4            equ	3769	;# 
  7443   000EBA                     IPR5            equ	3770	;# 
  7444   000EBB                     IPR6            equ	3771	;# 
  7445   000EBC                     IPR7            equ	3772	;# 
  7446   000EBD                     PIE0            equ	3773	;# 
  7447   000EBE                     PIE1            equ	3774	;# 
  7448   000EBF                     PIE2            equ	3775	;# 
  7449   000EC0                     PIE3            equ	3776	;# 
  7450   000EC1                     PIE4            equ	3777	;# 
  7451   000EC2                     PIE5            equ	3778	;# 
  7452   000EC3                     PIE6            equ	3779	;# 
  7453   000EC4                     PIE7            equ	3780	;# 
  7454   000EC5                     PIR0            equ	3781	;# 
  7455   000EC6                     PIR1            equ	3782	;# 
  7456   000EC7                     PIR2            equ	3783	;# 
  7457   000EC8                     PIR3            equ	3784	;# 
  7458   000EC9                     PIR4            equ	3785	;# 
  7459   000ECA                     PIR5            equ	3786	;# 
  7460   000ECB                     PIR6            equ	3787	;# 
  7461   000ECC                     PIR7            equ	3788	;# 
  7462   000ECD                     WDTCON0         equ	3789	;# 
  7463   000ECE                     WDTCON1         equ	3790	;# 
  7464   000ECF                     WDTPSL          equ	3791	;# 
  7465   000ED0                     WDTPSH          equ	3792	;# 
  7466   000ED1                     WDTTMR          equ	3793	;# 
  7467   000ED2                     CPUDOZE         equ	3794	;# 
  7468   000ED3                     OSCCON1         equ	3795	;# 
  7469   000ED4                     OSCCON2         equ	3796	;# 
  7470   000ED5                     OSCCON3         equ	3797	;# 
  7471   000ED6                     OSCSTAT         equ	3798	;# 
  7472   000ED6                     OSCSTAT1        equ	3798	;# 
  7473   000ED7                     OSCEN           equ	3799	;# 
  7474   000ED8                     OSCTUNE         equ	3800	;# 
  7475   000ED9                     OSCFRQ          equ	3801	;# 
  7476   000ED9                     OSCFREQ         equ	3801	;# 
  7477   000EDA                     VREGCON         equ	3802	;# 
  7478   000EDB                     BORCON          equ	3803	;# 
  7479   000EDC                     PMD0            equ	3804	;# 
  7480   000EDD                     PMD1            equ	3805	;# 
  7481   000EDE                     PMD2            equ	3806	;# 
  7482   000EDF                     PMD3            equ	3807	;# 
  7483   000EE0                     PMD4            equ	3808	;# 
  7484   000EE1                     PMD5            equ	3809	;# 
  7485   000EE2                     RA0PPS          equ	3810	;# 
  7486   000EE3                     RA1PPS          equ	3811	;# 
  7487   000EE4                     RA2PPS          equ	3812	;# 
  7488   000EE5                     RA3PPS          equ	3813	;# 
  7489   000EE6                     RA4PPS          equ	3814	;# 
  7490   000EE7                     RA5PPS          equ	3815	;# 
  7491   000EE8                     RA6PPS          equ	3816	;# 
  7492   000EE9                     RA7PPS          equ	3817	;# 
  7493   000EEA                     RB0PPS          equ	3818	;# 
  7494   000EEB                     RB1PPS          equ	3819	;# 
  7495   000EEC                     RB2PPS          equ	3820	;# 
  7496   000EED                     RB3PPS          equ	3821	;# 
  7497   000EEE                     RB4PPS          equ	3822	;# 
  7498   000EEF                     RB5PPS          equ	3823	;# 
  7499   000EF0                     RB6PPS          equ	3824	;# 
  7500   000EF1                     RB7PPS          equ	3825	;# 
  7501   000EF2                     RC0PPS          equ	3826	;# 
  7502   000EF3                     RC1PPS          equ	3827	;# 
  7503   000EF4                     RC2PPS          equ	3828	;# 
  7504   000EF5                     RC3PPS          equ	3829	;# 
  7505   000EF6                     RC4PPS          equ	3830	;# 
  7506   000EF7                     RC5PPS          equ	3831	;# 
  7507   000EF8                     RC6PPS          equ	3832	;# 
  7508   000EF9                     RC7PPS          equ	3833	;# 
  7509   000F05                     IOCAF           equ	3845	;# 
  7510   000F06                     IOCAN           equ	3846	;# 
  7511   000F07                     IOCAP           equ	3847	;# 
  7512   000F08                     INLVLA          equ	3848	;# 
  7513   000F09                     SLRCONA         equ	3849	;# 
  7514   000F0A                     ODCONA          equ	3850	;# 
  7515   000F0B                     WPUA            equ	3851	;# 
  7516   000F0C                     ANSELA          equ	3852	;# 
  7517   000F0D                     IOCBF           equ	3853	;# 
  7518   000F0E                     IOCBN           equ	3854	;# 
  7519   000F0F                     IOCBP           equ	3855	;# 
  7520   000F10                     INLVLB          equ	3856	;# 
  7521   000F11                     SLRCONB         equ	3857	;# 
  7522   000F12                     ODCONB          equ	3858	;# 
  7523   000F13                     WPUB            equ	3859	;# 
  7524   000F14                     ANSELB          equ	3860	;# 
  7525   000F15                     IOCCF           equ	3861	;# 
  7526   000F16                     IOCCN           equ	3862	;# 
  7527   000F17                     IOCCP           equ	3863	;# 
  7528   000F18                     INLVLC          equ	3864	;# 
  7529   000F19                     SLRCONC         equ	3865	;# 
  7530   000F1A                     ODCONC          equ	3866	;# 
  7531   000F1B                     WPUC            equ	3867	;# 
  7532   000F1C                     ANSELC          equ	3868	;# 
  7533   000F22                     IOCEF           equ	3874	;# 
  7534   000F23                     IOCEN           equ	3875	;# 
  7535   000F24                     IOCEP           equ	3876	;# 
  7536   000F25                     INLVLE          equ	3877	;# 
  7537   000F28                     WPUE            equ	3880	;# 
  7538   000F2A                     HLVDCON0        equ	3882	;# 
  7539   000F2B                     HLVDCON1        equ	3883	;# 
  7540   000F2C                     FVRCON          equ	3884	;# 
  7541   000F2D                     ZCDCON          equ	3885	;# 
  7542   000F2E                     DAC1CON0        equ	3886	;# 
  7543   000F2F                     DAC1CON1        equ	3887	;# 
  7544   000F30                     CM2CON0         equ	3888	;# 
  7545   000F31                     CM2CON1         equ	3889	;# 
  7546   000F32                     CM2NCH          equ	3890	;# 
  7547   000F33                     CM2PCH          equ	3891	;# 
  7548   000F34                     CM1CON0         equ	3892	;# 
  7549   000F35                     CM1CON1         equ	3893	;# 
  7550   000F36                     CM1NCH          equ	3894	;# 
  7551   000F37                     CM1PCH          equ	3895	;# 
  7552   000F38                     CMOUT           equ	3896	;# 
  7553   000F39                     CLKRCON         equ	3897	;# 
  7554   000F3A                     CLKRCLK         equ	3898	;# 
  7555   000F3B                     CWG1CLK         equ	3899	;# 
  7556   000F3B                     CWG1CLKCON      equ	3899	;# 
  7557   000F3C                     CWG1ISM         equ	3900	;# 
  7558   000F3D                     CWG1DBR         equ	3901	;# 
  7559   000F3E                     CWG1DBF         equ	3902	;# 
  7560   000F3F                     CWG1CON0        equ	3903	;# 
  7561   000F40                     CWG1CON1        equ	3904	;# 
  7562   000F41                     CWG1AS0         equ	3905	;# 
  7563   000F42                     CWG1AS1         equ	3906	;# 
  7564   000F43                     CWG1STR         equ	3907	;# 
  7565   000F44                     SCANLADR        equ	3908	;# 
  7566   000F44                     SCANLADRL       equ	3908	;# 
  7567   000F45                     SCANLADRH       equ	3909	;# 
  7568   000F46                     SCANLADRU       equ	3910	;# 
  7569   000F47                     SCANHADR        equ	3911	;# 
  7570   000F47                     SCANHADRL       equ	3911	;# 
  7571   000F48                     SCANHADRH       equ	3912	;# 
  7572   000F49                     SCANHADRU       equ	3913	;# 
  7573   000F4A                     SCANCON0        equ	3914	;# 
  7574   000F4B                     SCANTRIG        equ	3915	;# 
  7575   000F4C                     MDCON0          equ	3916	;# 
  7576   000F4D                     MDCON1          equ	3917	;# 
  7577   000F4E                     MDSRC           equ	3918	;# 
  7578   000F4F                     MDCARL          equ	3919	;# 
  7579   000F50                     MDCARH          equ	3920	;# 
  7580   000F51                     ADACT           equ	3921	;# 
  7581   000F52                     ADCLK           equ	3922	;# 
  7582   000F53                     ADREF           equ	3923	;# 
  7583   000F54                     ADCON1          equ	3924	;# 
  7584   000F55                     ADCON2          equ	3925	;# 
  7585   000F56                     ADCON3          equ	3926	;# 
  7586   000F57                     ADACQ           equ	3927	;# 
  7587   000F58                     ADCAP           equ	3928	;# 
  7588   000F59                     ADPRE           equ	3929	;# 
  7589   000F5A                     ADPCH           equ	3930	;# 
  7590   000F5B                     ADCON0          equ	3931	;# 
  7591   000F5C                     ADPREV          equ	3932	;# 
  7592   000F5C                     ADPREVL         equ	3932	;# 
  7593   000F5D                     ADPREVH         equ	3933	;# 
  7594   000F5E                     ADRES           equ	3934	;# 
  7595   000F5E                     ADRESL          equ	3934	;# 
  7596   000F5F                     ADRESH          equ	3935	;# 
  7597   000F60                     ADSTAT          equ	3936	;# 
  7598   000F61                     ADRPT           equ	3937	;# 
  7599   000F62                     ADCNT           equ	3938	;# 
  7600   000F63                     ADSTPT          equ	3939	;# 
  7601   000F63                     ADSTPTL         equ	3939	;# 
  7602   000F64                     ADSTPTH         equ	3940	;# 
  7603   000F65                     ADLTH           equ	3941	;# 
  7604   000F65                     ADLTHL          equ	3941	;# 
  7605   000F66                     ADLTHH          equ	3942	;# 
  7606   000F67                     ADUTH           equ	3943	;# 
  7607   000F67                     ADUTHL          equ	3943	;# 
  7608   000F68                     ADUTHH          equ	3944	;# 
  7609   000F69                     ADERR           equ	3945	;# 
  7610   000F69                     ADERRL          equ	3945	;# 
  7611   000F6A                     ADERRH          equ	3946	;# 
  7612   000F6B                     ADACC           equ	3947	;# 
  7613   000F6B                     ADACCL          equ	3947	;# 
  7614   000F6C                     ADACCH          equ	3948	;# 
  7615   000F6D                     ADFLTR          equ	3949	;# 
  7616   000F6D                     ADFLTRL         equ	3949	;# 
  7617   000F6E                     ADFLTRH         equ	3950	;# 
  7618   000F6F                     CRCDATA         equ	3951	;# 
  7619   000F6F                     CRCDATL         equ	3951	;# 
  7620   000F70                     CRCDATH         equ	3952	;# 
  7621   000F71                     CRCACC          equ	3953	;# 
  7622   000F71                     CRCACCL         equ	3953	;# 
  7623   000F72                     CRCACCH         equ	3954	;# 
  7624   000F73                     CRCSHFT         equ	3955	;# 
  7625   000F73                     CRCSHIFTL       equ	3955	;# 
  7626   000F74                     CRCSHIFTH       equ	3956	;# 
  7627   000F75                     CRCXOR          equ	3957	;# 
  7628   000F75                     CRCXORL         equ	3957	;# 
  7629   000F76                     CRCXORH         equ	3958	;# 
  7630   000F77                     CRCCON0         equ	3959	;# 
  7631   000F78                     CRCCON1         equ	3960	;# 
  7632   000F79                     NVMADR          equ	3961	;# 
  7633   000F79                     NVMADRL         equ	3961	;# 
  7634   000F7A                     NVMADRH         equ	3962	;# 
  7635   000F7B                     NVMADRU         equ	3963	;# 
  7636   000F7C                     NVMDAT          equ	3964	;# 
  7637   000F7C                     NVMDATL         equ	3964	;# 
  7638   000F7D                     NVMDATH         equ	3965	;# 
  7639   000F7F                     NVMCON0         equ	3967	;# 
  7640   000F80                     NVMCON1         equ	3968	;# 
  7641   000F81                     NVMCON2         equ	3969	;# 
  7642   000F82                     LATA            equ	3970	;# 
  7643   000F83                     LATB            equ	3971	;# 
  7644   000F84                     LATC            equ	3972	;# 
  7645   000F87                     TRISA           equ	3975	;# 
  7646   000F87                     DDRA            equ	3975	;# 
  7647   000F88                     TRISB           equ	3976	;# 
  7648   000F88                     DDRB            equ	3976	;# 
  7649   000F89                     TRISC           equ	3977	;# 
  7650   000F89                     DDRC            equ	3977	;# 
  7651   000F8C                     PORTA           equ	3980	;# 
  7652   000F8D                     PORTB           equ	3981	;# 
  7653   000F8E                     PORTC           equ	3982	;# 
  7654   000F90                     PORTE           equ	3984	;# 
  7655   000F91                     SSP1BUF         equ	3985	;# 
  7656   000F92                     SSP1ADD         equ	3986	;# 
  7657   000F93                     SSP1MSK         equ	3987	;# 
  7658   000F94                     SSP1STAT        equ	3988	;# 
  7659   000F95                     SSP1CON1        equ	3989	;# 
  7660   000F96                     SSP1CON2        equ	3990	;# 
  7661   000F97                     SSP1CON3        equ	3991	;# 
  7662   000F98                     RC1REG          equ	3992	;# 
  7663   000F98                     RCREG           equ	3992	;# 
  7664   000F98                     RCREG1          equ	3992	;# 
  7665   000F99                     TX1REG          equ	3993	;# 
  7666   000F99                     TXREG1          equ	3993	;# 
  7667   000F99                     TXREG           equ	3993	;# 
  7668   000F9A                     SP1BRG          equ	3994	;# 
  7669   000F9A                     SPBRG           equ	3994	;# 
  7670   000F9A                     SP1BRGL         equ	3994	;# 
  7671   000F9A                     SPBRG1          equ	3994	;# 
  7672   000F9A                     SPBRGL          equ	3994	;# 
  7673   000F9B                     SP1BRGH         equ	3995	;# 
  7674   000F9B                     SPBRGH          equ	3995	;# 
  7675   000F9B                     SPBRGH1         equ	3995	;# 
  7676   000F9C                     RC1STA          equ	3996	;# 
  7677   000F9C                     RCSTA1          equ	3996	;# 
  7678   000F9C                     RCSTA           equ	3996	;# 
  7679   000F9D                     TX1STA          equ	3997	;# 
  7680   000F9D                     TXSTA1          equ	3997	;# 
  7681   000F9D                     TXSTA           equ	3997	;# 
  7682   000F9E                     BAUD1CON        equ	3998	;# 
  7683   000F9E                     BAUDCON1        equ	3998	;# 
  7684   000F9E                     BAUDCTL1        equ	3998	;# 
  7685   000F9E                     BAUDCON         equ	3998	;# 
  7686   000F9E                     BAUDCTL         equ	3998	;# 
  7687   000F9F                     PWM4DC          equ	3999	;# 
  7688   000F9F                     PWM4DCL         equ	3999	;# 
  7689   000FA0                     PWM4DCH         equ	4000	;# 
  7690   000FA1                     PWM4CON         equ	4001	;# 
  7691   000FA2                     PWM3DC          equ	4002	;# 
  7692   000FA2                     PWM3DCL         equ	4002	;# 
  7693   000FA3                     PWM3DCH         equ	4003	;# 
  7694   000FA4                     PWM3CON         equ	4004	;# 
  7695   000FA5                     CCPR2           equ	4005	;# 
  7696   000FA5                     CCPR2L          equ	4005	;# 
  7697   000FA6                     CCPR2H          equ	4006	;# 
  7698   000FA7                     CCP2CON         equ	4007	;# 
  7699   000FA8                     CCP2CAP         equ	4008	;# 
  7700   000FA9                     CCPR1           equ	4009	;# 
  7701   000FA9                     CCPR1L          equ	4009	;# 
  7702   000FAA                     CCPR1H          equ	4010	;# 
  7703   000FAB                     CCP1CON         equ	4011	;# 
  7704   000FAC                     CCP1CAP         equ	4012	;# 
  7705   000FAD                     CCPTMRS         equ	4013	;# 
  7706   000FAE                     T6TMR           equ	4014	;# 
  7707   000FAE                     TMR6            equ	4014	;# 
  7708   000FAF                     T6PR            equ	4015	;# 
  7709   000FAF                     PR6             equ	4015	;# 
  7710   000FB0                     T6CON           equ	4016	;# 
  7711   000FB1                     T6HLT           equ	4017	;# 
  7712   000FB2                     T6CLKCON        equ	4018	;# 
  7713   000FB2                     T6CLK           equ	4018	;# 
  7714   000FB3                     T6RST           equ	4019	;# 
  7715   000FB4                     T4TMR           equ	4020	;# 
  7716   000FB4                     TMR4            equ	4020	;# 
  7717   000FB5                     T4PR            equ	4021	;# 
  7718   000FB5                     PR4             equ	4021	;# 
  7719   000FB6                     T4CON           equ	4022	;# 
  7720   000FB7                     T4HLT           equ	4023	;# 
  7721   000FB8                     T4CLKCON        equ	4024	;# 
  7722   000FB8                     T4CLK           equ	4024	;# 
  7723   000FB9                     T4RST           equ	4025	;# 
  7724   000FBA                     T2TMR           equ	4026	;# 
  7725   000FBA                     TMR2            equ	4026	;# 
  7726   000FBB                     T2PR            equ	4027	;# 
  7727   000FBB                     PR2             equ	4027	;# 
  7728   000FBC                     T2CON           equ	4028	;# 
  7729   000FBD                     T2HLT           equ	4029	;# 
  7730   000FBE                     T2CLKCON        equ	4030	;# 
  7731   000FBE                     T2CLK           equ	4030	;# 
  7732   000FBF                     T2RST           equ	4031	;# 
  7733   000FC0                     TMR5            equ	4032	;# 
  7734   000FC0                     TMR5L           equ	4032	;# 
  7735   000FC1                     TMR5H           equ	4033	;# 
  7736   000FC2                     T5CON           equ	4034	;# 
  7737   000FC2                     TMR5CON         equ	4034	;# 
  7738   000FC3                     T5GCON          equ	4035	;# 
  7739   000FC3                     TMR5GCON        equ	4035	;# 
  7740   000FC4                     T5GATE          equ	4036	;# 
  7741   000FC4                     TMR5GATE        equ	4036	;# 
  7742   000FC5                     T5CLK           equ	4037	;# 
  7743   000FC5                     TMR5CLK         equ	4037	;# 
  7744   000FC5                     PR5             equ	4037	;# 
  7745   000FC6                     TMR3            equ	4038	;# 
  7746   000FC6                     TMR3L           equ	4038	;# 
  7747   000FC7                     TMR3H           equ	4039	;# 
  7748   000FC8                     T3CON           equ	4040	;# 
  7749   000FC8                     TMR3CON         equ	4040	;# 
  7750   000FC9                     T3GCON          equ	4041	;# 
  7751   000FC9                     TMR3GCON        equ	4041	;# 
  7752   000FCA                     T3GATE          equ	4042	;# 
  7753   000FCA                     TMR3GATE        equ	4042	;# 
  7754   000FCB                     T3CLK           equ	4043	;# 
  7755   000FCB                     TMR3CLK         equ	4043	;# 
  7756   000FCB                     PR3             equ	4043	;# 
  7757   000FCC                     TMR1            equ	4044	;# 
  7758   000FCC                     TMR1L           equ	4044	;# 
  7759   000FCD                     TMR1H           equ	4045	;# 
  7760   000FCE                     T1CON           equ	4046	;# 
  7761   000FCE                     TMR1CON         equ	4046	;# 
  7762   000FCF                     T1GCON          equ	4047	;# 
  7763   000FCF                     TMR1GCON        equ	4047	;# 
  7764   000FD0                     T1GATE          equ	4048	;# 
  7765   000FD0                     TMR1GATE        equ	4048	;# 
  7766   000FD1                     T1CLK           equ	4049	;# 
  7767   000FD1                     TMR1CLK         equ	4049	;# 
  7768   000FD1                     PR1             equ	4049	;# 
  7769   000FD2                     TMR0L           equ	4050	;# 
  7770   000FD2                     TMR0            equ	4050	;# 
  7771   000FD3                     TMR0H           equ	4051	;# 
  7772   000FD3                     PR0             equ	4051	;# 
  7773   000FD4                     T0CON0          equ	4052	;# 
  7774   000FD5                     T0CON1          equ	4053	;# 
  7775   000FD6                     PCON1           equ	4054	;# 
  7776   000FD7                     PCON0           equ	4055	;# 
  7777   000FD8                     STATUS          equ	4056	;# 
  7778   000FD9                     FSR2            equ	4057	;# 
  7779   000FD9                     FSR2L           equ	4057	;# 
  7780   000FDA                     FSR2H           equ	4058	;# 
  7781   000FDB                     PLUSW2          equ	4059	;# 
  7782   000FDC                     PREINC2         equ	4060	;# 
  7783   000FDD                     POSTDEC2        equ	4061	;# 
  7784   000FDE                     POSTINC2        equ	4062	;# 
  7785   000FDF                     INDF2           equ	4063	;# 
  7786   000FE0                     BSR             equ	4064	;# 
  7787   000FE1                     FSR1            equ	4065	;# 
  7788   000FE1                     FSR1L           equ	4065	;# 
  7789   000FE2                     FSR1H           equ	4066	;# 
  7790   000FE3                     PLUSW1          equ	4067	;# 
  7791   000FE4                     PREINC1         equ	4068	;# 
  7792   000FE5                     POSTDEC1        equ	4069	;# 
  7793   000FE6                     POSTINC1        equ	4070	;# 
  7794   000FE7                     INDF1           equ	4071	;# 
  7795   000FE8                     WREG            equ	4072	;# 
  7796   000FE9                     FSR0            equ	4073	;# 
  7797   000FE9                     FSR0L           equ	4073	;# 
  7798   000FEA                     FSR0H           equ	4074	;# 
  7799   000FEB                     PLUSW0          equ	4075	;# 
  7800   000FEC                     PREINC0         equ	4076	;# 
  7801   000FED                     POSTDEC0        equ	4077	;# 
  7802   000FEE                     POSTINC0        equ	4078	;# 
  7803   000FEF                     INDF0           equ	4079	;# 
  7804   000FF2                     INTCON          equ	4082	;# 
  7805   000FF3                     PROD            equ	4083	;# 
  7806   000FF3                     PRODL           equ	4083	;# 
  7807   000FF4                     PRODH           equ	4084	;# 
  7808   000FF5                     TABLAT          equ	4085	;# 
  7809   000FF6                     TBLPTR          equ	4086	;# 
  7810   000FF6                     TBLPTRL         equ	4086	;# 
  7811   000FF7                     TBLPTRH         equ	4087	;# 
  7812   000FF8                     TBLPTRU         equ	4088	;# 
  7813   000FF9                     PCLAT           equ	4089	;# 
  7814   000FF9                     PC              equ	4089	;# 
  7815   000FF9                     PCL             equ	4089	;# 
  7816   000FFA                     PCLATH          equ	4090	;# 
  7817   000FFB                     PCLATU          equ	4091	;# 
  7818   000FFC                     STKPTR          equ	4092	;# 
  7819   000FFD                     TOS             equ	4093	;# 
  7820   000FFD                     TOSL            equ	4093	;# 
  7821   000FFE                     TOSH            equ	4094	;# 
  7822   000FFF                     TOSU            equ	4095	;# 
  7823   000E9B                     PPSLOCK         equ	3739	;# 
  7824   000E9C                     INT0PPS         equ	3740	;# 
  7825   000E9D                     INT1PPS         equ	3741	;# 
  7826   000E9E                     INT2PPS         equ	3742	;# 
  7827   000E9F                     T0CKIPPS        equ	3743	;# 
  7828   000EA0                     T1CKIPPS        equ	3744	;# 
  7829   000EA1                     T1GPPS          equ	3745	;# 
  7830   000EA2                     T3CKIPPS        equ	3746	;# 
  7831   000EA3                     T3GPPS          equ	3747	;# 
  7832   000EA4                     T5CKIPPS        equ	3748	;# 
  7833   000EA5                     T5GPPS          equ	3749	;# 
  7834   000EA6                     T2INPPS         equ	3750	;# 
  7835   000EA7                     T4INPPS         equ	3751	;# 
  7836   000EA8                     T6INPPS         equ	3752	;# 
  7837   000EA9                     ADACTPPS        equ	3753	;# 
  7838   000EAA                     CCP1PPS         equ	3754	;# 
  7839   000EAB                     CCP2PPS         equ	3755	;# 
  7840   000EAC                     CWG1PPS         equ	3756	;# 
  7841   000EAC                     CWGPPS          equ	3756	;# 
  7842   000EAC                     CWGINPPS        equ	3756	;# 
  7843   000EAC                     CWG1INPPS       equ	3756	;# 
  7844   000EAD                     MDCARLPPS       equ	3757	;# 
  7845   000EAE                     MDCARHPPS       equ	3758	;# 
  7846   000EAF                     MDSRCPPS        equ	3759	;# 
  7847   000EB0                     RX1PPS          equ	3760	;# 
  7848   000EB0                     RXPPS           equ	3760	;# 
  7849   000EB0                     RXDT1PPS        equ	3760	;# 
  7850   000EB1                     CK1PPS          equ	3761	;# 
  7851   000EB1                     TXPPS           equ	3761	;# 
  7852   000EB1                     CKPPS           equ	3761	;# 
  7853   000EB1                     TXCK1PPS        equ	3761	;# 
  7854   000EB1                     TX1PPS          equ	3761	;# 
  7855   000EB2                     SSP1CLKPPS      equ	3762	;# 
  7856   000EB2                     SSPCLKPPS       equ	3762	;# 
  7857   000EB3                     SSP1DATPPS      equ	3763	;# 
  7858   000EB3                     SSPDATPPS       equ	3763	;# 
  7859   000EB4                     SSP1SSPPS       equ	3764	;# 
  7860   000EB4                     SSPSSPPS        equ	3764	;# 
  7861   000EB5                     IPR0            equ	3765	;# 
  7862   000EB6                     IPR1            equ	3766	;# 
  7863   000EB7                     IPR2            equ	3767	;# 
  7864   000EB8                     IPR3            equ	3768	;# 
  7865   000EB9                     IPR4            equ	3769	;# 
  7866   000EBA                     IPR5            equ	3770	;# 
  7867   000EBB                     IPR6            equ	3771	;# 
  7868   000EBC                     IPR7            equ	3772	;# 
  7869   000EBD                     PIE0            equ	3773	;# 
  7870   000EBE                     PIE1            equ	3774	;# 
  7871   000EBF                     PIE2            equ	3775	;# 
  7872   000EC0                     PIE3            equ	3776	;# 
  7873   000EC1                     PIE4            equ	3777	;# 
  7874   000EC2                     PIE5            equ	3778	;# 
  7875   000EC3                     PIE6            equ	3779	;# 
  7876   000EC4                     PIE7            equ	3780	;# 
  7877   000EC5                     PIR0            equ	3781	;# 
  7878   000EC6                     PIR1            equ	3782	;# 
  7879   000EC7                     PIR2            equ	3783	;# 
  7880   000EC8                     PIR3            equ	3784	;# 
  7881   000EC9                     PIR4            equ	3785	;# 
  7882   000ECA                     PIR5            equ	3786	;# 
  7883   000ECB                     PIR6            equ	3787	;# 
  7884   000ECC                     PIR7            equ	3788	;# 
  7885   000ECD                     WDTCON0         equ	3789	;# 
  7886   000ECE                     WDTCON1         equ	3790	;# 
  7887   000ECF                     WDTPSL          equ	3791	;# 
  7888   000ED0                     WDTPSH          equ	3792	;# 
  7889   000ED1                     WDTTMR          equ	3793	;# 
  7890   000ED2                     CPUDOZE         equ	3794	;# 
  7891   000ED3                     OSCCON1         equ	3795	;# 
  7892   000ED4                     OSCCON2         equ	3796	;# 
  7893   000ED5                     OSCCON3         equ	3797	;# 
  7894   000ED6                     OSCSTAT         equ	3798	;# 
  7895   000ED6                     OSCSTAT1        equ	3798	;# 
  7896   000ED7                     OSCEN           equ	3799	;# 
  7897   000ED8                     OSCTUNE         equ	3800	;# 
  7898   000ED9                     OSCFRQ          equ	3801	;# 
  7899   000ED9                     OSCFREQ         equ	3801	;# 
  7900   000EDA                     VREGCON         equ	3802	;# 
  7901   000EDB                     BORCON          equ	3803	;# 
  7902   000EDC                     PMD0            equ	3804	;# 
  7903   000EDD                     PMD1            equ	3805	;# 
  7904   000EDE                     PMD2            equ	3806	;# 
  7905   000EDF                     PMD3            equ	3807	;# 
  7906   000EE0                     PMD4            equ	3808	;# 
  7907   000EE1                     PMD5            equ	3809	;# 
  7908   000EE2                     RA0PPS          equ	3810	;# 
  7909   000EE3                     RA1PPS          equ	3811	;# 
  7910   000EE4                     RA2PPS          equ	3812	;# 
  7911   000EE5                     RA3PPS          equ	3813	;# 
  7912   000EE6                     RA4PPS          equ	3814	;# 
  7913   000EE7                     RA5PPS          equ	3815	;# 
  7914   000EE8                     RA6PPS          equ	3816	;# 
  7915   000EE9                     RA7PPS          equ	3817	;# 
  7916   000EEA                     RB0PPS          equ	3818	;# 
  7917   000EEB                     RB1PPS          equ	3819	;# 
  7918   000EEC                     RB2PPS          equ	3820	;# 
  7919   000EED                     RB3PPS          equ	3821	;# 
  7920   000EEE                     RB4PPS          equ	3822	;# 
  7921   000EEF                     RB5PPS          equ	3823	;# 
  7922   000EF0                     RB6PPS          equ	3824	;# 
  7923   000EF1                     RB7PPS          equ	3825	;# 
  7924   000EF2                     RC0PPS          equ	3826	;# 
  7925   000EF3                     RC1PPS          equ	3827	;# 
  7926   000EF4                     RC2PPS          equ	3828	;# 
  7927   000EF5                     RC3PPS          equ	3829	;# 
  7928   000EF6                     RC4PPS          equ	3830	;# 
  7929   000EF7                     RC5PPS          equ	3831	;# 
  7930   000EF8                     RC6PPS          equ	3832	;# 
  7931   000EF9                     RC7PPS          equ	3833	;# 
  7932   000F05                     IOCAF           equ	3845	;# 
  7933   000F06                     IOCAN           equ	3846	;# 
  7934   000F07                     IOCAP           equ	3847	;# 
  7935   000F08                     INLVLA          equ	3848	;# 
  7936   000F09                     SLRCONA         equ	3849	;# 
  7937   000F0A                     ODCONA          equ	3850	;# 
  7938   000F0B                     WPUA            equ	3851	;# 
  7939   000F0C                     ANSELA          equ	3852	;# 
  7940   000F0D                     IOCBF           equ	3853	;# 
  7941   000F0E                     IOCBN           equ	3854	;# 
  7942   000F0F                     IOCBP           equ	3855	;# 
  7943   000F10                     INLVLB          equ	3856	;# 
  7944   000F11                     SLRCONB         equ	3857	;# 
  7945   000F12                     ODCONB          equ	3858	;# 
  7946   000F13                     WPUB            equ	3859	;# 
  7947   000F14                     ANSELB          equ	3860	;# 
  7948   000F15                     IOCCF           equ	3861	;# 
  7949   000F16                     IOCCN           equ	3862	;# 
  7950   000F17                     IOCCP           equ	3863	;# 
  7951   000F18                     INLVLC          equ	3864	;# 
  7952   000F19                     SLRCONC         equ	3865	;# 
  7953   000F1A                     ODCONC          equ	3866	;# 
  7954   000F1B                     WPUC            equ	3867	;# 
  7955   000F1C                     ANSELC          equ	3868	;# 
  7956   000F22                     IOCEF           equ	3874	;# 
  7957   000F23                     IOCEN           equ	3875	;# 
  7958   000F24                     IOCEP           equ	3876	;# 
  7959   000F25                     INLVLE          equ	3877	;# 
  7960   000F28                     WPUE            equ	3880	;# 
  7961   000F2A                     HLVDCON0        equ	3882	;# 
  7962   000F2B                     HLVDCON1        equ	3883	;# 
  7963   000F2C                     FVRCON          equ	3884	;# 
  7964   000F2D                     ZCDCON          equ	3885	;# 
  7965   000F2E                     DAC1CON0        equ	3886	;# 
  7966   000F2F                     DAC1CON1        equ	3887	;# 
  7967   000F30                     CM2CON0         equ	3888	;# 
  7968   000F31                     CM2CON1         equ	3889	;# 
  7969   000F32                     CM2NCH          equ	3890	;# 
  7970   000F33                     CM2PCH          equ	3891	;# 
  7971   000F34                     CM1CON0         equ	3892	;# 
  7972   000F35                     CM1CON1         equ	3893	;# 
  7973   000F36                     CM1NCH          equ	3894	;# 
  7974   000F37                     CM1PCH          equ	3895	;# 
  7975   000F38                     CMOUT           equ	3896	;# 
  7976   000F39                     CLKRCON         equ	3897	;# 
  7977   000F3A                     CLKRCLK         equ	3898	;# 
  7978   000F3B                     CWG1CLK         equ	3899	;# 
  7979   000F3B                     CWG1CLKCON      equ	3899	;# 
  7980   000F3C                     CWG1ISM         equ	3900	;# 
  7981   000F3D                     CWG1DBR         equ	3901	;# 
  7982   000F3E                     CWG1DBF         equ	3902	;# 
  7983   000F3F                     CWG1CON0        equ	3903	;# 
  7984   000F40                     CWG1CON1        equ	3904	;# 
  7985   000F41                     CWG1AS0         equ	3905	;# 
  7986   000F42                     CWG1AS1         equ	3906	;# 
  7987   000F43                     CWG1STR         equ	3907	;# 
  7988   000F44                     SCANLADR        equ	3908	;# 
  7989   000F44                     SCANLADRL       equ	3908	;# 
  7990   000F45                     SCANLADRH       equ	3909	;# 
  7991   000F46                     SCANLADRU       equ	3910	;# 
  7992   000F47                     SCANHADR        equ	3911	;# 
  7993   000F47                     SCANHADRL       equ	3911	;# 
  7994   000F48                     SCANHADRH       equ	3912	;# 
  7995   000F49                     SCANHADRU       equ	3913	;# 
  7996   000F4A                     SCANCON0        equ	3914	;# 
  7997   000F4B                     SCANTRIG        equ	3915	;# 
  7998   000F4C                     MDCON0          equ	3916	;# 
  7999   000F4D                     MDCON1          equ	3917	;# 
  8000   000F4E                     MDSRC           equ	3918	;# 
  8001   000F4F                     MDCARL          equ	3919	;# 
  8002   000F50                     MDCARH          equ	3920	;# 
  8003   000F51                     ADACT           equ	3921	;# 
  8004   000F52                     ADCLK           equ	3922	;# 
  8005   000F53                     ADREF           equ	3923	;# 
  8006   000F54                     ADCON1          equ	3924	;# 
  8007   000F55                     ADCON2          equ	3925	;# 
  8008   000F56                     ADCON3          equ	3926	;# 
  8009   000F57                     ADACQ           equ	3927	;# 
  8010   000F58                     ADCAP           equ	3928	;# 
  8011   000F59                     ADPRE           equ	3929	;# 
  8012   000F5A                     ADPCH           equ	3930	;# 
  8013   000F5B                     ADCON0          equ	3931	;# 
  8014   000F5C                     ADPREV          equ	3932	;# 
  8015   000F5C                     ADPREVL         equ	3932	;# 
  8016   000F5D                     ADPREVH         equ	3933	;# 
  8017   000F5E                     ADRES           equ	3934	;# 
  8018   000F5E                     ADRESL          equ	3934	;# 
  8019   000F5F                     ADRESH          equ	3935	;# 
  8020   000F60                     ADSTAT          equ	3936	;# 
  8021   000F61                     ADRPT           equ	3937	;# 
  8022   000F62                     ADCNT           equ	3938	;# 
  8023   000F63                     ADSTPT          equ	3939	;# 
  8024   000F63                     ADSTPTL         equ	3939	;# 
  8025   000F64                     ADSTPTH         equ	3940	;# 
  8026   000F65                     ADLTH           equ	3941	;# 
  8027   000F65                     ADLTHL          equ	3941	;# 
  8028   000F66                     ADLTHH          equ	3942	;# 
  8029   000F67                     ADUTH           equ	3943	;# 
  8030   000F67                     ADUTHL          equ	3943	;# 
  8031   000F68                     ADUTHH          equ	3944	;# 
  8032   000F69                     ADERR           equ	3945	;# 
  8033   000F69                     ADERRL          equ	3945	;# 
  8034   000F6A                     ADERRH          equ	3946	;# 
  8035   000F6B                     ADACC           equ	3947	;# 
  8036   000F6B                     ADACCL          equ	3947	;# 
  8037   000F6C                     ADACCH          equ	3948	;# 
  8038   000F6D                     ADFLTR          equ	3949	;# 
  8039   000F6D                     ADFLTRL         equ	3949	;# 
  8040   000F6E                     ADFLTRH         equ	3950	;# 
  8041   000F6F                     CRCDATA         equ	3951	;# 
  8042   000F6F                     CRCDATL         equ	3951	;# 
  8043   000F70                     CRCDATH         equ	3952	;# 
  8044   000F71                     CRCACC          equ	3953	;# 
  8045   000F71                     CRCACCL         equ	3953	;# 
  8046   000F72                     CRCACCH         equ	3954	;# 
  8047   000F73                     CRCSHFT         equ	3955	;# 
  8048   000F73                     CRCSHIFTL       equ	3955	;# 
  8049   000F74                     CRCSHIFTH       equ	3956	;# 
  8050   000F75                     CRCXOR          equ	3957	;# 
  8051   000F75                     CRCXORL         equ	3957	;# 
  8052   000F76                     CRCXORH         equ	3958	;# 
  8053   000F77                     CRCCON0         equ	3959	;# 
  8054   000F78                     CRCCON1         equ	3960	;# 
  8055   000F79                     NVMADR          equ	3961	;# 
  8056   000F79                     NVMADRL         equ	3961	;# 
  8057   000F7A                     NVMADRH         equ	3962	;# 
  8058   000F7B                     NVMADRU         equ	3963	;# 
  8059   000F7C                     NVMDAT          equ	3964	;# 
  8060   000F7C                     NVMDATL         equ	3964	;# 
  8061   000F7D                     NVMDATH         equ	3965	;# 
  8062   000F7F                     NVMCON0         equ	3967	;# 
  8063   000F80                     NVMCON1         equ	3968	;# 
  8064   000F81                     NVMCON2         equ	3969	;# 
  8065   000F82                     LATA            equ	3970	;# 
  8066   000F83                     LATB            equ	3971	;# 
  8067   000F84                     LATC            equ	3972	;# 
  8068   000F87                     TRISA           equ	3975	;# 
  8069   000F87                     DDRA            equ	3975	;# 
  8070   000F88                     TRISB           equ	3976	;# 
  8071   000F88                     DDRB            equ	3976	;# 
  8072   000F89                     TRISC           equ	3977	;# 
  8073   000F89                     DDRC            equ	3977	;# 
  8074   000F8C                     PORTA           equ	3980	;# 
  8075   000F8D                     PORTB           equ	3981	;# 
  8076   000F8E                     PORTC           equ	3982	;# 
  8077   000F90                     PORTE           equ	3984	;# 
  8078   000F91                     SSP1BUF         equ	3985	;# 
  8079   000F92                     SSP1ADD         equ	3986	;# 
  8080   000F93                     SSP1MSK         equ	3987	;# 
  8081   000F94                     SSP1STAT        equ	3988	;# 
  8082   000F95                     SSP1CON1        equ	3989	;# 
  8083   000F96                     SSP1CON2        equ	3990	;# 
  8084   000F97                     SSP1CON3        equ	3991	;# 
  8085   000F98                     RC1REG          equ	3992	;# 
  8086   000F98                     RCREG           equ	3992	;# 
  8087   000F98                     RCREG1          equ	3992	;# 
  8088   000F99                     TX1REG          equ	3993	;# 
  8089   000F99                     TXREG1          equ	3993	;# 
  8090   000F99                     TXREG           equ	3993	;# 
  8091   000F9A                     SP1BRG          equ	3994	;# 
  8092   000F9A                     SPBRG           equ	3994	;# 
  8093   000F9A                     SP1BRGL         equ	3994	;# 
  8094   000F9A                     SPBRG1          equ	3994	;# 
  8095   000F9A                     SPBRGL          equ	3994	;# 
  8096   000F9B                     SP1BRGH         equ	3995	;# 
  8097   000F9B                     SPBRGH          equ	3995	;# 
  8098   000F9B                     SPBRGH1         equ	3995	;# 
  8099   000F9C                     RC1STA          equ	3996	;# 
  8100   000F9C                     RCSTA1          equ	3996	;# 
  8101   000F9C                     RCSTA           equ	3996	;# 
  8102   000F9D                     TX1STA          equ	3997	;# 
  8103   000F9D                     TXSTA1          equ	3997	;# 
  8104   000F9D                     TXSTA           equ	3997	;# 
  8105   000F9E                     BAUD1CON        equ	3998	;# 
  8106   000F9E                     BAUDCON1        equ	3998	;# 
  8107   000F9E                     BAUDCTL1        equ	3998	;# 
  8108   000F9E                     BAUDCON         equ	3998	;# 
  8109   000F9E                     BAUDCTL         equ	3998	;# 
  8110   000F9F                     PWM4DC          equ	3999	;# 
  8111   000F9F                     PWM4DCL         equ	3999	;# 
  8112   000FA0                     PWM4DCH         equ	4000	;# 
  8113   000FA1                     PWM4CON         equ	4001	;# 
  8114   000FA2                     PWM3DC          equ	4002	;# 
  8115   000FA2                     PWM3DCL         equ	4002	;# 
  8116   000FA3                     PWM3DCH         equ	4003	;# 
  8117   000FA4                     PWM3CON         equ	4004	;# 
  8118   000FA5                     CCPR2           equ	4005	;# 
  8119   000FA5                     CCPR2L          equ	4005	;# 
  8120   000FA6                     CCPR2H          equ	4006	;# 
  8121   000FA7                     CCP2CON         equ	4007	;# 
  8122   000FA8                     CCP2CAP         equ	4008	;# 
  8123   000FA9                     CCPR1           equ	4009	;# 
  8124   000FA9                     CCPR1L          equ	4009	;# 
  8125   000FAA                     CCPR1H          equ	4010	;# 
  8126   000FAB                     CCP1CON         equ	4011	;# 
  8127   000FAC                     CCP1CAP         equ	4012	;# 
  8128   000FAD                     CCPTMRS         equ	4013	;# 
  8129   000FAE                     T6TMR           equ	4014	;# 
  8130   000FAE                     TMR6            equ	4014	;# 
  8131   000FAF                     T6PR            equ	4015	;# 
  8132   000FAF                     PR6             equ	4015	;# 
  8133   000FB0                     T6CON           equ	4016	;# 
  8134   000FB1                     T6HLT           equ	4017	;# 
  8135   000FB2                     T6CLKCON        equ	4018	;# 
  8136   000FB2                     T6CLK           equ	4018	;# 
  8137   000FB3                     T6RST           equ	4019	;# 
  8138   000FB4                     T4TMR           equ	4020	;# 
  8139   000FB4                     TMR4            equ	4020	;# 
  8140   000FB5                     T4PR            equ	4021	;# 
  8141   000FB5                     PR4             equ	4021	;# 
  8142   000FB6                     T4CON           equ	4022	;# 
  8143   000FB7                     T4HLT           equ	4023	;# 
  8144   000FB8                     T4CLKCON        equ	4024	;# 
  8145   000FB8                     T4CLK           equ	4024	;# 
  8146   000FB9                     T4RST           equ	4025	;# 
  8147   000FBA                     T2TMR           equ	4026	;# 
  8148   000FBA                     TMR2            equ	4026	;# 
  8149   000FBB                     T2PR            equ	4027	;# 
  8150   000FBB                     PR2             equ	4027	;# 
  8151   000FBC                     T2CON           equ	4028	;# 
  8152   000FBD                     T2HLT           equ	4029	;# 
  8153   000FBE                     T2CLKCON        equ	4030	;# 
  8154   000FBE                     T2CLK           equ	4030	;# 
  8155   000FBF                     T2RST           equ	4031	;# 
  8156   000FC0                     TMR5            equ	4032	;# 
  8157   000FC0                     TMR5L           equ	4032	;# 
  8158   000FC1                     TMR5H           equ	4033	;# 
  8159   000FC2                     T5CON           equ	4034	;# 
  8160   000FC2                     TMR5CON         equ	4034	;# 
  8161   000FC3                     T5GCON          equ	4035	;# 
  8162   000FC3                     TMR5GCON        equ	4035	;# 
  8163   000FC4                     T5GATE          equ	4036	;# 
  8164   000FC4                     TMR5GATE        equ	4036	;# 
  8165   000FC5                     T5CLK           equ	4037	;# 
  8166   000FC5                     TMR5CLK         equ	4037	;# 
  8167   000FC5                     PR5             equ	4037	;# 
  8168   000FC6                     TMR3            equ	4038	;# 
  8169   000FC6                     TMR3L           equ	4038	;# 
  8170   000FC7                     TMR3H           equ	4039	;# 
  8171   000FC8                     T3CON           equ	4040	;# 
  8172   000FC8                     TMR3CON         equ	4040	;# 
  8173   000FC9                     T3GCON          equ	4041	;# 
  8174   000FC9                     TMR3GCON        equ	4041	;# 
  8175   000FCA                     T3GATE          equ	4042	;# 
  8176   000FCA                     TMR3GATE        equ	4042	;# 
  8177   000FCB                     T3CLK           equ	4043	;# 
  8178   000FCB                     TMR3CLK         equ	4043	;# 
  8179   000FCB                     PR3             equ	4043	;# 
  8180   000FCC                     TMR1            equ	4044	;# 
  8181   000FCC                     TMR1L           equ	4044	;# 
  8182   000FCD                     TMR1H           equ	4045	;# 
  8183   000FCE                     T1CON           equ	4046	;# 
  8184   000FCE                     TMR1CON         equ	4046	;# 
  8185   000FCF                     T1GCON          equ	4047	;# 
  8186   000FCF                     TMR1GCON        equ	4047	;# 
  8187   000FD0                     T1GATE          equ	4048	;# 
  8188   000FD0                     TMR1GATE        equ	4048	;# 
  8189   000FD1                     T1CLK           equ	4049	;# 
  8190   000FD1                     TMR1CLK         equ	4049	;# 
  8191   000FD1                     PR1             equ	4049	;# 
  8192   000FD2                     TMR0L           equ	4050	;# 
  8193   000FD2                     TMR0            equ	4050	;# 
  8194   000FD3                     TMR0H           equ	4051	;# 
  8195   000FD3                     PR0             equ	4051	;# 
  8196   000FD4                     T0CON0          equ	4052	;# 
  8197   000FD5                     T0CON1          equ	4053	;# 
  8198   000FD6                     PCON1           equ	4054	;# 
  8199   000FD7                     PCON0           equ	4055	;# 
  8200   000FD8                     STATUS          equ	4056	;# 
  8201   000FD9                     FSR2            equ	4057	;# 
  8202   000FD9                     FSR2L           equ	4057	;# 
  8203   000FDA                     FSR2H           equ	4058	;# 
  8204   000FDB                     PLUSW2          equ	4059	;# 
  8205   000FDC                     PREINC2         equ	4060	;# 
  8206   000FDD                     POSTDEC2        equ	4061	;# 
  8207   000FDE                     POSTINC2        equ	4062	;# 
  8208   000FDF                     INDF2           equ	4063	;# 
  8209   000FE0                     BSR             equ	4064	;# 
  8210   000FE1                     FSR1            equ	4065	;# 
  8211   000FE1                     FSR1L           equ	4065	;# 
  8212   000FE2                     FSR1H           equ	4066	;# 
  8213   000FE3                     PLUSW1          equ	4067	;# 
  8214   000FE4                     PREINC1         equ	4068	;# 
  8215   000FE5                     POSTDEC1        equ	4069	;# 
  8216   000FE6                     POSTINC1        equ	4070	;# 
  8217   000FE7                     INDF1           equ	4071	;# 
  8218   000FE8                     WREG            equ	4072	;# 
  8219   000FE9                     FSR0            equ	4073	;# 
  8220   000FE9                     FSR0L           equ	4073	;# 
  8221   000FEA                     FSR0H           equ	4074	;# 
  8222   000FEB                     PLUSW0          equ	4075	;# 
  8223   000FEC                     PREINC0         equ	4076	;# 
  8224   000FED                     POSTDEC0        equ	4077	;# 
  8225   000FEE                     POSTINC0        equ	4078	;# 
  8226   000FEF                     INDF0           equ	4079	;# 
  8227   000FF2                     INTCON          equ	4082	;# 
  8228   000FF3                     PROD            equ	4083	;# 
  8229   000FF3                     PRODL           equ	4083	;# 
  8230   000FF4                     PRODH           equ	4084	;# 
  8231   000FF5                     TABLAT          equ	4085	;# 
  8232   000FF6                     TBLPTR          equ	4086	;# 
  8233   000FF6                     TBLPTRL         equ	4086	;# 
  8234   000FF7                     TBLPTRH         equ	4087	;# 
  8235   000FF8                     TBLPTRU         equ	4088	;# 
  8236   000FF9                     PCLAT           equ	4089	;# 
  8237   000FF9                     PC              equ	4089	;# 
  8238   000FF9                     PCL             equ	4089	;# 
  8239   000FFA                     PCLATH          equ	4090	;# 
  8240   000FFB                     PCLATU          equ	4091	;# 
  8241   000FFC                     STKPTR          equ	4092	;# 
  8242   000FFD                     TOS             equ	4093	;# 
  8243   000FFD                     TOSL            equ	4093	;# 
  8244   000FFE                     TOSH            equ	4094	;# 
  8245   000FFF                     TOSU            equ	4095	;# 
  8246   000E9B                     PPSLOCK         equ	3739	;# 
  8247   000E9C                     INT0PPS         equ	3740	;# 
  8248   000E9D                     INT1PPS         equ	3741	;# 
  8249   000E9E                     INT2PPS         equ	3742	;# 
  8250   000E9F                     T0CKIPPS        equ	3743	;# 
  8251   000EA0                     T1CKIPPS        equ	3744	;# 
  8252   000EA1                     T1GPPS          equ	3745	;# 
  8253   000EA2                     T3CKIPPS        equ	3746	;# 
  8254   000EA3                     T3GPPS          equ	3747	;# 
  8255   000EA4                     T5CKIPPS        equ	3748	;# 
  8256   000EA5                     T5GPPS          equ	3749	;# 
  8257   000EA6                     T2INPPS         equ	3750	;# 
  8258   000EA7                     T4INPPS         equ	3751	;# 
  8259   000EA8                     T6INPPS         equ	3752	;# 
  8260   000EA9                     ADACTPPS        equ	3753	;# 
  8261   000EAA                     CCP1PPS         equ	3754	;# 
  8262   000EAB                     CCP2PPS         equ	3755	;# 
  8263   000EAC                     CWG1PPS         equ	3756	;# 
  8264   000EAC                     CWGPPS          equ	3756	;# 
  8265   000EAC                     CWGINPPS        equ	3756	;# 
  8266   000EAC                     CWG1INPPS       equ	3756	;# 
  8267   000EAD                     MDCARLPPS       equ	3757	;# 
  8268   000EAE                     MDCARHPPS       equ	3758	;# 
  8269   000EAF                     MDSRCPPS        equ	3759	;# 
  8270   000EB0                     RX1PPS          equ	3760	;# 
  8271   000EB0                     RXPPS           equ	3760	;# 
  8272   000EB0                     RXDT1PPS        equ	3760	;# 
  8273   000EB1                     CK1PPS          equ	3761	;# 
  8274   000EB1                     TXPPS           equ	3761	;# 
  8275   000EB1                     CKPPS           equ	3761	;# 
  8276   000EB1                     TXCK1PPS        equ	3761	;# 
  8277   000EB1                     TX1PPS          equ	3761	;# 
  8278   000EB2                     SSP1CLKPPS      equ	3762	;# 
  8279   000EB2                     SSPCLKPPS       equ	3762	;# 
  8280   000EB3                     SSP1DATPPS      equ	3763	;# 
  8281   000EB3                     SSPDATPPS       equ	3763	;# 
  8282   000EB4                     SSP1SSPPS       equ	3764	;# 
  8283   000EB4                     SSPSSPPS        equ	3764	;# 
  8284   000EB5                     IPR0            equ	3765	;# 
  8285   000EB6                     IPR1            equ	3766	;# 
  8286   000EB7                     IPR2            equ	3767	;# 
  8287   000EB8                     IPR3            equ	3768	;# 
  8288   000EB9                     IPR4            equ	3769	;# 
  8289   000EBA                     IPR5            equ	3770	;# 
  8290   000EBB                     IPR6            equ	3771	;# 
  8291   000EBC                     IPR7            equ	3772	;# 
  8292   000EBD                     PIE0            equ	3773	;# 
  8293   000EBE                     PIE1            equ	3774	;# 
  8294   000EBF                     PIE2            equ	3775	;# 
  8295   000EC0                     PIE3            equ	3776	;# 
  8296   000EC1                     PIE4            equ	3777	;# 
  8297   000EC2                     PIE5            equ	3778	;# 
  8298   000EC3                     PIE6            equ	3779	;# 
  8299   000EC4                     PIE7            equ	3780	;# 
  8300   000EC5                     PIR0            equ	3781	;# 
  8301   000EC6                     PIR1            equ	3782	;# 
  8302   000EC7                     PIR2            equ	3783	;# 
  8303   000EC8                     PIR3            equ	3784	;# 
  8304   000EC9                     PIR4            equ	3785	;# 
  8305   000ECA                     PIR5            equ	3786	;# 
  8306   000ECB                     PIR6            equ	3787	;# 
  8307   000ECC                     PIR7            equ	3788	;# 
  8308   000ECD                     WDTCON0         equ	3789	;# 
  8309   000ECE                     WDTCON1         equ	3790	;# 
  8310   000ECF                     WDTPSL          equ	3791	;# 
  8311   000ED0                     WDTPSH          equ	3792	;# 
  8312   000ED1                     WDTTMR          equ	3793	;# 
  8313   000ED2                     CPUDOZE         equ	3794	;# 
  8314   000ED3                     OSCCON1         equ	3795	;# 
  8315   000ED4                     OSCCON2         equ	3796	;# 
  8316   000ED5                     OSCCON3         equ	3797	;# 
  8317   000ED6                     OSCSTAT         equ	3798	;# 
  8318   000ED6                     OSCSTAT1        equ	3798	;# 
  8319   000ED7                     OSCEN           equ	3799	;# 
  8320   000ED8                     OSCTUNE         equ	3800	;# 
  8321   000ED9                     OSCFRQ          equ	3801	;# 
  8322   000ED9                     OSCFREQ         equ	3801	;# 
  8323   000EDA                     VREGCON         equ	3802	;# 
  8324   000EDB                     BORCON          equ	3803	;# 
  8325   000EDC                     PMD0            equ	3804	;# 
  8326   000EDD                     PMD1            equ	3805	;# 
  8327   000EDE                     PMD2            equ	3806	;# 
  8328   000EDF                     PMD3            equ	3807	;# 
  8329   000EE0                     PMD4            equ	3808	;# 
  8330   000EE1                     PMD5            equ	3809	;# 
  8331   000EE2                     RA0PPS          equ	3810	;# 
  8332   000EE3                     RA1PPS          equ	3811	;# 
  8333   000EE4                     RA2PPS          equ	3812	;# 
  8334   000EE5                     RA3PPS          equ	3813	;# 
  8335   000EE6                     RA4PPS          equ	3814	;# 
  8336   000EE7                     RA5PPS          equ	3815	;# 
  8337   000EE8                     RA6PPS          equ	3816	;# 
  8338   000EE9                     RA7PPS          equ	3817	;# 
  8339   000EEA                     RB0PPS          equ	3818	;# 
  8340   000EEB                     RB1PPS          equ	3819	;# 
  8341   000EEC                     RB2PPS          equ	3820	;# 
  8342   000EED                     RB3PPS          equ	3821	;# 
  8343   000EEE                     RB4PPS          equ	3822	;# 
  8344   000EEF                     RB5PPS          equ	3823	;# 
  8345   000EF0                     RB6PPS          equ	3824	;# 
  8346   000EF1                     RB7PPS          equ	3825	;# 
  8347   000EF2                     RC0PPS          equ	3826	;# 
  8348   000EF3                     RC1PPS          equ	3827	;# 
  8349   000EF4                     RC2PPS          equ	3828	;# 
  8350   000EF5                     RC3PPS          equ	3829	;# 
  8351   000EF6                     RC4PPS          equ	3830	;# 
  8352   000EF7                     RC5PPS          equ	3831	;# 
  8353   000EF8                     RC6PPS          equ	3832	;# 
  8354   000EF9                     RC7PPS          equ	3833	;# 
  8355   000F05                     IOCAF           equ	3845	;# 
  8356   000F06                     IOCAN           equ	3846	;# 
  8357   000F07                     IOCAP           equ	3847	;# 
  8358   000F08                     INLVLA          equ	3848	;# 
  8359   000F09                     SLRCONA         equ	3849	;# 
  8360   000F0A                     ODCONA          equ	3850	;# 
  8361   000F0B                     WPUA            equ	3851	;# 
  8362   000F0C                     ANSELA          equ	3852	;# 
  8363   000F0D                     IOCBF           equ	3853	;# 
  8364   000F0E                     IOCBN           equ	3854	;# 
  8365   000F0F                     IOCBP           equ	3855	;# 
  8366   000F10                     INLVLB          equ	3856	;# 
  8367   000F11                     SLRCONB         equ	3857	;# 
  8368   000F12                     ODCONB          equ	3858	;# 
  8369   000F13                     WPUB            equ	3859	;# 
  8370   000F14                     ANSELB          equ	3860	;# 
  8371   000F15                     IOCCF           equ	3861	;# 
  8372   000F16                     IOCCN           equ	3862	;# 
  8373   000F17                     IOCCP           equ	3863	;# 
  8374   000F18                     INLVLC          equ	3864	;# 
  8375   000F19                     SLRCONC         equ	3865	;# 
  8376   000F1A                     ODCONC          equ	3866	;# 
  8377   000F1B                     WPUC            equ	3867	;# 
  8378   000F1C                     ANSELC          equ	3868	;# 
  8379   000F22                     IOCEF           equ	3874	;# 
  8380   000F23                     IOCEN           equ	3875	;# 
  8381   000F24                     IOCEP           equ	3876	;# 
  8382   000F25                     INLVLE          equ	3877	;# 
  8383   000F28                     WPUE            equ	3880	;# 
  8384   000F2A                     HLVDCON0        equ	3882	;# 
  8385   000F2B                     HLVDCON1        equ	3883	;# 
  8386   000F2C                     FVRCON          equ	3884	;# 
  8387   000F2D                     ZCDCON          equ	3885	;# 
  8388   000F2E                     DAC1CON0        equ	3886	;# 
  8389   000F2F                     DAC1CON1        equ	3887	;# 
  8390   000F30                     CM2CON0         equ	3888	;# 
  8391   000F31                     CM2CON1         equ	3889	;# 
  8392   000F32                     CM2NCH          equ	3890	;# 
  8393   000F33                     CM2PCH          equ	3891	;# 
  8394   000F34                     CM1CON0         equ	3892	;# 
  8395   000F35                     CM1CON1         equ	3893	;# 
  8396   000F36                     CM1NCH          equ	3894	;# 
  8397   000F37                     CM1PCH          equ	3895	;# 
  8398   000F38                     CMOUT           equ	3896	;# 
  8399   000F39                     CLKRCON         equ	3897	;# 
  8400   000F3A                     CLKRCLK         equ	3898	;# 
  8401   000F3B                     CWG1CLK         equ	3899	;# 
  8402   000F3B                     CWG1CLKCON      equ	3899	;# 
  8403   000F3C                     CWG1ISM         equ	3900	;# 
  8404   000F3D                     CWG1DBR         equ	3901	;# 
  8405   000F3E                     CWG1DBF         equ	3902	;# 
  8406   000F3F                     CWG1CON0        equ	3903	;# 
  8407   000F40                     CWG1CON1        equ	3904	;# 
  8408   000F41                     CWG1AS0         equ	3905	;# 
  8409   000F42                     CWG1AS1         equ	3906	;# 
  8410   000F43                     CWG1STR         equ	3907	;# 
  8411   000F44                     SCANLADR        equ	3908	;# 
  8412   000F44                     SCANLADRL       equ	3908	;# 
  8413   000F45                     SCANLADRH       equ	3909	;# 
  8414   000F46                     SCANLADRU       equ	3910	;# 
  8415   000F47                     SCANHADR        equ	3911	;# 
  8416   000F47                     SCANHADRL       equ	3911	;# 
  8417   000F48                     SCANHADRH       equ	3912	;# 
  8418   000F49                     SCANHADRU       equ	3913	;# 
  8419   000F4A                     SCANCON0        equ	3914	;# 
  8420   000F4B                     SCANTRIG        equ	3915	;# 
  8421   000F4C                     MDCON0          equ	3916	;# 
  8422   000F4D                     MDCON1          equ	3917	;# 
  8423   000F4E                     MDSRC           equ	3918	;# 
  8424   000F4F                     MDCARL          equ	3919	;# 
  8425   000F50                     MDCARH          equ	3920	;# 
  8426   000F51                     ADACT           equ	3921	;# 
  8427   000F52                     ADCLK           equ	3922	;# 
  8428   000F53                     ADREF           equ	3923	;# 
  8429   000F54                     ADCON1          equ	3924	;# 
  8430   000F55                     ADCON2          equ	3925	;# 
  8431   000F56                     ADCON3          equ	3926	;# 
  8432   000F57                     ADACQ           equ	3927	;# 
  8433   000F58                     ADCAP           equ	3928	;# 
  8434   000F59                     ADPRE           equ	3929	;# 
  8435   000F5A                     ADPCH           equ	3930	;# 
  8436   000F5B                     ADCON0          equ	3931	;# 
  8437   000F5C                     ADPREV          equ	3932	;# 
  8438   000F5C                     ADPREVL         equ	3932	;# 
  8439   000F5D                     ADPREVH         equ	3933	;# 
  8440   000F5E                     ADRES           equ	3934	;# 
  8441   000F5E                     ADRESL          equ	3934	;# 
  8442   000F5F                     ADRESH          equ	3935	;# 
  8443   000F60                     ADSTAT          equ	3936	;# 
  8444   000F61                     ADRPT           equ	3937	;# 
  8445   000F62                     ADCNT           equ	3938	;# 
  8446   000F63                     ADSTPT          equ	3939	;# 
  8447   000F63                     ADSTPTL         equ	3939	;# 
  8448   000F64                     ADSTPTH         equ	3940	;# 
  8449   000F65                     ADLTH           equ	3941	;# 
  8450   000F65                     ADLTHL          equ	3941	;# 
  8451   000F66                     ADLTHH          equ	3942	;# 
  8452   000F67                     ADUTH           equ	3943	;# 
  8453   000F67                     ADUTHL          equ	3943	;# 
  8454   000F68                     ADUTHH          equ	3944	;# 
  8455   000F69                     ADERR           equ	3945	;# 
  8456   000F69                     ADERRL          equ	3945	;# 
  8457   000F6A                     ADERRH          equ	3946	;# 
  8458   000F6B                     ADACC           equ	3947	;# 
  8459   000F6B                     ADACCL          equ	3947	;# 
  8460   000F6C                     ADACCH          equ	3948	;# 
  8461   000F6D                     ADFLTR          equ	3949	;# 
  8462   000F6D                     ADFLTRL         equ	3949	;# 
  8463   000F6E                     ADFLTRH         equ	3950	;# 
  8464   000F6F                     CRCDATA         equ	3951	;# 
  8465   000F6F                     CRCDATL         equ	3951	;# 
  8466   000F70                     CRCDATH         equ	3952	;# 
  8467   000F71                     CRCACC          equ	3953	;# 
  8468   000F71                     CRCACCL         equ	3953	;# 
  8469   000F72                     CRCACCH         equ	3954	;# 
  8470   000F73                     CRCSHFT         equ	3955	;# 
  8471   000F73                     CRCSHIFTL       equ	3955	;# 
  8472   000F74                     CRCSHIFTH       equ	3956	;# 
  8473   000F75                     CRCXOR          equ	3957	;# 
  8474   000F75                     CRCXORL         equ	3957	;# 
  8475   000F76                     CRCXORH         equ	3958	;# 
  8476   000F77                     CRCCON0         equ	3959	;# 
  8477   000F78                     CRCCON1         equ	3960	;# 
  8478   000F79                     NVMADR          equ	3961	;# 
  8479   000F79                     NVMADRL         equ	3961	;# 
  8480   000F7A                     NVMADRH         equ	3962	;# 
  8481   000F7B                     NVMADRU         equ	3963	;# 
  8482   000F7C                     NVMDAT          equ	3964	;# 
  8483   000F7C                     NVMDATL         equ	3964	;# 
  8484   000F7D                     NVMDATH         equ	3965	;# 
  8485   000F7F                     NVMCON0         equ	3967	;# 
  8486   000F80                     NVMCON1         equ	3968	;# 
  8487   000F81                     NVMCON2         equ	3969	;# 
  8488   000F82                     LATA            equ	3970	;# 
  8489   000F83                     LATB            equ	3971	;# 
  8490   000F84                     LATC            equ	3972	;# 
  8491   000F87                     TRISA           equ	3975	;# 
  8492   000F87                     DDRA            equ	3975	;# 
  8493   000F88                     TRISB           equ	3976	;# 
  8494   000F88                     DDRB            equ	3976	;# 
  8495   000F89                     TRISC           equ	3977	;# 
  8496   000F89                     DDRC            equ	3977	;# 
  8497   000F8C                     PORTA           equ	3980	;# 
  8498   000F8D                     PORTB           equ	3981	;# 
  8499   000F8E                     PORTC           equ	3982	;# 
  8500   000F90                     PORTE           equ	3984	;# 
  8501   000F91                     SSP1BUF         equ	3985	;# 
  8502   000F92                     SSP1ADD         equ	3986	;# 
  8503   000F93                     SSP1MSK         equ	3987	;# 
  8504   000F94                     SSP1STAT        equ	3988	;# 
  8505   000F95                     SSP1CON1        equ	3989	;# 
  8506   000F96                     SSP1CON2        equ	3990	;# 
  8507   000F97                     SSP1CON3        equ	3991	;# 
  8508   000F98                     RC1REG          equ	3992	;# 
  8509   000F98                     RCREG           equ	3992	;# 
  8510   000F98                     RCREG1          equ	3992	;# 
  8511   000F99                     TX1REG          equ	3993	;# 
  8512   000F99                     TXREG1          equ	3993	;# 
  8513   000F99                     TXREG           equ	3993	;# 
  8514   000F9A                     SP1BRG          equ	3994	;# 
  8515   000F9A                     SPBRG           equ	3994	;# 
  8516   000F9A                     SP1BRGL         equ	3994	;# 
  8517   000F9A                     SPBRG1          equ	3994	;# 
  8518   000F9A                     SPBRGL          equ	3994	;# 
  8519   000F9B                     SP1BRGH         equ	3995	;# 
  8520   000F9B                     SPBRGH          equ	3995	;# 
  8521   000F9B                     SPBRGH1         equ	3995	;# 
  8522   000F9C                     RC1STA          equ	3996	;# 
  8523   000F9C                     RCSTA1          equ	3996	;# 
  8524   000F9C                     RCSTA           equ	3996	;# 
  8525   000F9D                     TX1STA          equ	3997	;# 
  8526   000F9D                     TXSTA1          equ	3997	;# 
  8527   000F9D                     TXSTA           equ	3997	;# 
  8528   000F9E                     BAUD1CON        equ	3998	;# 
  8529   000F9E                     BAUDCON1        equ	3998	;# 
  8530   000F9E                     BAUDCTL1        equ	3998	;# 
  8531   000F9E                     BAUDCON         equ	3998	;# 
  8532   000F9E                     BAUDCTL         equ	3998	;# 
  8533   000F9F                     PWM4DC          equ	3999	;# 
  8534   000F9F                     PWM4DCL         equ	3999	;# 
  8535   000FA0                     PWM4DCH         equ	4000	;# 
  8536   000FA1                     PWM4CON         equ	4001	;# 
  8537   000FA2                     PWM3DC          equ	4002	;# 
  8538   000FA2                     PWM3DCL         equ	4002	;# 
  8539   000FA3                     PWM3DCH         equ	4003	;# 
  8540   000FA4                     PWM3CON         equ	4004	;# 
  8541   000FA5                     CCPR2           equ	4005	;# 
  8542   000FA5                     CCPR2L          equ	4005	;# 
  8543   000FA6                     CCPR2H          equ	4006	;# 
  8544   000FA7                     CCP2CON         equ	4007	;# 
  8545   000FA8                     CCP2CAP         equ	4008	;# 
  8546   000FA9                     CCPR1           equ	4009	;# 
  8547   000FA9                     CCPR1L          equ	4009	;# 
  8548   000FAA                     CCPR1H          equ	4010	;# 
  8549   000FAB                     CCP1CON         equ	4011	;# 
  8550   000FAC                     CCP1CAP         equ	4012	;# 
  8551   000FAD                     CCPTMRS         equ	4013	;# 
  8552   000FAE                     T6TMR           equ	4014	;# 
  8553   000FAE                     TMR6            equ	4014	;# 
  8554   000FAF                     T6PR            equ	4015	;# 
  8555   000FAF                     PR6             equ	4015	;# 
  8556   000FB0                     T6CON           equ	4016	;# 
  8557   000FB1                     T6HLT           equ	4017	;# 
  8558   000FB2                     T6CLKCON        equ	4018	;# 
  8559   000FB2                     T6CLK           equ	4018	;# 
  8560   000FB3                     T6RST           equ	4019	;# 
  8561   000FB4                     T4TMR           equ	4020	;# 
  8562   000FB4                     TMR4            equ	4020	;# 
  8563   000FB5                     T4PR            equ	4021	;# 
  8564   000FB5                     PR4             equ	4021	;# 
  8565   000FB6                     T4CON           equ	4022	;# 
  8566   000FB7                     T4HLT           equ	4023	;# 
  8567   000FB8                     T4CLKCON        equ	4024	;# 
  8568   000FB8                     T4CLK           equ	4024	;# 
  8569   000FB9                     T4RST           equ	4025	;# 
  8570   000FBA                     T2TMR           equ	4026	;# 
  8571   000FBA                     TMR2            equ	4026	;# 
  8572   000FBB                     T2PR            equ	4027	;# 
  8573   000FBB                     PR2             equ	4027	;# 
  8574   000FBC                     T2CON           equ	4028	;# 
  8575   000FBD                     T2HLT           equ	4029	;# 
  8576   000FBE                     T2CLKCON        equ	4030	;# 
  8577   000FBE                     T2CLK           equ	4030	;# 
  8578   000FBF                     T2RST           equ	4031	;# 
  8579   000FC0                     TMR5            equ	4032	;# 
  8580   000FC0                     TMR5L           equ	4032	;# 
  8581   000FC1                     TMR5H           equ	4033	;# 
  8582   000FC2                     T5CON           equ	4034	;# 
  8583   000FC2                     TMR5CON         equ	4034	;# 
  8584   000FC3                     T5GCON          equ	4035	;# 
  8585   000FC3                     TMR5GCON        equ	4035	;# 
  8586   000FC4                     T5GATE          equ	4036	;# 
  8587   000FC4                     TMR5GATE        equ	4036	;# 
  8588   000FC5                     T5CLK           equ	4037	;# 
  8589   000FC5                     TMR5CLK         equ	4037	;# 
  8590   000FC5                     PR5             equ	4037	;# 
  8591   000FC6                     TMR3            equ	4038	;# 
  8592   000FC6                     TMR3L           equ	4038	;# 
  8593   000FC7                     TMR3H           equ	4039	;# 
  8594   000FC8                     T3CON           equ	4040	;# 
  8595   000FC8                     TMR3CON         equ	4040	;# 
  8596   000FC9                     T3GCON          equ	4041	;# 
  8597   000FC9                     TMR3GCON        equ	4041	;# 
  8598   000FCA                     T3GATE          equ	4042	;# 
  8599   000FCA                     TMR3GATE        equ	4042	;# 
  8600   000FCB                     T3CLK           equ	4043	;# 
  8601   000FCB                     TMR3CLK         equ	4043	;# 
  8602   000FCB                     PR3             equ	4043	;# 
  8603   000FCC                     TMR1            equ	4044	;# 
  8604   000FCC                     TMR1L           equ	4044	;# 
  8605   000FCD                     TMR1H           equ	4045	;# 
  8606   000FCE                     T1CON           equ	4046	;# 
  8607   000FCE                     TMR1CON         equ	4046	;# 
  8608   000FCF                     T1GCON          equ	4047	;# 
  8609   000FCF                     TMR1GCON        equ	4047	;# 
  8610   000FD0                     T1GATE          equ	4048	;# 
  8611   000FD0                     TMR1GATE        equ	4048	;# 
  8612   000FD1                     T1CLK           equ	4049	;# 
  8613   000FD1                     TMR1CLK         equ	4049	;# 
  8614   000FD1                     PR1             equ	4049	;# 
  8615   000FD2                     TMR0L           equ	4050	;# 
  8616   000FD2                     TMR0            equ	4050	;# 
  8617   000FD3                     TMR0H           equ	4051	;# 
  8618   000FD3                     PR0             equ	4051	;# 
  8619   000FD4                     T0CON0          equ	4052	;# 
  8620   000FD5                     T0CON1          equ	4053	;# 
  8621   000FD6                     PCON1           equ	4054	;# 
  8622   000FD7                     PCON0           equ	4055	;# 
  8623   000FD8                     STATUS          equ	4056	;# 
  8624   000FD9                     FSR2            equ	4057	;# 
  8625   000FD9                     FSR2L           equ	4057	;# 
  8626   000FDA                     FSR2H           equ	4058	;# 
  8627   000FDB                     PLUSW2          equ	4059	;# 
  8628   000FDC                     PREINC2         equ	4060	;# 
  8629   000FDD                     POSTDEC2        equ	4061	;# 
  8630   000FDE                     POSTINC2        equ	4062	;# 
  8631   000FDF                     INDF2           equ	4063	;# 
  8632   000FE0                     BSR             equ	4064	;# 
  8633   000FE1                     FSR1            equ	4065	;# 
  8634   000FE1                     FSR1L           equ	4065	;# 
  8635   000FE2                     FSR1H           equ	4066	;# 
  8636   000FE3                     PLUSW1          equ	4067	;# 
  8637   000FE4                     PREINC1         equ	4068	;# 
  8638   000FE5                     POSTDEC1        equ	4069	;# 
  8639   000FE6                     POSTINC1        equ	4070	;# 
  8640   000FE7                     INDF1           equ	4071	;# 
  8641   000FE8                     WREG            equ	4072	;# 
  8642   000FE9                     FSR0            equ	4073	;# 
  8643   000FE9                     FSR0L           equ	4073	;# 
  8644   000FEA                     FSR0H           equ	4074	;# 
  8645   000FEB                     PLUSW0          equ	4075	;# 
  8646   000FEC                     PREINC0         equ	4076	;# 
  8647   000FED                     POSTDEC0        equ	4077	;# 
  8648   000FEE                     POSTINC0        equ	4078	;# 
  8649   000FEF                     INDF0           equ	4079	;# 
  8650   000FF2                     INTCON          equ	4082	;# 
  8651   000FF3                     PROD            equ	4083	;# 
  8652   000FF3                     PRODL           equ	4083	;# 
  8653   000FF4                     PRODH           equ	4084	;# 
  8654   000FF5                     TABLAT          equ	4085	;# 
  8655   000FF6                     TBLPTR          equ	4086	;# 
  8656   000FF6                     TBLPTRL         equ	4086	;# 
  8657   000FF7                     TBLPTRH         equ	4087	;# 
  8658   000FF8                     TBLPTRU         equ	4088	;# 
  8659   000FF9                     PCLAT           equ	4089	;# 
  8660   000FF9                     PC              equ	4089	;# 
  8661   000FF9                     PCL             equ	4089	;# 
  8662   000FFA                     PCLATH          equ	4090	;# 
  8663   000FFB                     PCLATU          equ	4091	;# 
  8664   000FFC                     STKPTR          equ	4092	;# 
  8665   000FFD                     TOS             equ	4093	;# 
  8666   000FFD                     TOSL            equ	4093	;# 
  8667   000FFE                     TOSH            equ	4094	;# 
  8668   000FFF                     TOSU            equ	4095	;# 
  8669   000E9B                     PPSLOCK         equ	3739	;# 
  8670   000E9C                     INT0PPS         equ	3740	;# 
  8671   000E9D                     INT1PPS         equ	3741	;# 
  8672   000E9E                     INT2PPS         equ	3742	;# 
  8673   000E9F                     T0CKIPPS        equ	3743	;# 
  8674   000EA0                     T1CKIPPS        equ	3744	;# 
  8675   000EA1                     T1GPPS          equ	3745	;# 
  8676   000EA2                     T3CKIPPS        equ	3746	;# 
  8677   000EA3                     T3GPPS          equ	3747	;# 
  8678   000EA4                     T5CKIPPS        equ	3748	;# 
  8679   000EA5                     T5GPPS          equ	3749	;# 
  8680   000EA6                     T2INPPS         equ	3750	;# 
  8681   000EA7                     T4INPPS         equ	3751	;# 
  8682   000EA8                     T6INPPS         equ	3752	;# 
  8683   000EA9                     ADACTPPS        equ	3753	;# 
  8684   000EAA                     CCP1PPS         equ	3754	;# 
  8685   000EAB                     CCP2PPS         equ	3755	;# 
  8686   000EAC                     CWG1PPS         equ	3756	;# 
  8687   000EAC                     CWGPPS          equ	3756	;# 
  8688   000EAC                     CWGINPPS        equ	3756	;# 
  8689   000EAC                     CWG1INPPS       equ	3756	;# 
  8690   000EAD                     MDCARLPPS       equ	3757	;# 
  8691   000EAE                     MDCARHPPS       equ	3758	;# 
  8692   000EAF                     MDSRCPPS        equ	3759	;# 
  8693   000EB0                     RX1PPS          equ	3760	;# 
  8694   000EB0                     RXPPS           equ	3760	;# 
  8695   000EB0                     RXDT1PPS        equ	3760	;# 
  8696   000EB1                     CK1PPS          equ	3761	;# 
  8697   000EB1                     TXPPS           equ	3761	;# 
  8698   000EB1                     CKPPS           equ	3761	;# 
  8699   000EB1                     TXCK1PPS        equ	3761	;# 
  8700   000EB1                     TX1PPS          equ	3761	;# 
  8701   000EB2                     SSP1CLKPPS      equ	3762	;# 
  8702   000EB2                     SSPCLKPPS       equ	3762	;# 
  8703   000EB3                     SSP1DATPPS      equ	3763	;# 
  8704   000EB3                     SSPDATPPS       equ	3763	;# 
  8705   000EB4                     SSP1SSPPS       equ	3764	;# 
  8706   000EB4                     SSPSSPPS        equ	3764	;# 
  8707   000EB5                     IPR0            equ	3765	;# 
  8708   000EB6                     IPR1            equ	3766	;# 
  8709   000EB7                     IPR2            equ	3767	;# 
  8710   000EB8                     IPR3            equ	3768	;# 
  8711   000EB9                     IPR4            equ	3769	;# 
  8712   000EBA                     IPR5            equ	3770	;# 
  8713   000EBB                     IPR6            equ	3771	;# 
  8714   000EBC                     IPR7            equ	3772	;# 
  8715   000EBD                     PIE0            equ	3773	;# 
  8716   000EBE                     PIE1            equ	3774	;# 
  8717   000EBF                     PIE2            equ	3775	;# 
  8718   000EC0                     PIE3            equ	3776	;# 
  8719   000EC1                     PIE4            equ	3777	;# 
  8720   000EC2                     PIE5            equ	3778	;# 
  8721   000EC3                     PIE6            equ	3779	;# 
  8722   000EC4                     PIE7            equ	3780	;# 
  8723   000EC5                     PIR0            equ	3781	;# 
  8724   000EC6                     PIR1            equ	3782	;# 
  8725   000EC7                     PIR2            equ	3783	;# 
  8726   000EC8                     PIR3            equ	3784	;# 
  8727   000EC9                     PIR4            equ	3785	;# 
  8728   000ECA                     PIR5            equ	3786	;# 
  8729   000ECB                     PIR6            equ	3787	;# 
  8730   000ECC                     PIR7            equ	3788	;# 
  8731   000ECD                     WDTCON0         equ	3789	;# 
  8732   000ECE                     WDTCON1         equ	3790	;# 
  8733   000ECF                     WDTPSL          equ	3791	;# 
  8734   000ED0                     WDTPSH          equ	3792	;# 
  8735   000ED1                     WDTTMR          equ	3793	;# 
  8736   000ED2                     CPUDOZE         equ	3794	;# 
  8737   000ED3                     OSCCON1         equ	3795	;# 
  8738   000ED4                     OSCCON2         equ	3796	;# 
  8739   000ED5                     OSCCON3         equ	3797	;# 
  8740   000ED6                     OSCSTAT         equ	3798	;# 
  8741   000ED6                     OSCSTAT1        equ	3798	;# 
  8742   000ED7                     OSCEN           equ	3799	;# 
  8743   000ED8                     OSCTUNE         equ	3800	;# 
  8744   000ED9                     OSCFRQ          equ	3801	;# 
  8745   000ED9                     OSCFREQ         equ	3801	;# 
  8746   000EDA                     VREGCON         equ	3802	;# 
  8747   000EDB                     BORCON          equ	3803	;# 
  8748   000EDC                     PMD0            equ	3804	;# 
  8749   000EDD                     PMD1            equ	3805	;# 
  8750   000EDE                     PMD2            equ	3806	;# 
  8751   000EDF                     PMD3            equ	3807	;# 
  8752   000EE0                     PMD4            equ	3808	;# 
  8753   000EE1                     PMD5            equ	3809	;# 
  8754   000EE2                     RA0PPS          equ	3810	;# 
  8755   000EE3                     RA1PPS          equ	3811	;# 
  8756   000EE4                     RA2PPS          equ	3812	;# 
  8757   000EE5                     RA3PPS          equ	3813	;# 
  8758   000EE6                     RA4PPS          equ	3814	;# 
  8759   000EE7                     RA5PPS          equ	3815	;# 
  8760   000EE8                     RA6PPS          equ	3816	;# 
  8761   000EE9                     RA7PPS          equ	3817	;# 
  8762   000EEA                     RB0PPS          equ	3818	;# 
  8763   000EEB                     RB1PPS          equ	3819	;# 
  8764   000EEC                     RB2PPS          equ	3820	;# 
  8765   000EED                     RB3PPS          equ	3821	;# 
  8766   000EEE                     RB4PPS          equ	3822	;# 
  8767   000EEF                     RB5PPS          equ	3823	;# 
  8768   000EF0                     RB6PPS          equ	3824	;# 
  8769   000EF1                     RB7PPS          equ	3825	;# 
  8770   000EF2                     RC0PPS          equ	3826	;# 
  8771   000EF3                     RC1PPS          equ	3827	;# 
  8772   000EF4                     RC2PPS          equ	3828	;# 
  8773   000EF5                     RC3PPS          equ	3829	;# 
  8774   000EF6                     RC4PPS          equ	3830	;# 
  8775   000EF7                     RC5PPS          equ	3831	;# 
  8776   000EF8                     RC6PPS          equ	3832	;# 
  8777   000EF9                     RC7PPS          equ	3833	;# 
  8778   000F05                     IOCAF           equ	3845	;# 
  8779   000F06                     IOCAN           equ	3846	;# 
  8780   000F07                     IOCAP           equ	3847	;# 
  8781   000F08                     INLVLA          equ	3848	;# 
  8782   000F09                     SLRCONA         equ	3849	;# 
  8783   000F0A                     ODCONA          equ	3850	;# 
  8784   000F0B                     WPUA            equ	3851	;# 
  8785   000F0C                     ANSELA          equ	3852	;# 
  8786   000F0D                     IOCBF           equ	3853	;# 
  8787   000F0E                     IOCBN           equ	3854	;# 
  8788   000F0F                     IOCBP           equ	3855	;# 
  8789   000F10                     INLVLB          equ	3856	;# 
  8790   000F11                     SLRCONB         equ	3857	;# 
  8791   000F12                     ODCONB          equ	3858	;# 
  8792   000F13                     WPUB            equ	3859	;# 
  8793   000F14                     ANSELB          equ	3860	;# 
  8794   000F15                     IOCCF           equ	3861	;# 
  8795   000F16                     IOCCN           equ	3862	;# 
  8796   000F17                     IOCCP           equ	3863	;# 
  8797   000F18                     INLVLC          equ	3864	;# 
  8798   000F19                     SLRCONC         equ	3865	;# 
  8799   000F1A                     ODCONC          equ	3866	;# 
  8800   000F1B                     WPUC            equ	3867	;# 
  8801   000F1C                     ANSELC          equ	3868	;# 
  8802   000F22                     IOCEF           equ	3874	;# 
  8803   000F23                     IOCEN           equ	3875	;# 
  8804   000F24                     IOCEP           equ	3876	;# 
  8805   000F25                     INLVLE          equ	3877	;# 
  8806   000F28                     WPUE            equ	3880	;# 
  8807   000F2A                     HLVDCON0        equ	3882	;# 
  8808   000F2B                     HLVDCON1        equ	3883	;# 
  8809   000F2C                     FVRCON          equ	3884	;# 
  8810   000F2D                     ZCDCON          equ	3885	;# 
  8811   000F2E                     DAC1CON0        equ	3886	;# 
  8812   000F2F                     DAC1CON1        equ	3887	;# 
  8813   000F30                     CM2CON0         equ	3888	;# 
  8814   000F31                     CM2CON1         equ	3889	;# 
  8815   000F32                     CM2NCH          equ	3890	;# 
  8816   000F33                     CM2PCH          equ	3891	;# 
  8817   000F34                     CM1CON0         equ	3892	;# 
  8818   000F35                     CM1CON1         equ	3893	;# 
  8819   000F36                     CM1NCH          equ	3894	;# 
  8820   000F37                     CM1PCH          equ	3895	;# 
  8821   000F38                     CMOUT           equ	3896	;# 
  8822   000F39                     CLKRCON         equ	3897	;# 
  8823   000F3A                     CLKRCLK         equ	3898	;# 
  8824   000F3B                     CWG1CLK         equ	3899	;# 
  8825   000F3B                     CWG1CLKCON      equ	3899	;# 
  8826   000F3C                     CWG1ISM         equ	3900	;# 
  8827   000F3D                     CWG1DBR         equ	3901	;# 
  8828   000F3E                     CWG1DBF         equ	3902	;# 
  8829   000F3F                     CWG1CON0        equ	3903	;# 
  8830   000F40                     CWG1CON1        equ	3904	;# 
  8831   000F41                     CWG1AS0         equ	3905	;# 
  8832   000F42                     CWG1AS1         equ	3906	;# 
  8833   000F43                     CWG1STR         equ	3907	;# 
  8834   000F44                     SCANLADR        equ	3908	;# 
  8835   000F44                     SCANLADRL       equ	3908	;# 
  8836   000F45                     SCANLADRH       equ	3909	;# 
  8837   000F46                     SCANLADRU       equ	3910	;# 
  8838   000F47                     SCANHADR        equ	3911	;# 
  8839   000F47                     SCANHADRL       equ	3911	;# 
  8840   000F48                     SCANHADRH       equ	3912	;# 
  8841   000F49                     SCANHADRU       equ	3913	;# 
  8842   000F4A                     SCANCON0        equ	3914	;# 
  8843   000F4B                     SCANTRIG        equ	3915	;# 
  8844   000F4C                     MDCON0          equ	3916	;# 
  8845   000F4D                     MDCON1          equ	3917	;# 
  8846   000F4E                     MDSRC           equ	3918	;# 
  8847   000F4F                     MDCARL          equ	3919	;# 
  8848   000F50                     MDCARH          equ	3920	;# 
  8849   000F51                     ADACT           equ	3921	;# 
  8850   000F52                     ADCLK           equ	3922	;# 
  8851   000F53                     ADREF           equ	3923	;# 
  8852   000F54                     ADCON1          equ	3924	;# 
  8853   000F55                     ADCON2          equ	3925	;# 
  8854   000F56                     ADCON3          equ	3926	;# 
  8855   000F57                     ADACQ           equ	3927	;# 
  8856   000F58                     ADCAP           equ	3928	;# 
  8857   000F59                     ADPRE           equ	3929	;# 
  8858   000F5A                     ADPCH           equ	3930	;# 
  8859   000F5B                     ADCON0          equ	3931	;# 
  8860   000F5C                     ADPREV          equ	3932	;# 
  8861   000F5C                     ADPREVL         equ	3932	;# 
  8862   000F5D                     ADPREVH         equ	3933	;# 
  8863   000F5E                     ADRES           equ	3934	;# 
  8864   000F5E                     ADRESL          equ	3934	;# 
  8865   000F5F                     ADRESH          equ	3935	;# 
  8866   000F60                     ADSTAT          equ	3936	;# 
  8867   000F61                     ADRPT           equ	3937	;# 
  8868   000F62                     ADCNT           equ	3938	;# 
  8869   000F63                     ADSTPT          equ	3939	;# 
  8870   000F63                     ADSTPTL         equ	3939	;# 
  8871   000F64                     ADSTPTH         equ	3940	;# 
  8872   000F65                     ADLTH           equ	3941	;# 
  8873   000F65                     ADLTHL          equ	3941	;# 
  8874   000F66                     ADLTHH          equ	3942	;# 
  8875   000F67                     ADUTH           equ	3943	;# 
  8876   000F67                     ADUTHL          equ	3943	;# 
  8877   000F68                     ADUTHH          equ	3944	;# 
  8878   000F69                     ADERR           equ	3945	;# 
  8879   000F69                     ADERRL          equ	3945	;# 
  8880   000F6A                     ADERRH          equ	3946	;# 
  8881   000F6B                     ADACC           equ	3947	;# 
  8882   000F6B                     ADACCL          equ	3947	;# 
  8883   000F6C                     ADACCH          equ	3948	;# 
  8884   000F6D                     ADFLTR          equ	3949	;# 
  8885   000F6D                     ADFLTRL         equ	3949	;# 
  8886   000F6E                     ADFLTRH         equ	3950	;# 
  8887   000F6F                     CRCDATA         equ	3951	;# 
  8888   000F6F                     CRCDATL         equ	3951	;# 
  8889   000F70                     CRCDATH         equ	3952	;# 
  8890   000F71                     CRCACC          equ	3953	;# 
  8891   000F71                     CRCACCL         equ	3953	;# 
  8892   000F72                     CRCACCH         equ	3954	;# 
  8893   000F73                     CRCSHFT         equ	3955	;# 
  8894   000F73                     CRCSHIFTL       equ	3955	;# 
  8895   000F74                     CRCSHIFTH       equ	3956	;# 
  8896   000F75                     CRCXOR          equ	3957	;# 
  8897   000F75                     CRCXORL         equ	3957	;# 
  8898   000F76                     CRCXORH         equ	3958	;# 
  8899   000F77                     CRCCON0         equ	3959	;# 
  8900   000F78                     CRCCON1         equ	3960	;# 
  8901   000F79                     NVMADR          equ	3961	;# 
  8902   000F79                     NVMADRL         equ	3961	;# 
  8903   000F7A                     NVMADRH         equ	3962	;# 
  8904   000F7B                     NVMADRU         equ	3963	;# 
  8905   000F7C                     NVMDAT          equ	3964	;# 
  8906   000F7C                     NVMDATL         equ	3964	;# 
  8907   000F7D                     NVMDATH         equ	3965	;# 
  8908   000F7F                     NVMCON0         equ	3967	;# 
  8909   000F80                     NVMCON1         equ	3968	;# 
  8910   000F81                     NVMCON2         equ	3969	;# 
  8911   000F82                     LATA            equ	3970	;# 
  8912   000F83                     LATB            equ	3971	;# 
  8913   000F84                     LATC            equ	3972	;# 
  8914   000F87                     TRISA           equ	3975	;# 
  8915   000F87                     DDRA            equ	3975	;# 
  8916   000F88                     TRISB           equ	3976	;# 
  8917   000F88                     DDRB            equ	3976	;# 
  8918   000F89                     TRISC           equ	3977	;# 
  8919   000F89                     DDRC            equ	3977	;# 
  8920   000F8C                     PORTA           equ	3980	;# 
  8921   000F8D                     PORTB           equ	3981	;# 
  8922   000F8E                     PORTC           equ	3982	;# 
  8923   000F90                     PORTE           equ	3984	;# 
  8924   000F91                     SSP1BUF         equ	3985	;# 
  8925   000F92                     SSP1ADD         equ	3986	;# 
  8926   000F93                     SSP1MSK         equ	3987	;# 
  8927   000F94                     SSP1STAT        equ	3988	;# 
  8928   000F95                     SSP1CON1        equ	3989	;# 
  8929   000F96                     SSP1CON2        equ	3990	;# 
  8930   000F97                     SSP1CON3        equ	3991	;# 
  8931   000F98                     RC1REG          equ	3992	;# 
  8932   000F98                     RCREG           equ	3992	;# 
  8933   000F98                     RCREG1          equ	3992	;# 
  8934   000F99                     TX1REG          equ	3993	;# 
  8935   000F99                     TXREG1          equ	3993	;# 
  8936   000F99                     TXREG           equ	3993	;# 
  8937   000F9A                     SP1BRG          equ	3994	;# 
  8938   000F9A                     SPBRG           equ	3994	;# 
  8939   000F9A                     SP1BRGL         equ	3994	;# 
  8940   000F9A                     SPBRG1          equ	3994	;# 
  8941   000F9A                     SPBRGL          equ	3994	;# 
  8942   000F9B                     SP1BRGH         equ	3995	;# 
  8943   000F9B                     SPBRGH          equ	3995	;# 
  8944   000F9B                     SPBRGH1         equ	3995	;# 
  8945   000F9C                     RC1STA          equ	3996	;# 
  8946   000F9C                     RCSTA1          equ	3996	;# 
  8947   000F9C                     RCSTA           equ	3996	;# 
  8948   000F9D                     TX1STA          equ	3997	;# 
  8949   000F9D                     TXSTA1          equ	3997	;# 
  8950   000F9D                     TXSTA           equ	3997	;# 
  8951   000F9E                     BAUD1CON        equ	3998	;# 
  8952   000F9E                     BAUDCON1        equ	3998	;# 
  8953   000F9E                     BAUDCTL1        equ	3998	;# 
  8954   000F9E                     BAUDCON         equ	3998	;# 
  8955   000F9E                     BAUDCTL         equ	3998	;# 
  8956   000F9F                     PWM4DC          equ	3999	;# 
  8957   000F9F                     PWM4DCL         equ	3999	;# 
  8958   000FA0                     PWM4DCH         equ	4000	;# 
  8959   000FA1                     PWM4CON         equ	4001	;# 
  8960   000FA2                     PWM3DC          equ	4002	;# 
  8961   000FA2                     PWM3DCL         equ	4002	;# 
  8962   000FA3                     PWM3DCH         equ	4003	;# 
  8963   000FA4                     PWM3CON         equ	4004	;# 
  8964   000FA5                     CCPR2           equ	4005	;# 
  8965   000FA5                     CCPR2L          equ	4005	;# 
  8966   000FA6                     CCPR2H          equ	4006	;# 
  8967   000FA7                     CCP2CON         equ	4007	;# 
  8968   000FA8                     CCP2CAP         equ	4008	;# 
  8969   000FA9                     CCPR1           equ	4009	;# 
  8970   000FA9                     CCPR1L          equ	4009	;# 
  8971   000FAA                     CCPR1H          equ	4010	;# 
  8972   000FAB                     CCP1CON         equ	4011	;# 
  8973   000FAC                     CCP1CAP         equ	4012	;# 
  8974   000FAD                     CCPTMRS         equ	4013	;# 
  8975   000FAE                     T6TMR           equ	4014	;# 
  8976   000FAE                     TMR6            equ	4014	;# 
  8977   000FAF                     T6PR            equ	4015	;# 
  8978   000FAF                     PR6             equ	4015	;# 
  8979   000FB0                     T6CON           equ	4016	;# 
  8980   000FB1                     T6HLT           equ	4017	;# 
  8981   000FB2                     T6CLKCON        equ	4018	;# 
  8982   000FB2                     T6CLK           equ	4018	;# 
  8983   000FB3                     T6RST           equ	4019	;# 
  8984   000FB4                     T4TMR           equ	4020	;# 
  8985   000FB4                     TMR4            equ	4020	;# 
  8986   000FB5                     T4PR            equ	4021	;# 
  8987   000FB5                     PR4             equ	4021	;# 
  8988   000FB6                     T4CON           equ	4022	;# 
  8989   000FB7                     T4HLT           equ	4023	;# 
  8990   000FB8                     T4CLKCON        equ	4024	;# 
  8991   000FB8                     T4CLK           equ	4024	;# 
  8992   000FB9                     T4RST           equ	4025	;# 
  8993   000FBA                     T2TMR           equ	4026	;# 
  8994   000FBA                     TMR2            equ	4026	;# 
  8995   000FBB                     T2PR            equ	4027	;# 
  8996   000FBB                     PR2             equ	4027	;# 
  8997   000FBC                     T2CON           equ	4028	;# 
  8998   000FBD                     T2HLT           equ	4029	;# 
  8999   000FBE                     T2CLKCON        equ	4030	;# 
  9000   000FBE                     T2CLK           equ	4030	;# 
  9001   000FBF                     T2RST           equ	4031	;# 
  9002   000FC0                     TMR5            equ	4032	;# 
  9003   000FC0                     TMR5L           equ	4032	;# 
  9004   000FC1                     TMR5H           equ	4033	;# 
  9005   000FC2                     T5CON           equ	4034	;# 
  9006   000FC2                     TMR5CON         equ	4034	;# 
  9007   000FC3                     T5GCON          equ	4035	;# 
  9008   000FC3                     TMR5GCON        equ	4035	;# 
  9009   000FC4                     T5GATE          equ	4036	;# 
  9010   000FC4                     TMR5GATE        equ	4036	;# 
  9011   000FC5                     T5CLK           equ	4037	;# 
  9012   000FC5                     TMR5CLK         equ	4037	;# 
  9013   000FC5                     PR5             equ	4037	;# 
  9014   000FC6                     TMR3            equ	4038	;# 
  9015   000FC6                     TMR3L           equ	4038	;# 
  9016   000FC7                     TMR3H           equ	4039	;# 
  9017   000FC8                     T3CON           equ	4040	;# 
  9018   000FC8                     TMR3CON         equ	4040	;# 
  9019   000FC9                     T3GCON          equ	4041	;# 
  9020   000FC9                     TMR3GCON        equ	4041	;# 
  9021   000FCA                     T3GATE          equ	4042	;# 
  9022   000FCA                     TMR3GATE        equ	4042	;# 
  9023   000FCB                     T3CLK           equ	4043	;# 
  9024   000FCB                     TMR3CLK         equ	4043	;# 
  9025   000FCB                     PR3             equ	4043	;# 
  9026   000FCC                     TMR1            equ	4044	;# 
  9027   000FCC                     TMR1L           equ	4044	;# 
  9028   000FCD                     TMR1H           equ	4045	;# 
  9029   000FCE                     T1CON           equ	4046	;# 
  9030   000FCE                     TMR1CON         equ	4046	;# 
  9031   000FCF                     T1GCON          equ	4047	;# 
  9032   000FCF                     TMR1GCON        equ	4047	;# 
  9033   000FD0                     T1GATE          equ	4048	;# 
  9034   000FD0                     TMR1GATE        equ	4048	;# 
  9035   000FD1                     T1CLK           equ	4049	;# 
  9036   000FD1                     TMR1CLK         equ	4049	;# 
  9037   000FD1                     PR1             equ	4049	;# 
  9038   000FD2                     TMR0L           equ	4050	;# 
  9039   000FD2                     TMR0            equ	4050	;# 
  9040   000FD3                     TMR0H           equ	4051	;# 
  9041   000FD3                     PR0             equ	4051	;# 
  9042   000FD4                     T0CON0          equ	4052	;# 
  9043   000FD5                     T0CON1          equ	4053	;# 
  9044   000FD6                     PCON1           equ	4054	;# 
  9045   000FD7                     PCON0           equ	4055	;# 
  9046   000FD8                     STATUS          equ	4056	;# 
  9047   000FD9                     FSR2            equ	4057	;# 
  9048   000FD9                     FSR2L           equ	4057	;# 
  9049   000FDA                     FSR2H           equ	4058	;# 
  9050   000FDB                     PLUSW2          equ	4059	;# 
  9051   000FDC                     PREINC2         equ	4060	;# 
  9052   000FDD                     POSTDEC2        equ	4061	;# 
  9053   000FDE                     POSTINC2        equ	4062	;# 
  9054   000FDF                     INDF2           equ	4063	;# 
  9055   000FE0                     BSR             equ	4064	;# 
  9056   000FE1                     FSR1            equ	4065	;# 
  9057   000FE1                     FSR1L           equ	4065	;# 
  9058   000FE2                     FSR1H           equ	4066	;# 
  9059   000FE3                     PLUSW1          equ	4067	;# 
  9060   000FE4                     PREINC1         equ	4068	;# 
  9061   000FE5                     POSTDEC1        equ	4069	;# 
  9062   000FE6                     POSTINC1        equ	4070	;# 
  9063   000FE7                     INDF1           equ	4071	;# 
  9064   000FE8                     WREG            equ	4072	;# 
  9065   000FE9                     FSR0            equ	4073	;# 
  9066   000FE9                     FSR0L           equ	4073	;# 
  9067   000FEA                     FSR0H           equ	4074	;# 
  9068   000FEB                     PLUSW0          equ	4075	;# 
  9069   000FEC                     PREINC0         equ	4076	;# 
  9070   000FED                     POSTDEC0        equ	4077	;# 
  9071   000FEE                     POSTINC0        equ	4078	;# 
  9072   000FEF                     INDF0           equ	4079	;# 
  9073   000FF2                     INTCON          equ	4082	;# 
  9074   000FF3                     PROD            equ	4083	;# 
  9075   000FF3                     PRODL           equ	4083	;# 
  9076   000FF4                     PRODH           equ	4084	;# 
  9077   000FF5                     TABLAT          equ	4085	;# 
  9078   000FF6                     TBLPTR          equ	4086	;# 
  9079   000FF6                     TBLPTRL         equ	4086	;# 
  9080   000FF7                     TBLPTRH         equ	4087	;# 
  9081   000FF8                     TBLPTRU         equ	4088	;# 
  9082   000FF9                     PCLAT           equ	4089	;# 
  9083   000FF9                     PC              equ	4089	;# 
  9084   000FF9                     PCL             equ	4089	;# 
  9085   000FFA                     PCLATH          equ	4090	;# 
  9086   000FFB                     PCLATU          equ	4091	;# 
  9087   000FFC                     STKPTR          equ	4092	;# 
  9088   000FFD                     TOS             equ	4093	;# 
  9089   000FFD                     TOSL            equ	4093	;# 
  9090   000FFE                     TOSH            equ	4094	;# 
  9091   000FFF                     TOSU            equ	4095	;# 
  9092   000E9B                     PPSLOCK         equ	3739	;# 
  9093   000E9C                     INT0PPS         equ	3740	;# 
  9094   000E9D                     INT1PPS         equ	3741	;# 
  9095   000E9E                     INT2PPS         equ	3742	;# 
  9096   000E9F                     T0CKIPPS        equ	3743	;# 
  9097   000EA0                     T1CKIPPS        equ	3744	;# 
  9098   000EA1                     T1GPPS          equ	3745	;# 
  9099   000EA2                     T3CKIPPS        equ	3746	;# 
  9100   000EA3                     T3GPPS          equ	3747	;# 
  9101   000EA4                     T5CKIPPS        equ	3748	;# 
  9102   000EA5                     T5GPPS          equ	3749	;# 
  9103   000EA6                     T2INPPS         equ	3750	;# 
  9104   000EA7                     T4INPPS         equ	3751	;# 
  9105   000EA8                     T6INPPS         equ	3752	;# 
  9106   000EA9                     ADACTPPS        equ	3753	;# 
  9107   000EAA                     CCP1PPS         equ	3754	;# 
  9108   000EAB                     CCP2PPS         equ	3755	;# 
  9109   000EAC                     CWG1PPS         equ	3756	;# 
  9110   000EAC                     CWGPPS          equ	3756	;# 
  9111   000EAC                     CWGINPPS        equ	3756	;# 
  9112   000EAC                     CWG1INPPS       equ	3756	;# 
  9113   000EAD                     MDCARLPPS       equ	3757	;# 
  9114   000EAE                     MDCARHPPS       equ	3758	;# 
  9115   000EAF                     MDSRCPPS        equ	3759	;# 
  9116   000EB0                     RX1PPS          equ	3760	;# 
  9117   000EB0                     RXPPS           equ	3760	;# 
  9118   000EB0                     RXDT1PPS        equ	3760	;# 
  9119   000EB1                     CK1PPS          equ	3761	;# 
  9120   000EB1                     TXPPS           equ	3761	;# 
  9121   000EB1                     CKPPS           equ	3761	;# 
  9122   000EB1                     TXCK1PPS        equ	3761	;# 
  9123   000EB1                     TX1PPS          equ	3761	;# 
  9124   000EB2                     SSP1CLKPPS      equ	3762	;# 
  9125   000EB2                     SSPCLKPPS       equ	3762	;# 
  9126   000EB3                     SSP1DATPPS      equ	3763	;# 
  9127   000EB3                     SSPDATPPS       equ	3763	;# 
  9128   000EB4                     SSP1SSPPS       equ	3764	;# 
  9129   000EB4                     SSPSSPPS        equ	3764	;# 
  9130   000EB5                     IPR0            equ	3765	;# 
  9131   000EB6                     IPR1            equ	3766	;# 
  9132   000EB7                     IPR2            equ	3767	;# 
  9133   000EB8                     IPR3            equ	3768	;# 
  9134   000EB9                     IPR4            equ	3769	;# 
  9135   000EBA                     IPR5            equ	3770	;# 
  9136   000EBB                     IPR6            equ	3771	;# 
  9137   000EBC                     IPR7            equ	3772	;# 
  9138   000EBD                     PIE0            equ	3773	;# 
  9139   000EBE                     PIE1            equ	3774	;# 
  9140   000EBF                     PIE2            equ	3775	;# 
  9141   000EC0                     PIE3            equ	3776	;# 
  9142   000EC1                     PIE4            equ	3777	;# 
  9143   000EC2                     PIE5            equ	3778	;# 
  9144   000EC3                     PIE6            equ	3779	;# 
  9145   000EC4                     PIE7            equ	3780	;# 
  9146   000EC5                     PIR0            equ	3781	;# 
  9147   000EC6                     PIR1            equ	3782	;# 
  9148   000EC7                     PIR2            equ	3783	;# 
  9149   000EC8                     PIR3            equ	3784	;# 
  9150   000EC9                     PIR4            equ	3785	;# 
  9151   000ECA                     PIR5            equ	3786	;# 
  9152   000ECB                     PIR6            equ	3787	;# 
  9153   000ECC                     PIR7            equ	3788	;# 
  9154   000ECD                     WDTCON0         equ	3789	;# 
  9155   000ECE                     WDTCON1         equ	3790	;# 
  9156   000ECF                     WDTPSL          equ	3791	;# 
  9157   000ED0                     WDTPSH          equ	3792	;# 
  9158   000ED1                     WDTTMR          equ	3793	;# 
  9159   000ED2                     CPUDOZE         equ	3794	;# 
  9160   000ED3                     OSCCON1         equ	3795	;# 
  9161   000ED4                     OSCCON2         equ	3796	;# 
  9162   000ED5                     OSCCON3         equ	3797	;# 
  9163   000ED6                     OSCSTAT         equ	3798	;# 
  9164   000ED6                     OSCSTAT1        equ	3798	;# 
  9165   000ED7                     OSCEN           equ	3799	;# 
  9166   000ED8                     OSCTUNE         equ	3800	;# 
  9167   000ED9                     OSCFRQ          equ	3801	;# 
  9168   000ED9                     OSCFREQ         equ	3801	;# 
  9169   000EDA                     VREGCON         equ	3802	;# 
  9170   000EDB                     BORCON          equ	3803	;# 
  9171   000EDC                     PMD0            equ	3804	;# 
  9172   000EDD                     PMD1            equ	3805	;# 
  9173   000EDE                     PMD2            equ	3806	;# 
  9174   000EDF                     PMD3            equ	3807	;# 
  9175   000EE0                     PMD4            equ	3808	;# 
  9176   000EE1                     PMD5            equ	3809	;# 
  9177   000EE2                     RA0PPS          equ	3810	;# 
  9178   000EE3                     RA1PPS          equ	3811	;# 
  9179   000EE4                     RA2PPS          equ	3812	;# 
  9180   000EE5                     RA3PPS          equ	3813	;# 
  9181   000EE6                     RA4PPS          equ	3814	;# 
  9182   000EE7                     RA5PPS          equ	3815	;# 
  9183   000EE8                     RA6PPS          equ	3816	;# 
  9184   000EE9                     RA7PPS          equ	3817	;# 
  9185   000EEA                     RB0PPS          equ	3818	;# 
  9186   000EEB                     RB1PPS          equ	3819	;# 
  9187   000EEC                     RB2PPS          equ	3820	;# 
  9188   000EED                     RB3PPS          equ	3821	;# 
  9189   000EEE                     RB4PPS          equ	3822	;# 
  9190   000EEF                     RB5PPS          equ	3823	;# 
  9191   000EF0                     RB6PPS          equ	3824	;# 
  9192   000EF1                     RB7PPS          equ	3825	;# 
  9193   000EF2                     RC0PPS          equ	3826	;# 
  9194   000EF3                     RC1PPS          equ	3827	;# 
  9195   000EF4                     RC2PPS          equ	3828	;# 
  9196   000EF5                     RC3PPS          equ	3829	;# 
  9197   000EF6                     RC4PPS          equ	3830	;# 
  9198   000EF7                     RC5PPS          equ	3831	;# 
  9199   000EF8                     RC6PPS          equ	3832	;# 
  9200   000EF9                     RC7PPS          equ	3833	;# 
  9201   000F05                     IOCAF           equ	3845	;# 
  9202   000F06                     IOCAN           equ	3846	;# 
  9203   000F07                     IOCAP           equ	3847	;# 
  9204   000F08                     INLVLA          equ	3848	;# 
  9205   000F09                     SLRCONA         equ	3849	;# 
  9206   000F0A                     ODCONA          equ	3850	;# 
  9207   000F0B                     WPUA            equ	3851	;# 
  9208   000F0C                     ANSELA          equ	3852	;# 
  9209   000F0D                     IOCBF           equ	3853	;# 
  9210   000F0E                     IOCBN           equ	3854	;# 
  9211   000F0F                     IOCBP           equ	3855	;# 
  9212   000F10                     INLVLB          equ	3856	;# 
  9213   000F11                     SLRCONB         equ	3857	;# 
  9214   000F12                     ODCONB          equ	3858	;# 
  9215   000F13                     WPUB            equ	3859	;# 
  9216   000F14                     ANSELB          equ	3860	;# 
  9217   000F15                     IOCCF           equ	3861	;# 
  9218   000F16                     IOCCN           equ	3862	;# 
  9219   000F17                     IOCCP           equ	3863	;# 
  9220   000F18                     INLVLC          equ	3864	;# 
  9221   000F19                     SLRCONC         equ	3865	;# 
  9222   000F1A                     ODCONC          equ	3866	;# 
  9223   000F1B                     WPUC            equ	3867	;# 
  9224   000F1C                     ANSELC          equ	3868	;# 
  9225   000F22                     IOCEF           equ	3874	;# 
  9226   000F23                     IOCEN           equ	3875	;# 
  9227   000F24                     IOCEP           equ	3876	;# 
  9228   000F25                     INLVLE          equ	3877	;# 
  9229   000F28                     WPUE            equ	3880	;# 
  9230   000F2A                     HLVDCON0        equ	3882	;# 
  9231   000F2B                     HLVDCON1        equ	3883	;# 
  9232   000F2C                     FVRCON          equ	3884	;# 
  9233   000F2D                     ZCDCON          equ	3885	;# 
  9234   000F2E                     DAC1CON0        equ	3886	;# 
  9235   000F2F                     DAC1CON1        equ	3887	;# 
  9236   000F30                     CM2CON0         equ	3888	;# 
  9237   000F31                     CM2CON1         equ	3889	;# 
  9238   000F32                     CM2NCH          equ	3890	;# 
  9239   000F33                     CM2PCH          equ	3891	;# 
  9240   000F34                     CM1CON0         equ	3892	;# 
  9241   000F35                     CM1CON1         equ	3893	;# 
  9242   000F36                     CM1NCH          equ	3894	;# 
  9243   000F37                     CM1PCH          equ	3895	;# 
  9244   000F38                     CMOUT           equ	3896	;# 
  9245   000F39                     CLKRCON         equ	3897	;# 
  9246   000F3A                     CLKRCLK         equ	3898	;# 
  9247   000F3B                     CWG1CLK         equ	3899	;# 
  9248   000F3B                     CWG1CLKCON      equ	3899	;# 
  9249   000F3C                     CWG1ISM         equ	3900	;# 
  9250   000F3D                     CWG1DBR         equ	3901	;# 
  9251   000F3E                     CWG1DBF         equ	3902	;# 
  9252   000F3F                     CWG1CON0        equ	3903	;# 
  9253   000F40                     CWG1CON1        equ	3904	;# 
  9254   000F41                     CWG1AS0         equ	3905	;# 
  9255   000F42                     CWG1AS1         equ	3906	;# 
  9256   000F43                     CWG1STR         equ	3907	;# 
  9257   000F44                     SCANLADR        equ	3908	;# 
  9258   000F44                     SCANLADRL       equ	3908	;# 
  9259   000F45                     SCANLADRH       equ	3909	;# 
  9260   000F46                     SCANLADRU       equ	3910	;# 
  9261   000F47                     SCANHADR        equ	3911	;# 
  9262   000F47                     SCANHADRL       equ	3911	;# 
  9263   000F48                     SCANHADRH       equ	3912	;# 
  9264   000F49                     SCANHADRU       equ	3913	;# 
  9265   000F4A                     SCANCON0        equ	3914	;# 
  9266   000F4B                     SCANTRIG        equ	3915	;# 
  9267   000F4C                     MDCON0          equ	3916	;# 
  9268   000F4D                     MDCON1          equ	3917	;# 
  9269   000F4E                     MDSRC           equ	3918	;# 
  9270   000F4F                     MDCARL          equ	3919	;# 
  9271   000F50                     MDCARH          equ	3920	;# 
  9272   000F51                     ADACT           equ	3921	;# 
  9273   000F52                     ADCLK           equ	3922	;# 
  9274   000F53                     ADREF           equ	3923	;# 
  9275   000F54                     ADCON1          equ	3924	;# 
  9276   000F55                     ADCON2          equ	3925	;# 
  9277   000F56                     ADCON3          equ	3926	;# 
  9278   000F57                     ADACQ           equ	3927	;# 
  9279   000F58                     ADCAP           equ	3928	;# 
  9280   000F59                     ADPRE           equ	3929	;# 
  9281   000F5A                     ADPCH           equ	3930	;# 
  9282   000F5B                     ADCON0          equ	3931	;# 
  9283   000F5C                     ADPREV          equ	3932	;# 
  9284   000F5C                     ADPREVL         equ	3932	;# 
  9285   000F5D                     ADPREVH         equ	3933	;# 
  9286   000F5E                     ADRES           equ	3934	;# 
  9287   000F5E                     ADRESL          equ	3934	;# 
  9288   000F5F                     ADRESH          equ	3935	;# 
  9289   000F60                     ADSTAT          equ	3936	;# 
  9290   000F61                     ADRPT           equ	3937	;# 
  9291   000F62                     ADCNT           equ	3938	;# 
  9292   000F63                     ADSTPT          equ	3939	;# 
  9293   000F63                     ADSTPTL         equ	3939	;# 
  9294   000F64                     ADSTPTH         equ	3940	;# 
  9295   000F65                     ADLTH           equ	3941	;# 
  9296   000F65                     ADLTHL          equ	3941	;# 
  9297   000F66                     ADLTHH          equ	3942	;# 
  9298   000F67                     ADUTH           equ	3943	;# 
  9299   000F67                     ADUTHL          equ	3943	;# 
  9300   000F68                     ADUTHH          equ	3944	;# 
  9301   000F69                     ADERR           equ	3945	;# 
  9302   000F69                     ADERRL          equ	3945	;# 
  9303   000F6A                     ADERRH          equ	3946	;# 
  9304   000F6B                     ADACC           equ	3947	;# 
  9305   000F6B                     ADACCL          equ	3947	;# 
  9306   000F6C                     ADACCH          equ	3948	;# 
  9307   000F6D                     ADFLTR          equ	3949	;# 
  9308   000F6D                     ADFLTRL         equ	3949	;# 
  9309   000F6E                     ADFLTRH         equ	3950	;# 
  9310   000F6F                     CRCDATA         equ	3951	;# 
  9311   000F6F                     CRCDATL         equ	3951	;# 
  9312   000F70                     CRCDATH         equ	3952	;# 
  9313   000F71                     CRCACC          equ	3953	;# 
  9314   000F71                     CRCACCL         equ	3953	;# 
  9315   000F72                     CRCACCH         equ	3954	;# 
  9316   000F73                     CRCSHFT         equ	3955	;# 
  9317   000F73                     CRCSHIFTL       equ	3955	;# 
  9318   000F74                     CRCSHIFTH       equ	3956	;# 
  9319   000F75                     CRCXOR          equ	3957	;# 
  9320   000F75                     CRCXORL         equ	3957	;# 
  9321   000F76                     CRCXORH         equ	3958	;# 
  9322   000F77                     CRCCON0         equ	3959	;# 
  9323   000F78                     CRCCON1         equ	3960	;# 
  9324   000F79                     NVMADR          equ	3961	;# 
  9325   000F79                     NVMADRL         equ	3961	;# 
  9326   000F7A                     NVMADRH         equ	3962	;# 
  9327   000F7B                     NVMADRU         equ	3963	;# 
  9328   000F7C                     NVMDAT          equ	3964	;# 
  9329   000F7C                     NVMDATL         equ	3964	;# 
  9330   000F7D                     NVMDATH         equ	3965	;# 
  9331   000F7F                     NVMCON0         equ	3967	;# 
  9332   000F80                     NVMCON1         equ	3968	;# 
  9333   000F81                     NVMCON2         equ	3969	;# 
  9334   000F82                     LATA            equ	3970	;# 
  9335   000F83                     LATB            equ	3971	;# 
  9336   000F84                     LATC            equ	3972	;# 
  9337   000F87                     TRISA           equ	3975	;# 
  9338   000F87                     DDRA            equ	3975	;# 
  9339   000F88                     TRISB           equ	3976	;# 
  9340   000F88                     DDRB            equ	3976	;# 
  9341   000F89                     TRISC           equ	3977	;# 
  9342   000F89                     DDRC            equ	3977	;# 
  9343   000F8C                     PORTA           equ	3980	;# 
  9344   000F8D                     PORTB           equ	3981	;# 
  9345   000F8E                     PORTC           equ	3982	;# 
  9346   000F90                     PORTE           equ	3984	;# 
  9347   000F91                     SSP1BUF         equ	3985	;# 
  9348   000F92                     SSP1ADD         equ	3986	;# 
  9349   000F93                     SSP1MSK         equ	3987	;# 
  9350   000F94                     SSP1STAT        equ	3988	;# 
  9351   000F95                     SSP1CON1        equ	3989	;# 
  9352   000F96                     SSP1CON2        equ	3990	;# 
  9353   000F97                     SSP1CON3        equ	3991	;# 
  9354   000F98                     RC1REG          equ	3992	;# 
  9355   000F98                     RCREG           equ	3992	;# 
  9356   000F98                     RCREG1          equ	3992	;# 
  9357   000F99                     TX1REG          equ	3993	;# 
  9358   000F99                     TXREG1          equ	3993	;# 
  9359   000F99                     TXREG           equ	3993	;# 
  9360   000F9A                     SP1BRG          equ	3994	;# 
  9361   000F9A                     SPBRG           equ	3994	;# 
  9362   000F9A                     SP1BRGL         equ	3994	;# 
  9363   000F9A                     SPBRG1          equ	3994	;# 
  9364   000F9A                     SPBRGL          equ	3994	;# 
  9365   000F9B                     SP1BRGH         equ	3995	;# 
  9366   000F9B                     SPBRGH          equ	3995	;# 
  9367   000F9B                     SPBRGH1         equ	3995	;# 
  9368   000F9C                     RC1STA          equ	3996	;# 
  9369   000F9C                     RCSTA1          equ	3996	;# 
  9370   000F9C                     RCSTA           equ	3996	;# 
  9371   000F9D                     TX1STA          equ	3997	;# 
  9372   000F9D                     TXSTA1          equ	3997	;# 
  9373   000F9D                     TXSTA           equ	3997	;# 
  9374   000F9E                     BAUD1CON        equ	3998	;# 
  9375   000F9E                     BAUDCON1        equ	3998	;# 
  9376   000F9E                     BAUDCTL1        equ	3998	;# 
  9377   000F9E                     BAUDCON         equ	3998	;# 
  9378   000F9E                     BAUDCTL         equ	3998	;# 
  9379   000F9F                     PWM4DC          equ	3999	;# 
  9380   000F9F                     PWM4DCL         equ	3999	;# 
  9381   000FA0                     PWM4DCH         equ	4000	;# 
  9382   000FA1                     PWM4CON         equ	4001	;# 
  9383   000FA2                     PWM3DC          equ	4002	;# 
  9384   000FA2                     PWM3DCL         equ	4002	;# 
  9385   000FA3                     PWM3DCH         equ	4003	;# 
  9386   000FA4                     PWM3CON         equ	4004	;# 
  9387   000FA5                     CCPR2           equ	4005	;# 
  9388   000FA5                     CCPR2L          equ	4005	;# 
  9389   000FA6                     CCPR2H          equ	4006	;# 
  9390   000FA7                     CCP2CON         equ	4007	;# 
  9391   000FA8                     CCP2CAP         equ	4008	;# 
  9392   000FA9                     CCPR1           equ	4009	;# 
  9393   000FA9                     CCPR1L          equ	4009	;# 
  9394   000FAA                     CCPR1H          equ	4010	;# 
  9395   000FAB                     CCP1CON         equ	4011	;# 
  9396   000FAC                     CCP1CAP         equ	4012	;# 
  9397   000FAD                     CCPTMRS         equ	4013	;# 
  9398   000FAE                     T6TMR           equ	4014	;# 
  9399   000FAE                     TMR6            equ	4014	;# 
  9400   000FAF                     T6PR            equ	4015	;# 
  9401   000FAF                     PR6             equ	4015	;# 
  9402   000FB0                     T6CON           equ	4016	;# 
  9403   000FB1                     T6HLT           equ	4017	;# 
  9404   000FB2                     T6CLKCON        equ	4018	;# 
  9405   000FB2                     T6CLK           equ	4018	;# 
  9406   000FB3                     T6RST           equ	4019	;# 
  9407   000FB4                     T4TMR           equ	4020	;# 
  9408   000FB4                     TMR4            equ	4020	;# 
  9409   000FB5                     T4PR            equ	4021	;# 
  9410   000FB5                     PR4             equ	4021	;# 
  9411   000FB6                     T4CON           equ	4022	;# 
  9412   000FB7                     T4HLT           equ	4023	;# 
  9413   000FB8                     T4CLKCON        equ	4024	;# 
  9414   000FB8                     T4CLK           equ	4024	;# 
  9415   000FB9                     T4RST           equ	4025	;# 
  9416   000FBA                     T2TMR           equ	4026	;# 
  9417   000FBA                     TMR2            equ	4026	;# 
  9418   000FBB                     T2PR            equ	4027	;# 
  9419   000FBB                     PR2             equ	4027	;# 
  9420   000FBC                     T2CON           equ	4028	;# 
  9421   000FBD                     T2HLT           equ	4029	;# 
  9422   000FBE                     T2CLKCON        equ	4030	;# 
  9423   000FBE                     T2CLK           equ	4030	;# 
  9424   000FBF                     T2RST           equ	4031	;# 
  9425   000FC0                     TMR5            equ	4032	;# 
  9426   000FC0                     TMR5L           equ	4032	;# 
  9427   000FC1                     TMR5H           equ	4033	;# 
  9428   000FC2                     T5CON           equ	4034	;# 
  9429   000FC2                     TMR5CON         equ	4034	;# 
  9430   000FC3                     T5GCON          equ	4035	;# 
  9431   000FC3                     TMR5GCON        equ	4035	;# 
  9432   000FC4                     T5GATE          equ	4036	;# 
  9433   000FC4                     TMR5GATE        equ	4036	;# 
  9434   000FC5                     T5CLK           equ	4037	;# 
  9435   000FC5                     TMR5CLK         equ	4037	;# 
  9436   000FC5                     PR5             equ	4037	;# 
  9437   000FC6                     TMR3            equ	4038	;# 
  9438   000FC6                     TMR3L           equ	4038	;# 
  9439   000FC7                     TMR3H           equ	4039	;# 
  9440   000FC8                     T3CON           equ	4040	;# 
  9441   000FC8                     TMR3CON         equ	4040	;# 
  9442   000FC9                     T3GCON          equ	4041	;# 
  9443   000FC9                     TMR3GCON        equ	4041	;# 
  9444   000FCA                     T3GATE          equ	4042	;# 
  9445   000FCA                     TMR3GATE        equ	4042	;# 
  9446   000FCB                     T3CLK           equ	4043	;# 
  9447   000FCB                     TMR3CLK         equ	4043	;# 
  9448   000FCB                     PR3             equ	4043	;# 
  9449   000FCC                     TMR1            equ	4044	;# 
  9450   000FCC                     TMR1L           equ	4044	;# 
  9451   000FCD                     TMR1H           equ	4045	;# 
  9452   000FCE                     T1CON           equ	4046	;# 
  9453   000FCE                     TMR1CON         equ	4046	;# 
  9454   000FCF                     T1GCON          equ	4047	;# 
  9455   000FCF                     TMR1GCON        equ	4047	;# 
  9456   000FD0                     T1GATE          equ	4048	;# 
  9457   000FD0                     TMR1GATE        equ	4048	;# 
  9458   000FD1                     T1CLK           equ	4049	;# 
  9459   000FD1                     TMR1CLK         equ	4049	;# 
  9460   000FD1                     PR1             equ	4049	;# 
  9461   000FD2                     TMR0L           equ	4050	;# 
  9462   000FD2                     TMR0            equ	4050	;# 
  9463   000FD3                     TMR0H           equ	4051	;# 
  9464   000FD3                     PR0             equ	4051	;# 
  9465   000FD4                     T0CON0          equ	4052	;# 
  9466   000FD5                     T0CON1          equ	4053	;# 
  9467   000FD6                     PCON1           equ	4054	;# 
  9468   000FD7                     PCON0           equ	4055	;# 
  9469   000FD8                     STATUS          equ	4056	;# 
  9470   000FD9                     FSR2            equ	4057	;# 
  9471   000FD9                     FSR2L           equ	4057	;# 
  9472   000FDA                     FSR2H           equ	4058	;# 
  9473   000FDB                     PLUSW2          equ	4059	;# 
  9474   000FDC                     PREINC2         equ	4060	;# 
  9475   000FDD                     POSTDEC2        equ	4061	;# 
  9476   000FDE                     POSTINC2        equ	4062	;# 
  9477   000FDF                     INDF2           equ	4063	;# 
  9478   000FE0                     BSR             equ	4064	;# 
  9479   000FE1                     FSR1            equ	4065	;# 
  9480   000FE1                     FSR1L           equ	4065	;# 
  9481   000FE2                     FSR1H           equ	4066	;# 
  9482   000FE3                     PLUSW1          equ	4067	;# 
  9483   000FE4                     PREINC1         equ	4068	;# 
  9484   000FE5                     POSTDEC1        equ	4069	;# 
  9485   000FE6                     POSTINC1        equ	4070	;# 
  9486   000FE7                     INDF1           equ	4071	;# 
  9487   000FE8                     WREG            equ	4072	;# 
  9488   000FE9                     FSR0            equ	4073	;# 
  9489   000FE9                     FSR0L           equ	4073	;# 
  9490   000FEA                     FSR0H           equ	4074	;# 
  9491   000FEB                     PLUSW0          equ	4075	;# 
  9492   000FEC                     PREINC0         equ	4076	;# 
  9493   000FED                     POSTDEC0        equ	4077	;# 
  9494   000FEE                     POSTINC0        equ	4078	;# 
  9495   000FEF                     INDF0           equ	4079	;# 
  9496   000FF2                     INTCON          equ	4082	;# 
  9497   000FF3                     PROD            equ	4083	;# 
  9498   000FF3                     PRODL           equ	4083	;# 
  9499   000FF4                     PRODH           equ	4084	;# 
  9500   000FF5                     TABLAT          equ	4085	;# 
  9501   000FF6                     TBLPTR          equ	4086	;# 
  9502   000FF6                     TBLPTRL         equ	4086	;# 
  9503   000FF7                     TBLPTRH         equ	4087	;# 
  9504   000FF8                     TBLPTRU         equ	4088	;# 
  9505   000FF9                     PCLAT           equ	4089	;# 
  9506   000FF9                     PC              equ	4089	;# 
  9507   000FF9                     PCL             equ	4089	;# 
  9508   000FFA                     PCLATH          equ	4090	;# 
  9509   000FFB                     PCLATU          equ	4091	;# 
  9510   000FFC                     STKPTR          equ	4092	;# 
  9511   000FFD                     TOS             equ	4093	;# 
  9512   000FFD                     TOSL            equ	4093	;# 
  9513   000FFE                     TOSH            equ	4094	;# 
  9514   000FFF                     TOSU            equ	4095	;# 
  9515                           
  9516 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  9517   000000                     _I2C1_SlaveDefWrColInterruptHandler equ	0
  9518                           
  9519 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  9520   000000                     _I2C1_SlaveDefBusColInterruptHandler equ	0
  9521                           
  9522 ;;___assert_fail@expr	offset=-2 (param)
  9523 ;;___assert_fail@file	offset=-4 (param)
  9524 ;;___assert_fail@line	offset=-6 (param)
  9525 ;;___assert_fail@func	offset=-8 (param)
  9526 ;;printf@ap	offset	0
  9527 ;;printf@fmt	offset=-3 (param)
  9528 ;;vfprintf@cfmt	offset	0
  9529 ;;vfprintf@fp	offset=-2 (param)
  9530 ;;vfprintf@fmt	offset=-4 (param)
  9531 ;;vfprintf@ap	offset=-6 (param)
  9532 ;;vfpfcnvrt@cp_4205	offset	0
  9533 ;;vfpfcnvrt@convarg	offset	2
  9534 ;;vfpfcnvrt@cp	offset	6
  9535 ;;vfpfcnvrt@c	offset	8
  9536 ;;vfpfcnvrt@done	offset	9
  9537 ;;vfpfcnvrt@fp	offset=-2 (param)
  9538 ;;vfpfcnvrt@fmt	offset=-4 (param)
  9539 ;;vfpfcnvrt@ap	offset=-6 (param)
  9540 ;;fputc@c	offset=-2 (param)
  9541 ;;fputc@fp	offset=-4 (param)
  9542 ;;putch@txData	offset=-1 (param)
  9543 ;;EUSART1_Write@txData	offset=-1 (param)
  9544 ;;abs@a	offset=-2 (param)
  9545 ;;___awmod@sign	offset	0
  9546 ;;___awmod@counter	offset	1
  9547 ;;___awmod@dividend	offset=-2 (param)
  9548 ;;___awmod@divisor	offset=-4 (param)
  9549 ;;exit@code	offset=-2 (param)
  9550 ;;__Exit@ec	offset=-2 (param)
  9551 ;;___awdiv@quotient	offset	0
  9552 ;;___awdiv@sign	offset	2
  9553 ;;___awdiv@counter	offset	3
  9554 ;;___awdiv@dividend	offset=-2 (param)
  9555 ;;___awdiv@divisor	offset=-4 (param)
  9556 ;;___assert_fail@expr	offset=-2 (param)
  9557 ;;___assert_fail@file	offset=-4 (param)
  9558 ;;___assert_fail@line	offset=-6 (param)
  9559 ;;___assert_fail@func	offset=-8 (param)
  9560 ;;printf@ap	offset	0
  9561 ;;printf@fmt	offset=-3 (param)
  9562 ;;vfprintf@cfmt	offset	0
  9563 ;;vfprintf@fp	offset=-2 (param)
  9564 ;;vfprintf@fmt	offset=-4 (param)
  9565 ;;vfprintf@ap	offset=-6 (param)
  9566 ;;vfpfcnvrt@cp_4205	offset	0
  9567 ;;vfpfcnvrt@convarg	offset	2
  9568 ;;vfpfcnvrt@cp	offset	6
  9569 ;;vfpfcnvrt@c	offset	8
  9570 ;;vfpfcnvrt@done	offset	9
  9571 ;;vfpfcnvrt@fp	offset=-2 (param)
  9572 ;;vfpfcnvrt@fmt	offset=-4 (param)
  9573 ;;vfpfcnvrt@ap	offset=-6 (param)
  9574 ;;fputc@c	offset=-2 (param)
  9575 ;;fputc@fp	offset=-4 (param)
  9576 ;;putch@txData	offset=-1 (param)
  9577 ;;EUSART1_Write@txData	offset=-1 (param)
  9578 ;;abs@a	offset=-2 (param)
  9579 ;;___awmod@sign	offset	0
  9580 ;;___awmod@counter	offset	1
  9581 ;;___awmod@dividend	offset=-2 (param)
  9582 ;;___awmod@divisor	offset=-4 (param)
  9583 ;;___awdiv@quotient	offset	0
  9584 ;;___awdiv@sign	offset	2
  9585 ;;___awdiv@counter	offset	3
  9586 ;;___awdiv@dividend	offset=-2 (param)
  9587 ;;___awdiv@divisor	offset=-4 (param)
  9588 ;;exit@code	offset=-2 (param)
  9589 ;;__Exit@ec	offset=-2 (param)
  9590                           
  9591                           	psect	mediumconst
  9592   003EAE                     __pmediumconst:
  9593                           	callstack 0
  9594   003EAE  00                 	db	0
  9595   003EAF                     _Registers:
  9596                           	callstack 0
  9597   003EAF  82                 	db	130
  9598   003EB0  0F                 	db	15
  9599   003EB1  61                 	db	97
  9600   003EB2  8C                 	db	140
  9601   003EB3  0F                 	db	15
  9602   003EB4  61                 	db	97
  9603   003EB5  87                 	db	135
  9604   003EB6  0F                 	db	15
  9605   003EB7  61                 	db	97
  9606   003EB8  08                 	db	8
  9607   003EB9  0F                 	db	15
  9608   003EBA  68                 	db	104
  9609   003EBB  09                 	db	9
  9610   003EBC  0F                 	db	15
  9611   003EBD  68                 	db	104
  9612   003EBE  0A                 	db	10
  9613   003EBF  0F                 	db	15
  9614   003EC0  68                 	db	104
  9615   003EC1  0B                 	db	11
  9616   003EC2  0F                 	db	15
  9617   003EC3  68                 	db	104
  9618   003EC4  0C                 	db	12
  9619   003EC5  0F                 	db	15
  9620   003EC6  68                 	db	104
  9621   003EC7  05                 	db	5
  9622   003EC8  0F                 	db	15
  9623   003EC9  68                 	db	104
  9624   003ECA  06                 	db	6
  9625   003ECB  0F                 	db	15
  9626   003ECC  68                 	db	104
  9627   003ECD  07                 	db	7
  9628   003ECE  0F                 	db	15
  9629   003ECF  68                 	db	104
  9630   003ED0                     __end_of_Registers:
  9631                           	callstack 0
  9632   003ED0                     _PINS:
  9633                           	callstack 0
  9634   003ED0  30                 	db	48
  9635   003ED1  18                 	db	24
  9636   003ED2  40                 	db	64
  9637   003ED3  20                 	db	32
  9638   003ED4  50                 	db	80
  9639   003ED5  28                 	db	40
  9640   003ED6  70                 	db	112
  9641   003ED7  38                 	db	56
  9642   003ED8  60                 	db	96
  9643   003ED9  30                 	db	48
  9644   003EDA  02                 	db	2
  9645   003EDB  80                 	db	128
  9646   003EDC  12                 	db	18
  9647   003EDD  88                 	db	136
  9648   003EDE  22                 	db	34
  9649   003EDF  90                 	db	144
  9650   003EE0  41                 	db	65
  9651   003EE1  60                 	db	96
  9652   003EE2  31                 	db	49
  9653   003EE3  58                 	db	88
  9654   003EE4  21                 	db	33
  9655   003EE5  50                 	db	80
  9656   003EE6  11                 	db	17
  9657   003EE7  48                 	db	72
  9658   003EE8  01                 	db	1
  9659   003EE9  40                 	db	64
  9660   003EEA  72                 	db	114
  9661   003EEB  B8                 	db	184
  9662   003EEC  62                 	db	98
  9663   003EED  B0                 	db	176
  9664   003EEE  52                 	db	82
  9665   003EEF  A8                 	db	168
  9666   003EF0                     __end_of_PINS:
  9667                           	callstack 0
  9668   003EF0                     STR_74:
  9669   003EF0  41                 	db	65	;'A'
  9670   003EF1  73                 	db	115	;'s'
  9671   003EF2  73                 	db	115	;'s'
  9672   003EF3  65                 	db	101	;'e'
  9673   003EF4  72                 	db	114	;'r'
  9674   003EF5  74                 	db	116	;'t'
  9675   003EF6  69                 	db	105	;'i'
  9676   003EF7  6F                 	db	111	;'o'
  9677   003EF8  6E                 	db	110	;'n'
  9678   003EF9  20                 	db	32
  9679   003EFA  66                 	db	102	;'f'
  9680   003EFB  61                 	db	97	;'a'
  9681   003EFC  69                 	db	105	;'i'
  9682   003EFD  6C                 	db	108	;'l'
  9683   003EFE  65                 	db	101	;'e'
  9684   003EFF  64                 	db	100	;'d'
  9685   003F00  3A                 	db	58	;':'
  9686   003F01  20                 	db	32
  9687   003F02  25                 	db	37
  9688   003F03  73                 	db	115	;'s'
  9689   003F04  20                 	db	32
  9690   003F05  28                 	db	40
  9691   003F06  25                 	db	37
  9692   003F07  73                 	db	115	;'s'
  9693   003F08  3A                 	db	58	;':'
  9694   003F09  20                 	db	32
  9695   003F0A  25                 	db	37
  9696   003F0B  73                 	db	115	;'s'
  9697   003F0C  3A                 	db	58	;':'
  9698   003F0D  20                 	db	32
  9699   003F0E  25                 	db	37
  9700   003F0F  64                 	db	100	;'d'
  9701   003F10  29                 	db	41
  9702   003F11  0A                 	db	10
  9703   003F12  00                 	db	0
  9704   003F13                     STR_64:
  9705   003F13  61                 	db	97	;'a'
  9706   003F14  6E                 	db	110	;'n'
  9707   003F15  61                 	db	97	;'a'
  9708   003F16  6C                 	db	108	;'l'
  9709   003F17  6F                 	db	111	;'o'
  9710   003F18  67                 	db	103	;'g'
  9711   003F19  5F                 	db	95	;'_'
  9712   003F1A  73                 	db	115	;'s'
  9713   003F1B  65                 	db	101	;'e'
  9714   003F1C  6C                 	db	108	;'l'
  9715   003F1D  65                 	db	101	;'e'
  9716   003F1E  63                 	db	99	;'c'
  9717   003F1F  74                 	db	116	;'t'
  9718   003F20  5F                 	db	95	;'_'
  9719   003F21  70                 	db	112	;'p'
  9720   003F22  6F                 	db	111	;'o'
  9721   003F23  73                 	db	115	;'s'
  9722   003F24  5F                 	db	95	;'_'
  9723   003F25  72                 	db	114	;'r'
  9724   003F26  65                 	db	101	;'e'
  9725   003F27  66                 	db	102	;'f'
  9726   003F28  5F                 	db	95	;'_'
  9727   003F29  69                 	db	105	;'i'
  9728   003F2A  64                 	db	100	;'d'
  9729   003F2B  78                 	db	120	;'x'
  9730   003F2C  00                 	db	0
  9731   003F2D                     STR_70:
  9732   003F2D  61                 	db	97	;'a'
  9733   003F2E  6E                 	db	110	;'n'
  9734   003F2F  61                 	db	97	;'a'
  9735   003F30  6C                 	db	108	;'l'
  9736   003F31  6F                 	db	111	;'o'
  9737   003F32  67                 	db	103	;'g'
  9738   003F33  5F                 	db	95	;'_'
  9739   003F34  67                 	db	103	;'g'
  9740   003F35  65                 	db	101	;'e'
  9741   003F36  74                 	db	116	;'t'
  9742   003F37  5F                 	db	95	;'_'
  9743   003F38  61                 	db	97	;'a'
  9744   003F39  64                 	db	100	;'d'
  9745   003F3A  63                 	db	99	;'c'
  9746   003F3B  5F                 	db	95	;'_'
  9747   003F3C  76                 	db	118	;'v'
  9748   003F3D  61                 	db	97	;'a'
  9749   003F3E  6C                 	db	108	;'l'
  9750   003F3F  5F                 	db	95	;'_'
  9751   003F40  69                 	db	105	;'i'
  9752   003F41  64                 	db	100	;'d'
  9753   003F42  78                 	db	120	;'x'
  9754   003F43  00                 	db	0
  9755   003F44                     STR_26:
  9756   003F44  70                 	db	112	;'p'
  9757   003F45  6F                 	db	111	;'o'
  9758   003F46  72                 	db	114	;'r'
  9759   003F47  74                 	db	116	;'t'
  9760   003F48  4E                 	db	78	;'N'
  9761   003F49  6F                 	db	111	;'o'
  9762   003F4A  20                 	db	32
  9763   003F4B  3C                 	db	60	;'<'
  9764   003F4C  20                 	db	32
  9765   003F4D  45                 	db	69	;'E'
  9766   003F4E  58                 	db	88	;'X'
  9767   003F4F  50                 	db	80	;'P'
  9768   003F50  5F                 	db	95	;'_'
  9769   003F51  50                 	db	80	;'P'
  9770   003F52  4F                 	db	79	;'O'
  9771   003F53  52                 	db	82	;'R'
  9772   003F54  54                 	db	84	;'T'
  9773   003F55  53                 	db	83	;'S'
  9774   003F56  5F                 	db	95	;'_'
  9775   003F57  43                 	db	67	;'C'
  9776   003F58  4E                 	db	78	;'N'
  9777   003F59  54                 	db	84	;'T'
  9778   003F5A  00                 	db	0
  9779   003F5B                     STR_8:
  9780   003F5B  70                 	db	112	;'p'
  9781   003F5C  6F                 	db	111	;'o'
  9782   003F5D  72                 	db	114	;'r'
  9783   003F5E  74                 	db	116	;'t'
  9784   003F5F  4E                 	db	78	;'N'
  9785   003F60  6F                 	db	111	;'o'
  9786   003F61  20                 	db	32
  9787   003F62  3C                 	db	60	;'<'
  9788   003F63  20                 	db	32
  9789   003F64  65                 	db	101	;'e'
  9790   003F65  45                 	db	69	;'E'
  9791   003F66  58                 	db	88	;'X'
  9792   003F67  50                 	db	80	;'P'
  9793   003F68  5F                 	db	95	;'_'
  9794   003F69  50                 	db	80	;'P'
  9795   003F6A  4F                 	db	79	;'O'
  9796   003F6B  52                 	db	82	;'R'
  9797   003F6C  54                 	db	84	;'T'
  9798   003F6D  5F                 	db	95	;'_'
  9799   003F6E  43                 	db	67	;'C'
  9800   003F6F  4E                 	db	78	;'N'
  9801   003F70  54                 	db	84	;'T'
  9802   003F71  00                 	db	0
  9803   003F72                     STR_2:
  9804   003F72  72                 	db	114	;'r'
  9805   003F73  65                 	db	101	;'e'
  9806   003F74  67                 	db	103	;'g'
  9807   003F75  4E                 	db	78	;'N'
  9808   003F76  6F                 	db	111	;'o'
  9809   003F77  20                 	db	32
  9810   003F78  3C                 	db	60	;'<'
  9811   003F79  20                 	db	32
  9812   003F7A  65                 	db	101	;'e'
  9813   003F7B  52                 	db	82	;'R'
  9814   003F7C  65                 	db	101	;'e'
  9815   003F7D  67                 	db	103	;'g'
  9816   003F7E  69                 	db	105	;'i'
  9817   003F7F  73                 	db	115	;'s'
  9818   003F80  74                 	db	116	;'t'
  9819   003F81  65                 	db	101	;'e'
  9820   003F82  72                 	db	114	;'r'
  9821   003F83  73                 	db	115	;'s'
  9822   003F84  43                 	db	67	;'C'
  9823   003F85  4E                 	db	78	;'N'
  9824   003F86  54                 	db	84	;'T'
  9825   003F87  00                 	db	0
  9826   003F88                     STR_62:
  9827   003F88  69                 	db	105	;'i'
  9828   003F89  64                 	db	100	;'d'
  9829   003F8A  78                 	db	120	;'x'
  9830   003F8B  20                 	db	32
  9831   003F8C  3C                 	db	60	;'<'
  9832   003F8D  20                 	db	32
  9833   003F8E  45                 	db	69	;'E'
  9834   003F8F  58                 	db	88	;'X'
  9835   003F90  50                 	db	80	;'P'
  9836   003F91  5F                 	db	95	;'_'
  9837   003F92  50                 	db	80	;'P'
  9838   003F93  49                 	db	73	;'I'
  9839   003F94  4E                 	db	78	;'N'
  9840   003F95  53                 	db	83	;'S'
  9841   003F96  5F                 	db	95	;'_'
  9842   003F97  43                 	db	67	;'C'
  9843   003F98  4F                 	db	79	;'O'
  9844   003F99  55                 	db	85	;'U'
  9845   003F9A  4E                 	db	78	;'N'
  9846   003F9B  54                 	db	84	;'T'
  9847   003F9C  00                 	db	0
  9848   003F9D                     STR_14:
  9849   003F9D  70                 	db	112	;'p'
  9850   003F9E  69                 	db	105	;'i'
  9851   003F9F  6E                 	db	110	;'n'
  9852   003FA0  4E                 	db	78	;'N'
  9853   003FA1  6F                 	db	111	;'o'
  9854   003FA2  20                 	db	32
  9855   003FA3  3C                 	db	60	;'<'
  9856   003FA4  20                 	db	32
  9857   003FA5  65                 	db	101	;'e'
  9858   003FA6  45                 	db	69	;'E'
  9859   003FA7  58                 	db	88	;'X'
  9860   003FA8  50                 	db	80	;'P'
  9861   003FA9  5F                 	db	95	;'_'
  9862   003FAA  50                 	db	80	;'P'
  9863   003FAB  49                 	db	73	;'I'
  9864   003FAC  4E                 	db	78	;'N'
  9865   003FAD  5F                 	db	95	;'_'
  9866   003FAE  43                 	db	67	;'C'
  9867   003FAF  4E                 	db	78	;'N'
  9868   003FB0  54                 	db	84	;'T'
  9869   003FB1  00                 	db	0
  9870   003FB2                     STR_1:
  9871   003FB2  46                 	db	70	;'F'
  9872   003FB3  61                 	db	97	;'a'
  9873   003FB4  6E                 	db	110	;'n'
  9874   003FB5  63                 	db	99	;'c'
  9875   003FB6  79                 	db	121	;'y'
  9876   003FB7  20                 	db	32
  9877   003FB8  49                 	db	73	;'I'
  9878   003FB9  32                 	db	50	;'2'
  9879   003FBA  43                 	db	67	;'C'
  9880   003FBB  20                 	db	32
  9881   003FBC  45                 	db	69	;'E'
  9882   003FBD  78                 	db	120	;'x'
  9883   003FBE  74                 	db	116	;'t'
  9884   003FBF  65                 	db	101	;'e'
  9885   003FC0  6E                 	db	110	;'n'
  9886   003FC1  64                 	db	100	;'d'
  9887   003FC2  65                 	db	101	;'e'
  9888   003FC3  72                 	db	114	;'r'
  9889   003FC4  0D                 	db	13
  9890   003FC5  0A                 	db	10
  9891   003FC6  00                 	db	0
  9892   003FC7                     STR_3:
  9893   003FC7  72                 	db	114	;'r'
  9894   003FC8  65                 	db	101	;'e'
  9895   003FC9  67                 	db	103	;'g'
  9896   003FCA  69                 	db	105	;'i'
  9897   003FCB  73                 	db	115	;'s'
  9898   003FCC  74                 	db	116	;'t'
  9899   003FCD  65                 	db	101	;'e'
  9900   003FCE  72                 	db	114	;'r'
  9901   003FCF  73                 	db	115	;'s'
  9902   003FD0  2E                 	db	46
  9903   003FD1  63                 	db	99	;'c'
  9904   003FD2  00                 	db	0
  9905   003FD3                     STR_63:
  9906   003FD3  61                 	db	97	;'a'
  9907   003FD4  6E                 	db	110	;'n'
  9908   003FD5  61                 	db	97	;'a'
  9909   003FD6  6C                 	db	108	;'l'
  9910   003FD7  6F                 	db	111	;'o'
  9911   003FD8  67                 	db	103	;'g'
  9912   003FD9  2E                 	db	46
  9913   003FDA  63                 	db	99	;'c'
  9914   003FDB  00                 	db	0
  9915   003FDC                     STR_52:
  9916   003FDC  57                 	db	87	;'W'
  9917   003FDD  72                 	db	114	;'r'
  9918   003FDE  69                 	db	105	;'i'
  9919   003FDF  74                 	db	116	;'t'
  9920   003FE0  65                 	db	101	;'e'
  9921   003FE1  52                 	db	82	;'R'
  9922   003FE2  65                 	db	101	;'e'
  9923   003FE3  67                 	db	103	;'g'
  9924   003FE4  00                 	db	0
  9925   003FE5                     STR_34:
  9926   003FE5  57                 	db	87	;'W'
  9927   003FE6  72                 	db	114	;'r'
  9928   003FE7  69                 	db	105	;'i'
  9929   003FE8  74                 	db	116	;'t'
  9930   003FE9  65                 	db	101	;'e'
  9931   003FEA  42                 	db	66	;'B'
  9932   003FEB  69                 	db	105	;'i'
  9933   003FEC  74                 	db	116	;'t'
  9934   003FED  00                 	db	0
  9935   003FEE                     STR_22:
  9936   003FEE  52                 	db	82	;'R'
  9937   003FEF  65                 	db	101	;'e'
  9938   003FF0  61                 	db	97	;'a'
  9939   003FF1  64                 	db	100	;'d'
  9940   003FF2  52                 	db	82	;'R'
  9941   003FF3  65                 	db	101	;'e'
  9942   003FF4  67                 	db	103	;'g'
  9943   003FF5  00                 	db	0
  9944   003FF6                     STR_4:
  9945   003FF6  52                 	db	82	;'R'
  9946   003FF7  65                 	db	101	;'e'
  9947   003FF8  61                 	db	97	;'a'
  9948   003FF9  64                 	db	100	;'d'
  9949   003FFA  42                 	db	66	;'B'
  9950   003FFB  69                 	db	105	;'i'
  9951   003FFC  74                 	db	116	;'t'
  9952   003FFD  00                 	db	0
  9953   003F2D                     STR_73          equ	STR_70
  9954   003F13                     STR_67          equ	STR_64
  9955   003FE5                     STR_37          equ	STR_34
  9956   003FE5                     STR_40          equ	STR_34
  9957   003FE5                     STR_43          equ	STR_34
  9958   003FE5                     STR_46          equ	STR_34
  9959   003FE5                     STR_49          equ	STR_34
  9960   003FF6                     STR_7           equ	STR_4
  9961   003FF6                     STR_10          equ	STR_4
  9962   003FF6                     STR_13          equ	STR_4
  9963   003FF6                     STR_16          equ	STR_4
  9964   003FF6                     STR_19          equ	STR_4
  9965   003FDC                     STR_55          equ	STR_52
  9966   003FDC                     STR_58          equ	STR_52
  9967   003FDC                     STR_61          equ	STR_52
  9968   003FEE                     STR_25          equ	STR_22
  9969   003FEE                     STR_28          equ	STR_22
  9970   003FEE                     STR_31          equ	STR_22
  9971   003FC7                     STR_6           equ	STR_3
  9972   003FC7                     STR_9           equ	STR_3
  9973   003FC7                     STR_12          equ	STR_3
  9974   003FC7                     STR_15          equ	STR_3
  9975   003FC7                     STR_18          equ	STR_3
  9976   003FC7                     STR_21          equ	STR_3
  9977   003FC7                     STR_24          equ	STR_3
  9978   003FC7                     STR_27          equ	STR_3
  9979   003FC7                     STR_30          equ	STR_3
  9980   003FC7                     STR_33          equ	STR_3
  9981   003FC7                     STR_36          equ	STR_3
  9982   003FC7                     STR_39          equ	STR_3
  9983   003FC7                     STR_42          equ	STR_3
  9984   003FC7                     STR_45          equ	STR_3
  9985   003FC7                     STR_48          equ	STR_3
  9986   003FC7                     STR_51          equ	STR_3
  9987   003FC7                     STR_54          equ	STR_3
  9988   003FC7                     STR_57          equ	STR_3
  9989   003FC7                     STR_60          equ	STR_3
  9990   003FD3                     STR_66          equ	STR_63
  9991   003FD3                     STR_69          equ	STR_63
  9992   003FD3                     STR_72          equ	STR_63
  9993   003F88                     STR_65          equ	STR_62
  9994   003F88                     STR_68          equ	STR_62
  9995   003F88                     STR_71          equ	STR_62
  9996   003F72                     STR_5           equ	STR_2
  9997   003F72                     STR_20          equ	STR_2
  9998   003F72                     STR_23          equ	STR_2
  9999   003F72                     STR_32          equ	STR_2
 10000   003F72                     STR_35          equ	STR_2
 10001   003F72                     STR_50          equ	STR_2
 10002   003F72                     STR_53          equ	STR_2
 10003   003F5B                     STR_11          equ	STR_8
 10004   003F5B                     STR_38          equ	STR_8
 10005   003F5B                     STR_41          equ	STR_8
 10006   003F44                     STR_29          equ	STR_26
 10007   003F44                     STR_56          equ	STR_26
 10008   003F44                     STR_59          equ	STR_26
 10009   003F9D                     STR_17          equ	STR_14
 10010   003F9D                     STR_44          equ	STR_14
 10011   003F9D                     STR_47          equ	STR_14
 10012   003FFE  00                 	db	0	; dummy byte at the end
 10013   000002                     __activetblptr  equ	2
 10014                           
 10015                           	psect	nvBANK0
 10016   0000E9                     __pnvBANK0:
 10017                           	callstack 0
 10018   0000E9                     _EUSART1_ErrorHandler:
 10019                           	callstack 0
 10020   0000E9                     	ds	2
 10021   0000EB                     _EUSART1_OverrunErrorHandler:
 10022                           	callstack 0
 10023   0000EB                     	ds	2
 10024   0000ED                     _EUSART1_FramingErrorHandler:
 10025                           	callstack 0
 10026   0000ED                     	ds	2
 10027   0000EF                     _EUSART1_RxDefaultInterruptHandler:
 10028                           	callstack 0
 10029   0000EF                     	ds	2
 10030   0000F1                     _EUSART1_TxDefaultInterruptHandler:
 10031                           	callstack 0
 10032   0000F1                     	ds	2
 10033   000ECC                     _PIR7bits       set	3788
 10034   000EC9                     _PIR4bits       set	3785
 10035   000EC8                     _PIR3bits       set	3784
 10036   000EB2                     _SSPCLKPPS      set	3762
 10037   000EF6                     _RC4PPS         set	3830
 10038   000EEF                     _RB5PPS         set	3823
 10039   000EAC                     _CWGINPPS       set	3756
 10040   000EF5                     _RC3PPS         set	3829
 10041   000EB3                     _SSPDATPPS      set	3763
 10042   000EB0                     _RX1PPS         set	3760
 10043   000EE1                     _PMD5           set	3809
 10044   000EE0                     _PMD4           set	3808
 10045   000EDF                     _PMD3           set	3807
 10046   000EDE                     _PMD2           set	3806
 10047   000EDD                     _PMD1           set	3805
 10048   000EDC                     _PMD0           set	3804
 10049   000ED8                     _OSCTUNE        set	3800
 10050   000ED9                     _OSCFRQ         set	3801
 10051   000ED7                     _OSCEN          set	3799
 10052   000ED5                     _OSCCON3        set	3797
 10053   000ED3                     _OSCCON1        set	3795
 10054   000EC0                     _PIE3bits       set	3776
 10055   000EE2                     _RA0PPS         set	3810
 10056   000F41                     _CWG1AS0bits    set	3905
 10057   000F3F                     _CWG1CON0       set	3903
 10058   000F3C                     _CWG1ISM        set	3900
 10059   000F3B                     _CWG1CLKCON     set	3899
 10060   000F43                     _CWG1STR        set	3907
 10061   000F42                     _CWG1AS1        set	3906
 10062   000F41                     _CWG1AS0        set	3905
 10063   000F3E                     _CWG1DBF        set	3902
 10064   000F3D                     _CWG1DBR        set	3901
 10065   000F40                     _CWG1CON1       set	3904
 10066   000F2C                     _FVRCONbits     set	3884
 10067   000F2C                     _FVRCON         set	3884
 10068   000F54                     _ADCON1bits     set	3924
 10069   000F5C                     _ADPREVL        set	3932
 10070   000F5D                     _ADPREVH        set	3933
 10071   000F55                     _ADCON2bits     set	3925
 10072   000F56                     _ADCON3bits     set	3926
 10073   000F5E                     _ADRESL         set	3934
 10074   000F5F                     _ADRESH         set	3935
 10075   000F5B                     _ADCON0bits     set	3931
 10076   000F57                     _ADACQ          set	3927
 10077   000F5B                     _ADCON0         set	3931
 10078   000F52                     _ADCLK          set	3922
 10079   000F51                     _ADACT          set	3921
 10080   000F53                     _ADREF          set	3923
 10081   000F56                     _ADCON3         set	3926
 10082   000F55                     _ADCON2         set	3925
 10083   000F54                     _ADCON1         set	3924
 10084   000F59                     _ADPRE          set	3929
 10085   000F58                     _ADCAP          set	3928
 10086   000F5A                     _ADPCH          set	3930
 10087   000F2F                     _DAC1CON1       set	3887
 10088   000F2E                     _DAC1CON0       set	3886
 10089   000F25                     _INLVLE         set	3877
 10090   000F18                     _INLVLC         set	3864
 10091   000F10                     _INLVLB         set	3856
 10092   000F19                     _SLRCONC        set	3865
 10093   000F11                     _SLRCONB        set	3857
 10094   000F1A                     _ODCONC         set	3866
 10095   000F12                     _ODCONB         set	3858
 10096   000F1B                     _WPUC           set	3867
 10097   000F13                     _WPUB           set	3859
 10098   000F28                     _WPUE           set	3880
 10099   000F14                     _ANSELB         set	3860
 10100   000F1C                     _ANSELC         set	3868
 10101   000F07                     _IOCAP          set	3847
 10102   000F06                     _IOCAN          set	3846
 10103   000F05                     _IOCAF          set	3845
 10104   000F08                     _INLVLA         set	3848
 10105   000F09                     _SLRCONA        set	3849
 10106   000F0A                     _ODCONA         set	3850
 10107   000F0B                     _WPUA           set	3851
 10108   000F0C                     _ANSELA         set	3852
 10109   000FB5                     _PR4            set	4021
 10110   000FB4                     _TMR4           set	4020
 10111   000FB6                     _T4CONbits      set	4022
 10112   000FB9                     _T4RSTbits      set	4025
 10113   000FB7                     _T4HLTbits      set	4023
 10114   000FB6                     _T4CON          set	4022
 10115   000FB4                     _T4TMR          set	4020
 10116   000FB5                     _T4PR           set	4021
 10117   000FB9                     _T4RST          set	4025
 10118   000FB7                     _T4HLT          set	4023
 10119   000FB8                     _T4CLKCON       set	4024
 10120   000FA7                     _CCP2CONbits    set	4007
 10121   000FA5                     _CCPR2L         set	4005
 10122   000FA6                     _CCPR2H         set	4006
 10123   000FA7                     _CCP2CON        set	4007
 10124   000FAB                     _CCP1CONbits    set	4011
 10125   000FA9                     _CCPR1L         set	4009
 10126   000FAA                     _CCPR1H         set	4010
 10127   000F97                     _SSP1CON3bits   set	3991
 10128   000F91                     _SSP1BUF        set	3985
 10129   000F96                     _SSP1CON2bits   set	3990
 10130   000F94                     _SSP1STATbits   set	3988
 10131   000F93                     _SSP1MSK        set	3987
 10132   000F92                     _SSP1ADD        set	3986
 10133   000F95                     _SSP1CON1bits   set	3989
 10134   000F96                     _SSP1CON2       set	3990
 10135   000F95                     _SSP1CON1       set	3989
 10136   000F94                     _SSP1STAT       set	3988
 10137   000F81                     _NVMCON2        set	3969
 10138   000F7F                     _NVMCON0bits    set	3967
 10139   000F7C                     _NVMDATL        set	3964
 10140   000F7D                     _NVMDATH        set	3965
 10141   000F80                     _NVMCON1bits    set	3968
 10142   000F79                     _NVMADRL        set	3961
 10143   000F7A                     _NVMADRH        set	3962
 10144   000F7B                     _NVMADRU        set	3963
 10145   000FF5                     _TABLAT         set	4085
 10146   000FF6                     _TBLPTRL        set	4086
 10147   000FF7                     _TBLPTRH        set	4087
 10148   000FF8                     _TBLPTRU        set	4088
 10149   000FA2                     _PWM3DCL        set	4002
 10150   000FA3                     _PWM3DCH        set	4003
 10151   000FAD                     _CCPTMRSbits    set	4013
 10152   000F9F                     _PWM4DCL        set	3999
 10153   000FA0                     _PWM4DCH        set	4000
 10154   000FA1                     _PWM4CON        set	4001
 10155   000F69                     _ADERRL         set	3945
 10156   000F6A                     _ADERRH         set	3946
 10157   000F6D                     _ADFLTRL        set	3949
 10158   000F6E                     _ADFLTRH        set	3950
 10159   000F60                     _ADSTATbits     set	3936
 10160   000F6B                     _ADACCL         set	3947
 10161   000F6C                     _ADACCH         set	3948
 10162   000F62                     _ADCNT          set	3938
 10163   000F60                     _ADSTAT         set	3936
 10164   000F61                     _ADRPT          set	3937
 10165   000F64                     _ADSTPTH        set	3940
 10166   000F63                     _ADSTPTL        set	3939
 10167   000F68                     _ADUTHH         set	3944
 10168   000F67                     _ADUTHL         set	3943
 10169   000F66                     _ADLTHH         set	3942
 10170   000F65                     _ADLTHL         set	3941
 10171   000FBB                     _PR2            set	4027
 10172   000FBA                     _TMR2           set	4026
 10173   000FBC                     _T2CONbits      set	4028
 10174   000FBF                     _T2RSTbits      set	4031
 10175   000FBD                     _T2HLTbits      set	4029
 10176   000FBC                     _T2CON          set	4028
 10177   000FBA                     _T2TMR          set	4026
 10178   000FBB                     _T2PR           set	4027
 10179   000FBF                     _T2RST          set	4031
 10180   000FBD                     _T2HLT          set	4029
 10181   000FBE                     _T2CLKCON       set	4030
 10182   000FF2                     _INTCONbits     set	4082
 10183   000F89                     _TRISC          set	3977
 10184   000F88                     _TRISB          set	3976
 10185   000F84                     _LATC           set	3972
 10186   000F83                     _LATB           set	3971
 10187   000F98                     _RC1REG         set	3992
 10188   000F9C                     _RC1STAbits     set	3996
 10189   000F99                     _TX1REG         set	3993
 10190   000F9D                     _TX1STAbits     set	3997
 10191   000F9B                     _SP1BRGH        set	3995
 10192   000F9A                     _SP1BRGL        set	3994
 10193   000F9D                     _TX1STA         set	3997
 10194   000F9C                     _RC1STA         set	3996
 10195   000F9E                     _BAUD1CON       set	3998
 10196   000FAB                     _CCP1CON        set	4011
 10197   000F8C                     _PORTA          set	3980
 10198   000FA4                     _PWM3CON        set	4004
 10199   000F87                     _TRISA          set	3975
 10200   000F82                     _LATA           set	3970
 10201   000400                     _sectorRAM      equ	1024
 10202                           
 10203                           ; #config settings
 10204                           
 10205                           	psect	cinit
 10206   00179A                     __pcinit:
 10207                           	callstack 0
 10208   00179A                     start_initialization:
 10209                           	callstack 0
 10210   00179A                     __initialization:
 10211                           	callstack 0
 10212                           
 10213                           ; Clear objects allocated to BANK2 (256 bytes)
 10214   00179A  EE02  F000         	lfsr	0,__pbssBANK2
 10215   00179E  EE21 F000          	lfsr	2,256
 10216   0017A2                     clear_0:
 10217   0017A2  6AEE               	clrf	postinc0,c
 10218   0017A4  50DD               	movf	postdec2,w,c
 10219   0017A6  50D9               	movf	fsr2l,w,c
 10220   0017A8  E1FC               	bnz	clear_0
 10221   0017AA  50DA               	movf	fsr2h,w,c
 10222   0017AC  E1FA               	bnz	clear_0
 10223                           
 10224                           ; Clear objects allocated to BANK1 (224 bytes)
 10225   0017AE  EE01  F000         	lfsr	0,__pbssBANK1
 10226   0017B2  0EE0               	movlw	224
 10227   0017B4                     clear_1:
 10228   0017B4  6AEE               	clrf	postinc0,c
 10229   0017B6  06E8               	decf	wreg,f,c
 10230   0017B8  E1FD               	bnz	clear_1
 10231                           
 10232                           ; Clear objects allocated to BANK0 (122 bytes)
 10233   0017BA  EE00  F060         	lfsr	0,__pbssBANK0
 10234   0017BE  0E7A               	movlw	122
 10235   0017C0                     clear_2:
 10236   0017C0  6AEE               	clrf	postinc0,c
 10237   0017C2  06E8               	decf	wreg,f,c
 10238   0017C4  E1FD               	bnz	clear_2
 10239                           
 10240                           ; Clear objects allocated to COMRAM (9 bytes)
 10241   0017C6  EE00  F057         	lfsr	0,__pbssCOMRAM
 10242   0017CA  0E09               	movlw	9
 10243   0017CC                     clear_3:
 10244   0017CC  6AEE               	clrf	postinc0,c
 10245   0017CE  06E8               	decf	wreg,f,c
 10246   0017D0  E1FD               	bnz	clear_3
 10247   0017D2                     end_of_initialization:
 10248                           	callstack 0
 10249   0017D2                     __end_of__initialization:
 10250                           	callstack 0
 10251   0017D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
 10252   0017D4  6EF8               	movwf	tblptru,c
 10253   0017D6  0100               	movlb	0
 10254   0017D8  EF87  F00B         	goto	_main	;jump to C main() function
 10255                           
 10256                           	psect	bssCOMRAM
 10257   000057                     __pbssCOMRAM:
 10258                           	callstack 0
 10259   000057                     _count:
 10260                           	callstack 0
 10261   000057                     	ds	1
 10262   000058                     _i2c1SlaveState:
 10263                           	callstack 0
 10264   000058                     	ds	1
 10265   000059                     _i2c1WrData:
 10266                           	callstack 0
 10267   000059                     	ds	1
 10268   00005A                     _eusart1RxCount:
 10269                           	callstack 0
 10270   00005A                     	ds	1
 10271   00005B                     _eusart1RxTail:
 10272                           	callstack 0
 10273   00005B                     	ds	1
 10274   00005C                     _eusart1RxHead:
 10275                           	callstack 0
 10276   00005C                     	ds	1
 10277   00005D                     _eusart1TxBufferRemaining:
 10278                           	callstack 0
 10279   00005D                     	ds	1
 10280   00005E                     _eusart1TxTail:
 10281                           	callstack 0
 10282   00005E                     	ds	1
 10283   00005F                     _eusart1TxHead:
 10284                           	callstack 0
 10285   00005F                     	ds	1
 10286                           
 10287                           	psect	bssBANK0
 10288   000060                     __pbssBANK0:
 10289                           	callstack 0
 10290   000060                     _analog:
 10291                           	callstack 0
 10292   000060                     	ds	49
 10293   000091                     _E2_Changes:
 10294                           	callstack 0
 10295   000091                     	ds	32
 10296   0000B1                     	ds	6
 10297   0000B7                     _width:
 10298                           	callstack 0
 10299   0000B7                     	ds	2
 10300   0000B9                     _prec:
 10301                           	callstack 0
 10302   0000B9                     	ds	2
 10303   0000BB                     _i2c1EEPMemAddr:
 10304                           	callstack 0
 10305   0000BB                     	ds	2
 10306   0000BD                     handle_read_cmd@a:
 10307                           	callstack 0
 10308   0000BD                     	ds	2
 10309   0000BF                     handle_read_cmd@adc_tmp:
 10310                           	callstack 0
 10311   0000BF                     	ds	2
 10312   0000C1                     _I2C1_SlaveWrColInterruptHandler:
 10313                           	callstack 0
 10314   0000C1                     	ds	2
 10315   0000C3                     _I2C1_SlaveBusColInterruptHandler:
 10316                           	callstack 0
 10317   0000C3                     	ds	2
 10318   0000C5                     _I2C1_SlaveAddrInterruptHandler:
 10319                           	callstack 0
 10320   0000C5                     	ds	2
 10321   0000C7                     _I2C1_SlaveWrInterruptHandler:
 10322                           	callstack 0
 10323   0000C7                     	ds	2
 10324   0000C9                     _I2C1_SlaveRdInterruptHandler:
 10325                           	callstack 0
 10326   0000C9                     	ds	2
 10327   0000CB                     _MSSP1_InterruptHandler:
 10328                           	callstack 0
 10329   0000CB                     	ds	2
 10330   0000CD                     _flags:
 10331                           	callstack 0
 10332   0000CD                     	ds	1
 10333   0000CE                     _i2c1SlaveAddr:
 10334                           	callstack 0
 10335   0000CE                     	ds	1
 10336   0000CF                     _i2c1RdData:
 10337                           	callstack 0
 10338   0000CF                     	ds	1
 10339   0000D0                     _eusart1RxLastError:
 10340                           	callstack 0
 10341   0000D0                     	ds	1
 10342   0000D1                     _i2c:
 10343                           	callstack 0
 10344   0000D1                     	ds	9
 10345                           
 10346                           	psect	bssBANK1
 10347   000100                     __pbssBANK1:
 10348                           	callstack 0
 10349   000100                     _eusart1RxStatusBuffer:
 10350                           	callstack 0
 10351   000100                     	ds	64
 10352   000140                     _eusart1RxBuffer:
 10353                           	callstack 0
 10354   000140                     	ds	64
 10355   000180                     _eusart1TxBuffer:
 10356                           	callstack 0
 10357   000180                     	ds	64
 10358   0001C0                     _dbuf:
 10359                           	callstack 0
 10360   0001C0                     	ds	32
 10361                           
 10362                           	psect	bssBANK2
 10363   000200                     __pbssBANK2:
 10364                           	callstack 0
 10365   000200                     _E2_DATA:
 10366                           	callstack 0
 10367   000200                     	ds	256
 10368                           
 10369                           	psect	cstackBANK0
 10370   0000DA                     __pcstackBANK0:
 10371                           	callstack 0
 10372   0000DA                     ?_ADCC_GetConversionResult:
 10373                           	callstack 0
 10374   0000DA                     ADCC_StartConversion@channel:
 10375                           	callstack 0
 10376   0000DA                     DATAEE_WriteByte@bData:
 10377                           	callstack 0
 10378   0000DA                     DATAEE_ReadByte@bAdd:
 10379                           	callstack 0
 10380   0000DA                     I2C1_SlaveSetSlaveAddr@slaveAddr:
 10381                           	callstack 0
 10382   0000DA                     I2C1_SlaveSetSlaveMask@maskAddr:
 10383                           	callstack 0
 10384   0000DA                     analog_select_pos_ref_idx@ref:
 10385                           	callstack 0
 10386   0000DA                     EUSART1_SetFramingErrorHandler@interruptHandler:
 10387                           	callstack 0
 10388   0000DA                     EUSART1_SetOverrunErrorHandler@interruptHandler:
 10389                           	callstack 0
 10390   0000DA                     EUSART1_SetErrorHandler@interruptHandler:
 10391                           	callstack 0
 10392   0000DA                     EUSART1_SetTxInterruptHandler@interruptHandler:
 10393                           	callstack 0
 10394   0000DA                     EUSART1_SetRxInterruptHandler@interruptHandler:
 10395                           	callstack 0
 10396   0000DA                     I2C1_SlaveSetIsrHandler@handler:
 10397                           	callstack 0
 10398   0000DA                     I2C1_SlaveSetReadIntHandler@handler:
 10399                           	callstack 0
 10400   0000DA                     I2C1_SlaveSetWriteIntHandler@handler:
 10401                           	callstack 0
 10402   0000DA                     I2C1_SlaveSetAddrIntHandler@handler:
 10403                           	callstack 0
 10404   0000DA                     I2C1_SlaveSetWrColIntHandler@handler:
 10405                           	callstack 0
 10406   0000DA                     I2C1_SlaveSetBusColIntHandler@handler:
 10407                           	callstack 0
 10408   0000DA                     ??_analog_set_pos_ref:
 10409                           
 10410                           ; 1 bytes @ 0x0
 10411   0000DA                     	ds	1
 10412   0000DB                     DATAEE_WriteByte@bAdd:
 10413                           	callstack 0
 10414   0000DB                     eeprom_read_byte@addr:
 10415                           	callstack 0
 10416   0000DB                     analog_select_pos_ref_idx@idx:
 10417                           	callstack 0
 10418   0000DB                     _analog_set_pos_ref$3085:
 10419                           	callstack 0
 10420   0000DB                     
 10421                           ; 1 bytes @ 0x1
 10422   0000DB                     	ds	1
 10423   0000DC                     DATAEE_WriteByte@GIEBitValue:
 10424                           	callstack 0
 10425   0000DC                     i2c_slave_init@maskAddr:
 10426                           	callstack 0
 10427   0000DC                     analog_init@i:
 10428                           	callstack 0
 10429   0000DC                     eeprom_buffer_whole@b:
 10430                           	callstack 0
 10431   0000DC                     ??_ADCC_GetConversionResult:
 10432   0000DC                     
 10433                           ; 1 bytes @ 0x2
 10434   0000DC                     	ds	1
 10435   0000DD                     eeprom_write_byte@data:
 10436                           	callstack 0
 10437   0000DD                     analog_set_pos_ref@current:
 10438                           	callstack 0
 10439   0000DD                     i2c_slave_init@to_slave_func:
 10440                           	callstack 0
 10441                           
 10442                           ; 2 bytes @ 0x3
 10443   0000DD                     	ds	1
 10444   0000DE                     analog_set_pos_ref@ref:
 10445                           	callstack 0
 10446   0000DE                     ??_eeprom_write_byte:
 10447                           
 10448                           ; 1 bytes @ 0x4
 10449   0000DE                     	ds	1
 10450   0000DF                     i2c_slave_init@from_slave_func:
 10451                           	callstack 0
 10452   0000DF                     ??_analog_handler:
 10453                           
 10454                           ; 1 bytes @ 0x5
 10455   0000DF                     	ds	2
 10456   0000E1                     i2c_slave_init@slaveAddr:
 10457                           	callstack 0
 10458   0000E1                     
 10459                           ; 1 bytes @ 0x7
 10460   0000E1                     	ds	1
 10461   0000E2                     eeprom_write_byte@addr:
 10462                           	callstack 0
 10463                           
 10464                           ; 1 bytes @ 0x8
 10465   0000E2                     	ds	1
 10466   0000E3                     ??_eeprom_handle_writing:
 10467                           
 10468                           ; 1 bytes @ 0x9
 10469   0000E3                     	ds	2
 10470   0000E5                     eeprom_handle_writing@bitval:
 10471                           	callstack 0
 10472                           
 10473                           ; 1 bytes @ 0xB
 10474   0000E5                     	ds	1
 10475   0000E6                     eeprom_handle_writing@eeAddr:
 10476                           	callstack 0
 10477   0000E6                     analog_handler@port:
 10478                           	callstack 0
 10479                           
 10480                           ; 1 bytes @ 0xC
 10481   0000E6                     	ds	1
 10482   0000E7                     eeprom_handle_writing@bi:
 10483                           	callstack 0
 10484   0000E7                     analog_handler@pin:
 10485                           	callstack 0
 10486                           
 10487                           ; 1 bytes @ 0xD
 10488   0000E7                     	ds	1
 10489   0000E8                     eeprom_handle_writing@by:
 10490                           	callstack 0
 10491                           
 10492                           ; 1 bytes @ 0xE
 10493   0000E8                     	ds	1
 10494   0000E9                     
 10495                           ; 1 bytes @ 0xF
 10496                           
 10497                           	psect	cstackCOMRAM
 10498   000001                     __pcstackCOMRAM:
 10499                           	callstack 0
 10500   000001                     ?_analog_get_adc_val_idx:
 10501                           	callstack 0
 10502   000001                     DAC1_SetOutput@inputData:
 10503                           	callstack 0
 10504   000001                     I2C1_SlaveSendTxData@data:
 10505                           	callstack 0
 10506   000001                     ReadBit@portNo:
 10507                           	callstack 0
 10508   000001                     WriteBit@portNo:
 10509                           	callstack 0
 10510   000001                     eeprom_read_buffer@addr:
 10511                           	callstack 0
 10512   000001                     eeprom_write_buffer@data:
 10513                           	callstack 0
 10514   000001                     pwm_configure_pin@pin:
 10515                           	callstack 0
 10516   000001                     PWM4_LoadDutyValue@dutyValue:
 10517                           	callstack 0
 10518   000001                     PWM3_LoadDutyValue@dutyValue:
 10519                           	callstack 0
 10520   000001                     PWM1_LoadDutyValue@dutyValue:
 10521                           	callstack 0
 10522   000001                     PWM2_LoadDutyValue@dutyValue:
 10523                           	callstack 0
 10524   000001                     
 10525                           ; 1 bytes @ 0x0
 10526   000001                     	ds	1
 10527   000002                     I2C1_Write@data:
 10528                           	callstack 0
 10529   000002                     ReadBit@pinNo:
 10530                           	callstack 0
 10531   000002                     WriteBit@pinNo:
 10532                           	callstack 0
 10533   000002                     pwm_configure_pin@module:
 10534                           	callstack 0
 10535   000002                     ??_eeprom_write_buffer:
 10536   000002                     
 10537                           ; 1 bytes @ 0x1
 10538   000002                     	ds	1
 10539   000003                     WriteBit@value:
 10540                           	callstack 0
 10541   000003                     analog_get_adc_val_idx@idx:
 10542                           	callstack 0
 10543   000003                     ??_pwm_configure_pin:
 10544   000003                     ??_PWM4_LoadDutyValue:
 10545   000003                     ??_PWM3_LoadDutyValue:
 10546   000003                     ??_ReadBit:
 10547   000003                     
 10548                           ; 1 bytes @ 0x2
 10549   000003                     	ds	1
 10550   000004                     ?_analog_get_adc_val:
 10551                           	callstack 0
 10552   000004                     analog_get_adc_val@pin:
 10553                           	callstack 0
 10554   000004                     ??_WriteBit:
 10555                           
 10556                           ; 1 bytes @ 0x3
 10557   000004                     	ds	1
 10558   000005                     eeprom_write_buffer@addr:
 10559                           	callstack 0
 10560   000005                     pwm_set_duty_cycle@duty_cycle:
 10561                           	callstack 0
 10562                           
 10563                           ; 2 bytes @ 0x4
 10564   000005                     	ds	1
 10565   000006                     analog_get_adc_val@port:
 10566                           	callstack 0
 10567   000006                     
 10568                           ; 1 bytes @ 0x5
 10569   000006                     	ds	1
 10570   000007                     pwm_set_duty_cycle@module:
 10571                           	callstack 0
 10572   000007                     ReadBit@reg:
 10573                           	callstack 0
 10574   000007                     
 10575                           ; 1 bytes @ 0x6
 10576   000007                     	ds	1
 10577   000008                     WriteBit@portData:
 10578                           	callstack 0
 10579                           
 10580                           ; 1 bytes @ 0x7
 10581   000008                     	ds	1
 10582   000009                     ReadBit@portData:
 10583                           	callstack 0
 10584   000009                     WriteBit@pin:
 10585                           	callstack 0
 10586   000009                     pwm_configure_pin@tris_reg:
 10587                           	callstack 0
 10588                           
 10589                           ; 2 bytes @ 0x8
 10590   000009                     	ds	1
 10591   00000A                     ReadBit@portMask:
 10592                           	callstack 0
 10593                           
 10594                           ; 1 bytes @ 0x9
 10595   00000A                     	ds	1
 10596   00000B                     ReadBit@pin:
 10597                           	callstack 0
 10598   00000B                     WriteBit@reg:
 10599                           	callstack 0
 10600   00000B                     pwm_configure_pin@ccp_con:
 10601                           	callstack 0
 10602                           
 10603                           ; 2 bytes @ 0xA
 10604   00000B                     	ds	2
 10605   00000D                     ReadBit@regNo:
 10606                           	callstack 0
 10607   00000D                     WriteBit@portMask:
 10608                           	callstack 0
 10609   00000D                     pwm_configure_pin@pwm_con:
 10610                           	callstack 0
 10611                           
 10612                           ; 2 bytes @ 0xC
 10613   00000D                     	ds	1
 10614   00000E                     ReadReg@portNo:
 10615                           	callstack 0
 10616   00000E                     WriteBit@regNo:
 10617                           	callstack 0
 10618                           
 10619                           ; 1 bytes @ 0xD
 10620   00000E                     	ds	1
 10621   00000F                     ReadReg@dst:
 10622                           	callstack 0
 10623   00000F                     WriteReg@portNo:
 10624                           	callstack 0
 10625   00000F                     pwm_configure_pin@port:
 10626                           	callstack 0
 10627                           
 10628                           ; 1 bytes @ 0xE
 10629   00000F                     	ds	1
 10630   000010                     ReadReg@tmp:
 10631                           	callstack 0
 10632   000010                     WriteReg@value:
 10633                           	callstack 0
 10634   000010                     pwm_configure_pin@pps_reg:
 10635                           	callstack 0
 10636   000010                     
 10637                           ; 1 bytes @ 0xF
 10638   000010                     	ds	1
 10639   000011                     ReadReg@regNo:
 10640                           	callstack 0
 10641   000011                     WriteReg@regNo:
 10642                           	callstack 0
 10643   000011                     
 10644                           ; 1 bytes @ 0x10
 10645   000011                     	ds	1
 10646   000012                     ReadReg@p:
 10647                           	callstack 0
 10648   000012                     WriteReg@p:
 10649                           	callstack 0
 10650   000012                     pwm_configure_pin@phyPin:
 10651                           	callstack 0
 10652                           
 10653                           ; 2 bytes @ 0x11
 10654   000012                     	ds	1
 10655   000013                     handle_read_cmd@c:
 10656                           	callstack 0
 10657                           
 10658                           ; 2 bytes @ 0x12
 10659   000013                     	ds	1
 10660   000014                     handle_write_cmd@c:
 10661                           	callstack 0
 10662                           
 10663                           ; 2 bytes @ 0x13
 10664   000014                     	ds	1
 10665   000015                     handle_read_cmd@wb:
 10666                           	callstack 0
 10667                           
 10668                           ; 1 bytes @ 0x14
 10669   000015                     	ds	1
 10670   000016                     handle_write_cmd@rb:
 10671                           	callstack 0
 10672   000016                     ??_handle_read_cmd:
 10673                           
 10674                           ; 1 bytes @ 0x15
 10675   000016                     	ds	1
 10676   000017                     ??_handle_write_cmd:
 10677                           
 10678                           ; 1 bytes @ 0x16
 10679   000017                     	ds	2
 10680   000019                     i2c_write_to_slave_cb@addr:
 10681                           	callstack 0
 10682   000019                     i2c_read_from_slave_cb@addr:
 10683                           	callstack 0
 10684                           
 10685                           ; 1 bytes @ 0x18
 10686   000019                     	ds	1
 10687   00001A                     i2c_write_to_slave_cb@rb:
 10688                           	callstack 0
 10689   00001A                     i2c_read_from_slave_cb@wb:
 10690                           	callstack 0
 10691                           
 10692                           ; 1 bytes @ 0x19
 10693   00001A                     	ds	1
 10694   00001B                     ??_i2c_read_from_slave_cb:
 10695                           
 10696                           ; 1 bytes @ 0x1A
 10697   00001B                     	ds	2
 10698   00001D                     i2c_write_to_slave_cb@c:
 10699                           	callstack 0
 10700   00001D                     i2c_read_from_slave_cb@c:
 10701                           	callstack 0
 10702                           
 10703                           ; 2 bytes @ 0x1C
 10704   00001D                     	ds	2
 10705   00001F                     MasterR_SlaveW@res:
 10706                           	callstack 0
 10707   00001F                     MasterW_SlaveR@res:
 10708                           	callstack 0
 10709   00001F                     
 10710                           ; 1 bytes @ 0x1E
 10711   00001F                     	ds	1
 10712   000020                     MasterR_SlaveW@tmp:
 10713                           	callstack 0
 10714   000020                     MasterW_SlaveR@rb:
 10715                           	callstack 0
 10716                           
 10717                           ; 1 bytes @ 0x1F
 10718   000020                     	ds	1
 10719   000021                     ??_I2C1_Isr:
 10720   000021                     
 10721                           ; 1 bytes @ 0x20
 10722   000021                     	ds	2
 10723   000023                     ??_INTERRUPT_InterruptManager:
 10724                           
 10725                           ; 1 bytes @ 0x22
 10726   000023                     	ds	20
 10727                           
 10728 ;;
 10729 ;;Main: autosize = 0, tempsize = 0, incstack = 2, save=0
 10730 ;;
 10731 ;; *************** function _main *****************
 10732 ;; Defined at:
 10733 ;;		line 177 in file "main.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;		None
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;		None
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      void 
 10740 ;; Registers used:
 10741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10747 ;;      Params:         0       0       0       0       0
 10748 ;;      Locals:         0       0       0       0       0
 10749 ;;      Temps:          0       0       0       0       0
 10750 ;;      Totals:         0       0       0       0       0
 10751 ;;Total ram usage:        0 bytes
 10752 ;; Hardware stack levels required when called: 24
 10753 ;; This function calls:
 10754 ;;		_SYSTEM_Initialize
 10755 ;;		_analog_handler
 10756 ;;		_analog_init
 10757 ;;		_eeprom_buffer_whole
 10758 ;;		_eeprom_handle_writing
 10759 ;;		_i2c_slave_init
 10760 ;;		_printf
 10761 ;; This function is called by:
 10762 ;;		Startup code after reset
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text0
 10767   00170E                     __ptext0:
 10768                           	callstack 0
 10769   00170E                     _main:
 10770                           	callstack 7
 10771                           
 10772                           ;main.c: 180:     SYSTEM_Initialize();
 10773                           
 10774                           ;incstack = 0
 10775   00170E  ECEE  F00B         	call	_SYSTEM_Initialize	;wreg free
 10776                           
 10777                           ;main.c: 183:     (INTCONbits.GIE = 1);
 10778   001712  8EF2               	bsf	242,7,c	;volatile
 10779                           
 10780                           ;main.c: 186:     (INTCONbits.PEIE = 1);
 10781   001714  8CF2               	bsf	242,6,c	;volatile
 10782                           
 10783                           ;main.c: 189:     eeprom_buffer_whole();
 10784   001716  ECF0  F00C         	call	_eeprom_buffer_whole	;wreg free
 10785                           
 10786                           ;main.c: 190:     analog_init();
 10787   00171A  ECA3  F00D         	call	_analog_init	;wreg free
 10788   00171E  0EB2               	movlw	low STR_1
 10789   001720  6EE6               	movwf	postinc1,c
 10790   001722  0E3F               	movlw	high STR_1
 10791   001724  6EE6               	movwf	postinc1,c
 10792   001726  0E02               	movlw	2
 10793   001728  6EE6               	movwf	postinc1,c
 10794   00172A  ECBE  F00A         	call	_printf	;wreg free
 10795                           
 10796                           ;main.c: 195:     i2c_slave_init(42, 127, &i2c_write_to_slave_cb, &i2c_read_from_slave_c
      +                          b);
 10797   00172E  0E7F               	movlw	127
 10798   001730  0100               	movlb	0	; () banked
 10799   001732  6FDC               	movwf	i2c_slave_init@maskAddr& (0+255),b
 10800   001734  0EF4               	movlw	low _i2c_write_to_slave_cb
 10801   001736  6FDD               	movwf	i2c_slave_init@to_slave_func& (0+255),b
 10802   001738  0E10               	movlw	high _i2c_write_to_slave_cb
 10803   00173A  6FDE               	movwf	(i2c_slave_init@to_slave_func+1)& (0+255),b
 10804   00173C  0E02               	movlw	low _i2c_read_from_slave_cb
 10805   00173E  6FDF               	movwf	i2c_slave_init@from_slave_func& (0+255),b
 10806   001740  0E12               	movlw	high _i2c_read_from_slave_cb
 10807   001742  6FE0               	movwf	(i2c_slave_init@from_slave_func+1)& (0+255),b
 10808   001744  0E2A               	movlw	42
 10809   001746  ECE9  F00A         	call	_i2c_slave_init
 10810   00174A                     l5360:
 10811                           
 10812                           ;main.c: 199:     {;main.c: 200:         eeprom_handle_writing();
 10813   00174A  EC4B  F007         	call	_eeprom_handle_writing	;wreg free
 10814                           
 10815                           ;main.c: 201:         analog_handler();
 10816   00174E  EC9A  F006         	call	_analog_handler	;wreg free
 10817   001752  D7FB               	goto	l5360
 10818   001754                     __end_of_main:
 10819                           	callstack 0
 10820                           
 10821 ;; *************** function _i2c_slave_init *****************
 10822 ;; Defined at:
 10823 ;;		line 122 in file "i2c_slave.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;  slaveAddr       1    wreg     unsigned char 
 10826 ;;  maskAddr        1    2[BANK0 ] unsigned char 
 10827 ;;  to_slave_fun    2    3[BANK0 ] PTR FTN(PTR volatile uns
 10828 ;;		 -> i2c_write_to_slave_cb(1), 
 10829 ;;  from_slave_f    2    5[BANK0 ] PTR FTN(PTR volatile uns
 10830 ;;		 -> i2c_read_from_slave_cb(1), 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  slaveAddr       1    7[BANK0 ] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10842 ;;      Params:         0       5       0       0       0
 10843 ;;      Locals:         0       1       0       0       0
 10844 ;;      Temps:          0       0       0       0       0
 10845 ;;      Totals:         0       6       0       0       0
 10846 ;;Total ram usage:        6 bytes
 10847 ;; Hardware stack levels used: 1
 10848 ;; Hardware stack levels required when called: 17
 10849 ;; This function calls:
 10850 ;;		_I2C1_Open
 10851 ;;		_I2C1_SlaveSetAddrIntHandler
 10852 ;;		_I2C1_SlaveSetReadIntHandler
 10853 ;;		_I2C1_SlaveSetWriteIntHandler
 10854 ;; This function is called by:
 10855 ;;		_main
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text1
 10860   0015D2                     __ptext1:
 10861                           	callstack 0
 10862   0015D2                     _i2c_slave_init:
 10863                           	callstack 13
 10864                           
 10865                           ;incstack = 0
 10866                           ;i2c_slave_init@slaveAddr stored from wreg
 10867   0015D2  0100               	movlb	0	; () banked
 10868   0015D4  6FE1               	movwf	i2c_slave_init@slaveAddr& (0+255),b
 10869                           
 10870                           ;i2c_slave.c: 122: void i2c_slave_init(uint8_t slaveAddr, uint8_t maskAddr, i2c_write_to
      +                          _slave_t to_slave_func, i2c_read_from_slave_t from_slave_func);i2c_slave.c: 123: {;i2c_s
      +                          lave.c: 124:     i2c.to_slave_ptr = to_slave_func;
 10871   0015D6  C0DD  F0D5         	movff	i2c_slave_init@to_slave_func,_i2c+4	;volatile
 10872   0015DA  C0DE  F0D6         	movff	i2c_slave_init@to_slave_func+1,_i2c+5	;volatile
 10873                           
 10874                           ;i2c_slave.c: 125:     i2c.from_slave_ptr = from_slave_func;
 10875   0015DE  C0DF  F0D7         	movff	i2c_slave_init@from_slave_func,_i2c+6	;volatile
 10876   0015E2  C0E0  F0D8         	movff	i2c_slave_init@from_slave_func+1,_i2c+7	;volatile
 10877                           
 10878                           ;i2c_slave.c: 127:     I2C1_Open();
 10879   0015E6  ECF9  F009         	call	_I2C1_Open	;wreg free
 10880                           
 10881                           ;i2c_slave.c: 128:     SSP1ADD = (uint8_t) (slaveAddr << 1);
 10882   0015EA  0100               	movlb	0	; () banked
 10883   0015EC  51E1               	movf	i2c_slave_init@slaveAddr& (0+255),w,b
 10884   0015EE  25E1               	addwf	i2c_slave_init@slaveAddr& (0+255),w,b
 10885   0015F0  6E92               	movwf	146,c	;volatile
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;i2c_slave.c: 129:     SSP1MSK = (uint8_t) (maskAddr << 1);
 10889   0015F2  51DC               	movf	i2c_slave_init@maskAddr& (0+255),w,b
 10890   0015F4  25DC               	addwf	i2c_slave_init@maskAddr& (0+255),w,b
 10891   0015F6  6E93               	movwf	147,c	;volatile
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;i2c_slave.c: 130:     SSP1CON3bits.PCIE = 1;
 10895   0015F8  8C97               	bsf	151,6,c	;volatile
 10896                           
 10897                           ;i2c_slave.c: 132:     I2C1_SlaveSetAddrIntHandler(SlaveRdDevAddrFromBus);
 10898   0015FA  0E36               	movlw	low _SlaveRdDevAddrFromBus
 10899   0015FC  6FDA               	movwf	I2C1_SlaveSetAddrIntHandler@handler& (0+255),b
 10900   0015FE  0E1A               	movlw	high _SlaveRdDevAddrFromBus
 10901   001600  6FDB               	movwf	(I2C1_SlaveSetAddrIntHandler@handler+1)& (0+255),b
 10902   001602  ECCC  F00E         	call	_I2C1_SlaveSetAddrIntHandler	;wreg free
 10903                           
 10904                           ;i2c_slave.c: 133:     I2C1_SlaveSetWriteIntHandler(MasterR_SlaveW);
 10905   001606  0E24               	movlw	low _MasterR_SlaveW
 10906   001608  0100               	movlb	0	; () banked
 10907   00160A  6FDA               	movwf	I2C1_SlaveSetWriteIntHandler@handler& (0+255),b
 10908   00160C  0E16               	movlw	high _MasterR_SlaveW
 10909   00160E  6FDB               	movwf	(I2C1_SlaveSetWriteIntHandler@handler+1)& (0+255),b
 10910   001610  ECB3  F00E         	call	_I2C1_SlaveSetWriteIntHandler	;wreg free
 10911                           
 10912                           ;i2c_slave.c: 134:     I2C1_SlaveSetReadIntHandler(MasterW_SlaveR);
 10913   001614  0E80               	movlw	low _MasterW_SlaveR
 10914   001616  0100               	movlb	0	; () banked
 10915   001618  6FDA               	movwf	I2C1_SlaveSetReadIntHandler@handler& (0+255),b
 10916   00161A  0E12               	movlw	high _MasterW_SlaveR
 10917   00161C  6FDB               	movwf	(I2C1_SlaveSetReadIntHandler@handler+1)& (0+255),b
 10918   00161E  ECBD  F00E         	call	_I2C1_SlaveSetReadIntHandler	;wreg free
 10919   001622  0012               	return		;funcret
 10920   001624                     __end_of_i2c_slave_init:
 10921                           	callstack 0
 10922                           
 10923 ;; *************** function _I2C1_Open *****************
 10924 ;; Defined at:
 10925 ;;		line 116 in file "mcc_generated_files/i2c1_slave.c"
 10926 ;; Parameters:    Size  Location     Type
 10927 ;;		None
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;		None
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, status,2, status,0, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10939 ;;      Params:         0       0       0       0       0
 10940 ;;      Locals:         0       0       0       0       0
 10941 ;;      Temps:          0       0       0       0       0
 10942 ;;      Totals:         0       0       0       0       0
 10943 ;;Total ram usage:        0 bytes
 10944 ;; Hardware stack levels used: 1
 10945 ;; Hardware stack levels required when called: 16
 10946 ;; This function calls:
 10947 ;;		_I2C1_SlaveEnableIrq
 10948 ;;		_I2C1_SlaveOpen
 10949 ;;		_I2C1_SlaveSetAddrIntHandler
 10950 ;;		_I2C1_SlaveSetBusColIntHandler
 10951 ;;		_I2C1_SlaveSetIsrHandler
 10952 ;;		_I2C1_SlaveSetReadIntHandler
 10953 ;;		_I2C1_SlaveSetSlaveAddr
 10954 ;;		_I2C1_SlaveSetSlaveMask
 10955 ;;		_I2C1_SlaveSetWrColIntHandler
 10956 ;;		_I2C1_SlaveSetWriteIntHandler
 10957 ;; This function is called by:
 10958 ;;		_i2c_slave_init
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text2
 10963   0013F2                     __ptext2:
 10964                           	callstack 0
 10965   0013F2                     _I2C1_Open:
 10966                           	callstack 13
 10967                           
 10968                           ;mcc_generated_files/i2c1_slave.c: 118:     I2C1_SlaveOpen();
 10969                           
 10970                           ;incstack = 0
 10971   0013F2  EC22  F00E         	call	_I2C1_SlaveOpen	;wreg free
 10972                           
 10973                           ;mcc_generated_files/i2c1_slave.c: 119:     I2C1_SlaveSetSlaveAddr(42);
 10974   0013F6  0E2A               	movlw	42
 10975   0013F8  EC64  F00E         	call	_I2C1_SlaveSetSlaveAddr
 10976                           
 10977                           ;mcc_generated_files/i2c1_slave.c: 120:     I2C1_SlaveSetSlaveMask(127);
 10978   0013FC  0E7F               	movlw	127
 10979   0013FE  EC5D  F00E         	call	_I2C1_SlaveSetSlaveMask
 10980                           
 10981                           ;mcc_generated_files/i2c1_slave.c: 121:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
 10982   001402  0E30               	movlw	low _I2C1_Isr
 10983   001404  0100               	movlb	0	; () banked
 10984   001406  6FDA               	movwf	I2C1_SlaveSetIsrHandler@handler& (0+255),b
 10985   001408  0E0F               	movlw	high _I2C1_Isr
 10986   00140A  6FDB               	movwf	(I2C1_SlaveSetIsrHandler@handler+1)& (0+255),b
 10987   00140C  ECC2  F00E         	call	_I2C1_SlaveSetIsrHandler	;wreg free
 10988                           
 10989                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
 10990   001410  0E00               	movlw	0
 10991   001412  0100               	movlb	0	; () banked
 10992   001414  6FDA               	movwf	I2C1_SlaveSetBusColIntHandler@handler& (0+255),b
 10993   001416  0E00               	movlw	0
 10994   001418  6FDB               	movwf	(I2C1_SlaveSetBusColIntHandler@handler+1)& (0+255),b
 10995   00141A  ECC7  F00E         	call	_I2C1_SlaveSetBusColIntHandler	;wreg free
 10996                           
 10997                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
 10998   00141E  0EFA               	movlw	low _I2C1_SlaveDefWrInterruptHandler
 10999   001420  0100               	movlb	0	; () banked
 11000   001422  6FDA               	movwf	I2C1_SlaveSetWriteIntHandler@handler& (0+255),b
 11001   001424  0E1D               	movlw	high _I2C1_SlaveDefWrInterruptHandler
 11002   001426  6FDB               	movwf	(I2C1_SlaveSetWriteIntHandler@handler+1)& (0+255),b
 11003   001428  ECB3  F00E         	call	_I2C1_SlaveSetWriteIntHandler	;wreg free
 11004                           
 11005                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
 11006   00142C  0EDE               	movlw	low _I2C1_SlaveDefRdInterruptHandler
 11007   00142E  0100               	movlb	0	; () banked
 11008   001430  6FDA               	movwf	I2C1_SlaveSetReadIntHandler@handler& (0+255),b
 11009   001432  0E1D               	movlw	high _I2C1_SlaveDefRdInterruptHandler
 11010   001434  6FDB               	movwf	(I2C1_SlaveSetReadIntHandler@handler+1)& (0+255),b
 11011   001436  ECBD  F00E         	call	_I2C1_SlaveSetReadIntHandler	;wreg free
 11012                           
 11013                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
 11014   00143A  0EE8               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
 11015   00143C  0100               	movlb	0	; () banked
 11016   00143E  6FDA               	movwf	I2C1_SlaveSetAddrIntHandler@handler& (0+255),b
 11017   001440  0E1D               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
 11018   001442  6FDB               	movwf	(I2C1_SlaveSetAddrIntHandler@handler+1)& (0+255),b
 11019   001444  ECCC  F00E         	call	_I2C1_SlaveSetAddrIntHandler	;wreg free
 11020                           
 11021                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
 11022   001448  0E00               	movlw	0
 11023   00144A  0100               	movlb	0	; () banked
 11024   00144C  6FDA               	movwf	I2C1_SlaveSetWrColIntHandler@handler& (0+255),b
 11025   00144E  0E00               	movlw	0
 11026   001450  6FDB               	movwf	(I2C1_SlaveSetWrColIntHandler@handler+1)& (0+255),b
 11027   001452  ECB8  F00E         	call	_I2C1_SlaveSetWrColIntHandler	;wreg free
 11028                           
 11029                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveEnableIrq();
 11030   001456  EC09  F00F         	call	_I2C1_SlaveEnableIrq	;wreg free
 11031   00145A  0012               	return		;funcret
 11032   00145C                     __end_of_I2C1_Open:
 11033                           	callstack 0
 11034                           
 11035 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
 11036 ;; Defined at:
 11037 ;;		line 246 in file "mcc_generated_files/i2c1_slave.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11040 ;;		 -> MasterR_SlaveW(1), I2C1_SlaveDefWrInterruptHandler(1), 
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  1    wreg      void 
 11045 ;; Registers used:
 11046 ;;		wreg, status,2, status,0
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11052 ;;      Params:         0       2       0       0       0
 11053 ;;      Locals:         0       0       0       0       0
 11054 ;;      Temps:          0       0       0       0       0
 11055 ;;      Totals:         0       2       0       0       0
 11056 ;;Total ram usage:        2 bytes
 11057 ;; Hardware stack levels used: 1
 11058 ;; Hardware stack levels required when called: 15
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_I2C1_Open
 11063 ;;		_i2c_slave_init
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text3
 11068   001D66                     __ptext3:
 11069                           	callstack 0
 11070   001D66                     _I2C1_SlaveSetWriteIntHandler:
 11071                           	callstack 14
 11072                           
 11073                           ;mcc_generated_files/i2c1_slave.c: 247:     I2C1_SlaveWrInterruptHandler = handler;
 11074                           
 11075                           ;incstack = 0
 11076   001D66  C0DA  F0C7         	movff	I2C1_SlaveSetWriteIntHandler@handler,_I2C1_SlaveWrInterruptHandler
 11077   001D6A  C0DB  F0C8         	movff	I2C1_SlaveSetWriteIntHandler@handler+1,_I2C1_SlaveWrInterruptHandler+1
 11078   001D6E  0012               	return		;funcret
 11079   001D70                     __end_of_I2C1_SlaveSetWriteIntHandler:
 11080                           	callstack 0
 11081                           
 11082 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
 11083 ;; Defined at:
 11084 ;;		line 279 in file "mcc_generated_files/i2c1_slave.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11087 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;		None
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  1    wreg      void 
 11092 ;; Registers used:
 11093 ;;		wreg, status,2, status,0
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11099 ;;      Params:         0       2       0       0       0
 11100 ;;      Locals:         0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0
 11102 ;;      Totals:         0       2       0       0       0
 11103 ;;Total ram usage:        2 bytes
 11104 ;; Hardware stack levels used: 1
 11105 ;; Hardware stack levels required when called: 15
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_I2C1_Open
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text4
 11114   001D70                     __ptext4:
 11115                           	callstack 0
 11116   001D70                     _I2C1_SlaveSetWrColIntHandler:
 11117                           	callstack 13
 11118                           
 11119                           ;mcc_generated_files/i2c1_slave.c: 280:     I2C1_SlaveWrColInterruptHandler = handler;
 11120                           
 11121                           ;incstack = 0
 11122   001D70  C0DA  F0C1         	movff	I2C1_SlaveSetWrColIntHandler@handler,_I2C1_SlaveWrColInterruptHandler
 11123   001D74  C0DB  F0C2         	movff	I2C1_SlaveSetWrColIntHandler@handler+1,_I2C1_SlaveWrColInterruptHandler+1
 11124   001D78  0012               	return		;funcret
 11125   001D7A                     __end_of_I2C1_SlaveSetWrColIntHandler:
 11126                           	callstack 0
 11127                           
 11128 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
 11129 ;; Defined at:
 11130 ;;		line 336 in file "mcc_generated_files/i2c1_slave.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  maskAddr        1    wreg     unsigned char 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  maskAddr        1    0[BANK0 ] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		wreg, status,2, status,0
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11144 ;;      Params:         0       0       0       0       0
 11145 ;;      Locals:         0       1       0       0       0
 11146 ;;      Temps:          0       0       0       0       0
 11147 ;;      Totals:         0       1       0       0       0
 11148 ;;Total ram usage:        1 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; Hardware stack levels required when called: 15
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		_I2C1_Open
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text5
 11159   001CBA                     __ptext5:
 11160                           	callstack 0
 11161   001CBA                     _I2C1_SlaveSetSlaveMask:
 11162                           	callstack 13
 11163                           
 11164                           ;incstack = 0
 11165                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
 11166   001CBA  0100               	movlb	0	; () banked
 11167   001CBC  6FDA               	movwf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),b
 11168                           
 11169                           ;mcc_generated_files/i2c1_slave.c: 336: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 337: {;mcc_generated_file
      +                          s/i2c1_slave.c: 338:     SSP1MSK = (uint8_t) (maskAddr << 1);
 11170   001CBE  0100               	movlb	0	; () banked
 11171   001CC0  51DA               	movf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),w,b
 11172   001CC2  25DA               	addwf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),w,b
 11173   001CC4  6E93               	movwf	147,c	;volatile
 11174                           
 11175                           ; BSR set to: 0
 11176   001CC6  0012               	return		;funcret
 11177   001CC8                     __end_of_I2C1_SlaveSetSlaveMask:
 11178                           	callstack 0
 11179                           
 11180 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
 11181 ;; Defined at:
 11182 ;;		line 331 in file "mcc_generated_files/i2c1_slave.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  slaveAddr       1    wreg     unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  slaveAddr       1    0[BANK0 ] unsigned char 
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      void 
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11196 ;;      Params:         0       0       0       0       0
 11197 ;;      Locals:         0       1       0       0       0
 11198 ;;      Temps:          0       0       0       0       0
 11199 ;;      Totals:         0       1       0       0       0
 11200 ;;Total ram usage:        1 bytes
 11201 ;; Hardware stack levels used: 1
 11202 ;; Hardware stack levels required when called: 15
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_I2C1_Open
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text6
 11211   001CC8                     __ptext6:
 11212                           	callstack 0
 11213   001CC8                     _I2C1_SlaveSetSlaveAddr:
 11214                           	callstack 13
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;incstack = 0
 11218                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
 11219   001CC8  0100               	movlb	0	; () banked
 11220   001CCA  6FDA               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),b
 11221                           
 11222                           ;mcc_generated_files/i2c1_slave.c: 331: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 332: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 333:     SSP1ADD = (uint8_t) (slaveAddr << 1);
 11223   001CCC  0100               	movlb	0	; () banked
 11224   001CCE  51DA               	movf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),w,b
 11225   001CD0  25DA               	addwf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),w,b
 11226   001CD2  6E92               	movwf	146,c	;volatile
 11227                           
 11228                           ; BSR set to: 0
 11229   001CD4  0012               	return		;funcret
 11230   001CD6                     __end_of_I2C1_SlaveSetSlaveAddr:
 11231                           	callstack 0
 11232                           
 11233 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
 11234 ;; Defined at:
 11235 ;;		line 229 in file "mcc_generated_files/i2c1_slave.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11238 ;;		 -> MasterW_SlaveR(1), I2C1_SlaveDefRdInterruptHandler(1), 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11250 ;;      Params:         0       2       0       0       0
 11251 ;;      Locals:         0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0
 11253 ;;      Totals:         0       2       0       0       0
 11254 ;;Total ram usage:        2 bytes
 11255 ;; Hardware stack levels used: 1
 11256 ;; Hardware stack levels required when called: 15
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_I2C1_Open
 11261 ;;		_i2c_slave_init
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text7
 11266   001D7A                     __ptext7:
 11267                           	callstack 0
 11268   001D7A                     _I2C1_SlaveSetReadIntHandler:
 11269                           	callstack 14
 11270                           
 11271                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveRdInterruptHandler = handler;
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;incstack = 0
 11275   001D7A  C0DA  F0C9         	movff	I2C1_SlaveSetReadIntHandler@handler,_I2C1_SlaveRdInterruptHandler
 11276   001D7E  C0DB  F0CA         	movff	I2C1_SlaveSetReadIntHandler@handler+1,_I2C1_SlaveRdInterruptHandler+1
 11277   001D82  0012               	return		;funcret
 11278   001D84                     __end_of_I2C1_SlaveSetReadIntHandler:
 11279                           	callstack 0
 11280                           
 11281 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
 11282 ;; Defined at:
 11283 ;;		line 223 in file "mcc_generated_files/i2c1_slave.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11286 ;;		 -> I2C1_Isr(1), 
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11298 ;;      Params:         0       2       0       0       0
 11299 ;;      Locals:         0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0
 11301 ;;      Totals:         0       2       0       0       0
 11302 ;;Total ram usage:        2 bytes
 11303 ;; Hardware stack levels used: 1
 11304 ;; Hardware stack levels required when called: 15
 11305 ;; This function calls:
 11306 ;;		Nothing
 11307 ;; This function is called by:
 11308 ;;		_I2C1_Open
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text8
 11313   001D84                     __ptext8:
 11314                           	callstack 0
 11315   001D84                     _I2C1_SlaveSetIsrHandler:
 11316                           	callstack 13
 11317                           
 11318                           ;mcc_generated_files/i2c1_slave.c: 223: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 224: {;mcc_generated_files/i2c1_slave.c: 22
      +                          5:     MSSP1_InterruptHandler = handler;
 11319                           
 11320                           ;incstack = 0
 11321   001D84  C0DA  F0CB         	movff	I2C1_SlaveSetIsrHandler@handler,_MSSP1_InterruptHandler
 11322   001D88  C0DB  F0CC         	movff	I2C1_SlaveSetIsrHandler@handler+1,_MSSP1_InterruptHandler+1
 11323   001D8C  0012               	return		;funcret
 11324   001D8E                     __end_of_I2C1_SlaveSetIsrHandler:
 11325                           	callstack 0
 11326                           
 11327 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
 11328 ;; Defined at:
 11329 ;;		line 295 in file "mcc_generated_files/i2c1_slave.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11332 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11344 ;;      Params:         0       2       0       0       0
 11345 ;;      Locals:         0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0
 11347 ;;      Totals:         0       2       0       0       0
 11348 ;;Total ram usage:        2 bytes
 11349 ;; Hardware stack levels used: 1
 11350 ;; Hardware stack levels required when called: 15
 11351 ;; This function calls:
 11352 ;;		Nothing
 11353 ;; This function is called by:
 11354 ;;		_I2C1_Open
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text9
 11359   001D8E                     __ptext9:
 11360                           	callstack 0
 11361   001D8E                     _I2C1_SlaveSetBusColIntHandler:
 11362                           	callstack 13
 11363                           
 11364                           ;mcc_generated_files/i2c1_slave.c: 296:     I2C1_SlaveBusColInterruptHandler = handler;
 11365                           
 11366                           ;incstack = 0
 11367   001D8E  C0DA  F0C3         	movff	I2C1_SlaveSetBusColIntHandler@handler,_I2C1_SlaveBusColInterruptHandler
 11368   001D92  C0DB  F0C4         	movff	I2C1_SlaveSetBusColIntHandler@handler+1,_I2C1_SlaveBusColInterruptHandler+1
 11369   001D96  0012               	return		;funcret
 11370   001D98                     __end_of_I2C1_SlaveSetBusColIntHandler:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
 11374 ;; Defined at:
 11375 ;;		line 263 in file "mcc_generated_files/i2c1_slave.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11378 ;;		 -> SlaveRdDevAddrFromBus(1), I2C1_SlaveDefAddrInterruptHandler(1), 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;		None
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11390 ;;      Params:         0       2       0       0       0
 11391 ;;      Locals:         0       0       0       0       0
 11392 ;;      Temps:          0       0       0       0       0
 11393 ;;      Totals:         0       2       0       0       0
 11394 ;;Total ram usage:        2 bytes
 11395 ;; Hardware stack levels used: 1
 11396 ;; Hardware stack levels required when called: 15
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_I2C1_Open
 11401 ;;		_i2c_slave_init
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text10
 11406   001D98                     __ptext10:
 11407                           	callstack 0
 11408   001D98                     _I2C1_SlaveSetAddrIntHandler:
 11409                           	callstack 14
 11410                           
 11411                           ;mcc_generated_files/i2c1_slave.c: 264:     I2C1_SlaveAddrInterruptHandler = handler;
 11412                           
 11413                           ;incstack = 0
 11414   001D98  C0DA  F0C5         	movff	I2C1_SlaveSetAddrIntHandler@handler,_I2C1_SlaveAddrInterruptHandler
 11415   001D9C  C0DB  F0C6         	movff	I2C1_SlaveSetAddrIntHandler@handler+1,_I2C1_SlaveAddrInterruptHandler+1
 11416   001DA0  0012               	return		;funcret
 11417   001DA2                     __end_of_I2C1_SlaveSetAddrIntHandler:
 11418                           	callstack 0
 11419                           
 11420 ;; *************** function _I2C1_SlaveOpen *****************
 11421 ;; Defined at:
 11422 ;;		line 310 in file "mcc_generated_files/i2c1_slave.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;		None
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      _Bool 
 11429 ;; Registers used:
 11430 ;;		wreg, status,2, status,0
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11436 ;;      Params:         0       0       0       0       0
 11437 ;;      Locals:         0       0       0       0       0
 11438 ;;      Temps:          0       0       0       0       0
 11439 ;;      Totals:         0       0       0       0       0
 11440 ;;Total ram usage:        0 bytes
 11441 ;; Hardware stack levels used: 1
 11442 ;; Hardware stack levels required when called: 15
 11443 ;; This function calls:
 11444 ;;		Nothing
 11445 ;; This function is called by:
 11446 ;;		_I2C1_Open
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           	psect	text11
 11451   001C44                     __ptext11:
 11452                           	callstack 0
 11453   001C44                     _I2C1_SlaveOpen:
 11454                           	callstack 13
 11455                           
 11456                           ;mcc_generated_files/i2c1_slave.c: 312:     if(!SSP1CON1bits.SSPEN)
 11457                           
 11458                           ;incstack = 0
 11459   001C44  BA95               	btfsc	149,5,c	;volatile
 11460   001C46  0012               	return	
 11461                           
 11462                           ;mcc_generated_files/i2c1_slave.c: 313:     {;mcc_generated_files/i2c1_slave.c: 314:    
      +                               SSP1STAT = 0x00;
 11463   001C48  6A94               	clrf	148,c	;volatile
 11464                           
 11465                           ;mcc_generated_files/i2c1_slave.c: 315:         SSP1CON1 |= 0x06;
 11466   001C4A  0E06               	movlw	6
 11467   001C4C  1295               	iorwf	149,f,c	;volatile
 11468                           
 11469                           ;mcc_generated_files/i2c1_slave.c: 316:         SSP1CON2 = 0x81;
 11470   001C4E  0E81               	movlw	129
 11471   001C50  6E96               	movwf	150,c	;volatile
 11472                           
 11473                           ;mcc_generated_files/i2c1_slave.c: 317:         SSP1CON1bits.SSPEN = 1;
 11474   001C52  8A95               	bsf	149,5,c	;volatile
 11475   001C54  0012               	return		;funcret
 11476   001C56                     __end_of_I2C1_SlaveOpen:
 11477                           	callstack 0
 11478                           
 11479 ;; *************** function _I2C1_SlaveEnableIrq *****************
 11480 ;; Defined at:
 11481 ;;		line 341 in file "mcc_generated_files/i2c1_slave.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      void 
 11488 ;; Registers used:
 11489 ;;		None
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11495 ;;      Params:         0       0       0       0       0
 11496 ;;      Locals:         0       0       0       0       0
 11497 ;;      Temps:          0       0       0       0       0
 11498 ;;      Totals:         0       0       0       0       0
 11499 ;;Total ram usage:        0 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 15
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_I2C1_Open
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text12
 11510   001E12                     __ptext12:
 11511                           	callstack 0
 11512   001E12                     _I2C1_SlaveEnableIrq:
 11513                           	callstack 13
 11514                           
 11515                           ;mcc_generated_files/i2c1_slave.c: 343:     PIE3bits.SSP1IE = 1;
 11516                           
 11517                           ;incstack = 0
 11518   001E12  010E               	movlb	14	; () banked
 11519   001E14  81C0               	bsf	192,0,b	;volatile
 11520                           
 11521                           ; BSR set to: 14
 11522   001E16  0012               	return		;funcret
 11523   001E18                     __end_of_I2C1_SlaveEnableIrq:
 11524                           	callstack 0
 11525                           
 11526 ;; *************** function _eeprom_handle_writing *****************
 11527 ;; Defined at:
 11528 ;;		line 43 in file "eeprom.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  eeAddr          1   12[BANK0 ] unsigned char 
 11533 ;;  bitval          1   11[BANK0 ] unsigned char 
 11534 ;;  bi              1   13[BANK0 ] unsigned char 
 11535 ;;  by              1   14[BANK0 ] unsigned char 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  1    wreg      void 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11545 ;;      Params:         0       0       0       0       0
 11546 ;;      Locals:         0       4       0       0       0
 11547 ;;      Temps:          0       2       0       0       0
 11548 ;;      Totals:         0       6       0       0       0
 11549 ;;Total ram usage:        6 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 17
 11552 ;; This function calls:
 11553 ;;		_eeprom_write_byte
 11554 ;;		_i2c_slave_get_state
 11555 ;; This function is called by:
 11556 ;;		_main
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560                           	psect	text13
 11561   000E96                     __ptext13:
 11562                           	callstack 0
 11563   000E96                     _eeprom_handle_writing:
 11564                           	callstack 13
 11565                           
 11566                           ;eeprom.c: 47:     if(i2c_slave_get_state() != eIdle)
 11567                           
 11568                           ; BSR set to: 14
 11569                           ;incstack = 0
 11570   000E96  EC0C  F00F         	call	_i2c_slave_get_state	;wreg free
 11571   000E9A  0900               	iorlw	0
 11572   000E9C  A4D8               	btfss	status,2,c
 11573   000E9E  0012               	return	
 11574                           
 11575                           ;eeprom.c: 51:     for(uint8_t by = 0;by < (256 / 8); by++)
 11576   000EA0  0100               	movlb	0	; () banked
 11577   000EA2  6BE8               	clrf	eeprom_handle_writing@by& (0+255),b
 11578   000EA4                     l5264:
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;eeprom.c: 52:     {;eeprom.c: 55:         if(!E2_Changes[by])
 11582   000EA4  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
 11583   000EA6  0F91               	addlw	low _E2_Changes
 11584   000EA8  6ED9               	movwf	fsr2l,c
 11585   000EAA  6ADA               	clrf	fsr2h,c
 11586   000EAC  50DF               	movf	indf2,w,c
 11587   000EAE  B4D8               	btfsc	status,2,c
 11588   000EB0  D03A               	goto	u3560
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;eeprom.c: 59:         for(uint8_t bi = 0; E2_Changes[by] && bi < 8; bi++)
 11592   000EB2  6BE7               	clrf	eeprom_handle_writing@bi& (0+255),b
 11593   000EB4  D02E               	goto	l5282
 11594   000EB6                     l5268:
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;eeprom.c: 60:         {;eeprom.c: 63:             if(i2c_slave_get_state() != eIdle)
 11598   000EB6  EC0C  F00F         	call	_i2c_slave_get_state	;wreg free
 11599   000EBA  0900               	iorlw	0
 11600   000EBC  A4D8               	btfss	status,2,c
 11601   000EBE  0012               	return	
 11602                           
 11603                           ;eeprom.c: 67:             uint8_t bitval = (uint8_t)(1 << bi);
 11604   000EC0  C0E7  F0E3         	movff	eeprom_handle_writing@bi,??_eeprom_handle_writing
 11605   000EC4  0E01               	movlw	1
 11606   000EC6  0100               	movlb	0	; () banked
 11607   000EC8  6FE4               	movwf	(??_eeprom_handle_writing+1)& (0+255),b
 11608   000ECA  2BE3               	incf	??_eeprom_handle_writing& (0+255),f,b
 11609   000ECC  D002               	goto	u3534
 11610   000ECE                     u3535:
 11611   000ECE  90D8               	bcf	status,0,c
 11612   000ED0  37E4               	rlcf	(??_eeprom_handle_writing+1)& (0+255),f,b
 11613   000ED2                     u3534:
 11614   000ED2  2FE3               	decfsz	??_eeprom_handle_writing& (0+255),f,b
 11615   000ED4  D7FC               	goto	u3535
 11616   000ED6  0100               	movlb	0	; () banked
 11617   000ED8  51E4               	movf	(??_eeprom_handle_writing+1)& (0+255),w,b
 11618   000EDA  6FE5               	movwf	eeprom_handle_writing@bitval& (0+255),b
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;eeprom.c: 70:             if(E2_Changes[by] & bitval)
 11622   000EDC  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
 11623   000EDE  0F91               	addlw	low _E2_Changes
 11624   000EE0  6ED9               	movwf	fsr2l,c
 11625   000EE2  6ADA               	clrf	fsr2h,c
 11626   000EE4  50DF               	movf	indf2,w,c
 11627   000EE6  15E5               	andwf	eeprom_handle_writing@bitval& (0+255),w,b
 11628   000EE8  0900               	iorlw	0
 11629   000EEA  B4D8               	btfsc	status,2,c
 11630   000EEC  D010               	goto	l5280
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;eeprom.c: 71:             {;eeprom.c: 73:                 eeAddr_t eeAddr = (eeAddr_t)(
      +                          ((uint16_t)by << 3) + bi);
 11634   000EEE  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
 11635   000EF0  0D08               	mullw	8
 11636   000EF2  50F3               	movf	243,w,c
 11637   000EF4  25E7               	addwf	eeprom_handle_writing@bi& (0+255),w,b
 11638   000EF6  6FE6               	movwf	eeprom_handle_writing@eeAddr& (0+255),b
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;eeprom.c: 76:                 eeprom_write_byte((eeAddr_t)eeAddr, E2_DATA[eeAddr]);
 11642   000EF8  0E00               	movlw	low _E2_DATA
 11643   000EFA  25E6               	addwf	eeprom_handle_writing@eeAddr& (0+255),w,b
 11644   000EFC  6ED9               	movwf	fsr2l,c
 11645   000EFE  6ADA               	clrf	fsr2h,c
 11646   000F00  0E02               	movlw	high _E2_DATA
 11647   000F02  22DA               	addwfc	fsr2h,f,c
 11648   000F04  50DF               	movf	indf2,w,c
 11649   000F06  6FDD               	movwf	eeprom_write_byte@data& (0+255),b
 11650   000F08  51E6               	movf	eeprom_handle_writing@eeAddr& (0+255),w,b
 11651   000F0A  EC3B  F00B         	call	_eeprom_write_byte
 11652   000F0E                     l5280:
 11653                           
 11654                           ;eeprom.c: 79:         }
 11655   000F0E  0100               	movlb	0	; () banked
 11656   000F10  2BE7               	incf	eeprom_handle_writing@bi& (0+255),f,b
 11657   000F12                     l5282:
 11658                           
 11659                           ; BSR set to: 0
 11660   000F12  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
 11661   000F14  0F91               	addlw	low _E2_Changes
 11662   000F16  6ED9               	movwf	fsr2l,c
 11663   000F18  6ADA               	clrf	fsr2h,c
 11664   000F1A  50DF               	movf	indf2,w,c
 11665   000F1C  B4D8               	btfsc	status,2,c
 11666   000F1E  D003               	goto	u3560
 11667                           
 11668                           ; BSR set to: 0
 11669   000F20  0E07               	movlw	7
 11670   000F22  65E7               	cpfsgt	eeprom_handle_writing@bi& (0+255),b
 11671   000F24  D7C8               	goto	l5268
 11672   000F26                     u3560:
 11673                           
 11674                           ; BSR set to: 0
 11675   000F26  2BE8               	incf	eeprom_handle_writing@by& (0+255),f,b
 11676                           
 11677                           ; BSR set to: 0
 11678   000F28  0E1F               	movlw	31
 11679   000F2A  65E8               	cpfsgt	eeprom_handle_writing@by& (0+255),b
 11680   000F2C  D7BB               	goto	l5264
 11681   000F2E  0012               	return	
 11682   000F30                     __end_of_eeprom_handle_writing:
 11683                           	callstack 0
 11684                           
 11685 ;; *************** function _i2c_slave_get_state *****************
 11686 ;; Defined at:
 11687 ;;		line 18 in file "i2c_slave.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;		None
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;		None
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      enum E10201
 11694 ;; Registers used:
 11695 ;;		wreg, status,2
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11701 ;;      Params:         0       0       0       0       0
 11702 ;;      Locals:         0       0       0       0       0
 11703 ;;      Temps:          0       0       0       0       0
 11704 ;;      Totals:         0       0       0       0       0
 11705 ;;Total ram usage:        0 bytes
 11706 ;; Hardware stack levels used: 1
 11707 ;; Hardware stack levels required when called: 15
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_eeprom_handle_writing
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text14
 11716   001E18                     __ptext14:
 11717                           	callstack 0
 11718   001E18                     _i2c_slave_get_state:
 11719                           	callstack 14
 11720                           
 11721                           ;i2c_slave.c: 20:     return i2c.state;
 11722                           
 11723                           ;incstack = 0
 11724   001E18  0100               	movlb	0	; () banked
 11725   001E1A  51D4               	movf	(_i2c+3)& (0+255),w,b	;volatile
 11726                           
 11727                           ; BSR set to: 0
 11728   001E1C  0012               	return		;funcret
 11729   001E1E                     __end_of_i2c_slave_get_state:
 11730                           	callstack 0
 11731                           
 11732 ;; *************** function _eeprom_write_byte *****************
 11733 ;; Defined at:
 11734 ;;		line 17 in file "eeprom.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  addr            1    wreg     unsigned char 
 11737 ;;  data            1    3[BANK0 ] unsigned char 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  addr            1    8[BANK0 ] unsigned char 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11749 ;;      Params:         0       1       0       0       0
 11750 ;;      Locals:         0       1       0       0       0
 11751 ;;      Temps:          0       4       0       0       0
 11752 ;;      Totals:         0       6       0       0       0
 11753 ;;Total ram usage:        6 bytes
 11754 ;; Hardware stack levels used: 1
 11755 ;; Hardware stack levels required when called: 16
 11756 ;; This function calls:
 11757 ;;		_DATAEE_WriteByte
 11758 ;; This function is called by:
 11759 ;;		_eeprom_handle_writing
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text15
 11764   001676                     __ptext15:
 11765                           	callstack 0
 11766   001676                     _eeprom_write_byte:
 11767                           	callstack 13
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;incstack = 0
 11771                           ;eeprom_write_byte@addr stored from wreg
 11772   001676  0100               	movlb	0	; () banked
 11773   001678  6FE2               	movwf	eeprom_write_byte@addr& (0+255),b
 11774                           
 11775                           ;eeprom.c: 17: static void eeprom_write_byte(eeAddr_t addr, uint8_t data);eeprom.c: 18: 
      +                          {;eeprom.c: 20:     DATAEE_WriteByte(addr, data);
 11776   00167A  C0DD  F0DA         	movff	eeprom_write_byte@data,DATAEE_WriteByte@bData
 11777   00167E  0100               	movlb	0	; () banked
 11778   001680  51E2               	movf	eeprom_write_byte@addr& (0+255),w,b
 11779   001682  EC50  F00C         	call	_DATAEE_WriteByte
 11780                           
 11781                           ;eeprom.c: 21:     E2_Changes[addr >> 3] &= ~(1 << (addr & 0x7));
 11782   001686  C0E2  F0DE         	movff	eeprom_write_byte@addr,??_eeprom_write_byte
 11783   00168A  0E07               	movlw	7
 11784   00168C  0100               	movlb	0	; () banked
 11785   00168E  17DE               	andwf	??_eeprom_write_byte& (0+255),f,b
 11786   001690  0E01               	movlw	1
 11787   001692  6FDF               	movwf	(??_eeprom_write_byte+1)& (0+255),b
 11788   001694  2BDE               	incf	??_eeprom_write_byte& (0+255),f,b
 11789   001696  D002               	goto	u3264
 11790   001698                     u3265:
 11791   001698  90D8               	bcf	status,0,c
 11792   00169A  37DF               	rlcf	(??_eeprom_write_byte+1)& (0+255),f,b
 11793   00169C                     u3264:
 11794   00169C  2FDE               	decfsz	??_eeprom_write_byte& (0+255),f,b
 11795   00169E  D7FC               	goto	u3265
 11796   0016A0  0100               	movlb	0	; () banked
 11797   0016A2  51DF               	movf	(??_eeprom_write_byte+1)& (0+255),w,b
 11798   0016A4  0AFF               	xorlw	255
 11799   0016A6  6FE0               	movwf	(??_eeprom_write_byte+2)& (0+255),b
 11800   0016A8  C0E2  F0E1         	movff	eeprom_write_byte@addr,??_eeprom_write_byte+3
 11801   0016AC  90D8               	bcf	status,0,c
 11802   0016AE  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
 11803   0016B0  90D8               	bcf	status,0,c
 11804   0016B2  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
 11805   0016B4  90D8               	bcf	status,0,c
 11806   0016B6  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
 11807   0016B8  51E1               	movf	(??_eeprom_write_byte+3)& (0+255),w,b
 11808   0016BA  0F91               	addlw	low _E2_Changes
 11809   0016BC  6ED9               	movwf	fsr2l,c
 11810   0016BE  6ADA               	clrf	fsr2h,c
 11811   0016C0  51E0               	movf	(??_eeprom_write_byte+2)& (0+255),w,b
 11812   0016C2  16DF               	andwf	indf2,f,c
 11813                           
 11814                           ; BSR set to: 0
 11815   0016C4  0012               	return		;funcret
 11816   0016C6                     __end_of_eeprom_write_byte:
 11817                           	callstack 0
 11818                           
 11819 ;; *************** function _DATAEE_WriteByte *****************
 11820 ;; Defined at:
 11821 ;;		line 226 in file "mcc_generated_files/memory.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  bAdd            1    wreg     unsigned char 
 11824 ;;  bData           1    0[BANK0 ] unsigned char 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  bAdd            1    1[BANK0 ] unsigned char 
 11827 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, status,2
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11837 ;;      Params:         0       1       0       0       0
 11838 ;;      Locals:         0       2       0       0       0
 11839 ;;      Temps:          0       0       0       0       0
 11840 ;;      Totals:         0       3       0       0       0
 11841 ;;Total ram usage:        3 bytes
 11842 ;; Hardware stack levels used: 1
 11843 ;; Hardware stack levels required when called: 15
 11844 ;; This function calls:
 11845 ;;		Nothing
 11846 ;; This function is called by:
 11847 ;;		_eeprom_write_byte
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           	psect	text16
 11852   0018A0                     __ptext16:
 11853                           	callstack 0
 11854   0018A0                     _DATAEE_WriteByte:
 11855                           	callstack 13
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;incstack = 0
 11859                           ;DATAEE_WriteByte@bAdd stored from wreg
 11860   0018A0  0100               	movlb	0	; () banked
 11861   0018A2  6FDB               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 11862                           
 11863                           ;mcc_generated_files/memory.c: 226: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);m
      +                          cc_generated_files/memory.c: 227: {;mcc_generated_files/memory.c: 228:     uint8_t GIEBi
      +                          tValue = INTCONbits.GIE;
 11864   0018A4  0E00               	movlw	0
 11865   0018A6  BEF2               	btfsc	242,7,c	;volatile
 11866   0018A8  0E01               	movlw	1
 11867   0018AA  0100               	movlb	0	; () banked
 11868   0018AC  6FDC               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;mcc_generated_files/memory.c: 231:     NVMADRU = 0x31;
 11872   0018AE  0E31               	movlw	49
 11873   0018B0  6E7B               	movwf	123,c	;volatile
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;mcc_generated_files/memory.c: 232:     NVMADRH = 0x00;
 11877   0018B2  6A7A               	clrf	122,c	;volatile
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;mcc_generated_files/memory.c: 233:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11881   0018B4  C0DB  FF79         	movff	DATAEE_WriteByte@bAdd,3961	;volatile
 11882                           
 11883                           ; BSR set to: 0
 11884                           ;mcc_generated_files/memory.c: 236:     NVMDATL = (uint8_t)(bData & 0xFF);
 11885   0018B8  C0DA  FF7C         	movff	DATAEE_WriteByte@bData,3964	;volatile
 11886                           
 11887                           ; BSR set to: 0
 11888                           ;mcc_generated_files/memory.c: 239:     NVMCON0bits.NVMEN = 1;
 11889   0018BC  8E7F               	bsf	127,7,c	;volatile
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;mcc_generated_files/memory.c: 242:     INTCONbits.GIE = 0;
 11893   0018BE  9EF2               	bcf	242,7,c	;volatile
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;mcc_generated_files/memory.c: 245:     NVMCON2 = 0x55;
 11897   0018C0  0E55               	movlw	85
 11898   0018C2  6E81               	movwf	129,c	;volsfr
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;mcc_generated_files/memory.c: 246:     NVMCON2 = 0xAA;
 11902   0018C4  0EAA               	movlw	170
 11903   0018C6  6E81               	movwf	129,c	;volsfr
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;mcc_generated_files/memory.c: 249:     NVMCON1bits.WR = 1;
 11907   0018C8  8880               	bsf	128,4,c	;volsfr
 11908   0018CA                     l666:
 11909   0018CA  B880               	btfsc	128,4,c	;volsfr
 11910   0018CC  D7FE               	goto	l666
 11911                           
 11912                           ;mcc_generated_files/memory.c: 253:     INTCONbits.GIE = GIEBitValue;
 11913   0018CE  0100               	movlb	0	; () banked
 11914   0018D0  B1DC               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 11915   0018D2  D002               	bra	u2965
 11916   0018D4  9EF2               	bcf	242,7,c	;volatile
 11917   0018D6  D001               	bra	u2966
 11918   0018D8                     u2965:
 11919   0018D8  8EF2               	bsf	242,7,c	;volatile
 11920   0018DA                     u2966:
 11921                           
 11922                           ;mcc_generated_files/memory.c: 256:     NVMCON0bits.NVMEN = 0;
 11923   0018DA  9E7F               	bcf	127,7,c	;volatile
 11924   0018DC  0012               	return		;funcret
 11925   0018DE                     __end_of_DATAEE_WriteByte:
 11926                           	callstack 0
 11927                           
 11928 ;; *************** function _eeprom_buffer_whole *****************
 11929 ;; Defined at:
 11930 ;;		line 36 in file "eeprom.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  b               2    2[BANK0 ] unsigned short 
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      void 
 11937 ;; Registers used:
 11938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11944 ;;      Params:         0       0       0       0       0
 11945 ;;      Locals:         0       2       0       0       0
 11946 ;;      Temps:          0       0       0       0       0
 11947 ;;      Totals:         0       2       0       0       0
 11948 ;;Total ram usage:        2 bytes
 11949 ;; Hardware stack levels used: 1
 11950 ;; Hardware stack levels required when called: 17
 11951 ;; This function calls:
 11952 ;;		_eeprom_read_byte
 11953 ;; This function is called by:
 11954 ;;		_main
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text17
 11959   0019E0                     __ptext17:
 11960                           	callstack 0
 11961   0019E0                     _eeprom_buffer_whole:
 11962                           	callstack 13
 11963                           
 11964                           ;eeprom.c: 39:     for(uint16_t b = 0; b < 256; b++)
 11965                           
 11966                           ;incstack = 0
 11967   0019E0  0E00               	movlw	0
 11968   0019E2  0100               	movlb	0	; () banked
 11969   0019E4  6FDD               	movwf	(eeprom_buffer_whole@b+1)& (0+255),b
 11970   0019E6  0E00               	movlw	0
 11971   0019E8  6FDC               	movwf	eeprom_buffer_whole@b& (0+255),b
 11972   0019EA                     l5228:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;eeprom.c: 40:         E2_DATA[b] = eeprom_read_byte((eeAddr_t)b);
 11976   0019EA  0E00               	movlw	low _E2_DATA
 11977   0019EC  25DC               	addwf	eeprom_buffer_whole@b& (0+255),w,b
 11978   0019EE  6ED9               	movwf	fsr2l,c
 11979   0019F0  0E02               	movlw	high _E2_DATA
 11980   0019F2  21DD               	addwfc	(eeprom_buffer_whole@b+1)& (0+255),w,b
 11981   0019F4  6EDA               	movwf	fsr2h,c
 11982   0019F6  51DC               	movf	eeprom_buffer_whole@b& (0+255),w,b
 11983   0019F8  EC6B  F00E         	call	_eeprom_read_byte
 11984   0019FC  6EDF               	movwf	indf2,c
 11985   0019FE  0100               	movlb	0	; () banked
 11986   001A00  4BDC               	infsnz	eeprom_buffer_whole@b& (0+255),f,b
 11987   001A02  2BDD               	incf	(eeprom_buffer_whole@b+1)& (0+255),f,b
 11988                           
 11989                           ; BSR set to: 0
 11990   001A04  05DD               	decf	(eeprom_buffer_whole@b+1)& (0+255),w,b
 11991   001A06  B0D8               	btfsc	status,0,c
 11992   001A08  0012               	return	
 11993   001A0A  D7EF               	goto	l5228
 11994   001A0C                     __end_of_eeprom_buffer_whole:
 11995                           	callstack 0
 11996                           
 11997 ;; *************** function _eeprom_read_byte *****************
 11998 ;; Defined at:
 11999 ;;		line 12 in file "eeprom.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  addr            1    wreg     unsigned char 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;  addr            1    1[BANK0 ] unsigned char 
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      unsigned char 
 12006 ;; Registers used:
 12007 ;;		wreg, status,2, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12013 ;;      Params:         0       0       0       0       0
 12014 ;;      Locals:         0       1       0       0       0
 12015 ;;      Temps:          0       0       0       0       0
 12016 ;;      Totals:         0       1       0       0       0
 12017 ;;Total ram usage:        1 bytes
 12018 ;; Hardware stack levels used: 1
 12019 ;; Hardware stack levels required when called: 16
 12020 ;; This function calls:
 12021 ;;		_DATAEE_ReadByte
 12022 ;; This function is called by:
 12023 ;;		_eeprom_buffer_whole
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text18
 12028   001CD6                     __ptext18:
 12029                           	callstack 0
 12030   001CD6                     _eeprom_read_byte:
 12031                           	callstack 13
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;incstack = 0
 12035                           ;eeprom_read_byte@addr stored from wreg
 12036   001CD6  0100               	movlb	0	; () banked
 12037   001CD8  6FDB               	movwf	eeprom_read_byte@addr& (0+255),b
 12038                           
 12039                           ;eeprom.c: 12: static uint8_t eeprom_read_byte(eeAddr_t addr);eeprom.c: 13: {;eeprom.c: 
      +                          14:     return DATAEE_ReadByte(addr);
 12040   001CDA  0100               	movlb	0	; () banked
 12041   001CDC  51DB               	movf	eeprom_read_byte@addr& (0+255),w,b
 12042   001CDE  ECBE  F00D         	call	_DATAEE_ReadByte
 12043   001CE2  0012               	return		;funcret
 12044   001CE4                     __end_of_eeprom_read_byte:
 12045                           	callstack 0
 12046                           
 12047 ;; *************** function _DATAEE_ReadByte *****************
 12048 ;; Defined at:
 12049 ;;		line 259 in file "mcc_generated_files/memory.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;  bAdd            1    wreg     unsigned char 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  bAdd            1    0[BANK0 ] unsigned char 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      unsigned char 
 12056 ;; Registers used:
 12057 ;;		wreg, status,2
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12063 ;;      Params:         0       0       0       0       0
 12064 ;;      Locals:         0       1       0       0       0
 12065 ;;      Temps:          0       0       0       0       0
 12066 ;;      Totals:         0       1       0       0       0
 12067 ;;Total ram usage:        1 bytes
 12068 ;; Hardware stack levels used: 1
 12069 ;; Hardware stack levels required when called: 15
 12070 ;; This function calls:
 12071 ;;		Nothing
 12072 ;; This function is called by:
 12073 ;;		_eeprom_read_byte
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text19
 12078   001B7C                     __ptext19:
 12079                           	callstack 0
 12080   001B7C                     _DATAEE_ReadByte:
 12081                           	callstack 13
 12082                           
 12083                           ;incstack = 0
 12084                           ;DATAEE_ReadByte@bAdd stored from wreg
 12085   001B7C  0100               	movlb	0	; () banked
 12086   001B7E  6FDA               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 12087                           
 12088                           ;mcc_generated_files/memory.c: 259: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 260: {;mcc_generated_files/memory.c: 262:     NVMADRU = 0x31;
 12089   001B80  0E31               	movlw	49
 12090   001B82  6E7B               	movwf	123,c	;volatile
 12091                           
 12092                           ;mcc_generated_files/memory.c: 263:     NVMADRH = 0x00;
 12093   001B84  6A7A               	clrf	122,c	;volatile
 12094                           
 12095                           ;mcc_generated_files/memory.c: 264:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12096   001B86  C0DA  FF79         	movff	DATAEE_ReadByte@bAdd,3961	;volatile
 12097                           
 12098                           ;mcc_generated_files/memory.c: 268:     NVMCON1bits.RD = 1;
 12099   001B8A  8080               	bsf	128,0,c	;volsfr
 12100                           
 12101                           ;mcc_generated_files/memory.c: 269:     __nop();
 12102   001B8C  0000               	nop	
 12103                           
 12104                           ;mcc_generated_files/memory.c: 270:     __nop();
 12105   001B8E  0000               	nop	
 12106                           
 12107                           ;mcc_generated_files/memory.c: 272:     return (NVMDATL);
 12108   001B90  507C               	movf	124,w,c	;volatile
 12109   001B92  0012               	return		;funcret
 12110   001B94                     __end_of_DATAEE_ReadByte:
 12111                           	callstack 0
 12112                           
 12113 ;; *************** function _analog_init *****************
 12114 ;; Defined at:
 12115 ;;		line 56 in file "analog.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;		None
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  i               1    2[BANK0 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12129 ;;      Params:         0       0       0       0       0
 12130 ;;      Locals:         0       1       0       0       0
 12131 ;;      Temps:          0       0       0       0       0
 12132 ;;      Totals:         0       1       0       0       0
 12133 ;;Total ram usage:        1 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 23
 12136 ;; This function calls:
 12137 ;;		_analog_select_pos_ref_idx
 12138 ;; This function is called by:
 12139 ;;		_main
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text20
 12144   001B46                     __ptext20:
 12145                           	callstack 0
 12146   001B46                     _analog_init:
 12147                           	callstack 7
 12148                           
 12149                           ;analog.c: 59:     for(uint8_t i=0; i < ( eEXP_PORT_CNT * 8 ); i++)
 12150                           
 12151                           ;incstack = 0
 12152   001B46  0100               	movlb	0	; () banked
 12153   001B48  6BDC               	clrf	analog_init@i& (0+255),b
 12154   001B4A                     l5240:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;analog.c: 60:         analog_select_pos_ref_idx(i, eARef_2048mV);
 12158   001B4A  0E02               	movlw	2
 12159   001B4C  6FDA               	movwf	analog_select_pos_ref_idx@ref& (0+255),b
 12160   001B4E  51DC               	movf	analog_init@i& (0+255),w,b
 12161   001B50  EC30  F00C         	call	_analog_select_pos_ref_idx
 12162   001B54  0100               	movlb	0	; () banked
 12163   001B56  2BDC               	incf	analog_init@i& (0+255),f,b
 12164                           
 12165                           ; BSR set to: 0
 12166   001B58  0E0F               	movlw	15
 12167   001B5A  65DC               	cpfsgt	analog_init@i& (0+255),b
 12168   001B5C  D7F6               	goto	l5240
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;analog.c: 63:     analog.ch_sampled = 255;
 12172   001B5E  6990               	setf	(_analog+48)& (0+255),b
 12173                           
 12174                           ; BSR set to: 0
 12175   001B60  0012               	return		;funcret
 12176   001B62                     __end_of_analog_init:
 12177                           	callstack 0
 12178                           
 12179 ;; *************** function _analog_select_pos_ref_idx *****************
 12180 ;; Defined at:
 12181 ;;		line 13 in file "analog.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  idx             1    wreg     unsigned char 
 12184 ;;  ref             1    0[BANK0 ] enum E10193
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  idx             1    1[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12196 ;;      Params:         0       1       0       0       0
 12197 ;;      Locals:         0       1       0       0       0
 12198 ;;      Temps:          0       0       0       0       0
 12199 ;;      Totals:         0       2       0       0       0
 12200 ;;Total ram usage:        2 bytes
 12201 ;; Hardware stack levels used: 1
 12202 ;; Hardware stack levels required when called: 22
 12203 ;; This function calls:
 12204 ;;		___assert_fail
 12205 ;; This function is called by:
 12206 ;;		_analog_init
 12207 ;;		_analog_select_pos_ref
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text21
 12212   001860                     __ptext21:
 12213                           	callstack 0
 12214   001860                     _analog_select_pos_ref_idx:
 12215                           	callstack 7
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;incstack = 0
 12219                           ;analog_select_pos_ref_idx@idx stored from wreg
 12220   001860  0100               	movlb	0	; () banked
 12221   001862  6FDB               	movwf	analog_select_pos_ref_idx@idx& (0+255),b
 12222                           
 12223                           ;analog.c: 13: void analog_select_pos_ref_idx(uint8_t idx, eAnalogPosRef_t ref);analog.c
      +                          : 14: {;analog.c: 15:     ((void)((idx < ( eEXP_PORT_CNT * 8 )) || (__assert_fail("idx <
      +                           EXP_PINS_COUNT", "analog.c", 15, __func__),0)));
 12224   001864  0E0F               	movlw	15
 12225   001866  0100               	movlb	0	; () banked
 12226   001868  65DB               	cpfsgt	analog_select_pos_ref_idx@idx& (0+255),b
 12227   00186A  D012               	goto	l5082
 12228                           
 12229                           ; BSR set to: 0
 12230   00186C  0E13               	movlw	low STR_64
 12231   00186E  6EE6               	movwf	postinc1,c
 12232   001870  0E3F               	movlw	high STR_64
 12233   001872  6EE6               	movwf	postinc1,c
 12234   001874  0E0F               	movlw	15
 12235   001876  6EE6               	movwf	postinc1,c
 12236   001878  0E00               	movlw	0
 12237   00187A  6EE6               	movwf	postinc1,c
 12238   00187C  0ED3               	movlw	low STR_63
 12239   00187E  6EE6               	movwf	postinc1,c
 12240   001880  0E3F               	movlw	high STR_63
 12241   001882  6EE6               	movwf	postinc1,c
 12242   001884  0E88               	movlw	low STR_62
 12243   001886  6EE6               	movwf	postinc1,c
 12244   001888  0E3F               	movlw	high STR_62
 12245   00188A  6EE6               	movwf	postinc1,c
 12246   00188C  ECAA  F00B         	call	___assert_fail	;wreg free
 12247   001890                     l5082:
 12248                           
 12249                           ;analog.c: 16:     analog.ref[idx] = ref;
 12250   001890  0100               	movlb	0	; () banked
 12251   001892  51DB               	movf	analog_select_pos_ref_idx@idx& (0+255),w,b
 12252   001894  0F60               	addlw	low _analog
 12253   001896  6ED9               	movwf	fsr2l,c
 12254   001898  6ADA               	clrf	fsr2h,c
 12255   00189A  C0DA  FFDF         	movff	analog_select_pos_ref_idx@ref,indf2
 12256                           
 12257                           ; BSR set to: 0
 12258   00189E  0012               	return		;funcret
 12259   0018A0                     __end_of_analog_select_pos_ref_idx:
 12260                           	callstack 0
 12261                           
 12262 ;; *************** function ___assert_fail *****************
 12263 ;; Defined at:
 12264 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\assert.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  expr            2  [STACK] PTR const unsigned char 
 12267 ;;		 -> STR_71(21), STR_65(21), STR_59(23), STR_53(22), 
 12268 ;;		 -> STR_47(21), STR_41(23), STR_35(22), STR_29(23), 
 12269 ;;		 -> STR_23(22), STR_17(21), STR_11(23), STR_5(22), 
 12270 ;;  file            2  [STACK] PTR const unsigned char 
 12271 ;;		 -> STR_72(9), STR_66(9), STR_60(12), STR_54(12), 
 12272 ;;		 -> STR_48(12), STR_42(12), STR_36(12), STR_30(12), 
 12273 ;;		 -> STR_24(12), STR_18(12), STR_12(12), STR_6(12), 
 12274 ;;  line            2  [STACK] int 
 12275 ;;  func            2  [STACK] PTR const unsigned char 
 12276 ;;		 -> STR_73(23), STR_67(26), STR_61(9), STR_55(9), 
 12277 ;;		 -> STR_49(9), STR_43(9), STR_37(9), STR_31(8), 
 12278 ;;		 -> STR_25(8), STR_19(8), STR_13(8), STR_7(8), 
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1  [STACK] void 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 0/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12290 ;;      Params:         0       0       0       0       0
 12291 ;;      Locals:         0       0       0       0       0
 12292 ;;      Temps:          0       0       0       0       0
 12293 ;;      Totals:         0       0       0       0       0
 12294 ;;Total ram usage:        0 bytes
 12295 ;; Hardware stack levels used: 1
 12296 ;; Hardware stack levels required when called: 21
 12297 ;; This function calls:
 12298 ;;		_abort
 12299 ;;		_printf
 12300 ;; This function is called by:
 12301 ;;		_ReadBit
 12302 ;;		_ReadReg
 12303 ;;		_WriteBit
 12304 ;;		_WriteReg
 12305 ;;		_analog_select_pos_ref_idx
 12306 ;;		_analog_get_adc_val_idx
 12307 ;; This function uses a reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text22
 12311   001754                     __ptext22:
 12312                           	callstack 0
 12313   001754                     ___assert_fail:
 12314                           	callstack 0
 12315                           
 12316                           ;stkvar	___assert_fail@line @ sp[(0)+-6]
 12317                           
 12318                           ; BSR set to: 0
 12319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12320                           ;incstack = 0
 12321 ;; hardware stack exceeded
 12322   001754  0EFA               	movlw	-6
 12323   001756  CFE3 FFE6          	movff	plusw1,postinc1
 12324   00175A  CFE3 FFE6          	movff	plusw1,postinc1
 12325                           
 12326                           ;stkvar	___assert_fail@func @ sp[(-2)+-8]
 12327   00175E  0EF6               	movlw	-10
 12328   001760  CFE3 FFE6          	movff	plusw1,postinc1
 12329   001764  CFE3 FFE6          	movff	plusw1,postinc1
 12330                           
 12331                           ;stkvar	___assert_fail@file @ sp[(-4)+-4]
 12332   001768  0EF8               	movlw	-8
 12333   00176A  CFE3 FFE6          	movff	plusw1,postinc1
 12334   00176E  CFE3 FFE6          	movff	plusw1,postinc1
 12335                           
 12336                           ;stkvar	___assert_fail@expr @ sp[(-6)+-2]
 12337   001772  0EF8               	movlw	-8
 12338   001774  CFE3 FFE6          	movff	plusw1,postinc1
 12339   001778  CFE3 FFE6          	movff	plusw1,postinc1
 12340   00177C  0EF0               	movlw	low STR_74
 12341   00177E  6EE6               	movwf	postinc1,c
 12342   001780  0E3E               	movlw	high STR_74
 12343   001782  6EE6               	movwf	postinc1,c
 12344   001784  0E0A               	movlw	10
 12345   001786  6EE6               	movwf	postinc1,c
 12346   001788  ECBE  F00A         	call	_printf	;wreg free
 12347   00178C  EC79  F00E         	call	_abort	;wreg free
 12348                           
 12349                           ; ___assert_fail: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 12350   001790  0EF8               	movlw	248
 12351   001792  26E1               	addwf	fsr1l,f,c
 12352   001794  0EFF               	movlw	255
 12353   001796  22E2               	addwfc	fsr1h,f,c
 12354   001798  0012               	return		;funcret
 12355   00179A                     __end_of___assert_fail:
 12356                           	callstack 0
 12357                           
 12358 ;; *************** function _printf *****************
 12359 ;; Defined at:
 12360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  fmt             2  [STACK] PTR const unsigned char 
 12363 ;;		 -> STR_74(35), STR_1(21), 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  ap              2  [STACK] PTR void [1]
 12366 ;;		 -> ?_printf(2), 
 12367 ;;  ret             2    0        int 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  2  [STACK] int 
 12370 ;; Registers used:
 12371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12377 ;;      Params:         0       0       0       0       0
 12378 ;;      Locals:         0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0
 12380 ;;      Totals:         0       0       0       0       0
 12381 ;;Total ram usage:        0 bytes
 12382 ;; Hardware stack levels used: 1
 12383 ;; Hardware stack levels required when called: 20
 12384 ;; This function calls:
 12385 ;;		_vfprintf
 12386 ;; This function is called by:
 12387 ;;		_main
 12388 ;;		___assert_fail
 12389 ;; This function uses a reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text23
 12393   00157C                     __ptext23:
 12394                           	callstack 0
 12395   00157C                     _printf:
 12396                           	callstack 0
 12397                           
 12398                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12399   00157C  52E6               	movf	postinc1,f,c
 12400   00157E  52E6               	movf	postinc1,f,c
 12401                           
 12402                           ;stkvar	?_printf @ sp[(-2)+-3]
 12403                           
 12404                           ;incstack = 0
 12405 ;; hardware stack exceeded
 12406   001580  0EFB               	movlw	251
 12407   001582  24E1               	addwf	fsr1l,w,c
 12408   001584  6E41               	movwf	(btemp+10)^0,c
 12409   001586  0EFF               	movlw	255
 12410   001588  20E2               	addwfc	fsr1h,w,c
 12411   00158A  6E42               	movwf	(btemp+11)^0,c
 12412                           
 12413                           ;stkvar	printf@ap @ sp[(-2)+0]
 12414   00158C  0EFF               	movlw	-1
 12415   00158E  C042  FFE3         	movff	btemp+11,plusw1
 12416   001592  0EFE               	movlw	-2
 12417   001594  C041  FFE3         	movff	btemp+10,plusw1
 12418                           
 12419                           ;stkvar	printf@ap @ sp[(-2)+0]
 12420   001598  0EFE               	movlw	254
 12421   00159A  24E1               	addwf	fsr1l,w,c
 12422   00159C  6E37               	movwf	btemp^0,c
 12423   00159E  0EFF               	movlw	255
 12424   0015A0  20E2               	addwfc	fsr1h,w,c
 12425   0015A2  6E38               	movwf	(btemp+1)^0,c
 12426   0015A4  C037  FFE6         	movff	btemp,postinc1
 12427   0015A8  C038  FFE6         	movff	btemp+1,postinc1
 12428                           
 12429                           ;stkvar	printf@fmt @ sp[(-4)+-3]
 12430   0015AC  0EF9               	movlw	-7
 12431   0015AE  CFE3 FFE6          	movff	plusw1,postinc1
 12432   0015B2  CFE3 FFE6          	movff	plusw1,postinc1
 12433   0015B6  0E00               	movlw	0
 12434   0015B8  6EE6               	movwf	postinc1,c
 12435   0015BA  0E00               	movlw	0
 12436   0015BC  6EE6               	movwf	postinc1,c
 12437   0015BE  EC7F  F009         	call	_vfprintf	;wreg free
 12438                           
 12439                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsi
      +                          ze = 2, vargsize = 0
 12440   0015C2  52E5               	movf	postdec1,f,c
 12441   0015C4  52E5               	movf	postdec1,f,c
 12442   0015C6  52E5               	movf	postdec1,f,c
 12443   0015C8  50E7               	movf	indf1,w,c
 12444   0015CA  5EE1               	subwf	fsr1l,f,c
 12445   0015CC  0E00               	movlw	0
 12446   0015CE  5AE2               	subwfb	fsr1h,f,c
 12447   0015D0  0012               	return		;funcret
 12448   0015D2                     __end_of_printf:
 12449                           	callstack 0
 12450                           
 12451 ;; *************** function _vfprintf *****************
 12452 ;; Defined at:
 12453 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12456 ;;		 -> NULL(0), 
 12457 ;;  fmt             2  [STACK] PTR const unsigned char 
 12458 ;;		 -> STR_74(35), STR_1(21), 
 12459 ;;  ap              2  [STACK] PTR PTR void 
 12460 ;;		 -> printf@ap(2), 
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  cfmt            2  [STACK] PTR unsigned char 
 12463 ;;		 -> STR_74(35), STR_1(21), 
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  2  [STACK] int 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12473 ;;      Params:         0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used: 1
 12479 ;; Hardware stack levels required when called: 19
 12480 ;; This function calls:
 12481 ;;		_vfpfcnvrt
 12482 ;; This function is called by:
 12483 ;;		_printf
 12484 ;; This function uses a reentrant model
 12485 ;;
 12486                           
 12487                           	psect	text24
 12488   0012FE                     __ptext24:
 12489                           	callstack 0
 12490   0012FE                     _vfprintf:
 12491                           	callstack 0
 12492                           
 12493                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12494   0012FE  52E6               	movf	postinc1,f,c
 12495   001300  52E6               	movf	postinc1,f,c
 12496                           
 12497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12498                           ;stkvar	vfprintf@fmt @ sp[(-2)+-4]
 12499                           
 12500                           ;incstack = 0
 12501 ;; hardware stack exceeded
 12502   001302  0EFA               	movlw	-6
 12503   001304  CFE3 F041          	movff	plusw1,btemp+10
 12504   001308  0EFB               	movlw	-5
 12505   00130A  CFE3 F042          	movff	plusw1,btemp+11
 12506                           
 12507                           ;stkvar	vfprintf@cfmt @ sp[(-2)+0]
 12508   00130E  0EFF               	movlw	-1
 12509   001310  C042  FFE3         	movff	btemp+11,plusw1
 12510   001314  0EFE               	movlw	-2
 12511   001316  C041  FFE3         	movff	btemp+10,plusw1
 12512                           
 12513                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12514   00131A  D016               	goto	l4248
 12515   00131C                     l4246:
 12516                           
 12517                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 12518                           ;stkvar	vfprintf@ap @ sp[(-2)+-6]
 12519   00131C  0EF8               	movlw	-8
 12520   00131E  CFE3 FFE6          	movff	plusw1,postinc1
 12521   001322  CFE3 FFE6          	movff	plusw1,postinc1
 12522                           
 12523                           ;stkvar	vfprintf@cfmt @ sp[(-4)+0]
 12524   001326  0EFC               	movlw	252
 12525   001328  24E1               	addwf	fsr1l,w,c
 12526   00132A  6E37               	movwf	btemp^0,c
 12527   00132C  0EFF               	movlw	255
 12528   00132E  20E2               	addwfc	fsr1h,w,c
 12529   001330  6E38               	movwf	(btemp+1)^0,c
 12530   001332  C037  FFE6         	movff	btemp,postinc1
 12531   001336  C038  FFE6         	movff	btemp+1,postinc1
 12532                           
 12533                           ;stkvar	vfprintf@fp @ sp[(-6)+-2]
 12534   00133A  0EF8               	movlw	-8
 12535   00133C  CFE3 FFE6          	movff	plusw1,postinc1
 12536   001340  CFE3 FFE6          	movff	plusw1,postinc1
 12537   001344  EC8A  F000         	call	_vfpfcnvrt	;wreg free
 12538   001348                     l4248:
 12539                           
 12540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12541                           ;stkvar	vfprintf@cfmt @ sp[(-2)+0]
 12542   001348  50E1               	movf	fsr1l,w,c
 12543   00134A  0FFE               	addlw	-2
 12544   00134C  6ED9               	movwf	fsr2l,c
 12545   00134E  50E2               	movf	fsr1h,w,c
 12546   001350  6EDA               	movwf	fsr2h,c
 12547   001352  0EFF               	movlw	255
 12548   001354  22DA               	addwfc	fsr2h,f,c
 12549   001356  CFDE FFF6          	movff	postinc2,tblptrl
 12550   00135A  CFDD FFF7          	movff	postdec2,tblptrh
 12551   00135E                     	if	0	;tblptru may be non-zero
 12552   00135E                     	endif
 12553   00135E                     	if	0	;tblptru may be non-zero
 12554   00135E                     	endif
 12555   00135E  0008               	tblrd		*
 12556   001360  50F5               	movf	tablat,w,c
 12557   001362  0900               	iorlw	0
 12558   001364  A4D8               	btfss	status,2,c
 12559   001366  D7DA               	goto	l4246
 12560                           
 12561                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12562   001368  0E00               	movlw	0
 12563   00136A  6E37               	movwf	btemp^0,c
 12564   00136C  0E00               	movlw	0
 12565   00136E  6E38               	movwf	(btemp+1)^0,c
 12566                           
 12567                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12568   001370  0EF8               	movlw	248
 12569   001372  26E1               	addwf	fsr1l,f,c
 12570   001374  0EFF               	movlw	255
 12571   001376  22E2               	addwfc	fsr1h,f,c
 12572   001378  0012               	return		;funcret
 12573   00137A                     __end_of_vfprintf:
 12574                           	callstack 0
 12575                           
 12576 ;; *************** function _vfpfcnvrt *****************
 12577 ;; Defined at:
 12578 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12581 ;;		 -> NULL(0), 
 12582 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12583 ;;		 -> vfprintf@cfmt(2), 
 12584 ;;  ap              2  [STACK] PTR PTR void 
 12585 ;;		 -> printf@ap(2), 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  cp              2  [STACK] PTR unsigned char 
 12588 ;;		 -> ?_printf(2), STR_73(23), STR_72(9), STR_71(21), 
 12589 ;;		 -> STR_67(26), STR_66(9), STR_65(21), STR_61(9), 
 12590 ;;		 -> STR_60(12), STR_59(23), STR_55(9), STR_54(12), 
 12591 ;;		 -> STR_53(22), STR_49(9), STR_48(12), STR_47(21), 
 12592 ;;		 -> STR_43(9), STR_42(12), STR_41(23), STR_37(9), 
 12593 ;;		 -> STR_36(12), STR_35(22), STR_31(8), STR_30(12), 
 12594 ;;		 -> STR_29(23), STR_25(8), STR_24(12), STR_23(22), 
 12595 ;;		 -> STR_19(8), STR_18(12), STR_17(21), STR_13(8), 
 12596 ;;		 -> STR_12(12), STR_11(23), STR_7(8), STR_6(12), 
 12597 ;;		 -> STR_5(22), 
 12598 ;;  convarg         4  [STACK] struct .
 12599 ;;  cp              2  [STACK] PTR unsigned char 
 12600 ;;		 -> STR_74(35), STR_1(21), 
 12601 ;;  c               1  [STACK] unsigned char 
 12602 ;;  done            1  [STACK] _Bool 
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  1  [STACK] void 
 12605 ;; Registers used:
 12606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12612 ;;      Params:         0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0
 12614 ;;      Temps:          0       0       0       0       0
 12615 ;;      Totals:         0       0       0       0       0
 12616 ;;Total ram usage:        0 bytes
 12617 ;; Hardware stack levels used: 1
 12618 ;; Hardware stack levels required when called: 18
 12619 ;; This function calls:
 12620 ;;		___awdiv
 12621 ;;		___awmod
 12622 ;;		_abs
 12623 ;;		_fputc
 12624 ;; This function is called by:
 12625 ;;		_vfprintf
 12626 ;; This function uses a reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text25
 12630   000114                     __ptext25:
 12631                           	callstack 0
 12632   000114                     _vfpfcnvrt:
 12633                           	callstack 0
 12634                           
 12635                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12636   000114  0E0A               	movlw	10
 12637   000116  26E1               	addwf	fsr1l,f,c
 12638   000118  0E00               	movlw	0
 12639   00011A  22E2               	addwfc	fsr1h,f,c
 12640                           
 12641                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12642                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12643                           
 12644                           ;incstack = 0
 12645 ;; hardware stack exceeded
 12646   00011C  0EF2               	movlw	-14
 12647   00011E  CFE3 FFD9          	movff	plusw1,fsr2l
 12648   000122  0EF3               	movlw	-13
 12649   000124  CFE3 FFDA          	movff	plusw1,fsr2h
 12650   000128  CFDE FFF6          	movff	postinc2,tblptrl
 12651   00012C  CFDD FFF7          	movff	postdec2,tblptrh
 12652   000130                     	if	0	;tblptru may be non-zero
 12653   000130                     	endif
 12654   000130                     	if	0	;tblptru may be non-zero
 12655   000130                     	endif
 12656   000130  0008               	tblrd		*
 12657   000132  50F5               	movf	tablat,w,c
 12658   000134  0A25               	xorlw	37
 12659   000136  A4D8               	btfss	status,2,c
 12660   000138  D1BE               	goto	l4234
 12661                           
 12662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12663                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12664   00013A  0EF2               	movlw	-14
 12665   00013C  CFE3 FFD9          	movff	plusw1,fsr2l
 12666   000140  0EF3               	movlw	-13
 12667   000142  CFE3 FFDA          	movff	plusw1,fsr2h
 12668   000146  2ADE               	incf	postinc2,f,c
 12669   000148  0E00               	movlw	0
 12670   00014A  22DD               	addwfc	postdec2,f,c
 12671                           
 12672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12673   00014C  0E00               	movlw	0
 12674   00014E  0100               	movlb	0	; () banked
 12675   000150  6FB8               	movwf	(_width+1)& (0+255),b
 12676   000152  0E00               	movlw	0
 12677   000154  6FB7               	movwf	_width& (0+255),b
 12678   000156  C0B7  F0CD         	movff	_width,_flags
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12682   00015A  69B9               	setf	_prec& (0+255),b
 12683   00015C  69BA               	setf	(_prec+1)& (0+255),b
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12687                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12688   00015E  0EF2               	movlw	-14
 12689   000160  CFE3 FFD9          	movff	plusw1,fsr2l
 12690   000164  0EF3               	movlw	-13
 12691   000166  CFE3 FFDA          	movff	plusw1,fsr2h
 12692   00016A  CFDE F041          	movff	postinc2,btemp+10
 12693   00016E  CFDD F042          	movff	postdec2,btemp+11
 12694                           
 12695                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 12696   000172  0EFD               	movlw	-3
 12697   000174  C042  FFE3         	movff	btemp+11,plusw1
 12698   000178  0EFC               	movlw	-4
 12699   00017A  C041  FFE3         	movff	btemp+10,plusw1
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12703                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 12704   00017E  50E1               	movf	fsr1l,w,c
 12705   000180  0FFC               	addlw	-4
 12706   000182  6ED9               	movwf	fsr2l,c
 12707   000184  50E2               	movf	fsr1h,w,c
 12708   000186  6EDA               	movwf	fsr2h,c
 12709   000188  0EFF               	movlw	255
 12710   00018A  22DA               	addwfc	fsr2h,f,c
 12711   00018C  CFDE FFF6          	movff	postinc2,tblptrl
 12712   000190  CFDD FFF7          	movff	postdec2,tblptrh
 12713   000194                     	if	0	;tblptru may be non-zero
 12714   000194                     	endif
 12715   000194                     	if	0	;tblptru may be non-zero
 12716   000194                     	endif
 12717   000194  0008               	tblrd		*
 12718   000196  50F5               	movf	tablat,w,c
 12719   000198  0A64               	xorlw	100
 12720   00019A  B4D8               	btfsc	status,2,c
 12721   00019C  D010               	goto	u2220
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 12725   00019E  50E1               	movf	fsr1l,w,c
 12726   0001A0  0FFC               	addlw	-4
 12727   0001A2  6ED9               	movwf	fsr2l,c
 12728   0001A4  50E2               	movf	fsr1h,w,c
 12729   0001A6  6EDA               	movwf	fsr2h,c
 12730   0001A8  0EFF               	movlw	255
 12731   0001AA  22DA               	addwfc	fsr2h,f,c
 12732   0001AC  CFDE FFF6          	movff	postinc2,tblptrl
 12733   0001B0  CFDD FFF7          	movff	postdec2,tblptrh
 12734   0001B4                     	if	0	;tblptru may be non-zero
 12735   0001B4                     	endif
 12736   0001B4                     	if	0	;tblptru may be non-zero
 12737   0001B4                     	endif
 12738   0001B4  0008               	tblrd		*
 12739   0001B6  50F5               	movf	tablat,w,c
 12740   0001B8  0A69               	xorlw	105
 12741   0001BA  A4D8               	btfss	status,2,c
 12742   0001BC  D0AE               	goto	l4202
 12743   0001BE                     u2220:
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12747                           ;stkvar	vfpfcnvrt@ap @ sp[(-10)+-6]
 12748   0001BE  0EF0               	movlw	-16
 12749   0001C0  CFE3 FFD9          	movff	plusw1,fsr2l
 12750   0001C4  0EF1               	movlw	-15
 12751   0001C6  CFE3 FFDA          	movff	plusw1,fsr2h
 12752   0001CA  0E02               	movlw	2
 12753   0001CC  5EDE               	subwf	postinc2,f,c
 12754   0001CE  0E00               	movlw	0
 12755   0001D0  5ADD               	subwfb	postdec2,f,c
 12756   0001D2  CFDE F041          	movff	postinc2,btemp+10
 12757   0001D6  CFDD F042          	movff	postdec2,btemp+11
 12758   0001DA  C041  FFD9         	movff	btemp+10,fsr2l
 12759   0001DE  C042  FFDA         	movff	btemp+11,fsr2h
 12760   0001E2  CFDE F041          	movff	postinc2,btemp+10
 12761   0001E6  CFDD F042          	movff	postdec2,btemp+11
 12762                           
 12763                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 12764   0001EA  0EF8               	movlw	-8
 12765   0001EC  C041  FFE3         	movff	btemp+10,plusw1
 12766   0001F0  0EF9               	movlw	-7
 12767   0001F2  C042  FFE3         	movff	btemp+11,plusw1
 12768                           
 12769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12770                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 12771   0001F6  0EFC               	movlw	-4
 12772   0001F8  50E3               	movf	plusw1,w,c
 12773   0001FA  0F01               	addlw	1
 12774   0001FC  6E41               	movwf	(btemp+10)^0,c
 12775   0001FE  0EFD               	movlw	-3
 12776   000200  CFE3 F042          	movff	plusw1,btemp+11
 12777   000204  0E00               	movlw	0
 12778   000206  2242               	addwfc	(btemp+11)^0,f,c
 12779                           
 12780                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12781   000208  0EF2               	movlw	-14
 12782   00020A  CFE3 FFD9          	movff	plusw1,fsr2l
 12783   00020E  0EF3               	movlw	-13
 12784   000210  CFE3 FFDA          	movff	plusw1,fsr2h
 12785   000214  C041  FFDE         	movff	btemp+10,postinc2
 12786   000218  C042  FFDD         	movff	btemp+11,postdec2
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
 12790                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12791   00021C  0EFE               	movlw	-2
 12792   00021E  6AE3               	clrf	plusw1,c
 12793   000220  8AE3               	bsf	plusw1,5,c
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
 12797                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 12798   000222  0EF9               	movlw	-7
 12799   000224  AEE3               	btfss	plusw1,7,c
 12800   000226  D003               	goto	u2230
 12801   000228  6A42               	clrf	(btemp+11)^0,c
 12802   00022A  2A42               	incf	(btemp+11)^0,f,c
 12803   00022C  D001               	goto	u2248
 12804   00022E                     u2230:
 12805   00022E  6A42               	clrf	(btemp+11)^0,c
 12806   000230                     u2248:
 12807                           
 12808                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 12809   000230  0EFF               	movlw	-1
 12810   000232  C042  FFE3         	movff	btemp+11,plusw1
 12811   000236                     l4184:
 12812                           
 12813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
 12814                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12815   000236  0EFE               	movlw	-2
 12816   000238  06E3               	decf	plusw1,f,c
 12817   00023A  0EFE               	movlw	-2
 12818   00023C  50E3               	movf	plusw1,w,c
 12819   00023E  6E41               	movwf	(btemp+10)^0,c
 12820   000240  6A42               	clrf	(btemp+11)^0,c
 12821   000242  0EC0               	movlw	low _dbuf
 12822   000244  2441               	addwf	(btemp+10)^0,w,c
 12823   000246  6ED9               	movwf	fsr2l,c
 12824   000248  0E01               	movlw	high _dbuf
 12825   00024A  2042               	addwfc	(btemp+11)^0,w,c
 12826   00024C  6EDA               	movwf	fsr2h,c
 12827   00024E  0E0A               	movlw	10
 12828   000250  6EE6               	movwf	postinc1,c
 12829   000252  0E00               	movlw	0
 12830   000254  6EE6               	movwf	postinc1,c
 12831                           
 12832                           ;stkvar	vfpfcnvrt@convarg @ sp[(-12)+2]
 12833   000256  0EF6               	movlw	-10
 12834   000258  CFE3 FFE6          	movff	plusw1,postinc1
 12835   00025C  CFE3 FFE6          	movff	plusw1,postinc1
 12836   000260  EC2C  F005         	call	___awmod	;wreg free
 12837   000264  C037  FFE6         	movff	btemp,postinc1
 12838   000268  C038  FFE6         	movff	btemp+1,postinc1
 12839   00026C  ECD8  F00C         	call	_abs	;wreg free
 12840   000270  5037               	movf	btemp^0,w,c
 12841   000272  0F30               	addlw	48
 12842   000274  6EDF               	movwf	indf2,c
 12843                           
 12844                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
 12845   000276  0E0A               	movlw	10
 12846   000278  6EE6               	movwf	postinc1,c
 12847   00027A  0E00               	movlw	0
 12848   00027C  6EE6               	movwf	postinc1,c
 12849                           
 12850                           ;stkvar	vfpfcnvrt@convarg @ sp[(-12)+2]
 12851   00027E  0EF6               	movlw	-10
 12852   000280  CFE3 FFE6          	movff	plusw1,postinc1
 12853   000284  CFE3 FFE6          	movff	plusw1,postinc1
 12854   000288  EC93  F004         	call	___awdiv	;wreg free
 12855                           
 12856                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 12857   00028C  0EF8               	movlw	-8
 12858   00028E  C037  FFE3         	movff	btemp,plusw1
 12859   000292  0EF9               	movlw	-7
 12860   000294  C038  FFE3         	movff	btemp+1,plusw1
 12861                           
 12862                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
 12863                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 12864   000298  0EF8               	movlw	-8
 12865   00029A  CFE3 F037          	movff	plusw1,btemp
 12866   00029E  0EF9               	movlw	-7
 12867   0002A0  50E3               	movf	plusw1,w,c
 12868   0002A2  1037               	iorwf	btemp^0,w,c
 12869   0002A4  B4D8               	btfsc	status,2,c
 12870   0002A6  D004               	goto	u2260
 12871                           
 12872                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12873   0002A8  0EFE               	movlw	-2
 12874   0002AA  50E3               	movf	plusw1,w,c
 12875   0002AC  A4D8               	btfss	status,2,c
 12876   0002AE  D7C3               	goto	l4184
 12877   0002B0                     u2260:
 12878                           
 12879                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
 12880                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12881   0002B0  0EFE               	movlw	-2
 12882   0002B2  50E3               	movf	plusw1,w,c
 12883   0002B4  B4D8               	btfsc	status,2,c
 12884   0002B6  D029               	goto	l4200
 12885                           
 12886                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 12887   0002B8  0EFF               	movlw	-1
 12888   0002BA  50E3               	movf	plusw1,w,c
 12889   0002BC  B4D8               	btfsc	status,2,c
 12890   0002BE  D025               	goto	l4200
 12891                           
 12892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
 12893                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12894   0002C0  0EFE               	movlw	-2
 12895   0002C2  06E3               	decf	plusw1,f,c
 12896   0002C4  0EFE               	movlw	-2
 12897   0002C6  50E3               	movf	plusw1,w,c
 12898   0002C8  6E41               	movwf	(btemp+10)^0,c
 12899   0002CA  6A42               	clrf	(btemp+11)^0,c
 12900   0002CC  0EC0               	movlw	low _dbuf
 12901   0002CE  2441               	addwf	(btemp+10)^0,w,c
 12902   0002D0  6ED9               	movwf	fsr2l,c
 12903   0002D2  0E01               	movlw	high _dbuf
 12904   0002D4  2042               	addwfc	(btemp+11)^0,w,c
 12905   0002D6  6EDA               	movwf	fsr2h,c
 12906   0002D8  0E2D               	movlw	45
 12907   0002DA  6EDF               	movwf	indf2,c
 12908   0002DC  D016               	goto	l4200
 12909   0002DE                     l4198:
 12910                           
 12911                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
 12912                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 12913   0002DE  0EF4               	movlw	-12
 12914   0002E0  CFE3 FFE6          	movff	plusw1,postinc1
 12915   0002E4  CFE3 FFE6          	movff	plusw1,postinc1
 12916                           
 12917                           ;stkvar	vfpfcnvrt@c @ sp[(-12)+8]
 12918   0002E8  0EFC               	movlw	-4
 12919   0002EA  2AE3               	incf	plusw1,f,c
 12920   0002EC  04E3               	decf	plusw1,w,c
 12921   0002EE  6E41               	movwf	(btemp+10)^0,c
 12922   0002F0  6A42               	clrf	(btemp+11)^0,c
 12923   0002F2  0EC0               	movlw	low _dbuf
 12924   0002F4  2441               	addwf	(btemp+10)^0,w,c
 12925   0002F6  6ED9               	movwf	fsr2l,c
 12926   0002F8  0E01               	movlw	high _dbuf
 12927   0002FA  2042               	addwfc	(btemp+11)^0,w,c
 12928   0002FC  6EDA               	movwf	fsr2h,c
 12929   0002FE  50DF               	movf	indf2,w,c
 12930   000300  6EE6               	movwf	postinc1,c
 12931   000302  0E00               	movlw	0
 12932   000304  6EE6               	movwf	postinc1,c
 12933   000306  ECAC  F005         	call	_fputc	;wreg free
 12934   00030A                     l4200:
 12935                           
 12936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
 12937                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 12938   00030A  0EFE               	movlw	-2
 12939   00030C  CFE3 F037          	movff	plusw1,btemp
 12940   000310  0E20               	movlw	32
 12941   000312  1837               	xorwf	btemp^0,w,c
 12942   000314  B4D8               	btfsc	status,2,c
 12943   000316  D0E6               	goto	l2308
 12944   000318  D7E2               	goto	l4198
 12945   00031A                     l4202:
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 12949                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 12950   00031A  0EFF               	movlw	-1
 12951   00031C  6AE3               	clrf	plusw1,c
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 12955                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12956   00031E  0EF2               	movlw	-14
 12957   000320  CFE3 FFD9          	movff	plusw1,fsr2l
 12958   000324  0EF3               	movlw	-13
 12959   000326  CFE3 FFDA          	movff	plusw1,fsr2h
 12960   00032A  CFDE FFF6          	movff	postinc2,tblptrl
 12961   00032E  CFDD FFF7          	movff	postdec2,tblptrh
 12962   000332                     	if	0	;tblptru may be non-zero
 12963   000332                     	endif
 12964   000332                     	if	0	;tblptru may be non-zero
 12965   000332                     	endif
 12966   000332  0008               	tblrd		*
 12967   000334  50F5               	movf	tablat,w,c
 12968   000336  0A73               	xorlw	115
 12969   000338  A4D8               	btfss	status,2,c
 12970   00033A  D00D               	goto	l4210
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 12974                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12975   00033C  0EF2               	movlw	-14
 12976   00033E  CFE3 FFD9          	movff	plusw1,fsr2l
 12977   000342  0EF3               	movlw	-13
 12978   000344  CFE3 FFDA          	movff	plusw1,fsr2h
 12979   000348  2ADE               	incf	postinc2,f,c
 12980   00034A  0E00               	movlw	0
 12981   00034C  22DD               	addwfc	postdec2,f,c
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 12985                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 12986   00034E  0EFF               	movlw	-1
 12987   000350  6AE3               	clrf	plusw1,c
 12988   000352  2AE3               	incf	plusw1,f,c
 12989                           
 12990                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 12991   000354  D046               	goto	l4220
 12992   000356                     l4210:
 12993                           
 12994                           ; BSR set to: 0
 12995                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 12996   000356  0EF2               	movlw	-14
 12997   000358  CFE3 FFD9          	movff	plusw1,fsr2l
 12998   00035C  0EF3               	movlw	-13
 12999   00035E  CFE3 FFDA          	movff	plusw1,fsr2h
 13000   000362  CFDE FFF6          	movff	postinc2,tblptrl
 13001   000366  CFDD FFF7          	movff	postdec2,tblptrh
 13002   00036A                     	if	0	;tblptru may be non-zero
 13003   00036A                     	endif
 13004   00036A                     	if	0	;tblptru may be non-zero
 13005   00036A                     	endif
 13006   00036A  0008               	tblrd		*
 13007   00036C  50F5               	movf	tablat,w,c
 13008   00036E  0A6C               	xorlw	108
 13009   000370  A4D8               	btfss	status,2,c
 13010   000372  D037               	goto	l4220
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 13014   000374  0EF2               	movlw	-14
 13015   000376  CFE3 FFD9          	movff	plusw1,fsr2l
 13016   00037A  0EF3               	movlw	-13
 13017   00037C  CFE3 FFDA          	movff	plusw1,fsr2h
 13018   000380  CFDE F041          	movff	postinc2,btemp+10
 13019   000384  CFDD F042          	movff	postdec2,btemp+11
 13020   000388  0E01               	movlw	1
 13021   00038A  2641               	addwf	(btemp+10)^0,f,c
 13022   00038C  0E00               	movlw	0
 13023   00038E  2242               	addwfc	(btemp+11)^0,f,c
 13024   000390  C041  FFF6         	movff	btemp+10,tblptrl
 13025   000394  C042  FFF7         	movff	btemp+11,tblptrh
 13026   000398                     	if	0	;tblptru may be non-zero
 13027   000398                     	endif
 13028   000398                     	if	0	;tblptru may be non-zero
 13029   000398                     	endif
 13030   000398  0008               	tblrd		*
 13031   00039A  50F5               	movf	tablat,w,c
 13032   00039C  0A6C               	xorlw	108
 13033   00039E  A4D8               	btfss	status,2,c
 13034   0003A0  D020               	goto	l4220
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 13038   0003A2  0EF2               	movlw	-14
 13039   0003A4  CFE3 FFD9          	movff	plusw1,fsr2l
 13040   0003A8  0EF3               	movlw	-13
 13041   0003AA  CFE3 FFDA          	movff	plusw1,fsr2h
 13042   0003AE  CFDE F041          	movff	postinc2,btemp+10
 13043   0003B2  CFDD F042          	movff	postdec2,btemp+11
 13044   0003B6  0E02               	movlw	2
 13045   0003B8  2641               	addwf	(btemp+10)^0,f,c
 13046   0003BA  0E00               	movlw	0
 13047   0003BC  2242               	addwfc	(btemp+11)^0,f,c
 13048   0003BE  C041  FFF6         	movff	btemp+10,tblptrl
 13049   0003C2  C042  FFF7         	movff	btemp+11,tblptrh
 13050   0003C6                     	if	0	;tblptru may be non-zero
 13051   0003C6                     	endif
 13052   0003C6                     	if	0	;tblptru may be non-zero
 13053   0003C6                     	endif
 13054   0003C6  0008               	tblrd		*
 13055   0003C8  50F5               	movf	tablat,w,c
 13056   0003CA  0A73               	xorlw	115
 13057   0003CC  A4D8               	btfss	status,2,c
 13058   0003CE  D009               	goto	l4220
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 13062                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 13063   0003D0  0EF2               	movlw	-14
 13064   0003D2  CFE3 FFD9          	movff	plusw1,fsr2l
 13065   0003D6  0EF3               	movlw	-13
 13066   0003D8  CFE3 FFDA          	movff	plusw1,fsr2h
 13067   0003DC  0E03               	movlw	3
 13068   0003DE  26DE               	addwf	postinc2,f,c
 13069   0003E0  D7B4               	goto	L1
 13070   0003E2                     l4220:
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 13074                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 13075   0003E2  0EFF               	movlw	-1
 13076   0003E4  50E3               	movf	plusw1,w,c
 13077   0003E6  B4D8               	btfsc	status,2,c
 13078   0003E8  D05C               	goto	l4230
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
 13082                           ;stkvar	vfpfcnvrt@ap @ sp[(-10)+-6]
 13083   0003EA  0EF0               	movlw	-16
 13084   0003EC  CFE3 FFD9          	movff	plusw1,fsr2l
 13085   0003F0  0EF1               	movlw	-15
 13086   0003F2  CFE3 FFDA          	movff	plusw1,fsr2h
 13087   0003F6  0E02               	movlw	2
 13088   0003F8  5EDE               	subwf	postinc2,f,c
 13089   0003FA  0E00               	movlw	0
 13090   0003FC  5ADD               	subwfb	postdec2,f,c
 13091   0003FE  CFDE F041          	movff	postinc2,btemp+10
 13092   000402  CFDD F042          	movff	postdec2,btemp+11
 13093   000406  C041  FFD9         	movff	btemp+10,fsr2l
 13094   00040A  C042  FFDA         	movff	btemp+11,fsr2h
 13095   00040E  CFDE F041          	movff	postinc2,btemp+10
 13096   000412  CFDD F042          	movff	postdec2,btemp+11
 13097                           
 13098                           ;stkvar	vfpfcnvrt@cp_4205 @ sp[(-10)+0]
 13099   000416  0EF7               	movlw	-9
 13100   000418  C042  FFE3         	movff	btemp+11,plusw1
 13101   00041C  0EF6               	movlw	-10
 13102   00041E  C041  FFE3         	movff	btemp+10,plusw1
 13103   000422  D02A               	goto	l4228
 13104   000424                     l4224:
 13105                           
 13106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
 13107                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 13108   000424  0EF4               	movlw	-12
 13109   000426  CFE3 FFE6          	movff	plusw1,postinc1
 13110   00042A  CFE3 FFE6          	movff	plusw1,postinc1
 13111                           
 13112                           ;stkvar	vfpfcnvrt@cp_4205 @ sp[(-12)+0]
 13113   00042E  0EF4               	movlw	-12
 13114   000430  CFE3 FFF6          	movff	plusw1,tblptrl
 13115   000434  0EF5               	movlw	-11
 13116   000436  CFE3 FFF7          	movff	plusw1,tblptrh
 13117   00043A  0E04               	movlw	(high __ramtop+-1)
 13118   00043C  64F7               	cpfsgt	tblptrh,c
 13119   00043E  D003               	bra	u2357
 13120   000440  0008               	tblrd		*
 13121   000442  50F5               	movf	tablat,w,c
 13122   000444  D005               	bra	u2350
 13123   000446                     u2357:
 13124   000446  CFF6 FFE9          	movff	tblptrl,fsr0l
 13125   00044A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13126   00044E  50EF               	movf	indf0,w,c
 13127   000450                     u2350:
 13128   000450  6EE6               	movwf	postinc1,c
 13129   000452  0E00               	movlw	0
 13130   000454  6EE6               	movwf	postinc1,c
 13131   000456  ECAC  F005         	call	_fputc	;wreg free
 13132                           
 13133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1674:    }
 13134                           ;stkvar	vfpfcnvrt@cp_4205 @ sp[(-10)+0]
 13135   00045A  0EF6               	movlw	-10
 13136   00045C  50E3               	movf	plusw1,w,c
 13137   00045E  0F01               	addlw	1
 13138   000460  6E37               	movwf	btemp^0,c
 13139   000462  0EF6               	movlw	-10
 13140   000464  C037  FFE3         	movff	btemp,plusw1
 13141   000468  6A37               	clrf	btemp^0,c
 13142   00046A  0EF7               	movlw	-9
 13143   00046C  50E3               	movf	plusw1,w,c
 13144   00046E  2037               	addwfc	btemp^0,w,c
 13145   000470  6E37               	movwf	btemp^0,c
 13146   000472  0EF7               	movlw	-9
 13147   000474  C037  FFE3         	movff	btemp,plusw1
 13148   000478                     l4228:
 13149                           
 13150                           ;stkvar	vfpfcnvrt@cp_4205 @ sp[(-10)+0]
 13151   000478  0EF6               	movlw	-10
 13152   00047A  CFE3 FFF6          	movff	plusw1,tblptrl
 13153   00047E  0EF7               	movlw	-9
 13154   000480  CFE3 FFF7          	movff	plusw1,tblptrh
 13155   000484  0E04               	movlw	(high __ramtop+-1)
 13156   000486  64F7               	cpfsgt	tblptrh,c
 13157   000488  D003               	bra	u2367
 13158   00048A  0008               	tblrd		*
 13159   00048C  50F5               	movf	tablat,w,c
 13160   00048E  D005               	bra	u2360
 13161   000490                     u2367:
 13162   000490  CFF6 FFE9          	movff	tblptrl,fsr0l
 13163   000494  CFF7 FFEA          	movff	tblptrh,fsr0h
 13164   000498  50EF               	movf	indf0,w,c
 13165   00049A                     u2360:
 13166   00049A  0900               	iorlw	0
 13167   00049C  B4D8               	btfsc	status,2,c
 13168   00049E  D022               	goto	l2308
 13169   0004A0  D7C1               	goto	l4224
 13170   0004A2                     l4230:
 13171                           
 13172                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 13173                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 13174   0004A2  0EF2               	movlw	-14
 13175   0004A4  CFE3 FFD9          	movff	plusw1,fsr2l
 13176   0004A8  0EF3               	movlw	-13
 13177   0004AA  CFE3 FFDA          	movff	plusw1,fsr2h
 13178   0004AE  2ADE               	incf	postinc2,f,c
 13179   0004B0  0E00               	movlw	0
 13180   0004B2  22DD               	addwfc	postdec2,f,c
 13181   0004B4  D017               	goto	l2308
 13182   0004B6                     l4234:
 13183                           
 13184                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 13185                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 13186   0004B6  0EF4               	movlw	-12
 13187   0004B8  CFE3 FFE6          	movff	plusw1,postinc1
 13188   0004BC  CFE3 FFE6          	movff	plusw1,postinc1
 13189                           
 13190                           ;stkvar	vfpfcnvrt@fmt @ sp[(-12)+-4]
 13191   0004C0  0EF0               	movlw	-16
 13192   0004C2  CFE3 FFD9          	movff	plusw1,fsr2l
 13193   0004C6  0EF1               	movlw	-15
 13194   0004C8  CFE3 FFDA          	movff	plusw1,fsr2h
 13195   0004CC  CFDE FFF6          	movff	postinc2,tblptrl
 13196   0004D0  CFDD FFF7          	movff	postdec2,tblptrh
 13197   0004D4                     	if	0	;tblptru may be non-zero
 13198   0004D4                     	endif
 13199   0004D4                     	if	0	;tblptru may be non-zero
 13200   0004D4                     	endif
 13201   0004D4  0008               	tblrd		*
 13202   0004D6  50F5               	movf	tablat,w,c
 13203   0004D8  6EE6               	movwf	postinc1,c
 13204   0004DA  0E00               	movlw	0
 13205   0004DC  6EE6               	movwf	postinc1,c
 13206   0004DE  ECAC  F005         	call	_fputc	;wreg free
 13207   0004E2  D7DF               	goto	l4230
 13208   0004E4                     l2308:
 13209                           
 13210                           ; _vfpfcnvrt: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13211   0004E4  0EF0               	movlw	240
 13212   0004E6  26E1               	addwf	fsr1l,f,c
 13213   0004E8  0EFF               	movlw	255
 13214   0004EA  22E2               	addwfc	fsr1h,f,c
 13215   0004EC  0012               	return		;funcret
 13216   0004EE                     __end_of_vfpfcnvrt:
 13217                           	callstack 0
 13218                           
 13219 ;; *************** function _fputc *****************
 13220 ;; Defined at:
 13221 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  c               2  [STACK] int 
 13224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13225 ;;		 -> NULL(0), 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  2  [STACK] int 
 13230 ;; Registers used:
 13231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13237 ;;      Params:         0       0       0       0       0
 13238 ;;      Locals:         0       0       0       0       0
 13239 ;;      Temps:          0       0       0       0       0
 13240 ;;      Totals:         0       0       0       0       0
 13241 ;;Total ram usage:        0 bytes
 13242 ;; Hardware stack levels used: 1
 13243 ;; Hardware stack levels required when called: 17
 13244 ;; This function calls:
 13245 ;;		_putch
 13246 ;; This function is called by:
 13247 ;;		_vfpfcnvrt
 13248 ;; This function uses a reentrant model
 13249 ;;
 13250                           
 13251                           	psect	text26
 13252   000B58                     __ptext26:
 13253                           	callstack 0
 13254   000B58                     _fputc:
 13255                           	callstack 0
 13256                           
 13257                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13258                           
 13259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13260                           ;incstack = 0
 13261 ;; hardware stack exceeded
 13262   000B58  0EFC               	movlw	-4
 13263   000B5A  CFE3 F037          	movff	plusw1,btemp
 13264   000B5E  0EFD               	movlw	-3
 13265   000B60  50E3               	movf	plusw1,w,c
 13266   000B62  1037               	iorwf	btemp^0,w,c
 13267   000B64  B4D8               	btfsc	status,2,c
 13268   000B66  D008               	goto	u2150
 13269                           
 13270                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13271   000B68  0EFC               	movlw	-4
 13272   000B6A  CFE3 F037          	movff	plusw1,btemp
 13273   000B6E  0EFD               	movlw	-3
 13274   000B70  50E3               	movf	plusw1,w,c
 13275   000B72  1037               	iorwf	btemp^0,w,c
 13276   000B74  A4D8               	btfss	status,2,c
 13277   000B76  D006               	goto	l4140
 13278   000B78                     u2150:
 13279                           
 13280                           ;stkvar	fputc@c @ sp[(0)+-2]
 13281   000B78  0EFE               	movlw	-2
 13282   000B7A  50E3               	movf	plusw1,w,c
 13283   000B7C  6EE6               	movwf	postinc1,c
 13284   000B7E  EC72  F00E         	call	_putch	;wreg free
 13285   000B82  D064               	goto	l2340
 13286   000B84                     l4140:
 13287                           
 13288                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13289   000B84  0EFC               	movlw	-4
 13290   000B86  CFE3 F041          	movff	plusw1,btemp+10
 13291   000B8A  0EFD               	movlw	-3
 13292   000B8C  CFE3 F042          	movff	plusw1,btemp+11
 13293   000B90  0E09               	movlw	9
 13294   000B92  2441               	addwf	(btemp+10)^0,w,c
 13295   000B94  6ED9               	movwf	fsr2l,c
 13296   000B96  0E00               	movlw	0
 13297   000B98  2042               	addwfc	(btemp+11)^0,w,c
 13298   000B9A  6EDA               	movwf	fsr2h,c
 13299   000B9C  50DE               	movf	postinc2,w,c
 13300   000B9E  10DE               	iorwf	postinc2,w,c
 13301   000BA0  B4D8               	btfsc	status,2,c
 13302   000BA2  D022               	goto	u2170
 13303                           
 13304                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13305   000BA4  0EFC               	movlw	-4
 13306   000BA6  CFE3 F041          	movff	plusw1,btemp+10
 13307   000BAA  0EFD               	movlw	-3
 13308   000BAC  CFE3 F042          	movff	plusw1,btemp+11
 13309   000BB0  0E09               	movlw	9
 13310   000BB2  2441               	addwf	(btemp+10)^0,w,c
 13311   000BB4  6ED9               	movwf	fsr2l,c
 13312   000BB6  0E00               	movlw	0
 13313   000BB8  2042               	addwfc	(btemp+11)^0,w,c
 13314   000BBA  6EDA               	movwf	fsr2h,c
 13315                           
 13316                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13317   000BBC  0EFC               	movlw	-4
 13318   000BBE  CFE3 F041          	movff	plusw1,btemp+10
 13319   000BC2  0EFD               	movlw	-3
 13320   000BC4  CFE3 F042          	movff	plusw1,btemp+11
 13321   000BC8  0E02               	movlw	2
 13322   000BCA  2441               	addwf	(btemp+10)^0,w,c
 13323   000BCC  6EE9               	movwf	fsr0l,c
 13324   000BCE  0E00               	movlw	0
 13325   000BD0  2042               	addwfc	(btemp+11)^0,w,c
 13326   000BD2  6EEA               	movwf	fsr0h,c
 13327   000BD4  50DE               	movf	postinc2,w,c
 13328   000BD6  5CEE               	subwf	postinc0,w,c
 13329   000BD8  50EE               	movf	postinc0,w,c
 13330   000BDA  0A80               	xorlw	128
 13331   000BDC  6E37               	movwf	btemp^0,c
 13332   000BDE  50DE               	movf	postinc2,w,c
 13333   000BE0  0A80               	xorlw	128
 13334   000BE2  5837               	subwfb	btemp^0,w,c
 13335   000BE4  B0D8               	btfsc	status,0,c
 13336   000BE6  D032               	goto	l2340
 13337   000BE8                     u2170:
 13338                           
 13339                           ;stkvar	fputc@c @ sp[(0)+-2]
 13340                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13341   000BE8  0EFC               	movlw	-4
 13342   000BEA  CFE3 F041          	movff	plusw1,btemp+10
 13343   000BEE  0EFD               	movlw	-3
 13344   000BF0  CFE3 F042          	movff	plusw1,btemp+11
 13345   000BF4  0E02               	movlw	2
 13346   000BF6  2441               	addwf	(btemp+10)^0,w,c
 13347   000BF8  6ED9               	movwf	fsr2l,c
 13348   000BFA  0E00               	movlw	0
 13349   000BFC  2042               	addwfc	(btemp+11)^0,w,c
 13350   000BFE  6EDA               	movwf	fsr2h,c
 13351   000C00  CFDE F041          	movff	postinc2,btemp+10
 13352   000C04  CFDD F042          	movff	postdec2,btemp+11
 13353                           
 13354                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13355   000C08  0EFC               	movlw	-4
 13356   000C0A  CFE3 FFD9          	movff	plusw1,fsr2l
 13357   000C0E  0EFD               	movlw	-3
 13358   000C10  CFE3 FFDA          	movff	plusw1,fsr2h
 13359   000C14  CFDE F03F          	movff	postinc2,btemp+8
 13360   000C18  CFDD F040          	movff	postdec2,btemp+9
 13361   000C1C  5041               	movf	(btemp+10)^0,w,c
 13362   000C1E  243F               	addwf	(btemp+8)^0,w,c
 13363   000C20  6ED9               	movwf	fsr2l,c
 13364   000C22  5042               	movf	(btemp+11)^0,w,c
 13365   000C24  2040               	addwfc	(btemp+9)^0,w,c
 13366   000C26  6EDA               	movwf	fsr2h,c
 13367   000C28  0EFE               	movlw	-2
 13368   000C2A  CFE3 FFDF          	movff	plusw1,indf2
 13369                           
 13370                           ;stkvar	fputc@fp @ sp[(0)+-4]
 13371   000C2E  0EFC               	movlw	-4
 13372   000C30  CFE3 F041          	movff	plusw1,btemp+10
 13373   000C34  0EFD               	movlw	-3
 13374   000C36  CFE3 F042          	movff	plusw1,btemp+11
 13375   000C3A  0E02               	movlw	2
 13376   000C3C  2441               	addwf	(btemp+10)^0,w,c
 13377   000C3E  6ED9               	movwf	fsr2l,c
 13378   000C40  0E00               	movlw	0
 13379   000C42  2042               	addwfc	(btemp+11)^0,w,c
 13380   000C44  6EDA               	movwf	fsr2h,c
 13381   000C46  2ADE               	incf	postinc2,f,c
 13382   000C48  0E00               	movlw	0
 13383   000C4A  22DD               	addwfc	postdec2,f,c
 13384   000C4C                     l2340:
 13385                           
 13386                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13387   000C4C  52E5               	movf	postdec1,f,c
 13388   000C4E  52E5               	movf	postdec1,f,c
 13389   000C50  52E5               	movf	postdec1,f,c
 13390   000C52  52E5               	movf	postdec1,f,c
 13391   000C54  0012               	return		;funcret
 13392   000C56                     __end_of_fputc:
 13393                           	callstack 0
 13394                           
 13395 ;; *************** function _putch *****************
 13396 ;; Defined at:
 13397 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;  txData          1  [STACK] unsigned char 
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;		None
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1  [STACK] void 
 13404 ;; Registers used:
 13405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 3F/E
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13411 ;;      Params:         0       0       0       0       0
 13412 ;;      Locals:         0       0       0       0       0
 13413 ;;      Temps:          0       0       0       0       0
 13414 ;;      Totals:         0       0       0       0       0
 13415 ;;Total ram usage:        0 bytes
 13416 ;; Hardware stack levels used: 1
 13417 ;; Hardware stack levels required when called: 16
 13418 ;; This function calls:
 13419 ;;		_EUSART1_Write
 13420 ;; This function is called by:
 13421 ;;		_fputc
 13422 ;; This function uses a reentrant model
 13423 ;;
 13424                           
 13425                           	psect	text27
 13426   001CE4                     __ptext27:
 13427                           	callstack 0
 13428   001CE4                     _putch:
 13429                           	callstack 0
 13430                           
 13431                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 13432                           ;stkvar	putch@txData @ sp[(0)+-1]
 13433                           
 13434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13435                           ;incstack = 0
 13436 ;; hardware stack exceeded
 13437   001CE4  0EFF               	movlw	-1
 13438   001CE6  50E3               	movf	plusw1,w,c
 13439   001CE8  6EE6               	movwf	postinc1,c
 13440   001CEA  EC6F  F00C         	call	_EUSART1_Write	;wreg free
 13441                           
 13442                           ; BSR set to: 14
 13443                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13444   001CEE  52E5               	movf	postdec1,f,c
 13445   001CF0  0012               	return		;funcret
 13446   001CF2                     __end_of_putch:
 13447                           	callstack 0
 13448                           
 13449 ;; *************** function _EUSART1_Write *****************
 13450 ;; Defined at:
 13451 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  txData          1  [STACK] unsigned char 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;		None
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1  [STACK] void 
 13458 ;; Registers used:
 13459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 3F/E
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13465 ;;      Params:         0       0       0       0       0
 13466 ;;      Locals:         0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0
 13468 ;;      Totals:         0       0       0       0       0
 13469 ;;Total ram usage:        0 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 15
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_putch
 13476 ;; This function uses a reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text28
 13480   0018DE                     __ptext28:
 13481                           	callstack 0
 13482   0018DE                     _EUSART1_Write:
 13483                           	callstack 0
 13484                           
 13485                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 13486                           
 13487                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 13488                           
 13489                           ; BSR set to: 14
 13490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13491                           ;incstack = 0
 13492 ;; hardware stack exceeded
 13493   0018DE  505D               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
 13494   0018E0  B4D8               	btfsc	status,2,c
 13495   0018E2  D7FD               	goto	__ptext28
 13496                           
 13497                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 13498   0018E4  010E               	movlb	14	; () banked
 13499   0018E6  B9C0               	btfsc	192,4,b	;volatile
 13500   0018E8  D004               	goto	l100
 13501                           
 13502                           ; BSR set to: 14
 13503                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 13504                           ;stkvar	EUSART1_Write@txData @ sp[(0)+-1]
 13505   0018EA  0EFF               	movlw	-1
 13506   0018EC  CFE3 FF99          	movff	plusw1,3993	;volatile
 13507                           
 13508                           ;mcc_generated_files/eusart1.c: 182:     }
 13509   0018F0  D010               	goto	l4046
 13510   0018F2                     l100:
 13511                           
 13512                           ; BSR set to: 14
 13513                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 13514   0018F2  99C0               	bcf	192,4,b	;volatile
 13515                           
 13516                           ; BSR set to: 14
 13517                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 13518                           ;stkvar	EUSART1_Write@txData @ sp[(0)+-1]
 13519   0018F4  0E80               	movlw	low _eusart1TxBuffer
 13520   0018F6  245F               	addwf	_eusart1TxHead^0,w,c	;volatile
 13521   0018F8  6ED9               	movwf	fsr2l,c
 13522   0018FA  6ADA               	clrf	fsr2h,c
 13523   0018FC  0E01               	movlw	high _eusart1TxBuffer
 13524   0018FE  22DA               	addwfc	fsr2h,f,c
 13525   001900  0EFF               	movlw	-1
 13526   001902  CFE3 FFDF          	movff	plusw1,indf2
 13527                           
 13528                           ; BSR set to: 14
 13529   001906  2A5F               	incf	_eusart1TxHead^0,f,c	;volatile
 13530                           
 13531                           ; BSR set to: 14
 13532                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 13533   001908  0E3F               	movlw	63
 13534   00190A  645F               	cpfsgt	_eusart1TxHead^0,c	;volatile
 13535   00190C  D001               	goto	l4044
 13536                           
 13537                           ; BSR set to: 14
 13538                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 13539   00190E  6A5F               	clrf	_eusart1TxHead^0,c	;volatile
 13540   001910                     l4044:
 13541                           
 13542                           ; BSR set to: 14
 13543                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 13544   001910  065D               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
 13545   001912                     l4046:
 13546                           
 13547                           ; BSR set to: 14
 13548                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 13549   001912  89C0               	bsf	192,4,b	;volatile
 13550                           
 13551                           ; BSR set to: 14
 13552                           ; _EUSART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 13553   001914  52E5               	movf	postdec1,f,c
 13554   001916  0012               	return		;funcret
 13555   001918                     __end_of_EUSART1_Write:
 13556                           	callstack 0
 13557                           
 13558 ;; *************** function _abs *****************
 13559 ;; Defined at:
 13560 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  a               2  [STACK] int 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  2  [STACK] int 
 13567 ;; Registers used:
 13568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13574 ;;      Params:         0       0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0
 13576 ;;      Temps:          0       0       0       0       0
 13577 ;;      Totals:         0       0       0       0       0
 13578 ;;Total ram usage:        0 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 15
 13581 ;; This function calls:
 13582 ;;		Nothing
 13583 ;; This function is called by:
 13584 ;;		_vfpfcnvrt
 13585 ;; This function uses a reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text29
 13589   0019B0                     __ptext29:
 13590                           	callstack 0
 13591   0019B0                     _abs:
 13592                           	callstack 0
 13593                           
 13594                           ;stkvar	abs@a @ sp[(0)+-2]
 13595                           
 13596                           ; BSR set to: 14
 13597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13598                           ;incstack = 0
 13599 ;; hardware stack exceeded
 13600   0019B0  0EFF               	movlw	-1
 13601   0019B2  BEE3               	btfsc	plusw1,7,c
 13602   0019B4  D007               	goto	l4154
 13603                           
 13604                           ;stkvar	abs@a @ sp[(0)+-2]
 13605   0019B6  0EFE               	movlw	-2
 13606   0019B8  CFE3 F037          	movff	plusw1,btemp
 13607   0019BC  0EFF               	movlw	-1
 13608   0019BE  CFE3 F038          	movff	plusw1,btemp+1
 13609   0019C2  D00B               	goto	l2328
 13610   0019C4                     l4154:
 13611                           
 13612                           ;stkvar	abs@a @ sp[(0)+-2]
 13613   0019C4  0EFE               	movlw	-2
 13614   0019C6  CFE3 F037          	movff	plusw1,btemp
 13615   0019CA  1E37               	comf	btemp^0,f,c
 13616   0019CC  0EFF               	movlw	-1
 13617   0019CE  CFE3 F038          	movff	plusw1,btemp+1
 13618   0019D2  1E38               	comf	(btemp+1)^0,f,c
 13619   0019D4  2A37               	incf	btemp^0,f,c
 13620   0019D6  B4D8               	btfsc	status,2,c
 13621   0019D8  2A38               	incf	(btemp+1)^0,f,c
 13622   0019DA                     l2328:
 13623                           
 13624                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 13625   0019DA  52E5               	movf	postdec1,f,c
 13626   0019DC  52E5               	movf	postdec1,f,c
 13627   0019DE  0012               	return		;funcret
 13628   0019E0                     __end_of_abs:
 13629                           	callstack 0
 13630                           
 13631 ;; *************** function ___awmod *****************
 13632 ;; Defined at:
 13633 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 13634 ;; Parameters:    Size  Location     Type
 13635 ;;  dividend        2  [STACK] int 
 13636 ;;  divisor         2  [STACK] int 
 13637 ;; Auto vars:     Size  Location     Type
 13638 ;;  sign            1  [STACK] unsigned char 
 13639 ;;  counter         1  [STACK] unsigned char 
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  2  [STACK] int 
 13642 ;; Registers used:
 13643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13649 ;;      Params:         0       0       0       0       0
 13650 ;;      Locals:         0       0       0       0       0
 13651 ;;      Temps:          0       0       0       0       0
 13652 ;;      Totals:         0       0       0       0       0
 13653 ;;Total ram usage:        0 bytes
 13654 ;; Hardware stack levels used: 1
 13655 ;; Hardware stack levels required when called: 15
 13656 ;; This function calls:
 13657 ;;		Nothing
 13658 ;; This function is called by:
 13659 ;;		_vfpfcnvrt
 13660 ;; This function uses a reentrant model
 13661 ;;
 13662                           
 13663                           	psect	text30
 13664   000A58                     __ptext30:
 13665                           	callstack 0
 13666   000A58                     ___awmod:
 13667                           	callstack 0
 13668                           
 13669                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13670   000A58  52E6               	movf	postinc1,f,c
 13671   000A5A  52E6               	movf	postinc1,f,c
 13672                           
 13673                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13674                           
 13675                           ;incstack = 0
 13676 ;; hardware stack exceeded
 13677   000A5C  0EFE               	movlw	-2
 13678   000A5E  6AE3               	clrf	plusw1,c
 13679                           
 13680                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13681   000A60  0EFD               	movlw	-3
 13682   000A62  AEE3               	btfss	plusw1,7,c
 13683   000A64  D009               	goto	l4104
 13684                           
 13685                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13686                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13687   000A66  0EFC               	movlw	-4
 13688   000A68  6CE3               	negf	plusw1,c
 13689   000A6A  0EFD               	movlw	-3
 13690   000A6C  1EE3               	comf	plusw1,f,c
 13691   000A6E  B0D8               	btfsc	status,0,c
 13692   000A70  2AE3               	incf	plusw1,f,c
 13693                           
 13694                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13695   000A72  0EFE               	movlw	-2
 13696   000A74  6AE3               	clrf	plusw1,c
 13697   000A76  2AE3               	incf	plusw1,f,c
 13698   000A78                     l4104:
 13699                           
 13700                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13701   000A78  0EFB               	movlw	-5
 13702   000A7A  AEE3               	btfss	plusw1,7,c
 13703   000A7C  D006               	goto	l4108
 13704                           
 13705                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13706                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13707   000A7E  0EFA               	movlw	-6
 13708   000A80  6CE3               	negf	plusw1,c
 13709   000A82  0EFB               	movlw	-5
 13710   000A84  1EE3               	comf	plusw1,f,c
 13711   000A86  B0D8               	btfsc	status,0,c
 13712   000A88  2AE3               	incf	plusw1,f,c
 13713   000A8A                     l4108:
 13714                           
 13715                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13716   000A8A  0EFA               	movlw	-6
 13717   000A8C  CFE3 F037          	movff	plusw1,btemp
 13718   000A90  0EFB               	movlw	-5
 13719   000A92  50E3               	movf	plusw1,w,c
 13720   000A94  1037               	iorwf	btemp^0,w,c
 13721   000A96  B4D8               	btfsc	status,2,c
 13722   000A98  D04A               	goto	u2120
 13723                           
 13724                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13725   000A9A  0EFF               	movlw	-1
 13726   000A9C  6AE3               	clrf	plusw1,c
 13727   000A9E  D010               	goto	L2
 13728   000AA0                     l4112:
 13729                           
 13730                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13731   000AA0  0EFA               	movlw	-6
 13732   000AA2  50E3               	movf	plusw1,w,c
 13733   000AA4  90D8               	bcf	status,0,c
 13734   000AA6  34E8               	rlcf	wreg,w,c
 13735   000AA8  6E37               	movwf	btemp^0,c
 13736   000AAA  0EFA               	movlw	-6
 13737   000AAC  C037  FFE3         	movff	btemp,plusw1
 13738   000AB0  0EFB               	movlw	-5
 13739   000AB2  50E3               	movf	plusw1,w,c
 13740   000AB4  34E8               	rlcf	wreg,w,c
 13741   000AB6  6E37               	movwf	btemp^0,c
 13742   000AB8  0EFB               	movlw	-5
 13743   000ABA  C037  FFE3         	movff	btemp,plusw1
 13744                           
 13745                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13746   000ABE  0EFF               	movlw	-1
 13747   000AC0                     L2:
 13748   000AC0  2AE3               	incf	plusw1,f,c
 13749                           
 13750                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13751   000AC2  0EFB               	movlw	-5
 13752   000AC4  AEE3               	btfss	plusw1,7,c
 13753   000AC6  D7EC               	goto	l4112
 13754   000AC8                     u2100:
 13755                           
 13756                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13757   000AC8  0EFA               	movlw	-6
 13758   000ACA  CFE3 F041          	movff	plusw1,btemp+10
 13759   000ACE  0EFB               	movlw	-5
 13760   000AD0  CFE3 F042          	movff	plusw1,btemp+11
 13761                           
 13762                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13763   000AD4  0EFC               	movlw	-4
 13764   000AD6  CFE3 F03F          	movff	plusw1,btemp+8
 13765   000ADA  0EFD               	movlw	-3
 13766   000ADC  CFE3 F040          	movff	plusw1,btemp+9
 13767   000AE0  5041               	movf	(btemp+10)^0,w,c
 13768   000AE2  5C3F               	subwf	(btemp+8)^0,w,c
 13769   000AE4  5042               	movf	(btemp+11)^0,w,c
 13770   000AE6  5840               	subwfb	(btemp+9)^0,w,c
 13771   000AE8  A0D8               	btfss	status,0,c
 13772   000AEA  D012               	goto	l4122
 13773                           
 13774                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13775                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13776   000AEC  0EFC               	movlw	-4
 13777   000AEE  50E3               	movf	plusw1,w,c
 13778   000AF0  6E37               	movwf	btemp^0,c
 13779   000AF2  0EFA               	movlw	-6
 13780   000AF4  50E3               	movf	plusw1,w,c
 13781   000AF6  5E37               	subwf	btemp^0,f,c
 13782   000AF8  0EFC               	movlw	-4
 13783   000AFA  C037  FFE3         	movff	btemp,plusw1
 13784   000AFE  0EFD               	movlw	-3
 13785   000B00  50E3               	movf	plusw1,w,c
 13786   000B02  6E37               	movwf	btemp^0,c
 13787   000B04  0EFB               	movlw	-5
 13788   000B06  50E3               	movf	plusw1,w,c
 13789   000B08  5A37               	subwfb	btemp^0,f,c
 13790   000B0A  0EFD               	movlw	-3
 13791   000B0C  C037  FFE3         	movff	btemp,plusw1
 13792   000B10                     l4122:
 13793                           
 13794                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13795   000B10  90D8               	bcf	status,0,c
 13796   000B12  0EFB               	movlw	-5
 13797   000B14  32E3               	rrcf	plusw1,f,c
 13798   000B16  0EFA               	movlw	-6
 13799   000B18  32E3               	rrcf	plusw1,f,c
 13800                           
 13801                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13802   000B1A  0EFF               	movlw	-1
 13803   000B1C  50E3               	movf	plusw1,w,c
 13804   000B1E  6E37               	movwf	btemp^0,c
 13805   000B20  0E01               	movlw	1
 13806   000B22  5E37               	subwf	btemp^0,f,c
 13807   000B24  0EFF               	movlw	-1
 13808   000B26  C037  FFE3         	movff	btemp,plusw1
 13809   000B2A  A4D8               	btfss	status,2,c
 13810   000B2C  D7CD               	goto	u2100
 13811   000B2E                     u2120:
 13812                           
 13813                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13814   000B2E  0EFE               	movlw	-2
 13815   000B30  50E3               	movf	plusw1,w,c
 13816   000B32  B4D8               	btfsc	status,2,c
 13817   000B34  D006               	goto	l4130
 13818                           
 13819                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13820                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13821   000B36  0EFC               	movlw	-4
 13822   000B38  6CE3               	negf	plusw1,c
 13823   000B3A  0EFD               	movlw	-3
 13824   000B3C  1EE3               	comf	plusw1,f,c
 13825   000B3E  B0D8               	btfsc	status,0,c
 13826   000B40  2AE3               	incf	plusw1,f,c
 13827   000B42                     l4130:
 13828                           
 13829                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13830   000B42  0EFC               	movlw	-4
 13831   000B44  CFE3 F037          	movff	plusw1,btemp
 13832   000B48  0EFD               	movlw	-3
 13833   000B4A  CFE3 F038          	movff	plusw1,btemp+1
 13834                           
 13835                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13836   000B4E  0EFA               	movlw	250
 13837   000B50  26E1               	addwf	fsr1l,f,c
 13838   000B52  0EFF               	movlw	255
 13839   000B54  22E2               	addwfc	fsr1h,f,c
 13840   000B56  0012               	return		;funcret
 13841   000B58                     __end_of___awmod:
 13842                           	callstack 0
 13843                           
 13844 ;; *************** function _abort *****************
 13845 ;; Defined at:
 13846 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abort.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;		None
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;		None
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  1  [STACK] void 
 13853 ;; Registers used:
 13854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13860 ;;      Params:         0       0       0       0       0
 13861 ;;      Locals:         0       0       0       0       0
 13862 ;;      Temps:          0       0       0       0       0
 13863 ;;      Totals:         0       0       0       0       0
 13864 ;;Total ram usage:        0 bytes
 13865 ;; Hardware stack levels used: 1
 13866 ;; Hardware stack levels required when called: 17
 13867 ;; This function calls:
 13868 ;;		_exit
 13869 ;; This function is called by:
 13870 ;;		___assert_fail
 13871 ;; This function uses a reentrant model
 13872 ;;
 13873                           
 13874                           	psect	text31
 13875   001CF2                     __ptext31:
 13876                           	callstack 0
 13877   001CF2                     _abort:
 13878                           	callstack 0
 13879                           
 13880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13881                           ;incstack = 0
 13882 ;; hardware stack exceeded
 13883   001CF2  0EFF               	movlw	255
 13884   001CF4  6EE6               	movwf	postinc1,c
 13885   001CF6  0EFF               	movlw	255
 13886   001CF8  6EE6               	movwf	postinc1,c
 13887   001CFA  ECCA  F00D         	call	_exit	;wreg free
 13888                           
 13889                           ; _abort: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize
      +                           = 0, vargsize = 0
 13890   001CFE  0012               	return		;funcret
 13891   001D00                     __end_of_abort:
 13892                           	callstack 0
 13893                           
 13894 ;; *************** function _exit *****************
 13895 ;; Defined at:
 13896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\exit.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  code            2  [STACK] int 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;		None
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1  [STACK] void 
 13903 ;; Registers used:
 13904 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13910 ;;      Params:         0       0       0       0       0
 13911 ;;      Locals:         0       0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0
 13913 ;;      Totals:         0       0       0       0       0
 13914 ;;Total ram usage:        0 bytes
 13915 ;; Hardware stack levels used: 1
 13916 ;; Hardware stack levels required when called: 16
 13917 ;; This function calls:
 13918 ;;		__Exit
 13919 ;;		___funcs_on_exit
 13920 ;; This function is called by:
 13921 ;;		_abort
 13922 ;; This function uses a reentrant model
 13923 ;;
 13924                           
 13925                           	psect	text32
 13926   001B94                     __ptext32:
 13927                           	callstack 0
 13928   001B94                     _exit:
 13929                           	callstack 0
 13930                           
 13931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13932                           ;incstack = 0
 13933 ;; hardware stack exceeded
 13934   001B94  EC3D  F00E         	call	___funcs_on_exit	;wreg free
 13935                           
 13936                           ;stkvar	exit@code @ sp[(0)+-2]
 13937   001B98  0EFE               	movlw	-2
 13938   001B9A  CFE3 FFE6          	movff	plusw1,postinc1
 13939   001B9E  CFE3 FFE6          	movff	plusw1,postinc1
 13940   001BA2  EC2D  F00F         	call	__Exit	;wreg free
 13941                           
 13942                           ; _exit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 13943   001BA6  52E5               	movf	postdec1,f,c
 13944   001BA8  52E5               	movf	postdec1,f,c
 13945   001BAA  0012               	return		;funcret
 13946   001BAC                     __end_of_exit:
 13947                           	callstack 0
 13948                           
 13949 ;; *************** function ___funcs_on_exit *****************
 13950 ;; Defined at:
 13951 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atexit.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;		None
 13954 ;; Auto vars:     Size  Location     Type
 13955 ;;  func            2    0        PTR FTN()void 
 13956 ;; Return value:  Size  Location     Type
 13957 ;;                  1  [STACK] void 
 13958 ;; Registers used:
 13959 ;;		wreg, status,2, status,0
 13960 ;; Tracked objects:
 13961 ;;		On entry : 0/0
 13962 ;;		On exit  : 0/0
 13963 ;;		Unchanged: 0/0
 13964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13965 ;;      Params:         0       0       0       0       0
 13966 ;;      Locals:         0       0       0       0       0
 13967 ;;      Temps:          0       0       0       0       0
 13968 ;;      Totals:         0       0       0       0       0
 13969 ;;Total ram usage:        0 bytes
 13970 ;; Hardware stack levels used: 1
 13971 ;; Hardware stack levels required when called: 15
 13972 ;; This function calls:
 13973 ;;		Nothing
 13974 ;; This function is called by:
 13975 ;;		_exit
 13976 ;; This function uses a reentrant model
 13977 ;;
 13978                           
 13979                           	psect	text33
 13980   001C7A                     __ptext33:
 13981                           	callstack 0
 13982   001C7A                     ___funcs_on_exit:
 13983                           	callstack 0
 13984                           
 13985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13986                           ;incstack = 0
 13987 ;; hardware stack exceeded
 13988   001C7A  D001               	goto	l4162
 13989   001C7C                     l4160:
 13990   001C7C  0657               	decf	_count^0,f,c
 13991   001C7E                     l4162:
 13992   001C7E  5057               	movf	_count^0,w,c
 13993   001C80  0A80               	xorlw	128
 13994   001C82  0F7F               	addlw	-129
 13995   001C84  A0D8               	btfss	status,0,c
 13996   001C86  0012               	return	
 13997   001C88  D7F9               	goto	l4160
 13998   001C8A                     __end_of___funcs_on_exit:
 13999                           	callstack 0
 14000                           
 14001 ;; *************** function __Exit *****************
 14002 ;; Defined at:
 14003 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\_Exit.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  ec              2  [STACK] int 
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;		None
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1  [STACK] void 
 14010 ;; Registers used:
 14011 ;;		None
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14017 ;;      Params:         0       0       0       0       0
 14018 ;;      Locals:         0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0
 14020 ;;      Totals:         0       0       0       0       0
 14021 ;;Total ram usage:        0 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 15
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_exit
 14028 ;; This function uses a reentrant model
 14029 ;;
 14030                           
 14031                           	psect	text34
 14032   001E5A                     __ptext34:
 14033                           	callstack 0
 14034   001E5A                     __Exit:
 14035                           	callstack 0
 14036                           
 14037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14038                           ;incstack = 0
 14039 ;; hardware stack exceeded
 14040   001E5A  D7FF               	goto	__ptext34
 14041   001E5C                     __end_of__Exit:
 14042                           	callstack 0
 14043                           
 14044 ;; *************** function _analog_handler *****************
 14045 ;; Defined at:
 14046 ;;		line 67 in file "analog.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;  pin             1   13[BANK0 ] unsigned char 
 14051 ;;  port            1   12[BANK0 ] unsigned char 
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      void 
 14054 ;; Registers used:
 14055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh, cstack
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14061 ;;      Params:         0       0       0       0       0
 14062 ;;      Locals:         0       2       0       0       0
 14063 ;;      Temps:          0       7       0       0       0
 14064 ;;      Totals:         0       9       0       0       0
 14065 ;;Total ram usage:        9 bytes
 14066 ;; Hardware stack levels used: 1
 14067 ;; Hardware stack levels required when called: 17
 14068 ;; This function calls:
 14069 ;;		_ADCC_GetConversionResult
 14070 ;;		_ADCC_IsConversionDone
 14071 ;;		_ADCC_StartConversion
 14072 ;;		___awdiv
 14073 ;;		_analog_set_pos_ref
 14074 ;; This function is called by:
 14075 ;;		_main
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text35
 14080   000D34                     __ptext35:
 14081                           	callstack 0
 14082   000D34                     _analog_handler:
 14083                           	callstack 13
 14084                           
 14085                           ;analog.c: 69:     if(analog.ch_sampled > ( eEXP_PORT_CNT * 8 ) || ADCC_IsConversionDone
      +                          ())
 14086                           
 14087                           ;incstack = 0
 14088   000D34  0E11               	movlw	17
 14089   000D36  0100               	movlb	0	; () banked
 14090   000D38  6190               	cpfslt	(_analog+48)& (0+255),b
 14091   000D3A  D005               	goto	u3590
 14092                           
 14093                           ; BSR set to: 0
 14094   000D3C  EC87  F00E         	call	_ADCC_IsConversionDone	;wreg free
 14095   000D40  0900               	iorlw	0
 14096   000D42  B4D8               	btfsc	status,2,c
 14097   000D44  0012               	return	
 14098   000D46                     u3590:
 14099                           
 14100                           ;analog.c: 70:     {;analog.c: 72:         if(analog.ch_sampled < ( eEXP_PORT_CNT * 8 ) 
      +                          && ADCC_IsConversionDone())
 14101   000D46  0E10               	movlw	16
 14102   000D48  0100               	movlb	0	; () banked
 14103   000D4A  6190               	cpfslt	(_analog+48)& (0+255),b
 14104   000D4C  D012               	goto	l5300
 14105                           
 14106                           ; BSR set to: 0
 14107   000D4E  EC87  F00E         	call	_ADCC_IsConversionDone	;wreg free
 14108   000D52  0900               	iorlw	0
 14109   000D54  B4D8               	btfsc	status,2,c
 14110   000D56  D00D               	goto	l5300
 14111                           
 14112                           ;analog.c: 73:             analog.adc_val[(uint8_t)analog.ch_sampled] = ADCC_GetConversi
      +                          onResult();
 14113   000D58  EC84  F00D         	call	_ADCC_GetConversionResult	;wreg free
 14114   000D5C  0100               	movlb	0	; () banked
 14115   000D5E  5190               	movf	(_analog+48)& (0+255),w,b
 14116   000D60  0D02               	mullw	2
 14117   000D62  50F3               	movf	243,w,c
 14118   000D64  0F70               	addlw	low (_analog+16)
 14119   000D66  6ED9               	movwf	fsr2l,c
 14120   000D68  6ADA               	clrf	fsr2h,c
 14121   000D6A  C0DA  FFDE         	movff	?_ADCC_GetConversionResult,postinc2
 14122   000D6E  C0DB  FFDD         	movff	?_ADCC_GetConversionResult+1,postdec2
 14123   000D72                     l5300:
 14124                           
 14125                           ;analog.c: 76:         if(++analog.ch_sampled >= ( eEXP_PORT_CNT * 8 ))
 14126   000D72  0100               	movlb	0	; () banked
 14127   000D74  2B90               	incf	(_analog+48)& (0+255),f,b
 14128   000D76  0E0F               	movlw	15
 14129   000D78  6590               	cpfsgt	(_analog+48)& (0+255),b
 14130   000D7A  D001               	goto	l5304
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;analog.c: 77:             analog.ch_sampled = 0;
 14134   000D7C  6B90               	clrf	(_analog+48)& (0+255),b
 14135   000D7E                     l5304:
 14136                           
 14137                           ; BSR set to: 0
 14138                           ;analog.c: 80:         analog_set_pos_ref(analog.ref[analog.ch_sampled]);
 14139   000D7E  5190               	movf	(_analog+48)& (0+255),w,b
 14140   000D80  0F60               	addlw	low _analog
 14141   000D82  6ED9               	movwf	fsr2l,c
 14142   000D84  6ADA               	clrf	fsr2h,c
 14143   000D86  50DF               	movf	indf2,w,c
 14144   000D88  EC2E  F00A         	call	_analog_set_pos_ref
 14145                           
 14146                           ;analog.c: 83:         uint8_t port = ( analog.ch_sampled / 8 );
 14147   000D8C  0E08               	movlw	8
 14148   000D8E  6EE6               	movwf	postinc1,c
 14149   000D90  0E00               	movlw	0
 14150   000D92  6EE6               	movwf	postinc1,c
 14151   000D94  0100               	movlb	0	; () banked
 14152   000D96  5190               	movf	(_analog+48)& (0+255),w,b
 14153   000D98  6EE6               	movwf	postinc1,c
 14154   000D9A  0E00               	movlw	0
 14155   000D9C  6EE6               	movwf	postinc1,c
 14156   000D9E  EC93  F004         	call	___awdiv	;wreg free
 14157   000DA2  5037               	movf	btemp^0,w,c
 14158   000DA4  0100               	movlb	0	; () banked
 14159   000DA6  6FE6               	movwf	analog_handler@port& (0+255),b
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;analog.c: 84:         uint8_t pin = ( analog.ch_sampled & (8 - 1) );
 14163   000DA8  5190               	movf	(_analog+48)& (0+255),w,b
 14164   000DAA  0B07               	andlw	7
 14165   000DAC  6FE7               	movwf	analog_handler@pin& (0+255),b
 14166                           
 14167                           ; BSR set to: 0
 14168                           ;analog.c: 87:         ADCC_StartConversion( PINS[port][pin].AnalogCh );
 14169   000DAE  51E7               	movf	analog_handler@pin& (0+255),w,b
 14170   000DB0  0D02               	mullw	2
 14171   000DB2  CFF3 F0DF          	movff	prodl,??_analog_handler
 14172   000DB6  CFF4 F0E0          	movff	prodh,??_analog_handler+1
 14173   000DBA  51E6               	movf	analog_handler@port& (0+255),w,b
 14174   000DBC  0D10               	mullw	16
 14175   000DBE  0ED0               	movlw	low _PINS
 14176   000DC0  24F3               	addwf	243,w,c
 14177   000DC2  6FE1               	movwf	(??_analog_handler+2)& (0+255),b
 14178   000DC4  0E3E               	movlw	high _PINS
 14179   000DC6  20F4               	addwfc	prodh,w,c
 14180   000DC8  6FE2               	movwf	(??_analog_handler+3)& (0+255),b
 14181   000DCA  51DF               	movf	??_analog_handler& (0+255),w,b
 14182   000DCC  25E1               	addwf	(??_analog_handler+2)& (0+255),w,b
 14183   000DCE  6FE3               	movwf	(??_analog_handler+4)& (0+255),b
 14184   000DD0  51E0               	movf	(??_analog_handler+1)& (0+255),w,b
 14185   000DD2  21E2               	addwfc	(??_analog_handler+3)& (0+255),w,b
 14186   000DD4  6FE4               	movwf	(??_analog_handler+5)& (0+255),b
 14187   000DD6  0E01               	movlw	1
 14188   000DD8  27E3               	addwf	(??_analog_handler+4)& (0+255),f,b
 14189   000DDA  0E00               	movlw	0
 14190   000DDC  23E4               	addwfc	(??_analog_handler+5)& (0+255),f,b
 14191   000DDE  C0E3  FFF6         	movff	??_analog_handler+4,tblptrl
 14192   000DE2  C0E4  FFF7         	movff	??_analog_handler+5,tblptrh
 14193   000DE6                     	if	0	;tblptru may be non-zero
 14194   000DE6                     	endif
 14195   000DE6                     	if	0	;tblptru may be non-zero
 14196   000DE6                     	endif
 14197   000DE6  0008               	tblrd		*
 14198   000DE8  CFF5 F0E5          	movff	tablat,??_analog_handler+6
 14199   000DEC  31E5               	rrcf	(??_analog_handler+6)& (0+255),w,b
 14200   000DEE  32E8               	rrcf	wreg,f,c
 14201   000DF0  32E8               	rrcf	wreg,f,c
 14202   000DF2  0B1F               	andlw	31
 14203   000DF4  EC45  F00E         	call	_ADCC_StartConversion
 14204   000DF8  0012               	return		;funcret
 14205   000DFA                     __end_of_analog_handler:
 14206                           	callstack 0
 14207                           
 14208 ;; *************** function _analog_set_pos_ref *****************
 14209 ;; Defined at:
 14210 ;;		line 36 in file "analog.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;  ref             1    wreg     enum E10193
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;  ref             1    4[BANK0 ] enum E10193
 14215 ;;  current         1    3[BANK0 ] enum E10193
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      void 
 14218 ;; Registers used:
 14219 ;;		wreg, status,2, status,0, cstack
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14225 ;;      Params:         0       0       0       0       0
 14226 ;;      Locals:         0       4       0       0       0
 14227 ;;      Temps:          0       1       0       0       0
 14228 ;;      Totals:         0       5       0       0       0
 14229 ;;Total ram usage:        5 bytes
 14230 ;; Hardware stack levels used: 1
 14231 ;; Hardware stack levels required when called: 16
 14232 ;; This function calls:
 14233 ;;		_FVR_IsOutputReady
 14234 ;; This function is called by:
 14235 ;;		_analog_handler
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           	psect	text36
 14240   00145C                     __ptext36:
 14241                           	callstack 0
 14242   00145C                     _analog_set_pos_ref:
 14243                           	callstack 13
 14244                           
 14245                           ;incstack = 0
 14246                           ;analog_set_pos_ref@ref stored from wreg
 14247   00145C  0100               	movlb	0	; () banked
 14248   00145E  6FDE               	movwf	analog_set_pos_ref@ref& (0+255),b
 14249                           
 14250                           ;analog.c: 36: void analog_set_pos_ref(eAnalogPosRef_t ref);analog.c: 37: {;analog.c: 39
      +                          :     eAnalogPosRef_t current = (eAnalogPosRef_t)(FVRCON & 3);
 14251   001460  010F               	movlb	15	; () banked
 14252   001462  512C               	movf	44,w,b	;volatile
 14253   001464  0B03               	andlw	3
 14254   001466  0100               	movlb	0	; () banked
 14255   001468  6FDD               	movwf	analog_set_pos_ref@current& (0+255),b
 14256                           
 14257                           ;analog.c: 42:     if(ref != current)
 14258   00146A  51DD               	movf	analog_set_pos_ref@current& (0+255),w,b
 14259   00146C  19DE               	xorwf	analog_set_pos_ref@ref& (0+255),w,b
 14260   00146E  B4D8               	btfsc	status,2,c
 14261   001470  0012               	return	
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;analog.c: 43:     {;analog.c: 45:         FVRCON = (FVRCON & 0xFC) | ref;
 14265   001472  010F               	movlb	15	; () banked
 14266   001474  512C               	movf	44,w,b	;volatile
 14267   001476  0BFC               	andlw	252
 14268   001478  0100               	movlb	0	; () banked
 14269   00147A  11DE               	iorwf	analog_set_pos_ref@ref& (0+255),w,b
 14270   00147C  010F               	movlb	15	; () banked
 14271   00147E  6F2C               	movwf	44,b	;volatile
 14272                           
 14273                           ;analog.c: 48:         if((ref & 1) != (current & 1))
 14274   001480  C0DD  F0DA         	movff	analog_set_pos_ref@current,??_analog_set_pos_ref
 14275   001484  0E01               	movlw	1
 14276   001486  0100               	movlb	0	; () banked
 14277   001488  17DA               	andwf	??_analog_set_pos_ref& (0+255),f,b
 14278   00148A  51DE               	movf	analog_set_pos_ref@ref& (0+255),w,b
 14279   00148C  0B01               	andlw	1
 14280   00148E  19DA               	xorwf	??_analog_set_pos_ref& (0+255),w,b
 14281   001490  B4D8               	btfsc	status,2,c
 14282   001492  D012               	goto	l5096
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;analog.c: 49:             ADREF = (ADREF & 0xFC) | ((ref==eARef_VDD) ? 0 : 3);
 14286   001494  51DE               	movf	analog_set_pos_ref@ref& (0+255),w,b
 14287   001496  B4D8               	btfsc	status,2,c
 14288   001498  D004               	goto	l5092
 14289                           
 14290                           ; BSR set to: 0
 14291   00149A  0E00               	movlw	0
 14292   00149C  6FDC               	movwf	(_analog_set_pos_ref$3085+1)& (0+255),b
 14293   00149E  0E03               	movlw	3
 14294   0014A0  D003               	goto	L3
 14295   0014A2                     l5092:
 14296                           
 14297                           ; BSR set to: 0
 14298   0014A2  0E00               	movlw	0
 14299   0014A4  6FDC               	movwf	(_analog_set_pos_ref$3085+1)& (0+255),b
 14300   0014A6  0E00               	movlw	0
 14301   0014A8                     L3:
 14302   0014A8  6FDB               	movwf	_analog_set_pos_ref$3085& (0+255),b
 14303                           
 14304                           ; BSR set to: 0
 14305   0014AA  010F               	movlb	15	; () banked
 14306   0014AC  5153               	movf	83,w,b	;volatile
 14307   0014AE  0BFC               	andlw	252
 14308   0014B0  0100               	movlb	0	; () banked
 14309   0014B2  11DB               	iorwf	_analog_set_pos_ref$3085& (0+255),w,b
 14310   0014B4  010F               	movlb	15	; () banked
 14311   0014B6  6F53               	movwf	83,b	;volatile
 14312   0014B8                     l5096:
 14313   0014B8  EC80  F00E         	call	_FVR_IsOutputReady	;wreg free
 14314   0014BC  0900               	iorlw	0
 14315   0014BE  A4D8               	btfss	status,2,c
 14316   0014C0  0012               	return	
 14317   0014C2  D7FA               	goto	l5096
 14318   0014C4                     __end_of_analog_set_pos_ref:
 14319                           	callstack 0
 14320                           
 14321 ;; *************** function _FVR_IsOutputReady *****************
 14322 ;; Defined at:
 14323 ;;		line 64 in file "mcc_generated_files/fvr.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;		None
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;		None
 14328 ;; Return value:  Size  Location     Type
 14329 ;;                  1    wreg      _Bool 
 14330 ;; Registers used:
 14331 ;;		wreg
 14332 ;; Tracked objects:
 14333 ;;		On entry : 0/0
 14334 ;;		On exit  : 0/0
 14335 ;;		Unchanged: 0/0
 14336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14337 ;;      Params:         0       0       0       0       0
 14338 ;;      Locals:         0       0       0       0       0
 14339 ;;      Temps:          0       0       0       0       0
 14340 ;;      Totals:         0       0       0       0       0
 14341 ;;Total ram usage:        0 bytes
 14342 ;; Hardware stack levels used: 1
 14343 ;; Hardware stack levels required when called: 15
 14344 ;; This function calls:
 14345 ;;		Nothing
 14346 ;; This function is called by:
 14347 ;;		_analog_set_pos_ref
 14348 ;; This function uses a non-reentrant model
 14349 ;;
 14350                           
 14351                           	psect	text37
 14352   001D00                     __ptext37:
 14353                           	callstack 0
 14354   001D00                     _FVR_IsOutputReady:
 14355                           	callstack 13
 14356                           
 14357                           ;mcc_generated_files/fvr.c: 66:     return (FVRCONbits.FVRRDY);
 14358                           
 14359                           ;incstack = 0
 14360   001D00  010F               	movlb	15	; () banked
 14361   001D02  AD2C               	btfss	44,6,b	;volatile
 14362   001D04  D002               	goto	u2980
 14363   001D06  0E01               	movlw	1
 14364   001D08  0012               	return	
 14365   001D0A                     u2980:
 14366   001D0A  0E00               	movlw	0
 14367                           
 14368                           ; BSR set to: 15
 14369   001D0C  0012               	return		;funcret
 14370   001D0E                     __end_of_FVR_IsOutputReady:
 14371                           	callstack 0
 14372                           
 14373 ;; *************** function ___awdiv *****************
 14374 ;; Defined at:
 14375 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  dividend        2  [STACK] int 
 14378 ;;  divisor         2  [STACK] int 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  quotient        2  [STACK] int 
 14381 ;;  sign            1  [STACK] unsigned char 
 14382 ;;  counter         1  [STACK] unsigned char 
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  2  [STACK] int 
 14385 ;; Registers used:
 14386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/0
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14392 ;;      Params:         0       0       0       0       0
 14393 ;;      Locals:         0       0       0       0       0
 14394 ;;      Temps:          0       0       0       0       0
 14395 ;;      Totals:         0       0       0       0       0
 14396 ;;Total ram usage:        0 bytes
 14397 ;; Hardware stack levels used: 1
 14398 ;; Hardware stack levels required when called: 15
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		_analog_handler
 14403 ;;		_vfpfcnvrt
 14404 ;; This function uses a reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text38
 14408   000926                     __ptext38:
 14409                           	callstack 0
 14410   000926                     ___awdiv:
 14411                           	callstack 0
 14412                           
 14413                           ; BSR set to: 15
 14414                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14415   000926  52E6               	movf	postinc1,f,c
 14416   000928  52E6               	movf	postinc1,f,c
 14417   00092A  52E6               	movf	postinc1,f,c
 14418   00092C  52E6               	movf	postinc1,f,c
 14419                           
 14420                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 14421                           
 14422                           ;incstack = 0
 14423 ;; hardware stack exceeded
 14424   00092E  0EFE               	movlw	-2
 14425   000930  6AE3               	clrf	plusw1,c
 14426                           
 14427                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14428   000932  0EF9               	movlw	-7
 14429   000934  AEE3               	btfss	plusw1,7,c
 14430   000936  D009               	goto	l4058
 14431                           
 14432                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14433                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14434   000938  0EF8               	movlw	-8
 14435   00093A  6CE3               	negf	plusw1,c
 14436   00093C  0EF9               	movlw	-7
 14437   00093E  1EE3               	comf	plusw1,f,c
 14438   000940  B0D8               	btfsc	status,0,c
 14439   000942  2AE3               	incf	plusw1,f,c
 14440                           
 14441                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 14442   000944  0EFE               	movlw	-2
 14443   000946  6AE3               	clrf	plusw1,c
 14444   000948  2AE3               	incf	plusw1,f,c
 14445   00094A                     l4058:
 14446                           
 14447                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 14448   00094A  0EFB               	movlw	-5
 14449   00094C  AEE3               	btfss	plusw1,7,c
 14450   00094E  D008               	goto	l4064
 14451                           
 14452                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 14453                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 14454   000950  0EFA               	movlw	-6
 14455   000952  6CE3               	negf	plusw1,c
 14456   000954  0EFB               	movlw	-5
 14457   000956  1EE3               	comf	plusw1,f,c
 14458   000958  B0D8               	btfsc	status,0,c
 14459   00095A  2AE3               	incf	plusw1,f,c
 14460                           
 14461                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 14462   00095C  0EFE               	movlw	-2
 14463   00095E  70E3               	btg	plusw1,0,c
 14464   000960                     l4064:
 14465                           
 14466                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14467   000960  0EFC               	movlw	-4
 14468   000962  6AE3               	clrf	plusw1,c
 14469   000964  0EFD               	movlw	-3
 14470   000966  6AE3               	clrf	plusw1,c
 14471                           
 14472                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14473   000968  0EF8               	movlw	-8
 14474   00096A  CFE3 F037          	movff	plusw1,btemp
 14475   00096E  0EF9               	movlw	-7
 14476   000970  50E3               	movf	plusw1,w,c
 14477   000972  1037               	iorwf	btemp^0,w,c
 14478   000974  B4D8               	btfsc	status,2,c
 14479   000976  D05B               	goto	u2050
 14480                           
 14481                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 14482   000978  0EFF               	movlw	-1
 14483   00097A  6AE3               	clrf	plusw1,c
 14484   00097C  D010               	goto	L4
 14485   00097E                     l4070:
 14486                           
 14487                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14488   00097E  0EF8               	movlw	-8
 14489   000980  50E3               	movf	plusw1,w,c
 14490   000982  90D8               	bcf	status,0,c
 14491   000984  34E8               	rlcf	wreg,w,c
 14492   000986  6E37               	movwf	btemp^0,c
 14493   000988  0EF8               	movlw	-8
 14494   00098A  C037  FFE3         	movff	btemp,plusw1
 14495   00098E  0EF9               	movlw	-7
 14496   000990  50E3               	movf	plusw1,w,c
 14497   000992  34E8               	rlcf	wreg,w,c
 14498   000994  6E37               	movwf	btemp^0,c
 14499   000996  0EF9               	movlw	-7
 14500   000998  C037  FFE3         	movff	btemp,plusw1
 14501                           
 14502                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 14503   00099C  0EFF               	movlw	-1
 14504   00099E                     L4:
 14505   00099E  2AE3               	incf	plusw1,f,c
 14506                           
 14507                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14508   0009A0  0EF9               	movlw	-7
 14509   0009A2  AEE3               	btfss	plusw1,7,c
 14510   0009A4  D7EC               	goto	l4070
 14511   0009A6                     u2030:
 14512                           
 14513                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14514   0009A6  0EFC               	movlw	-4
 14515   0009A8  50E3               	movf	plusw1,w,c
 14516   0009AA  90D8               	bcf	status,0,c
 14517   0009AC  34E8               	rlcf	wreg,w,c
 14518   0009AE  6E37               	movwf	btemp^0,c
 14519   0009B0  0EFC               	movlw	-4
 14520   0009B2  C037  FFE3         	movff	btemp,plusw1
 14521   0009B6  0EFD               	movlw	-3
 14522   0009B8  50E3               	movf	plusw1,w,c
 14523   0009BA  34E8               	rlcf	wreg,w,c
 14524   0009BC  6E37               	movwf	btemp^0,c
 14525   0009BE  0EFD               	movlw	-3
 14526   0009C0  C037  FFE3         	movff	btemp,plusw1
 14527                           
 14528                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14529   0009C4  0EF8               	movlw	-8
 14530   0009C6  CFE3 F041          	movff	plusw1,btemp+10
 14531   0009CA  0EF9               	movlw	-7
 14532   0009CC  CFE3 F042          	movff	plusw1,btemp+11
 14533                           
 14534                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 14535   0009D0  0EFA               	movlw	-6
 14536   0009D2  CFE3 F03F          	movff	plusw1,btemp+8
 14537   0009D6  0EFB               	movlw	-5
 14538   0009D8  CFE3 F040          	movff	plusw1,btemp+9
 14539   0009DC  5041               	movf	(btemp+10)^0,w,c
 14540   0009DE  5C3F               	subwf	(btemp+8)^0,w,c
 14541   0009E0  5042               	movf	(btemp+11)^0,w,c
 14542   0009E2  5840               	subwfb	(btemp+9)^0,w,c
 14543   0009E4  A0D8               	btfss	status,0,c
 14544   0009E6  D014               	goto	l4084
 14545                           
 14546                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14547                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 14548   0009E8  0EFA               	movlw	-6
 14549   0009EA  50E3               	movf	plusw1,w,c
 14550   0009EC  6E37               	movwf	btemp^0,c
 14551   0009EE  0EF8               	movlw	-8
 14552   0009F0  50E3               	movf	plusw1,w,c
 14553   0009F2  5E37               	subwf	btemp^0,f,c
 14554   0009F4  0EFA               	movlw	-6
 14555   0009F6  C037  FFE3         	movff	btemp,plusw1
 14556   0009FA  0EFB               	movlw	-5
 14557   0009FC  50E3               	movf	plusw1,w,c
 14558   0009FE  6E37               	movwf	btemp^0,c
 14559   000A00  0EF9               	movlw	-7
 14560   000A02  50E3               	movf	plusw1,w,c
 14561   000A04  5A37               	subwfb	btemp^0,f,c
 14562   000A06  0EFB               	movlw	-5
 14563   000A08  C037  FFE3         	movff	btemp,plusw1
 14564                           
 14565                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14566   000A0C  0EFC               	movlw	-4
 14567   000A0E  80E3               	bsf	plusw1,0,c
 14568   000A10                     l4084:
 14569                           
 14570                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 14571   000A10  90D8               	bcf	status,0,c
 14572   000A12  0EF9               	movlw	-7
 14573   000A14  32E3               	rrcf	plusw1,f,c
 14574   000A16  0EF8               	movlw	-8
 14575   000A18  32E3               	rrcf	plusw1,f,c
 14576                           
 14577                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 14578   000A1A  0EFF               	movlw	-1
 14579   000A1C  50E3               	movf	plusw1,w,c
 14580   000A1E  6E37               	movwf	btemp^0,c
 14581   000A20  0E01               	movlw	1
 14582   000A22  5E37               	subwf	btemp^0,f,c
 14583   000A24  0EFF               	movlw	-1
 14584   000A26  C037  FFE3         	movff	btemp,plusw1
 14585   000A2A  A4D8               	btfss	status,2,c
 14586   000A2C  D7BC               	goto	u2030
 14587   000A2E                     u2050:
 14588                           
 14589                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 14590   000A2E  0EFE               	movlw	-2
 14591   000A30  50E3               	movf	plusw1,w,c
 14592   000A32  B4D8               	btfsc	status,2,c
 14593   000A34  D006               	goto	l4092
 14594                           
 14595                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14596                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14597   000A36  0EFC               	movlw	-4
 14598   000A38  6CE3               	negf	plusw1,c
 14599   000A3A  0EFD               	movlw	-3
 14600   000A3C  1EE3               	comf	plusw1,f,c
 14601   000A3E  B0D8               	btfsc	status,0,c
 14602   000A40  2AE3               	incf	plusw1,f,c
 14603   000A42                     l4092:
 14604                           
 14605                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 14606   000A42  0EFC               	movlw	-4
 14607   000A44  CFE3 F037          	movff	plusw1,btemp
 14608   000A48  0EFD               	movlw	-3
 14609   000A4A  CFE3 F038          	movff	plusw1,btemp+1
 14610                           
 14611                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14612   000A4E  0EF8               	movlw	248
 14613   000A50  26E1               	addwf	fsr1l,f,c
 14614   000A52  0EFF               	movlw	255
 14615   000A54  22E2               	addwfc	fsr1h,f,c
 14616   000A56  0012               	return		;funcret
 14617   000A58                     __end_of___awdiv:
 14618                           	callstack 0
 14619                           
 14620 ;; *************** function _ADCC_StartConversion *****************
 14621 ;; Defined at:
 14622 ;;		line 107 in file "mcc_generated_files/adcc.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  channel         1    wreg     enum E9512
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  channel         1    0[BANK0 ] enum E9512
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      void 
 14629 ;; Registers used:
 14630 ;;		wreg
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14636 ;;      Params:         0       0       0       0       0
 14637 ;;      Locals:         0       1       0       0       0
 14638 ;;      Temps:          0       0       0       0       0
 14639 ;;      Totals:         0       1       0       0       0
 14640 ;;Total ram usage:        1 bytes
 14641 ;; Hardware stack levels used: 1
 14642 ;; Hardware stack levels required when called: 15
 14643 ;; This function calls:
 14644 ;;		Nothing
 14645 ;; This function is called by:
 14646 ;;		_analog_handler
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text39
 14651   001C8A                     __ptext39:
 14652                           	callstack 0
 14653   001C8A                     _ADCC_StartConversion:
 14654                           	callstack 14
 14655                           
 14656                           ;incstack = 0
 14657                           ;ADCC_StartConversion@channel stored from wreg
 14658   001C8A  0100               	movlb	0	; () banked
 14659   001C8C  6FDA               	movwf	ADCC_StartConversion@channel& (0+255),b
 14660                           
 14661                           ;mcc_generated_files/adcc.c: 107: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 108: {;mcc_generated_files/adcc.c: 110:     ADPCH = channel;
 14662   001C8E  C0DA  FF5A         	movff	ADCC_StartConversion@channel,3930	;volatile
 14663                           
 14664                           ;mcc_generated_files/adcc.c: 113:     ADCON0bits.ADON = 1;
 14665   001C92  010F               	movlb	15	; () banked
 14666   001C94  8F5B               	bsf	91,7,b	;volatile
 14667                           
 14668                           ; BSR set to: 15
 14669                           ;mcc_generated_files/adcc.c: 116:     ADCON0bits.ADGO = 1;
 14670   001C96  815B               	bsf	91,0,b	;volatile
 14671                           
 14672                           ; BSR set to: 15
 14673   001C98  0012               	return		;funcret
 14674   001C9A                     __end_of_ADCC_StartConversion:
 14675                           	callstack 0
 14676                           
 14677 ;; *************** function _ADCC_IsConversionDone *****************
 14678 ;; Defined at:
 14679 ;;		line 119 in file "mcc_generated_files/adcc.c"
 14680 ;; Parameters:    Size  Location     Type
 14681 ;;		None
 14682 ;; Auto vars:     Size  Location     Type
 14683 ;;		None
 14684 ;; Return value:  Size  Location     Type
 14685 ;;                  1    wreg      _Bool 
 14686 ;; Registers used:
 14687 ;;		wreg
 14688 ;; Tracked objects:
 14689 ;;		On entry : 0/0
 14690 ;;		On exit  : 0/0
 14691 ;;		Unchanged: 0/0
 14692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14693 ;;      Params:         0       0       0       0       0
 14694 ;;      Locals:         0       0       0       0       0
 14695 ;;      Temps:          0       0       0       0       0
 14696 ;;      Totals:         0       0       0       0       0
 14697 ;;Total ram usage:        0 bytes
 14698 ;; Hardware stack levels used: 1
 14699 ;; Hardware stack levels required when called: 15
 14700 ;; This function calls:
 14701 ;;		Nothing
 14702 ;; This function is called by:
 14703 ;;		_analog_handler
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text40
 14708   001D0E                     __ptext40:
 14709                           	callstack 0
 14710   001D0E                     _ADCC_IsConversionDone:
 14711                           	callstack 14
 14712                           
 14713                           ;mcc_generated_files/adcc.c: 122:     return ((unsigned char)(!ADCON0bits.ADGO));
 14714                           
 14715                           ; BSR set to: 15
 14716                           ;incstack = 0
 14717   001D0E  010F               	movlb	15	; () banked
 14718   001D10  B15B               	btfsc	91,0,b	;volatile
 14719   001D12  D002               	goto	u3130
 14720   001D14  0E01               	movlw	1
 14721   001D16  0012               	return	
 14722   001D18                     u3130:
 14723   001D18  0E00               	movlw	0
 14724                           
 14725                           ; BSR set to: 15
 14726   001D1A  0012               	return		;funcret
 14727   001D1C                     __end_of_ADCC_IsConversionDone:
 14728                           	callstack 0
 14729                           
 14730 ;; *************** function _ADCC_GetConversionResult *****************
 14731 ;; Defined at:
 14732 ;;		line 125 in file "mcc_generated_files/adcc.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;		None
 14735 ;; Auto vars:     Size  Location     Type
 14736 ;;		None
 14737 ;; Return value:  Size  Location     Type
 14738 ;;                  2    0[BANK0 ] unsigned short 
 14739 ;; Registers used:
 14740 ;;		wreg, status,2, status,0
 14741 ;; Tracked objects:
 14742 ;;		On entry : 0/0
 14743 ;;		On exit  : 0/0
 14744 ;;		Unchanged: 0/0
 14745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14746 ;;      Params:         0       2       0       0       0
 14747 ;;      Locals:         0       0       0       0       0
 14748 ;;      Temps:          0       2       0       0       0
 14749 ;;      Totals:         0       4       0       0       0
 14750 ;;Total ram usage:        4 bytes
 14751 ;; Hardware stack levels used: 1
 14752 ;; Hardware stack levels required when called: 15
 14753 ;; This function calls:
 14754 ;;		Nothing
 14755 ;; This function is called by:
 14756 ;;		_analog_handler
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text41
 14761   001B08                     __ptext41:
 14762                           	callstack 0
 14763   001B08                     _ADCC_GetConversionResult:
 14764                           	callstack 14
 14765                           
 14766                           ;mcc_generated_files/adcc.c: 128:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14767                           
 14768                           ; BSR set to: 15
 14769                           ;incstack = 0
 14770   001B08  010F               	movlb	15	; () banked
 14771   001B0A  515F               	movf	95,w,b	;volatile
 14772   001B0C  0100               	movlb	0	; () banked
 14773   001B0E  6FDD               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),b
 14774   001B10  6BDC               	clrf	??_ADCC_GetConversionResult& (0+255),b
 14775   001B12  010F               	movlb	15	; () banked
 14776   001B14  515E               	movf	94,w,b	;volatile
 14777   001B16  0100               	movlb	0	; () banked
 14778   001B18  25DC               	addwf	??_ADCC_GetConversionResult& (0+255),w,b
 14779   001B1A  6FDA               	movwf	?_ADCC_GetConversionResult& (0+255),b
 14780   001B1C  010F               	movlb	15	; () banked
 14781   001B1E  0E00               	movlw	0
 14782   001B20  0100               	movlb	0	; () banked
 14783   001B22  21DD               	addwfc	(??_ADCC_GetConversionResult+1)& (0+255),w,b
 14784   001B24  6FDB               	movwf	(?_ADCC_GetConversionResult+1)& (0+255),b
 14785                           
 14786                           ; BSR set to: 0
 14787   001B26  0012               	return		;funcret
 14788   001B28                     __end_of_ADCC_GetConversionResult:
 14789                           	callstack 0
 14790                           
 14791 ;; *************** function _SYSTEM_Initialize *****************
 14792 ;; Defined at:
 14793 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;		None
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, status,2, status,0, cstack
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14807 ;;      Params:         0       0       0       0       0
 14808 ;;      Locals:         0       0       0       0       0
 14809 ;;      Temps:          0       0       0       0       0
 14810 ;;      Totals:         0       0       0       0       0
 14811 ;;Total ram usage:        0 bytes
 14812 ;; Hardware stack levels used: 1
 14813 ;; Hardware stack levels required when called: 17
 14814 ;; This function calls:
 14815 ;;		_ADCC_Initialize
 14816 ;;		_CWG_Initialize
 14817 ;;		_DAC1_Initialize
 14818 ;;		_EUSART1_Initialize
 14819 ;;		_FVR_Initialize
 14820 ;;		_I2C1_Initialize
 14821 ;;		_INTERRUPT_Initialize
 14822 ;;		_OSCILLATOR_Initialize
 14823 ;;		_PIN_MANAGER_Initialize
 14824 ;;		_PMD_Initialize
 14825 ;;		_PWM1_Initialize
 14826 ;;		_PWM2_Initialize
 14827 ;;		_PWM3_Initialize
 14828 ;;		_PWM4_Initialize
 14829 ;;		_TMR2_Initialize
 14830 ;;		_TMR4_Initialize
 14831 ;; This function is called by:
 14832 ;;		_main
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text42
 14837   0017DC                     __ptext42:
 14838                           	callstack 0
 14839   0017DC                     _SYSTEM_Initialize:
 14840                           	callstack 13
 14841                           
 14842                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;incstack = 0
 14846   0017DC  EC27  F00F         	call	_INTERRUPT_Initialize	;wreg free
 14847                           
 14848                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14849   0017E0  EC4D  F00E         	call	_PMD_Initialize	;wreg free
 14850                           
 14851                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 14852   0017E4  EC8E  F00E         	call	_I2C1_Initialize	;wreg free
 14853                           
 14854                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 14855   0017E8  EC92  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
 14856                           
 14857                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 14858   0017EC  EC2B  F00E         	call	_OSCILLATOR_Initialize	;wreg free
 14859                           
 14860                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
 14861   0017F0  ECF9  F00E         	call	_FVR_Initialize	;wreg free
 14862                           
 14863                           ;mcc_generated_files/mcc.c: 58:     PWM2_Initialize();
 14864   0017F4  EC0E  F00E         	call	_PWM2_Initialize	;wreg free
 14865                           
 14866                           ;mcc_generated_files/mcc.c: 59:     ADCC_Initialize();
 14867   0017F8  EC8C  F00C         	call	_ADCC_Initialize	;wreg free
 14868                           
 14869                           ;mcc_generated_files/mcc.c: 60:     TMR4_Initialize();
 14870   0017FC  ECE2  F00D         	call	_TMR4_Initialize	;wreg free
 14871                           
 14872                           ;mcc_generated_files/mcc.c: 61:     PWM4_Initialize();
 14873   001800  ECF8  F00D         	call	_PWM4_Initialize	;wreg free
 14874                           
 14875                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 14876   001804  ECED  F00D         	call	_TMR2_Initialize	;wreg free
 14877                           
 14878                           ;mcc_generated_files/mcc.c: 63:     PWM1_Initialize();
 14879   001808  EC18  F00E         	call	_PWM1_Initialize	;wreg free
 14880                           
 14881                           ;mcc_generated_files/mcc.c: 64:     DAC1_Initialize();
 14882   00180C  EC95  F00E         	call	_DAC1_Initialize	;wreg free
 14883                           
 14884                           ;mcc_generated_files/mcc.c: 65:     PWM3_Initialize();
 14885   001810  EC03  F00E         	call	_PWM3_Initialize	;wreg free
 14886                           
 14887                           ;mcc_generated_files/mcc.c: 66:     CWG_Initialize();
 14888   001814  ECB1  F00D         	call	_CWG_Initialize	;wreg free
 14889                           
 14890                           ;mcc_generated_files/mcc.c: 67:     EUSART1_Initialize();
 14891   001818  ECBD  F009         	call	_EUSART1_Initialize	;wreg free
 14892   00181C  0012               	return		;funcret
 14893   00181E                     __end_of_SYSTEM_Initialize:
 14894                           	callstack 0
 14895                           
 14896 ;; *************** function _TMR4_Initialize *****************
 14897 ;; Defined at:
 14898 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;		None
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      void 
 14905 ;; Registers used:
 14906 ;;		wreg, status,2
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14912 ;;      Params:         0       0       0       0       0
 14913 ;;      Locals:         0       0       0       0       0
 14914 ;;      Temps:          0       0       0       0       0
 14915 ;;      Totals:         0       0       0       0       0
 14916 ;;Total ram usage:        0 bytes
 14917 ;; Hardware stack levels used: 1
 14918 ;; Hardware stack levels required when called: 15
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_SYSTEM_Initialize
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           	psect	text43
 14927   001BC4                     __ptext43:
 14928                           	callstack 0
 14929   001BC4                     _TMR4_Initialize:
 14930                           	callstack 14
 14931                           
 14932                           ;mcc_generated_files/tmr4.c: 67:     T4CLKCON = 0x01;
 14933                           
 14934                           ;incstack = 0
 14935   001BC4  0E01               	movlw	1
 14936   001BC6  6EB8               	movwf	184,c	;volatile
 14937                           
 14938                           ;mcc_generated_files/tmr4.c: 70:     T4HLT = 0x00;
 14939   001BC8  6AB7               	clrf	183,c	;volatile
 14940                           
 14941                           ;mcc_generated_files/tmr4.c: 73:     T4RST = 0x00;
 14942   001BCA  6AB9               	clrf	185,c	;volatile
 14943                           
 14944                           ;mcc_generated_files/tmr4.c: 76:     T4PR = 0xFF;
 14945   001BCC  68B5               	setf	181,c	;volatile
 14946                           
 14947                           ;mcc_generated_files/tmr4.c: 79:     T4TMR = 0x00;
 14948   001BCE  6AB4               	clrf	180,c	;volatile
 14949                           
 14950                           ;mcc_generated_files/tmr4.c: 82:     PIR4bits.TMR4IF = 0;
 14951   001BD0  010E               	movlb	14	; () banked
 14952   001BD2  97C9               	bcf	201,3,b	;volatile
 14953                           
 14954                           ;mcc_generated_files/tmr4.c: 85:     T4CON = 0x80;
 14955   001BD4  0E80               	movlw	128
 14956   001BD6  6EB6               	movwf	182,c	;volatile
 14957                           
 14958                           ; BSR set to: 14
 14959   001BD8  0012               	return		;funcret
 14960   001BDA                     __end_of_TMR4_Initialize:
 14961                           	callstack 0
 14962                           
 14963 ;; *************** function _TMR2_Initialize *****************
 14964 ;; Defined at:
 14965 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;		None
 14968 ;; Auto vars:     Size  Location     Type
 14969 ;;		None
 14970 ;; Return value:  Size  Location     Type
 14971 ;;                  1    wreg      void 
 14972 ;; Registers used:
 14973 ;;		wreg, status,2
 14974 ;; Tracked objects:
 14975 ;;		On entry : 0/0
 14976 ;;		On exit  : 0/0
 14977 ;;		Unchanged: 0/0
 14978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14979 ;;      Params:         0       0       0       0       0
 14980 ;;      Locals:         0       0       0       0       0
 14981 ;;      Temps:          0       0       0       0       0
 14982 ;;      Totals:         0       0       0       0       0
 14983 ;;Total ram usage:        0 bytes
 14984 ;; Hardware stack levels used: 1
 14985 ;; Hardware stack levels required when called: 15
 14986 ;; This function calls:
 14987 ;;		Nothing
 14988 ;; This function is called by:
 14989 ;;		_SYSTEM_Initialize
 14990 ;; This function uses a non-reentrant model
 14991 ;;
 14992                           
 14993                           	psect	text44
 14994   001BDA                     __ptext44:
 14995                           	callstack 0
 14996   001BDA                     _TMR2_Initialize:
 14997                           	callstack 14
 14998                           
 14999                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 15000                           
 15001                           ; BSR set to: 14
 15002                           ;incstack = 0
 15003   001BDA  0E01               	movlw	1
 15004   001BDC  6EBE               	movwf	190,c	;volatile
 15005                           
 15006                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15007   001BDE  6ABD               	clrf	189,c	;volatile
 15008                           
 15009                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15010   001BE0  6ABF               	clrf	191,c	;volatile
 15011                           
 15012                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 15013   001BE2  68BB               	setf	187,c	;volatile
 15014                           
 15015                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15016   001BE4  6ABA               	clrf	186,c	;volatile
 15017                           
 15018                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15019   001BE6  010E               	movlb	14	; () banked
 15020   001BE8  93C9               	bcf	201,1,b	;volatile
 15021                           
 15022                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 15023   001BEA  0E80               	movlw	128
 15024   001BEC  6EBC               	movwf	188,c	;volatile
 15025                           
 15026                           ; BSR set to: 14
 15027   001BEE  0012               	return		;funcret
 15028   001BF0                     __end_of_TMR2_Initialize:
 15029                           	callstack 0
 15030                           
 15031 ;; *************** function _PWM4_Initialize *****************
 15032 ;; Defined at:
 15033 ;;		line 58 in file "mcc_generated_files/pwm4.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      void 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15047 ;;      Params:         0       0       0       0       0
 15048 ;;      Locals:         0       0       0       0       0
 15049 ;;      Temps:          0       0       0       0       0
 15050 ;;      Totals:         0       0       0       0       0
 15051 ;;Total ram usage:        0 bytes
 15052 ;; Hardware stack levels used: 1
 15053 ;; Hardware stack levels required when called: 15
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_SYSTEM_Initialize
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text45
 15062   001BF0                     __ptext45:
 15063                           	callstack 0
 15064   001BF0                     _PWM4_Initialize:
 15065                           	callstack 14
 15066                           
 15067                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
 15068                           
 15069                           ; BSR set to: 14
 15070                           ;incstack = 0
 15071   001BF0  0E80               	movlw	128
 15072   001BF2  6EA1               	movwf	161,c	;volatile
 15073                           
 15074                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
 15075   001BF4  0E7F               	movlw	127
 15076   001BF6  6EA0               	movwf	160,c	;volatile
 15077                           
 15078                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
 15079   001BF8  0EC0               	movlw	192
 15080   001BFA  6E9F               	movwf	159,c	;volatile
 15081                           
 15082                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 2;
 15083   001BFC  50AD               	movf	173,w,c	;volatile
 15084   001BFE  0B3F               	andlw	-193
 15085   001C00  0980               	iorlw	128
 15086   001C02  6EAD               	movwf	173,c	;volatile
 15087   001C04  0012               	return		;funcret
 15088   001C06                     __end_of_PWM4_Initialize:
 15089                           	callstack 0
 15090                           
 15091 ;; *************** function _PWM3_Initialize *****************
 15092 ;; Defined at:
 15093 ;;		line 58 in file "mcc_generated_files/pwm3.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;		None
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;		None
 15098 ;; Return value:  Size  Location     Type
 15099 ;;                  1    wreg      void 
 15100 ;; Registers used:
 15101 ;;		wreg, status,2
 15102 ;; Tracked objects:
 15103 ;;		On entry : 0/0
 15104 ;;		On exit  : 0/0
 15105 ;;		Unchanged: 0/0
 15106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15107 ;;      Params:         0       0       0       0       0
 15108 ;;      Locals:         0       0       0       0       0
 15109 ;;      Temps:          0       0       0       0       0
 15110 ;;      Totals:         0       0       0       0       0
 15111 ;;Total ram usage:        0 bytes
 15112 ;; Hardware stack levels used: 1
 15113 ;; Hardware stack levels required when called: 15
 15114 ;; This function calls:
 15115 ;;		Nothing
 15116 ;; This function is called by:
 15117 ;;		_SYSTEM_Initialize
 15118 ;; This function uses a non-reentrant model
 15119 ;;
 15120                           
 15121                           	psect	text46
 15122   001C06                     __ptext46:
 15123                           	callstack 0
 15124   001C06                     _PWM3_Initialize:
 15125                           	callstack 14
 15126                           
 15127                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
 15128                           
 15129                           ;incstack = 0
 15130   001C06  0E80               	movlw	128
 15131   001C08  6EA4               	movwf	164,c	;volatile
 15132                           
 15133                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
 15134   001C0A  0E7F               	movlw	127
 15135   001C0C  6EA3               	movwf	163,c	;volatile
 15136                           
 15137                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
 15138   001C0E  0EC0               	movlw	192
 15139   001C10  6EA2               	movwf	162,c	;volatile
 15140                           
 15141                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 2;
 15142   001C12  50AD               	movf	173,w,c	;volatile
 15143   001C14  0BCF               	andlw	-49
 15144   001C16  0920               	iorlw	32
 15145   001C18  6EAD               	movwf	173,c	;volatile
 15146   001C1A  0012               	return		;funcret
 15147   001C1C                     __end_of_PWM3_Initialize:
 15148                           	callstack 0
 15149                           
 15150 ;; *************** function _PWM2_Initialize *****************
 15151 ;; Defined at:
 15152 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;		None
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;		None
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      void 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15166 ;;      Params:         0       0       0       0       0
 15167 ;;      Locals:         0       0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0
 15169 ;;      Totals:         0       0       0       0       0
 15170 ;;Total ram usage:        0 bytes
 15171 ;; Hardware stack levels used: 1
 15172 ;; Hardware stack levels required when called: 15
 15173 ;; This function calls:
 15174 ;;		Nothing
 15175 ;; This function is called by:
 15176 ;;		_SYSTEM_Initialize
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text47
 15181   001C1C                     __ptext47:
 15182                           	callstack 0
 15183   001C1C                     _PWM2_Initialize:
 15184                           	callstack 14
 15185                           
 15186                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 15187                           
 15188                           ;incstack = 0
 15189   001C1C  0E8C               	movlw	140
 15190   001C1E  6EA7               	movwf	167,c	;volatile
 15191                           
 15192                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
 15193   001C20  0E01               	movlw	1
 15194   001C22  6EA6               	movwf	166,c	;volatile
 15195                           
 15196                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xFF;
 15197   001C24  68A5               	setf	165,c	;volatile
 15198                           
 15199                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRSbits.C2TSEL = 0x2;
 15200   001C26  50AD               	movf	173,w,c	;volatile
 15201   001C28  0BF3               	andlw	-13
 15202   001C2A  0908               	iorlw	8
 15203   001C2C  6EAD               	movwf	173,c	;volatile
 15204   001C2E  0012               	return		;funcret
 15205   001C30                     __end_of_PWM2_Initialize:
 15206                           	callstack 0
 15207                           
 15208 ;; *************** function _PWM1_Initialize *****************
 15209 ;; Defined at:
 15210 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;		None
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;		None
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  1    wreg      void 
 15217 ;; Registers used:
 15218 ;;		wreg, status,2
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15224 ;;      Params:         0       0       0       0       0
 15225 ;;      Locals:         0       0       0       0       0
 15226 ;;      Temps:          0       0       0       0       0
 15227 ;;      Totals:         0       0       0       0       0
 15228 ;;Total ram usage:        0 bytes
 15229 ;; Hardware stack levels used: 1
 15230 ;; Hardware stack levels required when called: 15
 15231 ;; This function calls:
 15232 ;;		Nothing
 15233 ;; This function is called by:
 15234 ;;		_SYSTEM_Initialize
 15235 ;; This function uses a non-reentrant model
 15236 ;;
 15237                           
 15238                           	psect	text48
 15239   001C30                     __ptext48:
 15240                           	callstack 0
 15241   001C30                     _PWM1_Initialize:
 15242                           	callstack 14
 15243                           
 15244                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 15245                           
 15246                           ;incstack = 0
 15247   001C30  0E8C               	movlw	140
 15248   001C32  6EAB               	movwf	171,c	;volatile
 15249                           
 15250                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
 15251   001C34  0E01               	movlw	1
 15252   001C36  6EAA               	movwf	170,c	;volatile
 15253                           
 15254                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
 15255   001C38  68A9               	setf	169,c	;volatile
 15256                           
 15257                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x2;
 15258   001C3A  50AD               	movf	173,w,c	;volatile
 15259   001C3C  0BFC               	andlw	-4
 15260   001C3E  0902               	iorlw	2
 15261   001C40  6EAD               	movwf	173,c	;volatile
 15262   001C42  0012               	return		;funcret
 15263   001C44                     __end_of_PWM1_Initialize:
 15264                           	callstack 0
 15265                           
 15266 ;; *************** function _PMD_Initialize *****************
 15267 ;; Defined at:
 15268 ;;		line 84 in file "mcc_generated_files/mcc.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;		None
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      void 
 15275 ;; Registers used:
 15276 ;;		None
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15282 ;;      Params:         0       0       0       0       0
 15283 ;;      Locals:         0       0       0       0       0
 15284 ;;      Temps:          0       0       0       0       0
 15285 ;;      Totals:         0       0       0       0       0
 15286 ;;Total ram usage:        0 bytes
 15287 ;; Hardware stack levels used: 1
 15288 ;; Hardware stack levels required when called: 15
 15289 ;; This function calls:
 15290 ;;		Nothing
 15291 ;; This function is called by:
 15292 ;;		_SYSTEM_Initialize
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text49
 15297   001C9A                     __ptext49:
 15298                           	callstack 0
 15299   001C9A                     _PMD_Initialize:
 15300                           	callstack 14
 15301                           
 15302                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
 15303                           
 15304                           ;incstack = 0
 15305   001C9A  010E               	movlb	14	; () banked
 15306   001C9C  6BDC               	clrf	220,b	;volatile
 15307                           
 15308                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
 15309   001C9E  6BDD               	clrf	221,b	;volatile
 15310                           
 15311                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
 15312   001CA0  6BDE               	clrf	222,b	;volatile
 15313                           
 15314                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
 15315   001CA2  6BDF               	clrf	223,b	;volatile
 15316                           
 15317                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
 15318   001CA4  6BE0               	clrf	224,b	;volatile
 15319                           
 15320                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
 15321   001CA6  6BE1               	clrf	225,b	;volatile
 15322                           
 15323                           ; BSR set to: 14
 15324   001CA8  0012               	return		;funcret
 15325   001CAA                     __end_of_PMD_Initialize:
 15326                           	callstack 0
 15327                           
 15328 ;; *************** function _PIN_MANAGER_Initialize *****************
 15329 ;; Defined at:
 15330 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;		None
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;		None
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		wreg, status,2
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15344 ;;      Params:         0       0       0       0       0
 15345 ;;      Locals:         0       0       0       0       0
 15346 ;;      Temps:          0       0       0       0       0
 15347 ;;      Totals:         0       0       0       0       0
 15348 ;;Total ram usage:        0 bytes
 15349 ;; Hardware stack levels used: 1
 15350 ;; Hardware stack levels required when called: 15
 15351 ;; This function calls:
 15352 ;;		Nothing
 15353 ;; This function is called by:
 15354 ;;		_SYSTEM_Initialize
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358                           	psect	text50
 15359   001524                     __ptext50:
 15360                           	callstack 0
 15361   001524                     _PIN_MANAGER_Initialize:
 15362                           	callstack 14
 15363                           
 15364                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 15365                           
 15366                           ; BSR set to: 14
 15367                           ;incstack = 0
 15368   001524  6A82               	clrf	130,c	;volatile
 15369                           
 15370                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 15371   001526  6A83               	clrf	131,c	;volatile
 15372                           
 15373                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 15374   001528  6A84               	clrf	132,c	;volatile
 15375                           
 15376                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
 15377   00152A  6887               	setf	135,c	;volatile
 15378                           
 15379                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
 15380   00152C  0EDF               	movlw	223
 15381   00152E  6E88               	movwf	136,c	;volatile
 15382                           
 15383                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
 15384   001530  6889               	setf	137,c	;volatile
 15385                           
 15386                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 15387   001532  010F               	movlb	15	; () banked
 15388   001534  6B1C               	clrf	28,b	;volatile
 15389                           
 15390                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 15391   001536  0E80               	movlw	128
 15392   001538  6F14               	movwf	20,b	;volatile
 15393                           
 15394                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x04;
 15395   00153A  0E04               	movlw	4
 15396   00153C  6F0C               	movwf	12,b	;volatile
 15397                           
 15398                           ; BSR set to: 15
 15399                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 15400   00153E  6B28               	clrf	40,b	;volatile
 15401                           
 15402                           ; BSR set to: 15
 15403                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 15404   001540  6B13               	clrf	19,b	;volatile
 15405                           
 15406                           ; BSR set to: 15
 15407                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 15408   001542  6B0B               	clrf	11,b	;volatile
 15409                           
 15410                           ; BSR set to: 15
 15411                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 15412   001544  6B1B               	clrf	27,b	;volatile
 15413                           
 15414                           ; BSR set to: 15
 15415                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 15416   001546  6B0A               	clrf	10,b	;volatile
 15417                           
 15418                           ; BSR set to: 15
 15419                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 15420   001548  6B12               	clrf	18,b	;volatile
 15421                           
 15422                           ; BSR set to: 15
 15423                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 15424   00154A  6B1A               	clrf	26,b	;volatile
 15425                           
 15426                           ; BSR set to: 15
 15427                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 15428   00154C  6909               	setf	9,b	;volatile
 15429                           
 15430                           ; BSR set to: 15
 15431                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 15432   00154E  6911               	setf	17,b	;volatile
 15433                           
 15434                           ; BSR set to: 15
 15435                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 15436   001550  6919               	setf	25,b	;volatile
 15437                           
 15438                           ; BSR set to: 15
 15439                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 15440   001552  6908               	setf	8,b	;volatile
 15441                           
 15442                           ; BSR set to: 15
 15443                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 15444   001554  6910               	setf	16,b	;volatile
 15445                           
 15446                           ; BSR set to: 15
 15447                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 15448   001556  6918               	setf	24,b	;volatile
 15449                           
 15450                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 15451   001558  0E08               	movlw	8
 15452   00155A  6F25               	movwf	37,b	;volatile
 15453                           
 15454                           ;mcc_generated_files/pin_manager.c: 115:     RX1PPS = 0x0E;
 15455   00155C  0E0E               	movlw	14
 15456   00155E  010E               	movlb	14	; () banked
 15457   001560  6FB0               	movwf	176,b	;volatile
 15458                           
 15459                           ;mcc_generated_files/pin_manager.c: 116:     SSPDATPPS = 0x14;
 15460   001562  0E14               	movlw	20
 15461   001564  6FB3               	movwf	179,b	;volatile
 15462                           
 15463                           ;mcc_generated_files/pin_manager.c: 117:     RC3PPS = 0x0D;
 15464   001566  0E0D               	movlw	13
 15465   001568  6FF5               	movwf	245,b	;volatile
 15466                           
 15467                           ;mcc_generated_files/pin_manager.c: 118:     CWGINPPS = 0x08;
 15468   00156A  0E08               	movlw	8
 15469   00156C  6FAC               	movwf	172,b	;volatile
 15470                           
 15471                           ;mcc_generated_files/pin_manager.c: 119:     RB5PPS = 0x09;
 15472   00156E  0E09               	movlw	9
 15473   001570  6FEF               	movwf	239,b	;volatile
 15474                           
 15475                           ;mcc_generated_files/pin_manager.c: 120:     RC4PPS = 0x0E;
 15476   001572  0E0E               	movlw	14
 15477   001574  6FF6               	movwf	246,b	;volatile
 15478                           
 15479                           ;mcc_generated_files/pin_manager.c: 121:     SSPCLKPPS = 0x13;
 15480   001576  0E13               	movlw	19
 15481   001578  6FB2               	movwf	178,b	;volatile
 15482                           
 15483                           ; BSR set to: 14
 15484   00157A  0012               	return		;funcret
 15485   00157C                     __end_of_PIN_MANAGER_Initialize:
 15486                           	callstack 0
 15487                           
 15488 ;; *************** function _OSCILLATOR_Initialize *****************
 15489 ;; Defined at:
 15490 ;;		line 70 in file "mcc_generated_files/mcc.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;		None
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;		None
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  1    wreg      void 
 15497 ;; Registers used:
 15498 ;;		wreg, status,2
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15504 ;;      Params:         0       0       0       0       0
 15505 ;;      Locals:         0       0       0       0       0
 15506 ;;      Temps:          0       0       0       0       0
 15507 ;;      Totals:         0       0       0       0       0
 15508 ;;Total ram usage:        0 bytes
 15509 ;; Hardware stack levels used: 1
 15510 ;; Hardware stack levels required when called: 15
 15511 ;; This function calls:
 15512 ;;		Nothing
 15513 ;; This function is called by:
 15514 ;;		_SYSTEM_Initialize
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           	psect	text51
 15519   001C56                     __ptext51:
 15520                           	callstack 0
 15521   001C56                     _OSCILLATOR_Initialize:
 15522                           	callstack 14
 15523                           
 15524                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x61;
 15525                           
 15526                           ; BSR set to: 14
 15527                           ;incstack = 0
 15528   001C56  0E61               	movlw	97
 15529   001C58  010E               	movlb	14	; () banked
 15530   001C5A  6FD3               	movwf	211,b	;volatile
 15531                           
 15532                           ; BSR set to: 14
 15533                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 15534   001C5C  6BD5               	clrf	213,b	;volatile
 15535                           
 15536                           ; BSR set to: 14
 15537                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 15538   001C5E  6BD7               	clrf	215,b	;volatile
 15539                           
 15540                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x06;
 15541   001C60  0E06               	movlw	6
 15542   001C62  6FD9               	movwf	217,b	;volatile
 15543                           
 15544                           ; BSR set to: 14
 15545                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 15546   001C64  6BD8               	clrf	216,b	;volatile
 15547                           
 15548                           ; BSR set to: 14
 15549   001C66  0012               	return		;funcret
 15550   001C68                     __end_of_OSCILLATOR_Initialize:
 15551                           	callstack 0
 15552                           
 15553 ;; *************** function _INTERRUPT_Initialize *****************
 15554 ;; Defined at:
 15555 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;		None
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;		None
 15560 ;; Return value:  Size  Location     Type
 15561 ;;                  1    wreg      void 
 15562 ;; Registers used:
 15563 ;;		None
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15569 ;;      Params:         0       0       0       0       0
 15570 ;;      Locals:         0       0       0       0       0
 15571 ;;      Temps:          0       0       0       0       0
 15572 ;;      Totals:         0       0       0       0       0
 15573 ;;Total ram usage:        0 bytes
 15574 ;; Hardware stack levels used: 1
 15575 ;; Hardware stack levels required when called: 15
 15576 ;; This function calls:
 15577 ;;		Nothing
 15578 ;; This function is called by:
 15579 ;;		_SYSTEM_Initialize
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text52
 15584   001E4E                     __ptext52:
 15585                           	callstack 0
 15586   001E4E                     _INTERRUPT_Initialize:
 15587                           	callstack 14
 15588                           
 15589                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 15590                           
 15591                           ; BSR set to: 14
 15592                           ;incstack = 0
 15593   001E4E  9AF2               	bcf	242,5,c	;volatile
 15594   001E50  0012               	return		;funcret
 15595   001E52                     __end_of_INTERRUPT_Initialize:
 15596                           	callstack 0
 15597                           
 15598 ;; *************** function _I2C1_Initialize *****************
 15599 ;; Defined at:
 15600 ;;		line 108 in file "mcc_generated_files/i2c1_slave.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      void 
 15607 ;; Registers used:
 15608 ;;		wreg, status,2, status,0
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15614 ;;      Params:         0       0       0       0       0
 15615 ;;      Locals:         0       0       0       0       0
 15616 ;;      Temps:          0       0       0       0       0
 15617 ;;      Totals:         0       0       0       0       0
 15618 ;;Total ram usage:        0 bytes
 15619 ;; Hardware stack levels used: 1
 15620 ;; Hardware stack levels required when called: 15
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_SYSTEM_Initialize
 15625 ;;		_I2C1_Enable
 15626 ;; This function uses a non-reentrant model
 15627 ;;
 15628                           
 15629                           	psect	text53
 15630   001D1C                     __ptext53:
 15631                           	callstack 0
 15632   001D1C                     _I2C1_Initialize:
 15633                           	callstack 14
 15634                           
 15635                           ;mcc_generated_files/i2c1_slave.c: 110:     SSP1STAT = 0x00;
 15636                           
 15637                           ;incstack = 0
 15638   001D1C  6A94               	clrf	148,c	;volatile
 15639                           
 15640                           ;mcc_generated_files/i2c1_slave.c: 111:     SSP1CON1 |= 0x06;
 15641   001D1E  0E06               	movlw	6
 15642   001D20  1295               	iorwf	149,f,c	;volatile
 15643                           
 15644                           ;mcc_generated_files/i2c1_slave.c: 112:     SSP1CON2 = 0x81;
 15645   001D22  0E81               	movlw	129
 15646   001D24  6E96               	movwf	150,c	;volatile
 15647                           
 15648                           ;mcc_generated_files/i2c1_slave.c: 113:     SSP1CON1bits.SSPEN = 0;
 15649   001D26  9A95               	bcf	149,5,c	;volatile
 15650   001D28  0012               	return		;funcret
 15651   001D2A                     __end_of_I2C1_Initialize:
 15652                           	callstack 0
 15653                           
 15654 ;; *************** function _FVR_Initialize *****************
 15655 ;; Defined at:
 15656 ;;		line 58 in file "mcc_generated_files/fvr.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;		None
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;		None
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, status,2
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15670 ;;      Params:         0       0       0       0       0
 15671 ;;      Locals:         0       0       0       0       0
 15672 ;;      Temps:          0       0       0       0       0
 15673 ;;      Totals:         0       0       0       0       0
 15674 ;;Total ram usage:        0 bytes
 15675 ;; Hardware stack levels used: 1
 15676 ;; Hardware stack levels required when called: 15
 15677 ;; This function calls:
 15678 ;;		Nothing
 15679 ;; This function is called by:
 15680 ;;		_SYSTEM_Initialize
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text54
 15685   001DF2                     __ptext54:
 15686                           	callstack 0
 15687   001DF2                     _FVR_Initialize:
 15688                           	callstack 14
 15689                           
 15690                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x8A;
 15691                           
 15692                           ;incstack = 0
 15693   001DF2  0E8A               	movlw	138
 15694   001DF4  010F               	movlb	15	; () banked
 15695   001DF6  6F2C               	movwf	44,b	;volatile
 15696                           
 15697                           ; BSR set to: 15
 15698   001DF8  0012               	return		;funcret
 15699   001DFA                     __end_of_FVR_Initialize:
 15700                           	callstack 0
 15701                           
 15702 ;; *************** function _EUSART1_Initialize *****************
 15703 ;; Defined at:
 15704 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;		None
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      void 
 15711 ;; Registers used:
 15712 ;;		wreg, status,2, status,0, cstack
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15718 ;;      Params:         0       0       0       0       0
 15719 ;;      Locals:         0       0       0       0       0
 15720 ;;      Temps:          0       0       0       0       0
 15721 ;;      Totals:         0       0       0       0       0
 15722 ;;Total ram usage:        0 bytes
 15723 ;; Hardware stack levels used: 1
 15724 ;; Hardware stack levels required when called: 16
 15725 ;; This function calls:
 15726 ;;		_EUSART1_SetErrorHandler
 15727 ;;		_EUSART1_SetFramingErrorHandler
 15728 ;;		_EUSART1_SetOverrunErrorHandler
 15729 ;;		_EUSART1_SetRxInterruptHandler
 15730 ;;		_EUSART1_SetTxInterruptHandler
 15731 ;; This function is called by:
 15732 ;;		_SYSTEM_Initialize
 15733 ;; This function uses a non-reentrant model
 15734 ;;
 15735                           
 15736                           	psect	text55
 15737   00137A                     __ptext55:
 15738                           	callstack 0
 15739   00137A                     _EUSART1_Initialize:
 15740                           	callstack 13
 15741                           
 15742                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 15743                           
 15744                           ; BSR set to: 15
 15745                           ;incstack = 0
 15746   00137A  010E               	movlb	14	; () banked
 15747   00137C  9BC0               	bcf	192,5,b	;volatile
 15748                           
 15749                           ; BSR set to: 14
 15750                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 15751   00137E  0EFA               	movlw	low _EUSART1_Receive_ISR
 15752   001380  0100               	movlb	0	; () banked
 15753   001382  6FDA               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
 15754   001384  0E0D               	movlw	high _EUSART1_Receive_ISR
 15755   001386  6FDB               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 15756   001388  ECD6  F00E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 15757                           
 15758                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 15759   00138C  010E               	movlb	14	; () banked
 15760   00138E  99C0               	bcf	192,4,b	;volatile
 15761                           
 15762                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 15763   001390  0E0C               	movlw	low _EUSART1_Transmit_ISR
 15764   001392  0100               	movlb	0	; () banked
 15765   001394  6FDA               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
 15766   001396  0E1A               	movlw	high _EUSART1_Transmit_ISR
 15767   001398  6FDB               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 15768   00139A  ECD1  F00E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 15769                           
 15770                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 15771   00139E  0E08               	movlw	8
 15772   0013A0  6E9E               	movwf	158,c	;volatile
 15773                           
 15774                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 15775   0013A2  0E90               	movlw	144
 15776   0013A4  6E9C               	movwf	156,c	;volatile
 15777                           
 15778                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 15779   0013A6  0E24               	movlw	36
 15780   0013A8  6E9D               	movwf	157,c	;volatile
 15781                           
 15782                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x22;
 15783   0013AA  0E22               	movlw	34
 15784   0013AC  6E9A               	movwf	154,c	;volatile
 15785                           
 15786                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 15787   0013AE  6A9B               	clrf	155,c	;volatile
 15788                           
 15789                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 15790   0013B0  0E5C               	movlw	low _EUSART1_DefaultFramingErrorHandler
 15791   0013B2  0100               	movlb	0	; () banked
 15792   0013B4  6FDA               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 15793   0013B6  0E1E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 15794   0013B8  6FDB               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 15795   0013BA  ECE0  F00E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 15796                           
 15797                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 15798   0013BE  0E42               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 15799   0013C0  0100               	movlb	0	; () banked
 15800   0013C2  6FDA               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 15801   0013C4  0E1E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 15802   0013C6  6FDB               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 15803   0013C8  ECDB  F00E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 15804                           
 15805                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 15806   0013CC  0E48               	movlw	low _EUSART1_DefaultErrorHandler
 15807   0013CE  0100               	movlb	0	; () banked
 15808   0013D0  6FDA               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 15809   0013D2  0E1E               	movlw	high _EUSART1_DefaultErrorHandler
 15810   0013D4  6FDB               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 15811   0013D6  ECE5  F00E         	call	_EUSART1_SetErrorHandler	;wreg free
 15812                           
 15813                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 15814   0013DA  0100               	movlb	0	; () banked
 15815   0013DC  6BD0               	clrf	_eusart1RxLastError& (0+255),b	;volatile
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 15819   0013DE  6A5F               	clrf	_eusart1TxHead^0,c	;volatile
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 15823   0013E0  6A5E               	clrf	_eusart1TxTail^0,c	;volatile
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 15827   0013E2  0E40               	movlw	64
 15828   0013E4  6E5D               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 15832   0013E6  6A5C               	clrf	_eusart1RxHead^0,c	;volatile
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 15836   0013E8  6A5B               	clrf	_eusart1RxTail^0,c	;volatile
 15837                           
 15838                           ; BSR set to: 0
 15839                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 15840   0013EA  6A5A               	clrf	_eusart1RxCount^0,c	;volatile
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 15844   0013EC  010E               	movlb	14	; () banked
 15845   0013EE  8BC0               	bsf	192,5,b	;volatile
 15846                           
 15847                           ; BSR set to: 14
 15848   0013F0  0012               	return		;funcret
 15849   0013F2                     __end_of_EUSART1_Initialize:
 15850                           	callstack 0
 15851                           
 15852 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 15853 ;; Defined at:
 15854 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15857 ;;		 -> EUSART1_Transmit_ISR(1), 
 15858 ;; Auto vars:     Size  Location     Type
 15859 ;;		None
 15860 ;; Return value:  Size  Location     Type
 15861 ;;                  1    wreg      void 
 15862 ;; Registers used:
 15863 ;;		wreg, status,2, status,0
 15864 ;; Tracked objects:
 15865 ;;		On entry : 0/0
 15866 ;;		On exit  : 0/0
 15867 ;;		Unchanged: 0/0
 15868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15869 ;;      Params:         0       2       0       0       0
 15870 ;;      Locals:         0       0       0       0       0
 15871 ;;      Temps:          0       0       0       0       0
 15872 ;;      Totals:         0       2       0       0       0
 15873 ;;Total ram usage:        2 bytes
 15874 ;; Hardware stack levels used: 1
 15875 ;; Hardware stack levels required when called: 15
 15876 ;; This function calls:
 15877 ;;		Nothing
 15878 ;; This function is called by:
 15879 ;;		_EUSART1_Initialize
 15880 ;; This function uses a non-reentrant model
 15881 ;;
 15882                           
 15883                           	psect	text56
 15884   001DA2                     __ptext56:
 15885                           	callstack 0
 15886   001DA2                     _EUSART1_SetTxInterruptHandler:
 15887                           	callstack 13
 15888                           
 15889                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 15890                           
 15891                           ; BSR set to: 14
 15892                           ;incstack = 0
 15893   001DA2  C0DA  F0F1         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 15894   001DA6  C0DB  F0F2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 15895   001DAA  0012               	return		;funcret
 15896   001DAC                     __end_of_EUSART1_SetTxInterruptHandler:
 15897                           	callstack 0
 15898                           
 15899 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 15900 ;; Defined at:
 15901 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 15902 ;; Parameters:    Size  Location     Type
 15903 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15904 ;;		 -> EUSART1_Receive_ISR(1), 
 15905 ;; Auto vars:     Size  Location     Type
 15906 ;;		None
 15907 ;; Return value:  Size  Location     Type
 15908 ;;                  1    wreg      void 
 15909 ;; Registers used:
 15910 ;;		wreg, status,2, status,0
 15911 ;; Tracked objects:
 15912 ;;		On entry : 0/0
 15913 ;;		On exit  : 0/0
 15914 ;;		Unchanged: 0/0
 15915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15916 ;;      Params:         0       2       0       0       0
 15917 ;;      Locals:         0       0       0       0       0
 15918 ;;      Temps:          0       0       0       0       0
 15919 ;;      Totals:         0       2       0       0       0
 15920 ;;Total ram usage:        2 bytes
 15921 ;; Hardware stack levels used: 1
 15922 ;; Hardware stack levels required when called: 15
 15923 ;; This function calls:
 15924 ;;		Nothing
 15925 ;; This function is called by:
 15926 ;;		_EUSART1_Initialize
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           	psect	text57
 15931   001DAC                     __ptext57:
 15932                           	callstack 0
 15933   001DAC                     _EUSART1_SetRxInterruptHandler:
 15934                           	callstack 13
 15935                           
 15936                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 15937                           
 15938                           ;incstack = 0
 15939   001DAC  C0DA  F0EF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 15940   001DB0  C0DB  F0F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 15941   001DB4  0012               	return		;funcret
 15942   001DB6                     __end_of_EUSART1_SetRxInterruptHandler:
 15943                           	callstack 0
 15944                           
 15945 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 15946 ;; Defined at:
 15947 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15950 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;		None
 15953 ;; Return value:  Size  Location     Type
 15954 ;;                  1    wreg      void 
 15955 ;; Registers used:
 15956 ;;		wreg, status,2, status,0
 15957 ;; Tracked objects:
 15958 ;;		On entry : 0/0
 15959 ;;		On exit  : 0/0
 15960 ;;		Unchanged: 0/0
 15961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15962 ;;      Params:         0       2       0       0       0
 15963 ;;      Locals:         0       0       0       0       0
 15964 ;;      Temps:          0       0       0       0       0
 15965 ;;      Totals:         0       2       0       0       0
 15966 ;;Total ram usage:        2 bytes
 15967 ;; Hardware stack levels used: 1
 15968 ;; Hardware stack levels required when called: 15
 15969 ;; This function calls:
 15970 ;;		Nothing
 15971 ;; This function is called by:
 15972 ;;		_EUSART1_Initialize
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           	psect	text58
 15977   001DB6                     __ptext58:
 15978                           	callstack 0
 15979   001DB6                     _EUSART1_SetOverrunErrorHandler:
 15980                           	callstack 13
 15981                           
 15982                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 15983                           
 15984                           ;incstack = 0
 15985   001DB6  C0DA  F0EB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 15986   001DBA  C0DB  F0EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 15987   001DBE  0012               	return		;funcret
 15988   001DC0                     __end_of_EUSART1_SetOverrunErrorHandler:
 15989                           	callstack 0
 15990                           
 15991 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 15992 ;; Defined at:
 15993 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 15994 ;; Parameters:    Size  Location     Type
 15995 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15996 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 15997 ;; Auto vars:     Size  Location     Type
 15998 ;;		None
 15999 ;; Return value:  Size  Location     Type
 16000 ;;                  1    wreg      void 
 16001 ;; Registers used:
 16002 ;;		wreg, status,2, status,0
 16003 ;; Tracked objects:
 16004 ;;		On entry : 0/0
 16005 ;;		On exit  : 0/0
 16006 ;;		Unchanged: 0/0
 16007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16008 ;;      Params:         0       2       0       0       0
 16009 ;;      Locals:         0       0       0       0       0
 16010 ;;      Temps:          0       0       0       0       0
 16011 ;;      Totals:         0       2       0       0       0
 16012 ;;Total ram usage:        2 bytes
 16013 ;; Hardware stack levels used: 1
 16014 ;; Hardware stack levels required when called: 15
 16015 ;; This function calls:
 16016 ;;		Nothing
 16017 ;; This function is called by:
 16018 ;;		_EUSART1_Initialize
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           	psect	text59
 16023   001DC0                     __ptext59:
 16024                           	callstack 0
 16025   001DC0                     _EUSART1_SetFramingErrorHandler:
 16026                           	callstack 13
 16027                           
 16028                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 16029                           
 16030                           ;incstack = 0
 16031   001DC0  C0DA  F0ED         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 16032   001DC4  C0DB  F0EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 16033   001DC8  0012               	return		;funcret
 16034   001DCA                     __end_of_EUSART1_SetFramingErrorHandler:
 16035                           	callstack 0
 16036                           
 16037 ;; *************** function _EUSART1_SetErrorHandler *****************
 16038 ;; Defined at:
 16039 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16042 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;		None
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  1    wreg      void 
 16047 ;; Registers used:
 16048 ;;		wreg, status,2, status,0
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16054 ;;      Params:         0       2       0       0       0
 16055 ;;      Locals:         0       0       0       0       0
 16056 ;;      Temps:          0       0       0       0       0
 16057 ;;      Totals:         0       2       0       0       0
 16058 ;;Total ram usage:        2 bytes
 16059 ;; Hardware stack levels used: 1
 16060 ;; Hardware stack levels required when called: 15
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_EUSART1_Initialize
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text60
 16069   001DCA                     __ptext60:
 16070                           	callstack 0
 16071   001DCA                     _EUSART1_SetErrorHandler:
 16072                           	callstack 13
 16073                           
 16074                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 16075                           
 16076                           ;incstack = 0
 16077   001DCA  C0DA  F0E9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 16078   001DCE  C0DB  F0EA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 16079   001DD2  0012               	return		;funcret
 16080   001DD4                     __end_of_EUSART1_SetErrorHandler:
 16081                           	callstack 0
 16082                           
 16083 ;; *************** function _DAC1_Initialize *****************
 16084 ;; Defined at:
 16085 ;;		line 58 in file "mcc_generated_files/dac1.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;		None
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;		None
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  1    wreg      void 
 16092 ;; Registers used:
 16093 ;;		wreg, status,2
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/0
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16099 ;;      Params:         0       0       0       0       0
 16100 ;;      Locals:         0       0       0       0       0
 16101 ;;      Temps:          0       0       0       0       0
 16102 ;;      Totals:         0       0       0       0       0
 16103 ;;Total ram usage:        0 bytes
 16104 ;; Hardware stack levels used: 1
 16105 ;; Hardware stack levels required when called: 15
 16106 ;; This function calls:
 16107 ;;		Nothing
 16108 ;; This function is called by:
 16109 ;;		_SYSTEM_Initialize
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text61
 16114   001D2A                     __ptext61:
 16115                           	callstack 0
 16116   001D2A                     _DAC1_Initialize:
 16117                           	callstack 14
 16118                           
 16119                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xB0;
 16120                           
 16121                           ;incstack = 0
 16122   001D2A  0EB0               	movlw	176
 16123   001D2C  010F               	movlb	15	; () banked
 16124   001D2E  6F2E               	movwf	46,b	;volatile
 16125                           
 16126                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x06;
 16127   001D30  0E06               	movlw	6
 16128   001D32  6F2F               	movwf	47,b	;volatile
 16129                           
 16130                           ; BSR set to: 15
 16131   001D34  0012               	return		;funcret
 16132   001D36                     __end_of_DAC1_Initialize:
 16133                           	callstack 0
 16134                           
 16135 ;; *************** function _CWG_Initialize *****************
 16136 ;; Defined at:
 16137 ;;		line 58 in file "mcc_generated_files/cwg.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;		None
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      void 
 16144 ;; Registers used:
 16145 ;;		wreg, status,2
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16151 ;;      Params:         0       0       0       0       0
 16152 ;;      Locals:         0       0       0       0       0
 16153 ;;      Temps:          0       0       0       0       0
 16154 ;;      Totals:         0       0       0       0       0
 16155 ;;Total ram usage:        0 bytes
 16156 ;; Hardware stack levels used: 1
 16157 ;; Hardware stack levels required when called: 15
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_SYSTEM_Initialize
 16162 ;; This function uses a non-reentrant model
 16163 ;;
 16164                           
 16165                           	psect	text62
 16166   001B62                     __ptext62:
 16167                           	callstack 0
 16168   001B62                     _CWG_Initialize:
 16169                           	callstack 14
 16170                           
 16171                           ;mcc_generated_files/cwg.c: 63:  CWG1CON1 = 0x00;
 16172                           
 16173                           ; BSR set to: 15
 16174                           ;incstack = 0
 16175   001B62  010F               	movlb	15	; () banked
 16176   001B64  6B40               	clrf	64,b	;volatile
 16177                           
 16178                           ;mcc_generated_files/cwg.c: 66:  CWG1DBR = 0x00;
 16179   001B66  6B3D               	clrf	61,b	;volatile
 16180                           
 16181                           ;mcc_generated_files/cwg.c: 69:  CWG1DBF = 0x00;
 16182   001B68  6B3E               	clrf	62,b	;volatile
 16183                           
 16184                           ; BSR set to: 15
 16185                           ;mcc_generated_files/cwg.c: 72:  CWG1AS0 = 0x14;
 16186   001B6A  0E14               	movlw	20
 16187   001B6C  6F41               	movwf	65,b	;volatile
 16188                           
 16189                           ; BSR set to: 15
 16190                           ;mcc_generated_files/cwg.c: 75:  CWG1AS1 = 0x00;
 16191   001B6E  6B42               	clrf	66,b	;volatile
 16192                           
 16193                           ; BSR set to: 15
 16194                           ;mcc_generated_files/cwg.c: 78:  CWG1STR = 0x00;
 16195   001B70  6B43               	clrf	67,b	;volatile
 16196                           
 16197                           ; BSR set to: 15
 16198                           ;mcc_generated_files/cwg.c: 81:  CWG1CLKCON = 0x00;
 16199   001B72  6B3B               	clrf	59,b	;volatile
 16200                           
 16201                           ; BSR set to: 15
 16202                           ;mcc_generated_files/cwg.c: 84:  CWG1ISM = 0x00;
 16203   001B74  6B3C               	clrf	60,b	;volatile
 16204                           
 16205                           ;mcc_generated_files/cwg.c: 87:  CWG1CON0 = 0x80;
 16206   001B76  0E80               	movlw	128
 16207   001B78  6F3F               	movwf	63,b	;volatile
 16208                           
 16209                           ; BSR set to: 15
 16210   001B7A  0012               	return		;funcret
 16211   001B7C                     __end_of_CWG_Initialize:
 16212                           	callstack 0
 16213                           
 16214 ;; *************** function _ADCC_Initialize *****************
 16215 ;; Defined at:
 16216 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;		None
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg, status,2
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16230 ;;      Params:         0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0
 16233 ;;      Totals:         0       0       0       0       0
 16234 ;;Total ram usage:        0 bytes
 16235 ;; Hardware stack levels used: 1
 16236 ;; Hardware stack levels required when called: 15
 16237 ;; This function calls:
 16238 ;;		Nothing
 16239 ;; This function is called by:
 16240 ;;		_SYSTEM_Initialize
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text63
 16245   001918                     __ptext63:
 16246                           	callstack 0
 16247   001918                     _ADCC_Initialize:
 16248                           	callstack 14
 16249                           
 16250                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16251                           
 16252                           ; BSR set to: 15
 16253                           ;incstack = 0
 16254   001918  6A65               	clrf	101,c	;volatile
 16255                           
 16256                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16257   00191A  6A66               	clrf	102,c	;volatile
 16258                           
 16259                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16260   00191C  6A67               	clrf	103,c	;volatile
 16261                           
 16262                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16263   00191E  6A68               	clrf	104,c	;volatile
 16264                           
 16265                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16266   001920  6A63               	clrf	99,c	;volatile
 16267                           
 16268                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16269   001922  6A64               	clrf	100,c	;volatile
 16270                           
 16271                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 16272   001924  6A61               	clrf	97,c	;volatile
 16273                           
 16274                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 16275   001926  010F               	movlb	15	; () banked
 16276   001928  6B5A               	clrf	90,b	;volatile
 16277                           
 16278                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 16279   00192A  6B58               	clrf	88,b	;volatile
 16280                           
 16281                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 16282   00192C  6B59               	clrf	89,b	;volatile
 16283                           
 16284                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 16285   00192E  6B54               	clrf	84,b	;volatile
 16286                           
 16287                           ; BSR set to: 15
 16288                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x12;
 16289   001930  0E12               	movlw	18
 16290   001932  6F55               	movwf	85,b	;volatile
 16291                           
 16292                           ; BSR set to: 15
 16293                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 16294   001934  6B56               	clrf	86,b	;volatile
 16295                           
 16296                           ; BSR set to: 15
 16297                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 16298   001936  6A60               	clrf	96,c	;volatile
 16299                           
 16300                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x03;
 16301   001938  0E03               	movlw	3
 16302   00193A  6F53               	movwf	83,b	;volatile
 16303                           
 16304                           ; BSR set to: 15
 16305                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 16306   00193C  6B51               	clrf	81,b	;volatile
 16307                           
 16308                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x07;
 16309   00193E  0E07               	movlw	7
 16310   001940  6F52               	movwf	82,b	;volatile
 16311                           
 16312                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
 16313   001942  0E84               	movlw	132
 16314   001944  6F5B               	movwf	91,b	;volatile
 16315                           
 16316                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x10;
 16317   001946  0E10               	movlw	16
 16318   001948  6F57               	movwf	87,b	;volatile
 16319                           
 16320                           ; BSR set to: 15
 16321   00194A  0012               	return		;funcret
 16322   00194C                     __end_of_ADCC_Initialize:
 16323                           	callstack 0
 16324                           
 16325 ;; *************** function _INTERRUPT_InterruptManager *****************
 16326 ;; Defined at:
 16327 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;		None
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;		None
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  1    wreg      void 
 16334 ;; Registers used:
 16335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 0/0
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16341 ;;      Params:         0       0       0       0       0
 16342 ;;      Locals:         0       0       0       0       0
 16343 ;;      Temps:         20       0       0       0       0
 16344 ;;      Totals:        20       0       0       0       0
 16345 ;;Total ram usage:       20 bytes
 16346 ;; Hardware stack levels used: 1
 16347 ;; Hardware stack levels required when called: 14
 16348 ;; This function calls:
 16349 ;;		NULL
 16350 ;;		_EUSART1_Receive_ISR
 16351 ;;		_EUSART1_Transmit_ISR
 16352 ;;		_I2C1_Isr
 16353 ;; This function is called by:
 16354 ;;		Interrupt level 2
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           	psect	intcode
 16359   000008                     __pintcode:
 16360                           	callstack 0
 16361   000008                     _INTERRUPT_InterruptManager:
 16362                           	callstack 7
 16363                           
 16364                           ; BSR set to: 15
 16365                           ;incstack = 0
 16366   000008  CFFA F023          	movff	pclath,??_INTERRUPT_InterruptManager
 16367   00000C  CFFB F024          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16368   000010  CFE9 F025          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 16369   000014  CFEA F026          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 16370   000018  CFE1 F027          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 16371   00001C  CFE2 F028          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 16372   000020  CFD9 F029          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 16373   000024  CFDA F02A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 16374   000028  CFF3 F02B          	movff	prodl,??_INTERRUPT_InterruptManager+8
 16375   00002C  CFF4 F02C          	movff	prodh,??_INTERRUPT_InterruptManager+9
 16376   000030  CFF6 F02D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 16377   000034  CFF7 F02E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 16378   000038  CFF8 F02F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 16379   00003C  CFF5 F030          	movff	tablat,??_INTERRUPT_InterruptManager+13
 16380   000040  C037  F031         	movff	btemp,??_INTERRUPT_InterruptManager+14
 16381   000044  C038  F032         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 16382   000048  C03F  F033         	movff	btemp+8,??_INTERRUPT_InterruptManager+16
 16383   00004C  C040  F034         	movff	btemp+9,??_INTERRUPT_InterruptManager+17
 16384   000050  C041  F035         	movff	btemp+10,??_INTERRUPT_InterruptManager+18
 16385   000054  C042  F036         	movff	btemp+11,??_INTERRUPT_InterruptManager+19
 16386   000058  EE13  F080         	lfsr	1,___inthi_sp
 16387                           
 16388                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 16389   00005C  ACF2               	btfss	242,6,c	;volatile
 16390   00005E  D02D               	goto	i2u374_49
 16391                           
 16392                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 16393   000060  010E               	movlb	14	; () banked
 16394   000062  B3C0               	btfsc	192,1,b	;volatile
 16395                           
 16396                           ; BSR set to: 14
 16397   000064  A3C8               	btfss	200,1,b	;volatile
 16398   000066  D009               	goto	i2l322
 16399   000068                     i2u365_40:
 16400                           
 16401                           ; BSR set to: 14
 16402                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             MSSP1_InterruptHandler();
 16403   000068  D801               	call	i2u366_48
 16404   00006A  D027               	goto	i2u374_49
 16405   00006C                     i2u366_48:
 16406   00006C  0005               	push	
 16407   00006E  0100               	movlb	0	; () banked
 16408   000070  6EFA               	movwf	pclath,c
 16409   000072  51CB               	movf	_MSSP1_InterruptHandler& (0+255),w,b
 16410   000074  6EFD               	movwf	tosl,c
 16411   000076  51CC               	movf	(_MSSP1_InterruptHandler+1)& (0+255),w,b
 16412   000078  D01B               	goto	L6
 16413   00007A                     i2l322:
 16414                           
 16415                           ; BSR set to: 14
 16416   00007A  A1C0               	btfss	192,0,b	;volatile
 16417   00007C  D002               	goto	i2l324
 16418                           
 16419                           ; BSR set to: 14
 16420   00007E  B1C8               	btfsc	200,0,b	;volatile
 16421   000080  D7F3               	goto	i2u365_40
 16422   000082                     i2l324:
 16423                           
 16424                           ; BSR set to: 14
 16425   000082  B9C0               	btfsc	192,4,b	;volatile
 16426                           
 16427                           ; BSR set to: 14
 16428   000084  A9C8               	btfss	200,4,b	;volatile
 16429   000086  D009               	goto	i2l326
 16430                           
 16431                           ; BSR set to: 14
 16432                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 16433   000088  D801               	call	i2u371_48
 16434   00008A  D017               	goto	i2u374_49
 16435   00008C                     i2u371_48:
 16436   00008C  0005               	push	
 16437   00008E  0100               	movlb	0	; () banked
 16438   000090  6EFA               	movwf	pclath,c
 16439   000092  51F1               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 16440   000094  6EFD               	movwf	tosl,c
 16441   000096  51F2               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 16442   000098  D00B               	goto	L6
 16443   00009A                     i2l326:
 16444                           
 16445                           ; BSR set to: 14
 16446   00009A  BBC0               	btfsc	192,5,b	;volatile
 16447                           
 16448                           ; BSR set to: 14
 16449   00009C  ABC8               	btfss	200,5,b	;volatile
 16450   00009E  D00D               	goto	i2u374_49
 16451                           
 16452                           ; BSR set to: 14
 16453                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 16454   0000A0  D801               	call	i2u374_48
 16455   0000A2  D00B               	goto	i2u374_49
 16456   0000A4                     i2u374_48:
 16457   0000A4  0005               	push	
 16458   0000A6  0100               	movlb	0	; () banked
 16459   0000A8  6EFA               	movwf	pclath,c
 16460   0000AA  51EF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 16461   0000AC  6EFD               	movwf	tosl,c
 16462   0000AE  51F0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 16463   0000B0                     L6:
 16464   0000B0  6EFE               	movwf	tosh,c
 16465   0000B2  50F8               	movf	tblptru,w,c
 16466   0000B4  6EFF               	movwf	tosu,c
 16467   0000B6  50FA               	movf	pclath,w,c
 16468   0000B8  0012               	return		;indir
 16469   0000BA                     i2u374_49:
 16470                           
 16471                           ; BSR set to: 14
 16472                           
 16473                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 16474   0000BA  C036  F042         	movff	??_INTERRUPT_InterruptManager+19,btemp+11
 16475   0000BE  C035  F041         	movff	??_INTERRUPT_InterruptManager+18,btemp+10
 16476   0000C2  C034  F040         	movff	??_INTERRUPT_InterruptManager+17,btemp+9
 16477   0000C6  C033  F03F         	movff	??_INTERRUPT_InterruptManager+16,btemp+8
 16478   0000CA  C032  F038         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 16479   0000CE  C031  F037         	movff	??_INTERRUPT_InterruptManager+14,btemp
 16480   0000D2  C030  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 16481   0000D6  C02F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 16482   0000DA  C02E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 16483   0000DE  C02D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 16484   0000E2  C02C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 16485   0000E6  C02B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 16486   0000EA  C02A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 16487   0000EE  C029  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 16488   0000F2  C028  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 16489   0000F6  C027  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 16490   0000FA  C026  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 16491   0000FE  C025  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 16492   000102  C024  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 16493   000106  C023  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 16494   00010A  0011               	retfie		f
 16495   00010C                     __end_of_INTERRUPT_InterruptManager:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _I2C1_Isr *****************
 16499 ;; Defined at:
 16500 ;;		line 165 in file "mcc_generated_files/i2c1_slave.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16514 ;;      Params:         0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0
 16516 ;;      Temps:          2       0       0       0       0
 16517 ;;      Totals:         2       0       0       0       0
 16518 ;;Total ram usage:        2 bytes
 16519 ;; Hardware stack levels used: 1
 16520 ;; Hardware stack levels required when called: 13
 16521 ;; This function calls:
 16522 ;;		_I2C1_SlaveAddrCallBack
 16523 ;;		_I2C1_SlaveClearIrq
 16524 ;;		_I2C1_SlaveIsAddr
 16525 ;;		_I2C1_SlaveIsRead
 16526 ;;		_I2C1_SlaveIsRxBufFull
 16527 ;;		_I2C1_SlaveIsTxBufEmpty
 16528 ;;		_I2C1_SlaveRdCallBack
 16529 ;;		_I2C1_SlaveReleaseClock
 16530 ;;		_I2C1_SlaveWrCallBack
 16531 ;; This function is called by:
 16532 ;;		_I2C1_Open
 16533 ;;		_INTERRUPT_InterruptManager
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           	psect	text65
 16538   000F30                     __ptext65:
 16539                           	callstack 0
 16540   000F30                     _I2C1_Isr:
 16541                           	callstack 7
 16542                           
 16543                           ;mcc_generated_files/i2c1_slave.c: 167:     I2C1_SlaveClearIrq();
 16544                           
 16545                           ;incstack = 0
 16546   000F30  EC18  F00F         	call	_I2C1_SlaveClearIrq	;wreg free
 16547                           
 16548                           ;mcc_generated_files/i2c1_slave.c: 169:     if(I2C1_SlaveIsAddr())
 16549   000F34  ECA7  F00E         	call	_I2C1_SlaveIsAddr	;wreg free
 16550   000F38  0900               	iorlw	0
 16551   000F3A  B4D8               	btfsc	status,2,c
 16552   000F3C  D009               	goto	i2l5190
 16553                           
 16554                           ;mcc_generated_files/i2c1_slave.c: 170:     {;mcc_generated_files/i2c1_slave.c: 171:    
      +                               if(I2C1_SlaveIsRead())
 16555   000F3E  ECAD  F00E         	call	_I2C1_SlaveIsRead	;wreg free
 16556   000F42  0900               	iorlw	0
 16557   000F44  B4D8               	btfsc	status,2,c
 16558   000F46  D002               	goto	i2l5188
 16559                           
 16560                           ;mcc_generated_files/i2c1_slave.c: 172:         {;mcc_generated_files/i2c1_slave.c: 173:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
 16561   000F48  0E01               	movlw	1
 16562   000F4A  D00A               	goto	L9
 16563   000F4C                     i2l5188:
 16564                           
 16565                           ;mcc_generated_files/i2c1_slave.c: 176:         {;mcc_generated_files/i2c1_slave.c: 177:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
 16566   000F4C  0E02               	movlw	2
 16567   000F4E  D008               	goto	L9
 16568   000F50                     i2l5190:
 16569                           
 16570                           ;mcc_generated_files/i2c1_slave.c: 181:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
 16571   000F50  ECAD  F00E         	call	_I2C1_SlaveIsRead	;wreg free
 16572   000F54  0900               	iorlw	0
 16573   000F56  B4D8               	btfsc	status,2,c
 16574   000F58  D002               	goto	i2l5194
 16575                           
 16576                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
 16577   000F5A  0E03               	movlw	3
 16578   000F5C  D001               	goto	L9
 16579   000F5E                     i2l5194:
 16580                           
 16581                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
 16582   000F5E  0E04               	movlw	4
 16583   000F60                     L9:
 16584   000F60  6E58               	movwf	_i2c1SlaveState^0,c	;volatile
 16585   000F62  D01B               	goto	i2l5214
 16586   000F64                     i2l5196:
 16587                           
 16588                           ;mcc_generated_files/i2c1_slave.c: 195:             I2C1_SlaveAddrCallBack();
 16589   000F64  EC73  F00D         	call	_I2C1_SlaveAddrCallBack	;wreg free
 16590                           
 16591                           ;mcc_generated_files/i2c1_slave.c: 196:             if(I2C1_SlaveIsTxBufEmpty())
 16592   000F68  EC9B  F00E         	call	_I2C1_SlaveIsTxBufEmpty	;wreg free
 16593   000F6C  0900               	iorlw	0
 16594   000F6E  B4D8               	btfsc	status,2,c
 16595   000F70  D028               	goto	i2l5216
 16596   000F72                     i2u345_40:
 16597                           
 16598                           ;mcc_generated_files/i2c1_slave.c: 197:             {;mcc_generated_files/i2c1_slave.c: 
      +                          198:                 I2C1_SlaveWrCallBack();
 16599   000F72  EC2F  F00D         	call	_I2C1_SlaveWrCallBack	;wreg free
 16600   000F76  D025               	goto	i2l5216
 16601   000F78                     i2l5202:
 16602                           
 16603                           ;mcc_generated_files/i2c1_slave.c: 202:             I2C1_SlaveAddrCallBack();
 16604   000F78  EC73  F00D         	call	_I2C1_SlaveAddrCallBack	;wreg free
 16605                           
 16606                           ;mcc_generated_files/i2c1_slave.c: 203:             break;
 16607   000F7C  D022               	goto	i2l5216
 16608   000F7E                     i2l5204:
 16609                           
 16610                           ;mcc_generated_files/i2c1_slave.c: 205:             if(I2C1_SlaveIsTxBufEmpty())
 16611   000F7E  EC9B  F00E         	call	_I2C1_SlaveIsTxBufEmpty	;wreg free
 16612   000F82  0900               	iorlw	0
 16613   000F84  A4D8               	btfss	status,2,c
 16614   000F86  D7F5               	goto	i2u345_40
 16615   000F88  D01C               	goto	i2l5216
 16616   000F8A                     i2l5208:
 16617                           
 16618                           ;mcc_generated_files/i2c1_slave.c: 211:             if(I2C1_SlaveIsRxBufFull())
 16619   000F8A  ECA1  F00E         	call	_I2C1_SlaveIsRxBufFull	;wreg free
 16620   000F8E  0900               	iorlw	0
 16621   000F90  B4D8               	btfsc	status,2,c
 16622   000F92  D017               	goto	i2l5216
 16623                           
 16624                           ;mcc_generated_files/i2c1_slave.c: 212:             {;mcc_generated_files/i2c1_slave.c: 
      +                          213:                 I2C1_SlaveRdCallBack();
 16625   000F94  EC40  F00D         	call	_I2C1_SlaveRdCallBack	;wreg free
 16626   000F98  D014               	goto	i2l5216
 16627   000F9A                     i2l5214:
 16628   000F9A  5058               	movf	_i2c1SlaveState^0,w,c	;volatile
 16629   000F9C  6E21               	movwf	??_I2C1_Isr^0,c
 16630   000F9E  6A22               	clrf	(??_I2C1_Isr+1)^0,c
 16631                           
 16632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16633                           ; Switch size 1, requested type "simple"
 16634                           ; Number of cases is 1, Range of values is 0 to 0
 16635                           ; switch strategies available:
 16636                           ; Name         Instructions Cycles
 16637                           ; simple_byte            4     3 (average)
 16638                           ;	Chosen strategy is simple_byte
 16639   000FA0  5022               	movf	(??_I2C1_Isr+1)^0,w,c
 16640   000FA2  0A00               	xorlw	0	; case 0
 16641   000FA4  A4D8               	btfss	status,2,c
 16642   000FA6  D00D               	goto	i2l5216
 16643                           
 16644                           ; Switch size 1, requested type "simple"
 16645                           ; Number of cases is 4, Range of values is 1 to 4
 16646                           ; switch strategies available:
 16647                           ; Name         Instructions Cycles
 16648                           ; simple_byte           13     7 (average)
 16649                           ;	Chosen strategy is simple_byte
 16650   000FA8  5021               	movf	??_I2C1_Isr^0,w,c
 16651   000FAA  0A01               	xorlw	1	; case 1
 16652   000FAC  B4D8               	btfsc	status,2,c
 16653   000FAE  D7DA               	goto	i2l5196
 16654   000FB0  0A03               	xorlw	3	; case 2
 16655   000FB2  B4D8               	btfsc	status,2,c
 16656   000FB4  D7E1               	goto	i2l5202
 16657   000FB6  0A01               	xorlw	1	; case 3
 16658   000FB8  B4D8               	btfsc	status,2,c
 16659   000FBA  D7E1               	goto	i2l5204
 16660   000FBC  0A07               	xorlw	7	; case 4
 16661   000FBE  B4D8               	btfsc	status,2,c
 16662   000FC0  D7E4               	goto	i2l5208
 16663   000FC2                     i2l5216:
 16664                           
 16665                           ;mcc_generated_files/i2c1_slave.c: 219:     I2C1_SlaveReleaseClock();
 16666   000FC2  EC29  F00F         	call	_I2C1_SlaveReleaseClock	;wreg free
 16667   000FC6  0012               	return		;funcret
 16668   000FC8                     __end_of_I2C1_Isr:
 16669                           	callstack 0
 16670                           
 16671 ;; *************** function _I2C1_SlaveWrCallBack *****************
 16672 ;; Defined at:
 16673 ;;		line 250 in file "mcc_generated_files/i2c1_slave.c"
 16674 ;; Parameters:    Size  Location     Type
 16675 ;;		None
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;		None
 16678 ;; Return value:  Size  Location     Type
 16679 ;;                  1    wreg      void 
 16680 ;; Registers used:
 16681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16687 ;;      Params:         0       0       0       0       0
 16688 ;;      Locals:         0       0       0       0       0
 16689 ;;      Temps:          0       0       0       0       0
 16690 ;;      Totals:         0       0       0       0       0
 16691 ;;Total ram usage:        0 bytes
 16692 ;; Hardware stack levels used: 1
 16693 ;; Hardware stack levels required when called: 12
 16694 ;; This function calls:
 16695 ;;		NULL
 16696 ;;		_I2C1_SlaveDefWrInterruptHandler
 16697 ;;		_MasterR_SlaveW
 16698 ;; This function is called by:
 16699 ;;		_I2C1_Isr
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text66
 16704   001A5E                     __ptext66:
 16705                           	callstack 0
 16706   001A5E                     _I2C1_SlaveWrCallBack:
 16707                           	callstack 7
 16708                           
 16709                           ;mcc_generated_files/i2c1_slave.c: 252:     if (I2C1_SlaveWrInterruptHandler)
 16710                           
 16711                           ;incstack = 0
 16712   001A5E  0100               	movlb	0	; () banked
 16713   001A60  51C7               	movf	_I2C1_SlaveWrInterruptHandler& (0+255),w,b
 16714   001A62  11C8               	iorwf	(_I2C1_SlaveWrInterruptHandler+1)& (0+255),w,b
 16715   001A64  B4D8               	btfsc	status,2,c
 16716   001A66  0012               	return	
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;mcc_generated_files/i2c1_slave.c: 253:     {;mcc_generated_files/i2c1_slave.c: 254:    
      +                               I2C1_SlaveWrInterruptHandler();
 16720   001A68  D801               	call	i2u322_48
 16721   001A6A  0012               	return	
 16722   001A6C                     i2u322_48:
 16723   001A6C  0005               	push	
 16724   001A6E  6EFA               	movwf	pclath,c
 16725   001A70  51C7               	movf	_I2C1_SlaveWrInterruptHandler& (0+255),w,b
 16726   001A72  6EFD               	movwf	tosl,c
 16727   001A74  51C8               	movf	(_I2C1_SlaveWrInterruptHandler+1)& (0+255),w,b
 16728   001A76  6EFE               	movwf	tosh,c
 16729   001A78  50F8               	movf	tblptru,w,c
 16730   001A7A  6EFF               	movwf	tosu,c
 16731   001A7C  50FA               	movf	pclath,w,c
 16732   001A7E  0012               	return		;indir
 16733   001A80                     __end_of_I2C1_SlaveWrCallBack:
 16734                           	callstack 0
 16735                           
 16736 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
 16737 ;; Defined at:
 16738 ;;		line 258 in file "mcc_generated_files/i2c1_slave.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;		None
 16741 ;; Auto vars:     Size  Location     Type
 16742 ;;		None
 16743 ;; Return value:  Size  Location     Type
 16744 ;;                  1    wreg      void 
 16745 ;; Registers used:
 16746 ;;		wreg, status,2, cstack
 16747 ;; Tracked objects:
 16748 ;;		On entry : 0/0
 16749 ;;		On exit  : 0/0
 16750 ;;		Unchanged: 0/0
 16751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16752 ;;      Params:         0       0       0       0       0
 16753 ;;      Locals:         0       0       0       0       0
 16754 ;;      Temps:          0       0       0       0       0
 16755 ;;      Totals:         0       0       0       0       0
 16756 ;;Total ram usage:        0 bytes
 16757 ;; Hardware stack levels used: 1
 16758 ;; Hardware stack levels required when called: 1
 16759 ;; This function calls:
 16760 ;;		_I2C1_SlaveSendTxData
 16761 ;; This function is called by:
 16762 ;;		_I2C1_Open
 16763 ;;		_I2C1_SlaveWrCallBack
 16764 ;; This function uses a non-reentrant model
 16765 ;;
 16766                           
 16767                           	psect	text67
 16768   001DFA                     __ptext67:
 16769                           	callstack 0
 16770   001DFA                     _I2C1_SlaveDefWrInterruptHandler:
 16771                           	callstack 17
 16772                           
 16773                           ;mcc_generated_files/i2c1_slave.c: 259:     I2C1_SlaveSendTxData(i2c1WrData);
 16774                           
 16775                           ;incstack = 0
 16776   001DFA  5059               	movf	_i2c1WrData^0,w,c	;volatile
 16777   001DFC  EC01  F00F         	call	_I2C1_SlaveSendTxData
 16778   001E00  0012               	return		;funcret
 16779   001E02                     __end_of_I2C1_SlaveDefWrInterruptHandler:
 16780                           	callstack 0
 16781                           
 16782 ;; *************** function _MasterR_SlaveW *****************
 16783 ;; Defined at:
 16784 ;;		line 57 in file "i2c_slave.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;		None
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;  tmp             1   31[COMRAM] unsigned char 
 16789 ;;  res             1   30[COMRAM] _Bool 
 16790 ;; Return value:  Size  Location     Type
 16791 ;;                  1    wreg      void 
 16792 ;; Registers used:
 16793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16794 ;; Tracked objects:
 16795 ;;		On entry : 0/0
 16796 ;;		On exit  : 0/0
 16797 ;;		Unchanged: 0/0
 16798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16799 ;;      Params:         0       0       0       0       0
 16800 ;;      Locals:         2       0       0       0       0
 16801 ;;      Temps:          0       0       0       0       0
 16802 ;;      Totals:         2       0       0       0       0
 16803 ;;Total ram usage:        2 bytes
 16804 ;; Hardware stack levels used: 1
 16805 ;; Hardware stack levels required when called: 11
 16806 ;; This function calls:
 16807 ;;		_I2C1_SendNack
 16808 ;;		_I2C1_Write
 16809 ;;		_TestForStopBit
 16810 ;;		_i2c_read_from_slave_cb
 16811 ;; This function is called by:
 16812 ;;		_i2c_slave_init
 16813 ;;		_I2C1_SlaveWrCallBack
 16814 ;; This function uses a non-reentrant model
 16815 ;;
 16816                           
 16817                           	psect	text68
 16818   001624                     __ptext68:
 16819                           	callstack 0
 16820   001624                     _MasterR_SlaveW:
 16821                           	callstack 7
 16822                           
 16823                           ;i2c_slave.c: 59:     if(TestForStopBit())
 16824                           
 16825                           ;incstack = 0
 16826   001624  EC55  F00E         	call	_TestForStopBit	;wreg free
 16827   001628  0900               	iorlw	0
 16828   00162A  A4D8               	btfss	status,2,c
 16829   00162C  0012               	return	
 16830                           
 16831                           ;i2c_slave.c: 63:     if(i2c.from_slave_ptr != 0)
 16832   00162E  0100               	movlb	0	; () banked
 16833   001630  51D7               	movf	(_i2c+6)& (0+255),w,b	;volatile
 16834   001632  11D8               	iorwf	(_i2c+7)& (0+255),w,b	;volatile
 16835   001634  B4D8               	btfsc	status,2,c
 16836   001636  0012               	return	
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;i2c_slave.c: 64:     {;i2c_slave.c: 65:         uint8_t tmp;;i2c_slave.c: 66:         _
      +                          Bool res = (i2c.from_slave_ptr)(&i2c.EEPMemAddr, &tmp);
 16840   001638  0ED2               	movlw	low (_i2c+1)
 16841   00163A  6E19               	movwf	i2c_read_from_slave_cb@addr^0,c
 16842   00163C  0E20               	movlw	low MasterR_SlaveW@tmp
 16843   00163E  6E1A               	movwf	i2c_read_from_slave_cb@wb^0,c
 16844   001640  EE20  F0D7         	lfsr	2,_i2c+6	;volatile
 16845   001644  D801               	call	i2u303_48
 16846   001646  D00A               	goto	i2u303_49
 16847   001648                     i2u303_48:
 16848   001648  0005               	push	
 16849   00164A  6EFA               	movwf	pclath,c
 16850   00164C  50DE               	movf	postinc2,w,c
 16851   00164E  6EFD               	movwf	tosl,c
 16852   001650  50DE               	movf	postinc2,w,c
 16853   001652  6EFE               	movwf	tosh,c
 16854   001654  50F8               	movf	tblptru,w,c
 16855   001656  6EFF               	movwf	tosu,c
 16856   001658  50FA               	movf	pclath,w,c
 16857   00165A  0012               	return		;indir
 16858   00165C                     i2u303_49:
 16859   00165C  6E1F               	movwf	MasterR_SlaveW@res^0,c
 16860                           
 16861                           ;i2c_slave.c: 67:         i2c.byteNo++;
 16862   00165E  0100               	movlb	0	; () banked
 16863   001660  2BD9               	incf	(_i2c+8)& (0+255),f,b	;volatile
 16864                           
 16865                           ; BSR set to: 0
 16866                           ;i2c_slave.c: 69:         if(res)
 16867   001662  501F               	movf	MasterR_SlaveW@res^0,w,c
 16868   001664  B4D8               	btfsc	status,2,c
 16869   001666  D004               	goto	i2l4822
 16870                           
 16871                           ; BSR set to: 0
 16872                           ;i2c_slave.c: 70:              I2C1_Write(tmp);
 16873   001668  5020               	movf	MasterR_SlaveW@tmp^0,w,c
 16874   00166A  ECEA  F00E         	call	_I2C1_Write
 16875   00166E  0012               	return	
 16876   001670                     i2l4822:
 16877                           
 16878                           ; BSR set to: 0
 16879                           ;i2c_slave.c: 72:             I2C1_SendNack();
 16880   001670  EC12  F00F         	call	_I2C1_SendNack	;wreg free
 16881   001674  0012               	return		;funcret
 16882   001676                     __end_of_MasterR_SlaveW:
 16883                           	callstack 0
 16884                           
 16885 ;; *************** function _i2c_read_from_slave_cb *****************
 16886 ;; Defined at:
 16887 ;;		line 149 in file "main.c"
 16888 ;; Parameters:    Size  Location     Type
 16889 ;;  addr            1   24[COMRAM] PTR volatile unsigned sh
 16890 ;;		 -> i2c(9), 
 16891 ;;  wb              1   25[COMRAM] PTR unsigned char 
 16892 ;;		 -> MasterR_SlaveW@tmp(1), 
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  c               2   28[COMRAM] struct .
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  1    wreg      _Bool 
 16897 ;; Registers used:
 16898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/0
 16901 ;;		On exit  : 0/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16904 ;;      Params:         2       0       0       0       0
 16905 ;;      Locals:         2       0       0       0       0
 16906 ;;      Temps:          2       0       0       0       0
 16907 ;;      Totals:         6       0       0       0       0
 16908 ;;Total ram usage:        6 bytes
 16909 ;; Hardware stack levels used: 1
 16910 ;; Hardware stack levels required when called: 10
 16911 ;; This function calls:
 16912 ;;		_eeprom_read_buffer
 16913 ;;		_handle_read_cmd
 16914 ;; This function is called by:
 16915 ;;		_main
 16916 ;;		_MasterR_SlaveW
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           	psect	text69
 16921   001202                     __ptext69:
 16922                           	callstack 0
 16923   001202                     _i2c_read_from_slave_cb:
 16924                           	callstack 7
 16925                           
 16926                           ;main.c: 153:     address_t c;;main.c: 154:     c.raw = *addr;
 16927                           
 16928                           ;incstack = 0
 16929                           ;main.c: 149: _Bool i2c_read_from_slave_cb(volatile uint16_t *addr, uint8_t *wb);main.c:
      +                           150: {;main.c: 151:     do{}while(0);
 16930   001202  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16931   001204  6ED9               	movwf	fsr2l,c
 16932   001206  6ADA               	clrf	fsr2h,c
 16933   001208  CFDE F01D          	movff	postinc2,i2c_read_from_slave_cb@c
 16934   00120C  CFDD F01E          	movff	postdec2,i2c_read_from_slave_cb@c+1
 16935                           
 16936                           ;main.c: 156:     if(c.isCMD)
 16937   001210  AE1E               	btfss	(i2c_read_from_slave_cb@c+1)^0,7,c
 16938   001212  D009               	goto	i2l4672
 16939                           
 16940                           ;main.c: 157:         return handle_read_cmd(c, wb);
 16941   001214  C01D  F013         	movff	i2c_read_from_slave_cb@c,handle_read_cmd@c
 16942   001218  C01E  F014         	movff	i2c_read_from_slave_cb@c+1,handle_read_cmd@c+1
 16943   00121C  C01A  F015         	movff	i2c_read_from_slave_cb@wb,handle_read_cmd@wb
 16944   001220  EC2B  F006         	call	_handle_read_cmd	;wreg free
 16945   001224  0012               	return	
 16946   001226                     i2l4672:
 16947   001226  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16948   001228  6ED9               	movwf	fsr2l,c
 16949   00122A  6ADA               	clrf	fsr2h,c
 16950   00122C  0E00               	movlw	0
 16951   00122E  5CDE               	subwf	postinc2,w,c
 16952   001230  0E01               	movlw	1
 16953   001232  58DE               	subwfb	postinc2,w,c
 16954   001234  B0D8               	btfsc	status,0,c
 16955   001236  D022               	goto	i2l4686
 16956                           
 16957                           ;main.c: 159:     {;main.c: 161:         if(*addr >= 256)
 16958   001238  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16959   00123A  6ED9               	movwf	fsr2l,c
 16960   00123C  6ADA               	clrf	fsr2h,c
 16961   00123E  0E00               	movlw	0
 16962   001240  5CDE               	subwf	postinc2,w,c
 16963   001242  0E01               	movlw	1
 16964   001244  58DE               	subwfb	postinc2,w,c
 16965   001246  A0D8               	btfss	status,0,c
 16966   001248  D005               	goto	i2l4678
 16967                           
 16968                           ;main.c: 162:             *addr = 0;
 16969   00124A  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16970   00124C  6ED9               	movwf	fsr2l,c
 16971   00124E  6ADA               	clrf	fsr2h,c
 16972   001250  6ADE               	clrf	postinc2,c
 16973   001252  6ADD               	clrf	postdec2,c
 16974   001254                     i2l4678:
 16975                           
 16976                           ;main.c: 165:         *wb = eeprom_read_buffer((eeAddr_t)*addr);
 16977   001254  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16978   001256  6ED9               	movwf	fsr2l,c
 16979   001258  6ADA               	clrf	fsr2h,c
 16980   00125A  50DF               	movf	indf2,w,c
 16981   00125C  EC34  F00E         	call	_eeprom_read_buffer
 16982   001260  6E1B               	movwf	??_i2c_read_from_slave_cb^0,c
 16983   001262  501A               	movf	i2c_read_from_slave_cb@wb^0,w,c
 16984   001264  6ED9               	movwf	fsr2l,c
 16985   001266  6ADA               	clrf	fsr2h,c
 16986   001268  C01B  FFDF         	movff	??_i2c_read_from_slave_cb,indf2
 16987                           
 16988                           ;main.c: 168:         *addr += 1;
 16989   00126C  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 16990   00126E  6ED9               	movwf	fsr2l,c
 16991   001270  6ADA               	clrf	fsr2h,c
 16992   001272  2ADE               	incf	postinc2,f,c
 16993   001274  0E00               	movlw	0
 16994   001276  22DD               	addwfc	postdec2,f,c
 16995                           
 16996                           ;main.c: 170:         return 1;
 16997   001278  0E01               	movlw	1
 16998   00127A  0012               	return	
 16999   00127C                     i2l4686:
 17000                           
 17001                           ;main.c: 173:     return 0;
 17002   00127C  0E00               	movlw	0
 17003   00127E  0012               	return		;funcret
 17004   001280                     __end_of_i2c_read_from_slave_cb:
 17005                           	callstack 0
 17006                           
 17007 ;; *************** function _handle_read_cmd *****************
 17008 ;; Defined at:
 17009 ;;		line 72 in file "main.c"
 17010 ;; Parameters:    Size  Location     Type
 17011 ;;  c               2   18[COMRAM] struct .
 17012 ;;  wb              1   20[COMRAM] PTR unsigned char 
 17013 ;;		 -> MasterR_SlaveW@tmp(1), 
 17014 ;; Auto vars:     Size  Location     Type
 17015 ;;		None
 17016 ;; Return value:  Size  Location     Type
 17017 ;;                  1    wreg      _Bool 
 17018 ;; Registers used:
 17019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17020 ;; Tracked objects:
 17021 ;;		On entry : 0/0
 17022 ;;		On exit  : 0/0
 17023 ;;		Unchanged: 0/0
 17024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17025 ;;      Params:         3       0       0       0       0
 17026 ;;      Locals:         0       0       0       0       0
 17027 ;;      Temps:          3       0       0       0       0
 17028 ;;      Totals:         6       0       0       0       0
 17029 ;;Total ram usage:        6 bytes
 17030 ;; Hardware stack levels used: 1
 17031 ;; Hardware stack levels required when called: 9
 17032 ;; This function calls:
 17033 ;;		_ReadReg
 17034 ;;		_analog_get_adc_val
 17035 ;;		_i2c_slave_get_byte_no
 17036 ;; This function is called by:
 17037 ;;		_i2c_read_from_slave_cb
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041                           	psect	text70
 17042   000C56                     __ptext70:
 17043                           	callstack 0
 17044   000C56                     _handle_read_cmd:
 17045                           	callstack 7
 17046                           
 17047                           ;main.c: 72: _Bool handle_read_cmd(address_t c, uint8_t *wb);main.c: 73: {;main.c: 74:  
      +                             static word_arr_t adc_tmp;;main.c: 75:     static address_t a;;main.c: 78:     if(c.c
      +                          md < 32)
 17048                           
 17049                           ;incstack = 0
 17050   000C56  0E20               	movlw	32
 17051   000C58  6013               	cpfslt	handle_read_cmd@c^0,c
 17052   000C5A  D063               	goto	i2l4608
 17053                           
 17054                           ;main.c: 79:         return ReadReg(c.cmd, c.portNo, wb);
 17055   000C5C  3814               	swapf	(handle_read_cmd@c+1)^0,w,c
 17056   000C5E  0B07               	andlw	7
 17057   000C60  6E0E               	movwf	ReadReg@portNo^0,c
 17058   000C62  C015  F00F         	movff	handle_read_cmd@wb,ReadReg@dst
 17059   000C66  5013               	movf	handle_read_cmd@c^0,w,c
 17060   000C68  ECE4  F007         	call	_ReadReg
 17061   000C6C  0012               	return	
 17062   000C6E                     i2l4582:
 17063                           
 17064                           ;main.c: 87:                 if(!i2c_slave_get_byte_no())
 17065   000C6E  EC0F  F00F         	call	_i2c_slave_get_byte_no	;wreg free
 17066   000C72  0900               	iorlw	0
 17067   000C74  A4D8               	btfss	status,2,c
 17068   000C76  D004               	goto	i2l4586
 17069                           
 17070                           ;main.c: 88:                     a.raw = c.raw;
 17071   000C78  C013  F0BD         	movff	handle_read_cmd@c,handle_read_cmd@a
 17072   000C7C  C014  F0BE         	movff	handle_read_cmd@c+1,handle_read_cmd@a+1
 17073   000C80                     i2l4586:
 17074                           
 17075                           ;main.c: 91:                 if(!(i2c_slave_get_byte_no() & 1))
 17076   000C80  EC0F  F00F         	call	_i2c_slave_get_byte_no	;wreg free
 17077   000C84  6E16               	movwf	??_handle_read_cmd^0,c
 17078   000C86  B016               	btfsc	??_handle_read_cmd^0,0,c
 17079   000C88  D00C               	goto	i2l4590
 17080                           
 17081                           ;main.c: 92:                     adc_tmp.word = analog_get_adc_val(a.portNo, a.extra);
 17082   000C8A  0100               	movlb	0	; () banked
 17083   000C8C  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 17084   000C8E  0B0F               	andlw	15
 17085   000C90  6E04               	movwf	analog_get_adc_val@pin^0,c
 17086   000C92  39BE               	swapf	(handle_read_cmd@a+1)& (0+255),w,b
 17087   000C94  0B07               	andlw	7
 17088   000C96  ECD6  F00D         	call	_analog_get_adc_val
 17089   000C9A  C004  F0BF         	movff	?_analog_get_adc_val,handle_read_cmd@adc_tmp
 17090   000C9E  C005  F0C0         	movff	?_analog_get_adc_val+1,handle_read_cmd@adc_tmp+1
 17091   000CA2                     i2l4590:
 17092                           
 17093                           ;main.c: 94:                 *wb = adc_tmp.arr[i2c_slave_get_byte_no() & 1];
 17094   000CA2  EC0F  F00F         	call	_i2c_slave_get_byte_no	;wreg free
 17095   000CA6  6E16               	movwf	??_handle_read_cmd^0,c
 17096   000CA8  0E01               	movlw	1
 17097   000CAA  1616               	andwf	??_handle_read_cmd^0,f,c
 17098   000CAC  5016               	movf	??_handle_read_cmd^0,w,c
 17099   000CAE  0FBF               	addlw	low handle_read_cmd@adc_tmp
 17100   000CB0  6ED9               	movwf	fsr2l,c
 17101   000CB2  6ADA               	clrf	fsr2h,c
 17102   000CB4  5015               	movf	handle_read_cmd@wb^0,w,c
 17103   000CB6  6EE9               	movwf	fsr0l,c
 17104   000CB8  6AEA               	clrf	fsr0h,c
 17105   000CBA  CFDF FFEF          	movff	indf2,indf0
 17106                           
 17107                           ;main.c: 96:                 if(i2c_slave_get_byte_no() & 1)
 17108   000CBE  EC0F  F00F         	call	_i2c_slave_get_byte_no	;wreg free
 17109   000CC2  6E16               	movwf	??_handle_read_cmd^0,c
 17110   000CC4  A016               	btfss	??_handle_read_cmd^0,0,c
 17111   000CC6  D034               	goto	i2l1023
 17112                           
 17113                           ;main.c: 97:                 {;main.c: 98:                     if(++a.extra >= 8)
 17114   000CC8  0E01               	movlw	1
 17115   000CCA  6E16               	movwf	??_handle_read_cmd^0,c
 17116   000CCC  0100               	movlb	0	; () banked
 17117   000CCE  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 17118   000CD0  0B0F               	andlw	15
 17119   000CD2  6E17               	movwf	(??_handle_read_cmd+1)^0,c
 17120   000CD4  5016               	movf	??_handle_read_cmd^0,w,c
 17121   000CD6  2617               	addwf	(??_handle_read_cmd+1)^0,f,c
 17122   000CD8  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 17123   000CDA  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 17124   000CDC  0BF0               	andlw	-16
 17125   000CDE  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 17126   000CE0  6FBE               	movwf	(handle_read_cmd@a+1)& (0+255),b
 17127   000CE2  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 17128   000CE4  0B0F               	andlw	15
 17129   000CE6  6E18               	movwf	(??_handle_read_cmd+2)^0,c
 17130   000CE8  0E07               	movlw	7
 17131   000CEA  6418               	cpfsgt	(??_handle_read_cmd+2)^0,c
 17132   000CEC  D021               	goto	i2l1023
 17133                           
 17134                           ; BSR set to: 0
 17135                           ;main.c: 99:                     {;main.c: 100:                         a.extra = 0;
 17136   000CEE  0EF0               	movlw	-16
 17137   000CF0  17BE               	andwf	(handle_read_cmd@a+1)& (0+255),f,b
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;main.c: 101:                         if(++a.portNo >= 2)
 17141   000CF2  0E01               	movlw	1
 17142   000CF4  6E16               	movwf	??_handle_read_cmd^0,c
 17143   000CF6  39BE               	swapf	(handle_read_cmd@a+1)& (0+255),w,b
 17144   000CF8  0B07               	andlw	7
 17145   000CFA  6E17               	movwf	(??_handle_read_cmd+1)^0,c
 17146   000CFC  5016               	movf	??_handle_read_cmd^0,w,c
 17147   000CFE  2617               	addwf	(??_handle_read_cmd+1)^0,f,c
 17148   000D00  3A17               	swapf	(??_handle_read_cmd+1)^0,f,c
 17149   000D02  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 17150   000D04  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 17151   000D06  0B8F               	andlw	-113
 17152   000D08  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 17153   000D0A  6FBE               	movwf	(handle_read_cmd@a+1)& (0+255),b
 17154   000D0C  39BE               	swapf	(handle_read_cmd@a+1)& (0+255),w,b
 17155   000D0E  0B07               	andlw	7
 17156   000D10  6E18               	movwf	(??_handle_read_cmd+2)^0,c
 17157   000D12  0E01               	movlw	1
 17158   000D14  6418               	cpfsgt	(??_handle_read_cmd+2)^0,c
 17159   000D16  D00C               	goto	i2l1023
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;main.c: 102:                             a.portNo = 0;
 17163   000D18  0E8F               	movlw	-113
 17164   000D1A  17BE               	andwf	(handle_read_cmd@a+1)& (0+255),f,b
 17165   000D1C  D009               	goto	i2l1023
 17166   000D1E                     i2l4602:
 17167                           
 17168                           ;main.c: 111:                 return 0;
 17169   000D1E  0E00               	movlw	0
 17170   000D20  0012               	return	
 17171   000D22                     i2l4608:
 17172   000D22  5013               	movf	handle_read_cmd@c^0,w,c
 17173                           
 17174                           ; Switch size 1, requested type "simple"
 17175                           ; Number of cases is 2, Range of values is 32 to 33
 17176                           ; switch strategies available:
 17177                           ; Name         Instructions Cycles
 17178                           ; simple_byte            7     4 (average)
 17179                           ;	Chosen strategy is simple_byte
 17180   000D24  0A20               	xorlw	32	; case 32
 17181   000D26  B4D8               	btfsc	status,2,c
 17182   000D28  D7A2               	goto	i2l4582
 17183   000D2A  0A01               	xorlw	1	; case 33
 17184   000D2C  A4D8               	btfss	status,2,c
 17185   000D2E  D7F7               	goto	i2l4602
 17186   000D30                     i2l1023:
 17187                           
 17188                           ;main.c: 114:     return 1;
 17189                           
 17190                           ; BSR set to: 0
 17191   000D30  0E01               	movlw	1
 17192   000D32  0012               	return		;funcret
 17193   000D34                     __end_of_handle_read_cmd:
 17194                           	callstack 0
 17195                           
 17196 ;; *************** function _i2c_slave_get_byte_no *****************
 17197 ;; Defined at:
 17198 ;;		line 28 in file "i2c_slave.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;		None
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;		None
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  1    wreg      unsigned char 
 17205 ;; Registers used:
 17206 ;;		wreg, status,2
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17212 ;;      Params:         0       0       0       0       0
 17213 ;;      Locals:         0       0       0       0       0
 17214 ;;      Temps:          0       0       0       0       0
 17215 ;;      Totals:         0       0       0       0       0
 17216 ;;Total ram usage:        0 bytes
 17217 ;; Hardware stack levels used: 1
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_handle_read_cmd
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text71
 17226   001E1E                     __ptext71:
 17227                           	callstack 0
 17228   001E1E                     _i2c_slave_get_byte_no:
 17229                           	callstack 15
 17230                           
 17231                           ;i2c_slave.c: 30:     return i2c.byteNo;
 17232                           
 17233                           ;incstack = 0
 17234   001E1E  0100               	movlb	0	; () banked
 17235   001E20  51D9               	movf	(_i2c+8)& (0+255),w,b	;volatile
 17236                           
 17237                           ; BSR set to: 0
 17238   001E22  0012               	return		;funcret
 17239   001E24                     __end_of_i2c_slave_get_byte_no:
 17240                           	callstack 0
 17241                           
 17242 ;; *************** function _analog_get_adc_val *****************
 17243 ;; Defined at:
 17244 ;;		line 30 in file "analog.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;  port            1    wreg     enum E10154
 17247 ;;  pin             1    3[COMRAM] enum E10159
 17248 ;; Auto vars:     Size  Location     Type
 17249 ;;  port            1    5[COMRAM] enum E10154
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  2    3[COMRAM] unsigned short 
 17252 ;; Registers used:
 17253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17259 ;;      Params:         2       0       0       0       0
 17260 ;;      Locals:         1       0       0       0       0
 17261 ;;      Temps:          0       0       0       0       0
 17262 ;;      Totals:         3       0       0       0       0
 17263 ;;Total ram usage:        3 bytes
 17264 ;; Hardware stack levels used: 1
 17265 ;; Hardware stack levels required when called: 8
 17266 ;; This function calls:
 17267 ;;		_analog_get_adc_val_idx
 17268 ;; This function is called by:
 17269 ;;		_handle_read_cmd
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           	psect	text72
 17274   001BAC                     __ptext72:
 17275                           	callstack 0
 17276   001BAC                     _analog_get_adc_val:
 17277                           	callstack 7
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;incstack = 0
 17281                           ;analog_get_adc_val@port stored from wreg
 17282   001BAC  6E06               	movwf	analog_get_adc_val@port^0,c
 17283                           
 17284                           ;analog.c: 30: uint16_t analog_get_adc_val(EXP_PORT port, EXP_PIN pin);analog.c: 31: {;a
      +                          nalog.c: 32:     return analog_get_adc_val_idx(( (port * 8) + pin ));
 17285   001BAE  5006               	movf	analog_get_adc_val@port^0,w,c
 17286   001BB0  0D08               	mullw	8
 17287   001BB2  50F3               	movf	243,w,c
 17288   001BB4  2404               	addwf	analog_get_adc_val@pin^0,w,c
 17289   001BB6  EC0F  F00C         	call	_analog_get_adc_val_idx
 17290   001BBA  C001  F004         	movff	?_analog_get_adc_val_idx,?_analog_get_adc_val
 17291   001BBE  C002  F005         	movff	?_analog_get_adc_val_idx+1,?_analog_get_adc_val+1
 17292   001BC2  0012               	return		;funcret
 17293   001BC4                     __end_of_analog_get_adc_val:
 17294                           	callstack 0
 17295                           
 17296 ;; *************** function _analog_get_adc_val_idx *****************
 17297 ;; Defined at:
 17298 ;;		line 24 in file "analog.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;  idx             1    wreg     unsigned char 
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;  idx             1    2[COMRAM] unsigned char 
 17303 ;; Return value:  Size  Location     Type
 17304 ;;                  2    0[COMRAM] unsigned short 
 17305 ;; Registers used:
 17306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17312 ;;      Params:         2       0       0       0       0
 17313 ;;      Locals:         1       0       0       0       0
 17314 ;;      Temps:          0       0       0       0       0
 17315 ;;      Totals:         3       0       0       0       0
 17316 ;;Total ram usage:        3 bytes
 17317 ;; Hardware stack levels used: 1
 17318 ;; Hardware stack levels required when called: 7
 17319 ;; This function calls:
 17320 ;;		___assert_fail
 17321 ;; This function is called by:
 17322 ;;		_analog_get_adc_val
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           	psect	text73
 17327   00181E                     __ptext73:
 17328                           	callstack 0
 17329   00181E                     _analog_get_adc_val_idx:
 17330                           	callstack 7
 17331                           
 17332                           ;incstack = 0
 17333                           ;analog_get_adc_val_idx@idx stored from wreg
 17334   00181E  6E03               	movwf	analog_get_adc_val_idx@idx^0,c
 17335                           
 17336                           ;analog.c: 24: uint16_t analog_get_adc_val_idx(uint8_t idx);analog.c: 25: {;analog.c: 26
      +                          :     ((void)((idx < ( eEXP_PORT_CNT * 8 )) || (__assert_fail("idx < EXP_PINS_COUNT", "a
      +                          nalog.c", 26, __func__),0)));
 17337   001820  0E0F               	movlw	15
 17338   001822  6403               	cpfsgt	analog_get_adc_val_idx@idx^0,c
 17339   001824  D012               	goto	i2l4330
 17340   001826  0E2D               	movlw	low STR_70
 17341   001828  6EE6               	movwf	postinc1,c
 17342   00182A  0E3F               	movlw	high STR_70
 17343   00182C  6EE6               	movwf	postinc1,c
 17344   00182E  0E1A               	movlw	26
 17345   001830  6EE6               	movwf	postinc1,c
 17346   001832  0E00               	movlw	0
 17347   001834  6EE6               	movwf	postinc1,c
 17348   001836  0ED3               	movlw	low STR_63
 17349   001838  6EE6               	movwf	postinc1,c
 17350   00183A  0E3F               	movlw	high STR_63
 17351   00183C  6EE6               	movwf	postinc1,c
 17352   00183E  0E88               	movlw	low STR_62
 17353   001840  6EE6               	movwf	postinc1,c
 17354   001842  0E3F               	movlw	high STR_62
 17355   001844  6EE6               	movwf	postinc1,c
 17356   001846  ECAA  F00B         	call	___assert_fail	;wreg free
 17357   00184A                     i2l4330:
 17358                           
 17359                           ;analog.c: 27:     return analog.adc_val[idx];
 17360   00184A  5003               	movf	analog_get_adc_val_idx@idx^0,w,c
 17361   00184C  0D02               	mullw	2
 17362   00184E  50F3               	movf	243,w,c
 17363   001850  0F70               	addlw	low (_analog+16)
 17364   001852  6ED9               	movwf	fsr2l,c
 17365   001854  6ADA               	clrf	fsr2h,c
 17366   001856  CFDE F001          	movff	postinc2,?_analog_get_adc_val_idx
 17367   00185A  CFDD F002          	movff	postdec2,?_analog_get_adc_val_idx+1
 17368   00185E  0012               	return		;funcret
 17369   001860                     __end_of_analog_get_adc_val_idx:
 17370                           	callstack 0
 17371                           
 17372 ;; *************** function _ReadReg *****************
 17373 ;; Defined at:
 17374 ;;		line 44 in file "registers.c"
 17375 ;; Parameters:    Size  Location     Type
 17376 ;;  regNo           1    wreg     enum E10193
 17377 ;;  portNo          1   13[COMRAM] enum E10154
 17378 ;;  dst             1   14[COMRAM] PTR unsigned char 
 17379 ;;		 -> MasterR_SlaveW@tmp(1), 
 17380 ;; Auto vars:     Size  Location     Type
 17381 ;;  regNo           1   16[COMRAM] enum E10193
 17382 ;;  p               1   17[COMRAM] unsigned char 
 17383 ;;  tmp             1   15[COMRAM] unsigned char 
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  1    wreg      _Bool 
 17386 ;; Registers used:
 17387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17393 ;;      Params:         2       0       0       0       0
 17394 ;;      Locals:         3       0       0       0       0
 17395 ;;      Temps:          0       0       0       0       0
 17396 ;;      Totals:         5       0       0       0       0
 17397 ;;Total ram usage:        5 bytes
 17398 ;; Hardware stack levels used: 1
 17399 ;; Hardware stack levels required when called: 8
 17400 ;; This function calls:
 17401 ;;		_ReadBit
 17402 ;;		___assert_fail
 17403 ;; This function is called by:
 17404 ;;		_handle_read_cmd
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text74
 17409   000FC8                     __ptext74:
 17410                           	callstack 0
 17411   000FC8                     _ReadReg:
 17412                           	callstack 7
 17413                           
 17414                           ;incstack = 0
 17415                           ;ReadReg@regNo stored from wreg
 17416   000FC8  6E11               	movwf	ReadReg@regNo^0,c
 17417                           
 17418                           ;registers.c: 44: _Bool ReadReg(Registers_t regNo, EXP_PORT portNo, port_t *dst);registe
      +                          rs.c: 45: {;registers.c: 46:     ((void)((regNo < eRegistersCNT) || (__assert_fail("regN
      +                          o < eRegistersCNT", "registers.c", 46, __func__),0)));
 17419   000FCA  0E0A               	movlw	10
 17420   000FCC  6411               	cpfsgt	ReadReg@regNo^0,c
 17421   000FCE  D012               	goto	i2l4482
 17422   000FD0  0EEE               	movlw	low STR_22
 17423   000FD2  6EE6               	movwf	postinc1,c
 17424   000FD4  0E3F               	movlw	high STR_22
 17425   000FD6  6EE6               	movwf	postinc1,c
 17426   000FD8  0E2E               	movlw	46
 17427   000FDA  6EE6               	movwf	postinc1,c
 17428   000FDC  0E00               	movlw	0
 17429   000FDE  6EE6               	movwf	postinc1,c
 17430   000FE0  0EC7               	movlw	low STR_3
 17431   000FE2  6EE6               	movwf	postinc1,c
 17432   000FE4  0E3F               	movlw	high STR_3
 17433   000FE6  6EE6               	movwf	postinc1,c
 17434   000FE8  0E72               	movlw	low STR_2
 17435   000FEA  6EE6               	movwf	postinc1,c
 17436   000FEC  0E3F               	movlw	high STR_2
 17437   000FEE  6EE6               	movwf	postinc1,c
 17438   000FF0  ECAA  F00B         	call	___assert_fail	;wreg free
 17439   000FF4                     i2l4482:
 17440                           
 17441                           ;registers.c: 47:     ((void)((portNo < 2) || (__assert_fail("portNo < EXP_PORTS_CNT", "
      +                          registers.c", 47, __func__),0)));
 17442   000FF4  0E01               	movlw	1
 17443   000FF6  640E               	cpfsgt	ReadReg@portNo^0,c
 17444   000FF8  D012               	goto	i2l4486
 17445   000FFA  0EEE               	movlw	low STR_22
 17446   000FFC  6EE6               	movwf	postinc1,c
 17447   000FFE  0E3F               	movlw	high STR_22
 17448   001000  6EE6               	movwf	postinc1,c
 17449   001002  0E2F               	movlw	47
 17450   001004  6EE6               	movwf	postinc1,c
 17451   001006  0E00               	movlw	0
 17452   001008  6EE6               	movwf	postinc1,c
 17453   00100A  0EC7               	movlw	low STR_3
 17454   00100C  6EE6               	movwf	postinc1,c
 17455   00100E  0E3F               	movlw	high STR_3
 17456   001010  6EE6               	movwf	postinc1,c
 17457   001012  0E44               	movlw	low STR_26
 17458   001014  6EE6               	movwf	postinc1,c
 17459   001016  0E3F               	movlw	high STR_26
 17460   001018  6EE6               	movwf	postinc1,c
 17461   00101A  ECAA  F00B         	call	___assert_fail	;wreg free
 17462   00101E                     i2l4486:
 17463                           
 17464                           ;registers.c: 49:     if(regNo >= eRegistersCNT)
 17465   00101E  0E0A               	movlw	10
 17466   001020  6411               	cpfsgt	ReadReg@regNo^0,c
 17467   001022  D002               	goto	i2l4492
 17468   001024                     i2u274_40:
 17469                           
 17470                           ;registers.c: 50:         return 0;
 17471   001024  0E00               	movlw	0
 17472   001026  0012               	return	
 17473   001028                     i2l4492:
 17474                           
 17475                           ;registers.c: 52:     if(portNo >= 2)
 17476   001028  0E01               	movlw	1
 17477   00102A  640E               	cpfsgt	ReadReg@portNo^0,c
 17478   00102C  D001               	goto	i2l1118
 17479   00102E  D7FA               	goto	i2u274_40
 17480   001030                     i2l1118:
 17481                           
 17482                           ;registers.c: 55:     port_t tmp = 0;
 17483   001030  6A10               	clrf	ReadReg@tmp^0,c
 17484                           
 17485                           ;registers.c: 56:     for(uint8_t p = 8; p > 0; p--)
 17486   001032  0E08               	movlw	8
 17487   001034  6E12               	movwf	ReadReg@p^0,c
 17488   001036                     i2l4502:
 17489                           
 17490                           ;registers.c: 57:     {;registers.c: 58:         tmp<<=1;
 17491   001036  90D8               	bcf	status,0,c
 17492   001038  3610               	rlcf	ReadReg@tmp^0,f,c
 17493                           
 17494                           ;registers.c: 59:         tmp |= ReadBit(regNo, portNo, p-1);
 17495   00103A  C00E  F001         	movff	ReadReg@portNo,ReadBit@portNo
 17496   00103E  0412               	decf	ReadReg@p^0,w,c
 17497   001040  6E02               	movwf	ReadBit@pinNo^0,c
 17498   001042  5011               	movf	ReadReg@regNo^0,w,c
 17499   001044  ECED  F003         	call	_ReadBit
 17500   001048  1210               	iorwf	ReadReg@tmp^0,f,c
 17501                           
 17502                           ;registers.c: 60:     }
 17503   00104A  0612               	decf	ReadReg@p^0,f,c
 17504   00104C  5012               	movf	ReadReg@p^0,w,c
 17505   00104E  A4D8               	btfss	status,2,c
 17506   001050  D7F2               	goto	i2l4502
 17507                           
 17508                           ;registers.c: 61:     *dst = tmp;
 17509   001052  500F               	movf	ReadReg@dst^0,w,c
 17510   001054  6ED9               	movwf	fsr2l,c
 17511   001056  6ADA               	clrf	fsr2h,c
 17512   001058  C010  FFDF         	movff	ReadReg@tmp,indf2
 17513                           
 17514                           ;registers.c: 62:     return 1;
 17515   00105C  0E01               	movlw	1
 17516   00105E  0012               	return		;funcret
 17517   001060                     __end_of_ReadReg:
 17518                           	callstack 0
 17519                           
 17520 ;; *************** function _ReadBit *****************
 17521 ;; Defined at:
 17522 ;;		line 28 in file "registers.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;  regNo           1    wreg     enum E10193
 17525 ;;  portNo          1    0[COMRAM] enum E10154
 17526 ;;  pinNo           1    1[COMRAM] enum E10159
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;  regNo           1   12[COMRAM] enum E10193
 17529 ;;  pin             2   10[COMRAM] PTR const struct .
 17530 ;;		 -> PINS(32), 
 17531 ;;  reg             2    6[COMRAM] PTR volatile unsigned ch
 17532 ;;		 -> IOCAP(1), IOCAN(1), IOCAF(1), PORTA(1), 
 17533 ;;		 -> INLVLA(1), SLRCONA(1), ODCONA(1), WPUA(1), 
 17534 ;;		 -> ANSELA(1), TRISA(1), LATA(1), 
 17535 ;;  portMask        1    9[COMRAM] unsigned char 
 17536 ;;  portData        1    8[COMRAM] unsigned char 
 17537 ;; Return value:  Size  Location     Type
 17538 ;;                  1    wreg      unsigned char 
 17539 ;; Registers used:
 17540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17546 ;;      Params:         2       0       0       0       0
 17547 ;;      Locals:         7       0       0       0       0
 17548 ;;      Temps:          4       0       0       0       0
 17549 ;;      Totals:        13       0       0       0       0
 17550 ;;Total ram usage:       13 bytes
 17551 ;; Hardware stack levels used: 1
 17552 ;; Hardware stack levels required when called: 7
 17553 ;; This function calls:
 17554 ;;		___assert_fail
 17555 ;; This function is called by:
 17556 ;;		_ReadReg
 17557 ;; This function uses a non-reentrant model
 17558 ;;
 17559                           
 17560                           	psect	text75
 17561   0007DA                     __ptext75:
 17562                           	callstack 0
 17563   0007DA                     _ReadBit:
 17564                           	callstack 7
 17565                           
 17566                           ;incstack = 0
 17567                           ;ReadBit@regNo stored from wreg
 17568   0007DA  6E0D               	movwf	ReadBit@regNo^0,c
 17569                           
 17570                           ;registers.c: 28: uint8_t ReadBit(Registers_t regNo, EXP_PORT portNo, EXP_PIN pinNo);reg
      +                          isters.c: 29: {;registers.c: 30:     ((void)((regNo < eRegistersCNT) || (__assert_fail("
      +                          regNo < eRegistersCNT", "registers.c", 30, __func__),0)));
 17571   0007DC  0E0A               	movlw	10
 17572   0007DE  640D               	cpfsgt	ReadBit@regNo^0,c
 17573   0007E0  D012               	goto	i2l4274
 17574   0007E2  0EF6               	movlw	low STR_4
 17575   0007E4  6EE6               	movwf	postinc1,c
 17576   0007E6  0E3F               	movlw	high STR_4
 17577   0007E8  6EE6               	movwf	postinc1,c
 17578   0007EA  0E1E               	movlw	30
 17579   0007EC  6EE6               	movwf	postinc1,c
 17580   0007EE  0E00               	movlw	0
 17581   0007F0  6EE6               	movwf	postinc1,c
 17582   0007F2  0EC7               	movlw	low STR_3
 17583   0007F4  6EE6               	movwf	postinc1,c
 17584   0007F6  0E3F               	movlw	high STR_3
 17585   0007F8  6EE6               	movwf	postinc1,c
 17586   0007FA  0E72               	movlw	low STR_2
 17587   0007FC  6EE6               	movwf	postinc1,c
 17588   0007FE  0E3F               	movlw	high STR_2
 17589   000800  6EE6               	movwf	postinc1,c
 17590   000802  ECAA  F00B         	call	___assert_fail	;wreg free
 17591   000806                     i2l4274:
 17592                           
 17593                           ;registers.c: 31:     ((void)((portNo < eEXP_PORT_CNT) || (__assert_fail("portNo < eEXP_
      +                          PORT_CNT", "registers.c", 31, __func__),0)));
 17594   000806  0E01               	movlw	1
 17595   000808  6401               	cpfsgt	ReadBit@portNo^0,c
 17596   00080A  D012               	goto	i2l4278
 17597   00080C  0EF6               	movlw	low STR_4
 17598   00080E  6EE6               	movwf	postinc1,c
 17599   000810  0E3F               	movlw	high STR_4
 17600   000812  6EE6               	movwf	postinc1,c
 17601   000814  0E1F               	movlw	31
 17602   000816  6EE6               	movwf	postinc1,c
 17603   000818  0E00               	movlw	0
 17604   00081A  6EE6               	movwf	postinc1,c
 17605   00081C  0EC7               	movlw	low STR_3
 17606   00081E  6EE6               	movwf	postinc1,c
 17607   000820  0E3F               	movlw	high STR_3
 17608   000822  6EE6               	movwf	postinc1,c
 17609   000824  0E5B               	movlw	low STR_8
 17610   000826  6EE6               	movwf	postinc1,c
 17611   000828  0E3F               	movlw	high STR_8
 17612   00082A  6EE6               	movwf	postinc1,c
 17613   00082C  ECAA  F00B         	call	___assert_fail	;wreg free
 17614   000830                     i2l4278:
 17615                           
 17616                           ;registers.c: 32:     ((void)((pinNo < eEXP_PIN_CNT) || (__assert_fail("pinNo < eEXP_PIN
      +                          _CNT", "registers.c", 32, __func__),0)));
 17617   000830  0E07               	movlw	7
 17618   000832  6402               	cpfsgt	ReadBit@pinNo^0,c
 17619   000834  D012               	goto	i2l4282
 17620   000836  0EF6               	movlw	low STR_4
 17621   000838  6EE6               	movwf	postinc1,c
 17622   00083A  0E3F               	movlw	high STR_4
 17623   00083C  6EE6               	movwf	postinc1,c
 17624   00083E  0E20               	movlw	32
 17625   000840  6EE6               	movwf	postinc1,c
 17626   000842  0E00               	movlw	0
 17627   000844  6EE6               	movwf	postinc1,c
 17628   000846  0EC7               	movlw	low STR_3
 17629   000848  6EE6               	movwf	postinc1,c
 17630   00084A  0E3F               	movlw	high STR_3
 17631   00084C  6EE6               	movwf	postinc1,c
 17632   00084E  0E9D               	movlw	low STR_14
 17633   000850  6EE6               	movwf	postinc1,c
 17634   000852  0E3F               	movlw	high STR_14
 17635   000854  6EE6               	movwf	postinc1,c
 17636   000856  ECAA  F00B         	call	___assert_fail	;wreg free
 17637   00085A                     i2l4282:
 17638                           
 17639                           ;registers.c: 34:     const Pin_t *pin = &PINS[portNo][pinNo];
 17640   00085A  5002               	movf	ReadBit@pinNo^0,w,c
 17641   00085C  0D02               	mullw	2
 17642   00085E  CFF3 F003          	movff	prodl,??_ReadBit
 17643   000862  CFF4 F004          	movff	prodh,??_ReadBit+1
 17644   000866  5001               	movf	ReadBit@portNo^0,w,c
 17645   000868  0D10               	mullw	16
 17646   00086A  0ED0               	movlw	low _PINS
 17647   00086C  24F3               	addwf	243,w,c
 17648   00086E  6E05               	movwf	(??_ReadBit+2)^0,c
 17649   000870  0E3E               	movlw	high _PINS
 17650   000872  20F4               	addwfc	prodh,w,c
 17651   000874  6E06               	movwf	(??_ReadBit+3)^0,c
 17652   000876  5003               	movf	??_ReadBit^0,w,c
 17653   000878  2405               	addwf	(??_ReadBit+2)^0,w,c
 17654   00087A  6E0B               	movwf	ReadBit@pin^0,c
 17655   00087C  5004               	movf	(??_ReadBit+1)^0,w,c
 17656   00087E  2006               	addwfc	(??_ReadBit+3)^0,w,c
 17657   000880  6E0C               	movwf	(ReadBit@pin+1)^0,c
 17658                           
 17659                           ;registers.c: 37:     volatile port_t *reg = Registers[regNo].reg;
 17660   000882  500D               	movf	ReadBit@regNo^0,w,c
 17661   000884  0D03               	mullw	3
 17662   000886  0EAF               	movlw	low _Registers
 17663   000888  24F3               	addwf	243,w,c
 17664   00088A  6EF6               	movwf	tblptrl,c
 17665   00088C  0E3E               	movlw	high _Registers
 17666   00088E  20F4               	addwfc	244,w,c
 17667   000890  6EF7               	movwf	tblptrh,c
 17668   000892                     	if	0	;There are less than 3 active tblptr bytes
 17669   000892                     	endif
 17670   000892  0009               	tblrd		*+
 17671   000894  CFF5 F007          	movff	tablat,ReadBit@reg
 17672   000898  000A               	tblrd		*-
 17673   00089A  CFF5 F008          	movff	tablat,ReadBit@reg+1
 17674                           
 17675                           ;registers.c: 38:     reg += pin->Port * (Registers[regNo].portCntOffset & 31);
 17676   00089E  500D               	movf	ReadBit@regNo^0,w,c
 17677   0008A0  0D03               	mullw	3
 17678   0008A2  0E02               	movlw	2
 17679   0008A4  26F3               	addwf	243,f,c
 17680   0008A6  0E00               	movlw	0
 17681   0008A8  22F4               	addwfc	244,f,c
 17682   0008AA  0EAF               	movlw	low _Registers
 17683   0008AC  24F3               	addwf	243,w,c
 17684   0008AE  6EF6               	movwf	tblptrl,c
 17685   0008B0  0E3E               	movlw	high _Registers
 17686   0008B2  20F4               	addwfc	244,w,c
 17687   0008B4  6EF7               	movwf	tblptrh,c
 17688   0008B6                     	if	0	;There are less than 3 active tblptr bytes
 17689   0008B6                     	endif
 17690   0008B6  0008               	tblrd		*
 17691   0008B8  CFF5 F003          	movff	tablat,??_ReadBit
 17692   0008BC  0E1F               	movlw	31
 17693   0008BE  1603               	andwf	??_ReadBit^0,f,c
 17694   0008C0  C00B  FFF6         	movff	ReadBit@pin,tblptrl
 17695   0008C4  C00C  FFF7         	movff	ReadBit@pin+1,tblptrh
 17696   0008C8                     	if	0	;tblptru may be non-zero
 17697   0008C8                     	endif
 17698   0008C8                     	if	0	;tblptru may be non-zero
 17699   0008C8                     	endif
 17700   0008C8  0008               	tblrd		*
 17701   0008CA  CFF5 F004          	movff	tablat,??_ReadBit+1
 17702   0008CE  5004               	movf	(??_ReadBit+1)^0,w,c
 17703   0008D0  0B0F               	andlw	15
 17704   0008D2  6E05               	movwf	(??_ReadBit+2)^0,c
 17705   0008D4  5005               	movf	(??_ReadBit+2)^0,w,c
 17706   0008D6  0203               	mulwf	??_ReadBit^0,c
 17707   0008D8  50F3               	movf	243,w,c
 17708   0008DA  2607               	addwf	ReadBit@reg^0,f,c
 17709   0008DC  50F4               	movf	244,w,c
 17710   0008DE  2208               	addwfc	(ReadBit@reg+1)^0,f,c
 17711                           
 17712                           ;registers.c: 39:     port_t portData = *reg;
 17713   0008E0  C007  FFD9         	movff	ReadBit@reg,fsr2l
 17714   0008E4  C008  FFDA         	movff	ReadBit@reg+1,fsr2h
 17715   0008E8  50DF               	movf	indf2,w,c
 17716   0008EA  6E09               	movwf	ReadBit@portData^0,c
 17717                           
 17718                           ;registers.c: 40:     port_t portMask = (port_t)((int)1 << pin->Pin);
 17719   0008EC  C00B  FFF6         	movff	ReadBit@pin,tblptrl
 17720   0008F0  C00C  FFF7         	movff	ReadBit@pin+1,tblptrh
 17721   0008F4                     	if	0	;tblptru may be non-zero
 17722   0008F4                     	endif
 17723   0008F4                     	if	0	;tblptru may be non-zero
 17724   0008F4                     	endif
 17725   0008F4  0008               	tblrd		*
 17726   0008F6  CFF5 F003          	movff	tablat,??_ReadBit
 17727   0008FA  3803               	swapf	??_ReadBit^0,w,c
 17728   0008FC  0B0F               	andlw	15
 17729   0008FE  6E04               	movwf	(??_ReadBit+1)^0,c
 17730   000900  0E01               	movlw	1
 17731   000902  6E05               	movwf	(??_ReadBit+2)^0,c
 17732   000904  2A04               	incf	(??_ReadBit+1)^0,f,c
 17733   000906  D002               	goto	i2u244_44
 17734   000908                     i2u244_45:
 17735   000908  90D8               	bcf	status,0,c
 17736   00090A  3605               	rlcf	(??_ReadBit+2)^0,f,c
 17737   00090C                     i2u244_44:
 17738   00090C  2E04               	decfsz	(??_ReadBit+1)^0,f,c
 17739   00090E  D7FC               	goto	i2u244_45
 17740   000910  5005               	movf	(??_ReadBit+2)^0,w,c
 17741   000912  6E0A               	movwf	ReadBit@portMask^0,c
 17742                           
 17743                           ;registers.c: 41:     return (portData & portMask) ? 1 : 0;
 17744   000914  5009               	movf	ReadBit@portData^0,w,c
 17745   000916  140A               	andwf	ReadBit@portMask^0,w,c
 17746   000918  0900               	iorlw	0
 17747   00091A  B4D8               	btfsc	status,2,c
 17748   00091C  D002               	goto	i2u245_40
 17749   00091E  0E01               	movlw	1
 17750   000920  0012               	return	
 17751   000922                     i2u245_40:
 17752   000922  0E00               	movlw	0
 17753   000924  0012               	return		;funcret
 17754   000926                     __end_of_ReadBit:
 17755                           	callstack 0
 17756                           
 17757 ;; *************** function _I2C1_Write *****************
 17758 ;; Defined at:
 17759 ;;		line 140 in file "mcc_generated_files/i2c1_slave.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  data            1    wreg     unsigned char 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;  data            1    1[COMRAM] unsigned char 
 17764 ;; Return value:  Size  Location     Type
 17765 ;;                  1    wreg      void 
 17766 ;; Registers used:
 17767 ;;		wreg, status,2, cstack
 17768 ;; Tracked objects:
 17769 ;;		On entry : 0/0
 17770 ;;		On exit  : 0/0
 17771 ;;		Unchanged: 0/0
 17772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17773 ;;      Params:         0       0       0       0       0
 17774 ;;      Locals:         1       0       0       0       0
 17775 ;;      Temps:          0       0       0       0       0
 17776 ;;      Totals:         1       0       0       0       0
 17777 ;;Total ram usage:        1 bytes
 17778 ;; Hardware stack levels used: 1
 17779 ;; Hardware stack levels required when called: 1
 17780 ;; This function calls:
 17781 ;;		_I2C1_SlaveSendTxData
 17782 ;; This function is called by:
 17783 ;;		_MasterR_SlaveW
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text76
 17788   001DD4                     __ptext76:
 17789                           	callstack 0
 17790   001DD4                     _I2C1_Write:
 17791                           	callstack 16
 17792                           
 17793                           ;incstack = 0
 17794                           ;I2C1_Write@data stored from wreg
 17795   001DD4  6E02               	movwf	I2C1_Write@data^0,c
 17796                           
 17797                           ;mcc_generated_files/i2c1_slave.c: 140: void I2C1_Write(uint8_t data);mcc_generated_file
      +                          s/i2c1_slave.c: 141: {;mcc_generated_files/i2c1_slave.c: 142:     I2C1_SlaveSendTxData(d
      +                          ata);
 17798   001DD6  5002               	movf	I2C1_Write@data^0,w,c
 17799   001DD8  EC01  F00F         	call	_I2C1_SlaveSendTxData
 17800   001DDC  0012               	return		;funcret
 17801   001DDE                     __end_of_I2C1_Write:
 17802                           	callstack 0
 17803                           
 17804 ;; *************** function _I2C1_SlaveSendTxData *****************
 17805 ;; Defined at:
 17806 ;;		line 391 in file "mcc_generated_files/i2c1_slave.c"
 17807 ;; Parameters:    Size  Location     Type
 17808 ;;  data            1    wreg     unsigned char 
 17809 ;; Auto vars:     Size  Location     Type
 17810 ;;  data            1    0[COMRAM] unsigned char 
 17811 ;; Return value:  Size  Location     Type
 17812 ;;                  1    wreg      void 
 17813 ;; Registers used:
 17814 ;;		wreg
 17815 ;; Tracked objects:
 17816 ;;		On entry : 0/0
 17817 ;;		On exit  : 0/0
 17818 ;;		Unchanged: 0/0
 17819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17820 ;;      Params:         0       0       0       0       0
 17821 ;;      Locals:         1       0       0       0       0
 17822 ;;      Temps:          0       0       0       0       0
 17823 ;;      Totals:         1       0       0       0       0
 17824 ;;Total ram usage:        1 bytes
 17825 ;; Hardware stack levels used: 1
 17826 ;; This function calls:
 17827 ;;		Nothing
 17828 ;; This function is called by:
 17829 ;;		_I2C1_Write
 17830 ;;		_I2C1_SlaveDefWrInterruptHandler
 17831 ;; This function uses a non-reentrant model
 17832 ;;
 17833                           
 17834                           	psect	text77
 17835   001E02                     __ptext77:
 17836                           	callstack 0
 17837   001E02                     _I2C1_SlaveSendTxData:
 17838                           	callstack 16
 17839                           
 17840                           ;incstack = 0
 17841                           ;I2C1_SlaveSendTxData@data stored from wreg
 17842   001E02  6E01               	movwf	I2C1_SlaveSendTxData@data^0,c
 17843                           
 17844                           ;mcc_generated_files/i2c1_slave.c: 391: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 392: {;mcc_generated_files/i2c1
      +                          _slave.c: 393:     SSP1BUF = data;
 17845   001E04  C001  FF91         	movff	I2C1_SlaveSendTxData@data,3985	;volatile
 17846   001E08  0012               	return		;funcret
 17847   001E0A                     __end_of_I2C1_SlaveSendTxData:
 17848                           	callstack 0
 17849                           
 17850 ;; *************** function _I2C1_SlaveReleaseClock *****************
 17851 ;; Defined at:
 17852 ;;		line 361 in file "mcc_generated_files/i2c1_slave.c"
 17853 ;; Parameters:    Size  Location     Type
 17854 ;;		None
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;		None
 17857 ;; Return value:  Size  Location     Type
 17858 ;;                  1    wreg      void 
 17859 ;; Registers used:
 17860 ;;		None
 17861 ;; Tracked objects:
 17862 ;;		On entry : 0/0
 17863 ;;		On exit  : 0/0
 17864 ;;		Unchanged: 0/0
 17865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17866 ;;      Params:         0       0       0       0       0
 17867 ;;      Locals:         0       0       0       0       0
 17868 ;;      Temps:          0       0       0       0       0
 17869 ;;      Totals:         0       0       0       0       0
 17870 ;;Total ram usage:        0 bytes
 17871 ;; Hardware stack levels used: 1
 17872 ;; This function calls:
 17873 ;;		Nothing
 17874 ;; This function is called by:
 17875 ;;		_I2C1_Isr
 17876 ;; This function uses a non-reentrant model
 17877 ;;
 17878                           
 17879                           	psect	text78
 17880   001E52                     __ptext78:
 17881                           	callstack 0
 17882   001E52                     _I2C1_SlaveReleaseClock:
 17883                           	callstack 19
 17884                           
 17885                           ;mcc_generated_files/i2c1_slave.c: 363:     SSP1CON1bits.CKP = 1;
 17886                           
 17887                           ;incstack = 0
 17888   001E52  8895               	bsf	149,4,c	;volatile
 17889   001E54  0012               	return		;funcret
 17890   001E56                     __end_of_I2C1_SlaveReleaseClock:
 17891                           	callstack 0
 17892                           
 17893 ;; *************** function _I2C1_SlaveRdCallBack *****************
 17894 ;; Defined at:
 17895 ;;		line 233 in file "mcc_generated_files/i2c1_slave.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      void 
 17902 ;; Registers used:
 17903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/0
 17906 ;;		On exit  : 0/0
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17909 ;;      Params:         0       0       0       0       0
 17910 ;;      Locals:         0       0       0       0       0
 17911 ;;      Temps:          0       0       0       0       0
 17912 ;;      Totals:         0       0       0       0       0
 17913 ;;Total ram usage:        0 bytes
 17914 ;; Hardware stack levels used: 1
 17915 ;; Hardware stack levels required when called: 12
 17916 ;; This function calls:
 17917 ;;		NULL
 17918 ;;		_I2C1_SlaveDefRdInterruptHandler
 17919 ;;		_MasterW_SlaveR
 17920 ;; This function is called by:
 17921 ;;		_I2C1_Isr
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925                           	psect	text79
 17926   001A80                     __ptext79:
 17927                           	callstack 0
 17928   001A80                     _I2C1_SlaveRdCallBack:
 17929                           	callstack 7
 17930                           
 17931                           ;mcc_generated_files/i2c1_slave.c: 235:     if (I2C1_SlaveRdInterruptHandler)
 17932                           
 17933                           ;incstack = 0
 17934   001A80  0100               	movlb	0	; () banked
 17935   001A82  51C9               	movf	_I2C1_SlaveRdInterruptHandler& (0+255),w,b
 17936   001A84  11CA               	iorwf	(_I2C1_SlaveRdInterruptHandler+1)& (0+255),w,b
 17937   001A86  B4D8               	btfsc	status,2,c
 17938   001A88  0012               	return	
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;mcc_generated_files/i2c1_slave.c: 236:     {;mcc_generated_files/i2c1_slave.c: 237:    
      +                               I2C1_SlaveRdInterruptHandler();
 17942   001A8A  D801               	call	i2u325_48
 17943   001A8C  0012               	return	
 17944   001A8E                     i2u325_48:
 17945   001A8E  0005               	push	
 17946   001A90  6EFA               	movwf	pclath,c
 17947   001A92  51C9               	movf	_I2C1_SlaveRdInterruptHandler& (0+255),w,b
 17948   001A94  6EFD               	movwf	tosl,c
 17949   001A96  51CA               	movf	(_I2C1_SlaveRdInterruptHandler+1)& (0+255),w,b
 17950   001A98  6EFE               	movwf	tosh,c
 17951   001A9A  50F8               	movf	tblptru,w,c
 17952   001A9C  6EFF               	movwf	tosu,c
 17953   001A9E  50FA               	movf	pclath,w,c
 17954   001AA0  0012               	return		;indir
 17955   001AA2                     __end_of_I2C1_SlaveRdCallBack:
 17956                           	callstack 0
 17957                           
 17958 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
 17959 ;; Defined at:
 17960 ;;		line 241 in file "mcc_generated_files/i2c1_slave.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;		None
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;		None
 17965 ;; Return value:  Size  Location     Type
 17966 ;;                  1    wreg      void 
 17967 ;; Registers used:
 17968 ;;		wreg, status,2, cstack
 17969 ;; Tracked objects:
 17970 ;;		On entry : 0/0
 17971 ;;		On exit  : 0/0
 17972 ;;		Unchanged: 0/0
 17973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17974 ;;      Params:         0       0       0       0       0
 17975 ;;      Locals:         0       0       0       0       0
 17976 ;;      Temps:          0       0       0       0       0
 17977 ;;      Totals:         0       0       0       0       0
 17978 ;;Total ram usage:        0 bytes
 17979 ;; Hardware stack levels used: 1
 17980 ;; Hardware stack levels required when called: 1
 17981 ;; This function calls:
 17982 ;;		_I2C1_SlaveGetRxData
 17983 ;; This function is called by:
 17984 ;;		_I2C1_Open
 17985 ;;		_I2C1_SlaveRdCallBack
 17986 ;; This function uses a non-reentrant model
 17987 ;;
 17988                           
 17989                           	psect	text80
 17990   001DDE                     __ptext80:
 17991                           	callstack 0
 17992   001DDE                     _I2C1_SlaveDefRdInterruptHandler:
 17993                           	callstack 17
 17994                           
 17995                           ;mcc_generated_files/i2c1_slave.c: 242:     i2c1RdData = I2C1_SlaveGetRxData();
 17996                           
 17997                           ;incstack = 0
 17998   001DDE  EC2B  F00F         	call	_I2C1_SlaveGetRxData	;wreg free
 17999   001DE2  0100               	movlb	0	; () banked
 18000   001DE4  6FCF               	movwf	_i2c1RdData& (0+255),b	;volatile
 18001                           
 18002                           ; BSR set to: 0
 18003   001DE6  0012               	return		;funcret
 18004   001DE8                     __end_of_I2C1_SlaveDefRdInterruptHandler:
 18005                           	callstack 0
 18006                           
 18007 ;; *************** function _MasterW_SlaveR *****************
 18008 ;; Defined at:
 18009 ;;		line 77 in file "i2c_slave.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;		None
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;  res             1   30[COMRAM] _Bool 
 18014 ;;  rb              1   31[COMRAM] unsigned char 
 18015 ;; Return value:  Size  Location     Type
 18016 ;;                  1    wreg      void 
 18017 ;; Registers used:
 18018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18019 ;; Tracked objects:
 18020 ;;		On entry : 0/0
 18021 ;;		On exit  : 0/0
 18022 ;;		Unchanged: 0/0
 18023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18024 ;;      Params:         0       0       0       0       0
 18025 ;;      Locals:         2       0       0       0       0
 18026 ;;      Temps:          0       0       0       0       0
 18027 ;;      Totals:         2       0       0       0       0
 18028 ;;Total ram usage:        2 bytes
 18029 ;; Hardware stack levels used: 1
 18030 ;; Hardware stack levels required when called: 11
 18031 ;; This function calls:
 18032 ;;		_I2C1_Read
 18033 ;;		_I2C1_SendNack
 18034 ;;		_TestForStopBit
 18035 ;;		_i2c_write_to_slave_cb
 18036 ;; This function is called by:
 18037 ;;		_i2c_slave_init
 18038 ;;		_I2C1_SlaveRdCallBack
 18039 ;; This function uses a non-reentrant model
 18040 ;;
 18041                           
 18042                           	psect	text81
 18043   001280                     __ptext81:
 18044                           	callstack 0
 18045   001280                     _MasterW_SlaveR:
 18046                           	callstack 7
 18047                           
 18048                           ;i2c_slave.c: 79:     if(i2c.state == eIdle)
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;incstack = 0
 18052   001280  0100               	movlb	0	; () banked
 18053   001282  51D4               	movf	(_i2c+3)& (0+255),w,b	;volatile
 18054   001284  B4D8               	btfsc	status,2,c
 18055   001286  0012               	return	
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;i2c_slave.c: 83:     if(TestForStopBit())
 18059   001288  EC55  F00E         	call	_TestForStopBit	;wreg free
 18060   00128C  0900               	iorlw	0
 18061   00128E  A4D8               	btfss	status,2,c
 18062   001290  0012               	return	
 18063                           
 18064                           ;i2c_slave.c: 87:     uint8_t rb = I2C1_Read();
 18065   001292  EC1B  F00F         	call	_I2C1_Read	;wreg free
 18066   001296  6E20               	movwf	MasterW_SlaveR@rb^0,c
 18067                           
 18068                           ;i2c_slave.c: 90:     if(i2c.state == eAddrH)
 18069   001298  0100               	movlb	0	; () banked
 18070   00129A  05D4               	decf	(_i2c+3)& (0+255),w,b	;volatile
 18071   00129C  A4D8               	btfss	status,2,c
 18072   00129E  D005               	goto	i2l4844
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;i2c_slave.c: 93:         i2c.EEPMemAddr = (uint16_t)rb<<8;
 18076   0012A0  5020               	movf	MasterW_SlaveR@rb^0,w,c
 18077   0012A2  6FD3               	movwf	(_i2c+2)& (0+255),b	;volatile
 18078   0012A4  6BD2               	clrf	(_i2c+1)& (0+255),b	;volatile
 18079   0012A6                     i2l4838:
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;i2c_slave.c: 94:         i2c.state++;
 18083   0012A6  2BD4               	incf	(_i2c+3)& (0+255),f,b	;volatile
 18084   0012A8  0012               	return	
 18085   0012AA                     i2l4844:
 18086                           
 18087                           ; BSR set to: 0
 18088   0012AA  0E02               	movlw	2
 18089   0012AC  19D4               	xorwf	(_i2c+3)& (0+255),w,b	;volatile
 18090   0012AE  A4D8               	btfss	status,2,c
 18091   0012B0  D003               	goto	i2l4854
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;i2c_slave.c: 100:         i2c.EEPMemAddr |= rb;
 18095   0012B2  5020               	movf	MasterW_SlaveR@rb^0,w,c
 18096   0012B4  13D2               	iorwf	(_i2c+1)& (0+255),f,b	;volatile
 18097   0012B6  D7F7               	goto	i2l4838
 18098   0012B8                     i2l4854:
 18099                           
 18100                           ; BSR set to: 0
 18101   0012B8  0E03               	movlw	3
 18102   0012BA  19D4               	xorwf	(_i2c+3)& (0+255),w,b	;volatile
 18103   0012BC  A4D8               	btfss	status,2,c
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;i2c_slave.c: 105:     {;i2c_slave.c: 106:         i2c.state = eIdle;
 18107   0012BE  6BD4               	clrf	(_i2c+3)& (0+255),b	;volatile
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;i2c_slave.c: 111:     if(i2c.to_slave_ptr != 0)
 18111   0012C0  51D5               	movf	(_i2c+4)& (0+255),w,b	;volatile
 18112   0012C2  11D6               	iorwf	(_i2c+5)& (0+255),w,b	;volatile
 18113   0012C4  B4D8               	btfsc	status,2,c
 18114   0012C6  0012               	return	
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;i2c_slave.c: 112:     {;i2c_slave.c: 113:         _Bool res = (i2c.to_slave_ptr)(&i2c.E
      +                          EPMemAddr, rb);
 18118   0012C8  0ED2               	movlw	low (_i2c+1)
 18119   0012CA  6E19               	movwf	i2c_write_to_slave_cb@addr^0,c
 18120   0012CC  C020  F01A         	movff	MasterW_SlaveR@rb,i2c_write_to_slave_cb@rb
 18121   0012D0  EE20  F0D5         	lfsr	2,_i2c+4	;volatile
 18122   0012D4  D801               	call	i2u311_48
 18123   0012D6  D00A               	goto	i2u311_49
 18124   0012D8                     i2u311_48:
 18125   0012D8  0005               	push	
 18126   0012DA  6EFA               	movwf	pclath,c
 18127   0012DC  50DE               	movf	postinc2,w,c
 18128   0012DE  6EFD               	movwf	tosl,c
 18129   0012E0  50DE               	movf	postinc2,w,c
 18130   0012E2  6EFE               	movwf	tosh,c
 18131   0012E4  50F8               	movf	tblptru,w,c
 18132   0012E6  6EFF               	movwf	tosu,c
 18133   0012E8  50FA               	movf	pclath,w,c
 18134   0012EA  0012               	return		;indir
 18135   0012EC                     i2u311_49:
 18136   0012EC  6E1F               	movwf	MasterW_SlaveR@res^0,c
 18137                           
 18138                           ;i2c_slave.c: 114:         i2c.byteNo++;
 18139   0012EE  0100               	movlb	0	; () banked
 18140   0012F0  2BD9               	incf	(_i2c+8)& (0+255),f,b	;volatile
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;i2c_slave.c: 115:         if(!res)
 18144   0012F2  501F               	movf	MasterW_SlaveR@res^0,w,c
 18145   0012F4  A4D8               	btfss	status,2,c
 18146   0012F6  0012               	return	
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;i2c_slave.c: 116:             I2C1_SendNack();
 18150   0012F8  EC12  F00F         	call	_I2C1_SendNack	;wreg free
 18151   0012FC  0012               	return		;funcret
 18152   0012FE                     __end_of_MasterW_SlaveR:
 18153                           	callstack 0
 18154                           
 18155 ;; *************** function _i2c_write_to_slave_cb *****************
 18156 ;; Defined at:
 18157 ;;		line 118 in file "main.c"
 18158 ;; Parameters:    Size  Location     Type
 18159 ;;  addr            1   24[COMRAM] PTR volatile unsigned sh
 18160 ;;		 -> i2c(9), 
 18161 ;;  rb              1   25[COMRAM] unsigned char 
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;  c               2   28[COMRAM] struct .
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      _Bool 
 18166 ;; Registers used:
 18167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18173 ;;      Params:         2       0       0       0       0
 18174 ;;      Locals:         2       0       0       0       0
 18175 ;;      Temps:          2       0       0       0       0
 18176 ;;      Totals:         6       0       0       0       0
 18177 ;;Total ram usage:        6 bytes
 18178 ;; Hardware stack levels used: 1
 18179 ;; Hardware stack levels required when called: 10
 18180 ;; This function calls:
 18181 ;;		_eeprom_read_buffer
 18182 ;;		_eeprom_write_buffer
 18183 ;;		_handle_write_cmd
 18184 ;; This function is called by:
 18185 ;;		_main
 18186 ;;		_MasterW_SlaveR
 18187 ;; This function uses a non-reentrant model
 18188 ;;
 18189                           
 18190                           	psect	text82
 18191   0010F4                     __ptext82:
 18192                           	callstack 0
 18193   0010F4                     _i2c_write_to_slave_cb:
 18194                           	callstack 7
 18195                           
 18196                           ;main.c: 122:     address_t c;;main.c: 123:     c.raw = *addr;
 18197                           
 18198                           ;incstack = 0
 18199                           ;main.c: 118: _Bool i2c_write_to_slave_cb(volatile uint16_t *addr, uint8_t rb);main.c: 1
      +                          19: {;main.c: 120:     do{}while(0);
 18200   0010F4  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18201   0010F6  6ED9               	movwf	fsr2l,c
 18202   0010F8  6ADA               	clrf	fsr2h,c
 18203   0010FA  CFDE F01D          	movff	postinc2,i2c_write_to_slave_cb@c
 18204   0010FE  CFDD F01E          	movff	postdec2,i2c_write_to_slave_cb@c+1
 18205                           
 18206                           ;main.c: 124:     if(c.isCMD)
 18207   001102  AE1E               	btfss	(i2c_write_to_slave_cb@c+1)^0,7,c
 18208   001104  D009               	goto	i2l4642
 18209                           
 18210                           ;main.c: 125:     {;main.c: 127:         return handle_write_cmd(c, rb);
 18211   001106  C01D  F014         	movff	i2c_write_to_slave_cb@c,handle_write_cmd@c
 18212   00110A  C01E  F015         	movff	i2c_write_to_slave_cb@c+1,handle_write_cmd@c+1
 18213   00110E  C01A  F016         	movff	i2c_write_to_slave_cb@rb,handle_write_cmd@rb
 18214   001112  ECBE  F008         	call	_handle_write_cmd	;wreg free
 18215   001116  0012               	return	
 18216   001118                     i2l4642:
 18217   001118  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18218   00111A  6ED9               	movwf	fsr2l,c
 18219   00111C  6ADA               	clrf	fsr2h,c
 18220   00111E  0E00               	movlw	0
 18221   001120  5CDE               	subwf	postinc2,w,c
 18222   001122  0E01               	movlw	1
 18223   001124  58DE               	subwfb	postinc2,w,c
 18224   001126  B0D8               	btfsc	status,0,c
 18225   001128  D027               	goto	i2l4658
 18226                           
 18227                           ;main.c: 130:     {;main.c: 132:         if(eeprom_read_buffer((eeAddr_t)*addr) != rb)
 18228   00112A  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18229   00112C  6ED9               	movwf	fsr2l,c
 18230   00112E  6ADA               	clrf	fsr2h,c
 18231   001130  50DF               	movf	indf2,w,c
 18232   001132  EC34  F00E         	call	_eeprom_read_buffer
 18233   001136  181A               	xorwf	i2c_write_to_slave_cb@rb^0,w,c
 18234   001138  B4D8               	btfsc	status,2,c
 18235   00113A  D008               	goto	i2l4648
 18236                           
 18237                           ;main.c: 133:             eeprom_write_buffer((eeAddr_t)*addr, rb);
 18238   00113C  C01A  F001         	movff	i2c_write_to_slave_cb@rb,eeprom_write_buffer@data
 18239   001140  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18240   001142  6ED9               	movwf	fsr2l,c
 18241   001144  6ADA               	clrf	fsr2h,c
 18242   001146  50DF               	movf	indf2,w,c
 18243   001148  EC63  F00B         	call	_eeprom_write_buffer
 18244   00114C                     i2l4648:
 18245                           
 18246                           ;main.c: 136:         *addr += 1;
 18247   00114C  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18248   00114E  6ED9               	movwf	fsr2l,c
 18249   001150  6ADA               	clrf	fsr2h,c
 18250   001152  2ADE               	incf	postinc2,f,c
 18251   001154  0E00               	movlw	0
 18252   001156  22DD               	addwfc	postdec2,f,c
 18253                           
 18254                           ;main.c: 139:         if(*addr >= 256)
 18255   001158  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18256   00115A  6ED9               	movwf	fsr2l,c
 18257   00115C  6ADA               	clrf	fsr2h,c
 18258   00115E  0E00               	movlw	0
 18259   001160  5CDE               	subwf	postinc2,w,c
 18260   001162  0E01               	movlw	1
 18261   001164  58DE               	subwfb	postinc2,w,c
 18262   001166  A0D8               	btfss	status,0,c
 18263   001168  D005               	goto	i2l4654
 18264                           
 18265                           ;main.c: 140:             *addr = 0;
 18266   00116A  5019               	movf	i2c_write_to_slave_cb@addr^0,w,c
 18267   00116C  6ED9               	movwf	fsr2l,c
 18268   00116E  6ADA               	clrf	fsr2h,c
 18269   001170  6ADE               	clrf	postinc2,c
 18270   001172  6ADD               	clrf	postdec2,c
 18271   001174                     i2l4654:
 18272                           
 18273                           ;main.c: 142:         return 1;
 18274   001174  0E01               	movlw	1
 18275   001176  0012               	return	
 18276   001178                     i2l4658:
 18277                           
 18278                           ;main.c: 145:     return 0;
 18279   001178  0E00               	movlw	0
 18280   00117A  0012               	return		;funcret
 18281   00117C                     __end_of_i2c_write_to_slave_cb:
 18282                           	callstack 0
 18283                           
 18284 ;; *************** function _handle_write_cmd *****************
 18285 ;; Defined at:
 18286 ;;		line 42 in file "main.c"
 18287 ;; Parameters:    Size  Location     Type
 18288 ;;  c               2   19[COMRAM] struct .
 18289 ;;  rb              1   21[COMRAM] unsigned char 
 18290 ;; Auto vars:     Size  Location     Type
 18291 ;;		None
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  1    wreg      _Bool 
 18294 ;; Registers used:
 18295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18296 ;; Tracked objects:
 18297 ;;		On entry : 0/0
 18298 ;;		On exit  : 0/0
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18301 ;;      Params:         3       0       0       0       0
 18302 ;;      Locals:         0       0       0       0       0
 18303 ;;      Temps:          2       0       0       0       0
 18304 ;;      Totals:         5       0       0       0       0
 18305 ;;Total ram usage:        5 bytes
 18306 ;; Hardware stack levels used: 1
 18307 ;; Hardware stack levels required when called: 9
 18308 ;; This function calls:
 18309 ;;		_DAC1_SetOutput
 18310 ;;		_WriteReg
 18311 ;;		_pwm_configure_pin
 18312 ;;		_pwm_set_duty_cycle
 18313 ;; This function is called by:
 18314 ;;		_i2c_write_to_slave_cb
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text83
 18319   00117C                     __ptext83:
 18320                           	callstack 0
 18321   00117C                     _handle_write_cmd:
 18322                           	callstack 7
 18323                           
 18324                           ;main.c: 42: _Bool handle_write_cmd(address_t c, uint8_t rb);main.c: 43: {;main.c: 45:  
      +                             if(c.cmd < 32)
 18325                           
 18326                           ;incstack = 0
 18327   00117C  0E20               	movlw	32
 18328   00117E  6014               	cpfslt	handle_write_cmd@c^0,c
 18329   001180  D02C               	goto	i2l4564
 18330                           
 18331                           ;main.c: 46:         return WriteReg(c.cmd, c.portNo, rb);
 18332   001182  3815               	swapf	(handle_write_cmd@c+1)^0,w,c
 18333   001184  0B07               	andlw	7
 18334   001186  6E0F               	movwf	WriteReg@portNo^0,c
 18335   001188  C016  F010         	movff	handle_write_cmd@rb,WriteReg@value
 18336   00118C  5014               	movf	handle_write_cmd@c^0,w,c
 18337   00118E  EC30  F008         	call	_WriteReg
 18338   001192  0012               	return	
 18339   001194                     i2l4544:
 18340                           
 18341                           ;main.c: 53:                 DAC1_SetOutput(rb & 31);
 18342   001194  5016               	movf	handle_write_cmd@rb^0,w,c
 18343   001196  0B1F               	andlw	31
 18344   001198  EC05  F00F         	call	_DAC1_SetOutput
 18345                           
 18346                           ;main.c: 54:                 break;
 18347   00119C  D030               	goto	i2l4566
 18348   00119E                     i2l4546:
 18349                           
 18350                           ;main.c: 57:                 return pwm_configure_pin(c.portNo, c.extra, rb);
 18351   00119E  5015               	movf	(handle_write_cmd@c+1)^0,w,c
 18352   0011A0  0B0F               	andlw	15
 18353   0011A2  6E01               	movwf	pwm_configure_pin@pin^0,c
 18354   0011A4  C016  F002         	movff	handle_write_cmd@rb,pwm_configure_pin@module
 18355   0011A8  3815               	swapf	(handle_write_cmd@c+1)^0,w,c
 18356   0011AA  0B07               	andlw	7
 18357   0011AC  EC77  F002         	call	_pwm_configure_pin
 18358   0011B0  0012               	return	
 18359   0011B2                     i2l4552:
 18360                           
 18361                           ;main.c: 61:                 return pwm_set_duty_cycle(c.extra, (uint16_t)rb << 2);
 18362   0011B2  5016               	movf	handle_write_cmd@rb^0,w,c
 18363   0011B4  6E17               	movwf	??_handle_write_cmd^0,c
 18364   0011B6  6A18               	clrf	(??_handle_write_cmd+1)^0,c
 18365   0011B8  90D8               	bcf	status,0,c
 18366   0011BA  3617               	rlcf	??_handle_write_cmd^0,f,c
 18367   0011BC  3618               	rlcf	(??_handle_write_cmd+1)^0,f,c
 18368   0011BE  90D8               	bcf	status,0,c
 18369   0011C0  3617               	rlcf	??_handle_write_cmd^0,f,c
 18370   0011C2  3618               	rlcf	(??_handle_write_cmd+1)^0,f,c
 18371   0011C4  C017  F005         	movff	??_handle_write_cmd,pwm_set_duty_cycle@duty_cycle
 18372   0011C8  C018  F006         	movff	??_handle_write_cmd+1,pwm_set_duty_cycle@duty_cycle+1
 18373   0011CC  5015               	movf	(handle_write_cmd@c+1)^0,w,c
 18374   0011CE  0B0F               	andlw	15
 18375   0011D0  EC62  F00A         	call	_pwm_set_duty_cycle
 18376   0011D4  0012               	return	
 18377   0011D6                     i2l4558:
 18378                           
 18379                           ;main.c: 65:                 return 0;
 18380   0011D6  0E00               	movlw	0
 18381   0011D8  0012               	return	
 18382   0011DA                     i2l4564:
 18383   0011DA  5014               	movf	handle_write_cmd@c^0,w,c
 18384   0011DC  6E17               	movwf	??_handle_write_cmd^0,c
 18385   0011DE  6A18               	clrf	(??_handle_write_cmd+1)^0,c
 18386                           
 18387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18388                           ; Switch size 1, requested type "simple"
 18389                           ; Number of cases is 1, Range of values is 0 to 0
 18390                           ; switch strategies available:
 18391                           ; Name         Instructions Cycles
 18392                           ; simple_byte            4     3 (average)
 18393                           ;	Chosen strategy is simple_byte
 18394   0011E0  5018               	movf	(??_handle_write_cmd+1)^0,w,c
 18395   0011E2  0A00               	xorlw	0	; case 0
 18396   0011E4  A4D8               	btfss	status,2,c
 18397   0011E6  D7F7               	goto	i2l4558
 18398                           
 18399                           ; Switch size 1, requested type "simple"
 18400                           ; Number of cases is 3, Range of values is 32 to 34
 18401                           ; switch strategies available:
 18402                           ; Name         Instructions Cycles
 18403                           ; simple_byte           10     6 (average)
 18404                           ;	Chosen strategy is simple_byte
 18405   0011E8  5017               	movf	??_handle_write_cmd^0,w,c
 18406   0011EA  0A20               	xorlw	32	; case 32
 18407   0011EC  B4D8               	btfsc	status,2,c
 18408   0011EE  D7D2               	goto	i2l4544
 18409   0011F0  0A01               	xorlw	1	; case 33
 18410   0011F2  B4D8               	btfsc	status,2,c
 18411   0011F4  D7D4               	goto	i2l4546
 18412   0011F6  0A03               	xorlw	3	; case 34
 18413   0011F8  B4D8               	btfsc	status,2,c
 18414   0011FA  D7DB               	goto	i2l4552
 18415   0011FC  D7EC               	goto	i2l4558
 18416   0011FE                     i2l4566:
 18417                           
 18418                           ;main.c: 68:     return 1;
 18419   0011FE  0E01               	movlw	1
 18420   001200  0012               	return		;funcret
 18421   001202                     __end_of_handle_write_cmd:
 18422                           	callstack 0
 18423                           
 18424 ;; *************** function _pwm_set_duty_cycle *****************
 18425 ;; Defined at:
 18426 ;;		line 67 in file "pwm.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  module          1    wreg     unsigned char 
 18429 ;;  duty_cycle      2    4[COMRAM] unsigned short 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  module          1    6[COMRAM] unsigned char 
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      _Bool 
 18434 ;; Registers used:
 18435 ;;		wreg, status,2, status,0, cstack
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18441 ;;      Params:         2       0       0       0       0
 18442 ;;      Locals:         1       0       0       0       0
 18443 ;;      Temps:          0       0       0       0       0
 18444 ;;      Totals:         3       0       0       0       0
 18445 ;;Total ram usage:        3 bytes
 18446 ;; Hardware stack levels used: 1
 18447 ;; Hardware stack levels required when called: 1
 18448 ;; This function calls:
 18449 ;;		_PWM1_LoadDutyValue
 18450 ;;		_PWM2_LoadDutyValue
 18451 ;;		_PWM3_LoadDutyValue
 18452 ;;		_PWM4_LoadDutyValue
 18453 ;; This function is called by:
 18454 ;;		_handle_write_cmd
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458                           	psect	text84
 18459   0014C4                     __ptext84:
 18460                           	callstack 0
 18461   0014C4                     _pwm_set_duty_cycle:
 18462                           	callstack 14
 18463                           
 18464                           ;incstack = 0
 18465                           ;pwm_set_duty_cycle@module stored from wreg
 18466   0014C4  6E07               	movwf	pwm_set_duty_cycle@module^0,c
 18467   0014C6  D01E               	goto	i2l4472
 18468   0014C8                     i2l4456:
 18469                           
 18470                           ;pwm.c: 76:             PWM1_LoadDutyValue(duty_cycle);
 18471   0014C8  C005  F001         	movff	pwm_set_duty_cycle@duty_cycle,PWM1_LoadDutyValue@dutyValue
 18472   0014CC  C006  F002         	movff	pwm_set_duty_cycle@duty_cycle+1,PWM1_LoadDutyValue@dutyValue+1
 18473   0014D0  EC62  F00D         	call	_PWM1_LoadDutyValue	;wreg free
 18474                           
 18475                           ;pwm.c: 77:             break;
 18476   0014D4  D025               	goto	i2l4474
 18477   0014D6                     i2l4458:
 18478                           
 18479                           ;pwm.c: 80:             PWM2_LoadDutyValue(duty_cycle);
 18480   0014D6  C005  F001         	movff	pwm_set_duty_cycle@duty_cycle,PWM2_LoadDutyValue@dutyValue
 18481   0014DA  C006  F002         	movff	pwm_set_duty_cycle@duty_cycle+1,PWM2_LoadDutyValue@dutyValue+1
 18482   0014DE  EC51  F00D         	call	_PWM2_LoadDutyValue	;wreg free
 18483                           
 18484                           ;pwm.c: 81:             break;
 18485   0014E2  D01E               	goto	i2l4474
 18486   0014E4                     i2l4460:
 18487                           
 18488                           ;pwm.c: 84:             PWM3_LoadDutyValue(duty_cycle);
 18489   0014E4  C005  F001         	movff	pwm_set_duty_cycle@duty_cycle,PWM3_LoadDutyValue@dutyValue
 18490   0014E8  C006  F002         	movff	pwm_set_duty_cycle@duty_cycle+1,PWM3_LoadDutyValue@dutyValue+1
 18491   0014EC  ECBF  F00C         	call	_PWM3_LoadDutyValue	;wreg free
 18492                           
 18493                           ;pwm.c: 85:             break;
 18494   0014F0  D017               	goto	i2l4474
 18495   0014F2                     i2l4462:
 18496                           
 18497                           ;pwm.c: 88:             PWM4_LoadDutyValue(duty_cycle);
 18498   0014F2  C005  F001         	movff	pwm_set_duty_cycle@duty_cycle,PWM4_LoadDutyValue@dutyValue
 18499   0014F6  C006  F002         	movff	pwm_set_duty_cycle@duty_cycle+1,PWM4_LoadDutyValue@dutyValue+1
 18500   0014FA  ECA6  F00C         	call	_PWM4_LoadDutyValue	;wreg free
 18501                           
 18502                           ;pwm.c: 89:             break;
 18503   0014FE  D010               	goto	i2l4474
 18504   001500                     i2l4464:
 18505                           
 18506                           ;pwm.c: 92:             return 0;
 18507   001500  0E00               	movlw	0
 18508   001502  0012               	return	
 18509   001504                     i2l4472:
 18510   001504  5007               	movf	pwm_set_duty_cycle@module^0,w,c
 18511                           
 18512                           ; Switch size 1, requested type "simple"
 18513                           ; Number of cases is 4, Range of values is 1 to 4
 18514                           ; switch strategies available:
 18515                           ; Name         Instructions Cycles
 18516                           ; simple_byte           13     7 (average)
 18517                           ;	Chosen strategy is simple_byte
 18518   001506  0A01               	xorlw	1	; case 1
 18519   001508  B4D8               	btfsc	status,2,c
 18520   00150A  D7DE               	goto	i2l4456
 18521   00150C  0A03               	xorlw	3	; case 2
 18522   00150E  B4D8               	btfsc	status,2,c
 18523   001510  D7E2               	goto	i2l4458
 18524   001512  0A01               	xorlw	1	; case 3
 18525   001514  B4D8               	btfsc	status,2,c
 18526   001516  D7E6               	goto	i2l4460
 18527   001518  0A07               	xorlw	7	; case 4
 18528   00151A  B4D8               	btfsc	status,2,c
 18529   00151C  D7EA               	goto	i2l4462
 18530   00151E  D7F0               	goto	i2l4464
 18531   001520                     i2l4474:
 18532                           
 18533                           ;pwm.c: 95:     return 1;
 18534   001520  0E01               	movlw	1
 18535   001522  0012               	return		;funcret
 18536   001524                     __end_of_pwm_set_duty_cycle:
 18537                           	callstack 0
 18538                           
 18539 ;; *************** function _PWM4_LoadDutyValue *****************
 18540 ;; Defined at:
 18541 ;;		line 74 in file "mcc_generated_files/pwm4.c"
 18542 ;; Parameters:    Size  Location     Type
 18543 ;;  dutyValue       2    0[COMRAM] unsigned short 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;		None
 18546 ;; Return value:  Size  Location     Type
 18547 ;;                  1    wreg      void 
 18548 ;; Registers used:
 18549 ;;		wreg, status,2, status,0
 18550 ;; Tracked objects:
 18551 ;;		On entry : 0/0
 18552 ;;		On exit  : 0/0
 18553 ;;		Unchanged: 0/0
 18554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18555 ;;      Params:         2       0       0       0       0
 18556 ;;      Locals:         0       0       0       0       0
 18557 ;;      Temps:          2       0       0       0       0
 18558 ;;      Totals:         4       0       0       0       0
 18559 ;;Total ram usage:        4 bytes
 18560 ;; Hardware stack levels used: 1
 18561 ;; This function calls:
 18562 ;;		Nothing
 18563 ;; This function is called by:
 18564 ;;		_pwm_set_duty_cycle
 18565 ;; This function uses a non-reentrant model
 18566 ;;
 18567                           
 18568                           	psect	text85
 18569   00194C                     __ptext85:
 18570                           	callstack 0
 18571   00194C                     _PWM4_LoadDutyValue:
 18572                           	callstack 14
 18573                           
 18574                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18575                           
 18576                           ;incstack = 0
 18577   00194C  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 18578   001950  C002  F004         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
 18579   001954  90D8               	bcf	status,0,c
 18580   001956  3204               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 18581   001958  3203               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 18582   00195A  90D8               	bcf	status,0,c
 18583   00195C  3204               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
 18584   00195E  3203               	rrcf	??_PWM4_LoadDutyValue^0,f,c
 18585   001960  5003               	movf	??_PWM4_LoadDutyValue^0,w,c
 18586   001962  6EA0               	movwf	160,c	;volatile
 18587                           
 18588                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (uint8_t)((dutyValue & 0x0003)<<6);
 18589   001964  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
 18590   001968  0E03               	movlw	3
 18591   00196A  1603               	andwf	??_PWM4_LoadDutyValue^0,f,c
 18592   00196C  0E06               	movlw	6
 18593   00196E  6E04               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
 18594   001970                     i2u239_45:
 18595   001970  90D8               	bcf	status,0,c
 18596   001972  3603               	rlcf	??_PWM4_LoadDutyValue^0,f,c
 18597   001974  2E04               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
 18598   001976  D7FC               	goto	i2u239_45
 18599   001978  5003               	movf	??_PWM4_LoadDutyValue^0,w,c
 18600   00197A  6E9F               	movwf	159,c	;volatile
 18601   00197C  0012               	return		;funcret
 18602   00197E                     __end_of_PWM4_LoadDutyValue:
 18603                           	callstack 0
 18604                           
 18605 ;; *************** function _PWM3_LoadDutyValue *****************
 18606 ;; Defined at:
 18607 ;;		line 74 in file "mcc_generated_files/pwm3.c"
 18608 ;; Parameters:    Size  Location     Type
 18609 ;;  dutyValue       2    0[COMRAM] unsigned short 
 18610 ;; Auto vars:     Size  Location     Type
 18611 ;;		None
 18612 ;; Return value:  Size  Location     Type
 18613 ;;                  1    wreg      void 
 18614 ;; Registers used:
 18615 ;;		wreg, status,2, status,0
 18616 ;; Tracked objects:
 18617 ;;		On entry : 0/0
 18618 ;;		On exit  : 0/0
 18619 ;;		Unchanged: 0/0
 18620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18621 ;;      Params:         2       0       0       0       0
 18622 ;;      Locals:         0       0       0       0       0
 18623 ;;      Temps:          2       0       0       0       0
 18624 ;;      Totals:         4       0       0       0       0
 18625 ;;Total ram usage:        4 bytes
 18626 ;; Hardware stack levels used: 1
 18627 ;; This function calls:
 18628 ;;		Nothing
 18629 ;; This function is called by:
 18630 ;;		_pwm_set_duty_cycle
 18631 ;; This function uses a non-reentrant model
 18632 ;;
 18633                           
 18634                           	psect	text86
 18635   00197E                     __ptext86:
 18636                           	callstack 0
 18637   00197E                     _PWM3_LoadDutyValue:
 18638                           	callstack 14
 18639                           
 18640                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18641                           
 18642                           ;incstack = 0
 18643   00197E  C001  F003         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
 18644   001982  C002  F004         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
 18645   001986  90D8               	bcf	status,0,c
 18646   001988  3204               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
 18647   00198A  3203               	rrcf	??_PWM3_LoadDutyValue^0,f,c
 18648   00198C  90D8               	bcf	status,0,c
 18649   00198E  3204               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
 18650   001990  3203               	rrcf	??_PWM3_LoadDutyValue^0,f,c
 18651   001992  5003               	movf	??_PWM3_LoadDutyValue^0,w,c
 18652   001994  6EA3               	movwf	163,c	;volatile
 18653                           
 18654                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (uint8_t)((dutyValue & 0x0003)<<6);
 18655   001996  C001  F003         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
 18656   00199A  0E03               	movlw	3
 18657   00199C  1603               	andwf	??_PWM3_LoadDutyValue^0,f,c
 18658   00199E  0E06               	movlw	6
 18659   0019A0  6E04               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
 18660   0019A2                     i2u240_45:
 18661   0019A2  90D8               	bcf	status,0,c
 18662   0019A4  3603               	rlcf	??_PWM3_LoadDutyValue^0,f,c
 18663   0019A6  2E04               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
 18664   0019A8  D7FC               	goto	i2u240_45
 18665   0019AA  5003               	movf	??_PWM3_LoadDutyValue^0,w,c
 18666   0019AC  6EA2               	movwf	162,c	;volatile
 18667   0019AE  0012               	return		;funcret
 18668   0019B0                     __end_of_PWM3_LoadDutyValue:
 18669                           	callstack 0
 18670                           
 18671 ;; *************** function _PWM2_LoadDutyValue *****************
 18672 ;; Defined at:
 18673 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 18674 ;; Parameters:    Size  Location     Type
 18675 ;;  dutyValue       2    0[COMRAM] unsigned short 
 18676 ;; Auto vars:     Size  Location     Type
 18677 ;;		None
 18678 ;; Return value:  Size  Location     Type
 18679 ;;                  1    wreg      void 
 18680 ;; Registers used:
 18681 ;;		wreg, status,2, status,0
 18682 ;; Tracked objects:
 18683 ;;		On entry : 0/0
 18684 ;;		On exit  : 0/0
 18685 ;;		Unchanged: 0/0
 18686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18687 ;;      Params:         2       0       0       0       0
 18688 ;;      Locals:         0       0       0       0       0
 18689 ;;      Temps:          0       0       0       0       0
 18690 ;;      Totals:         2       0       0       0       0
 18691 ;;Total ram usage:        2 bytes
 18692 ;; Hardware stack levels used: 1
 18693 ;; This function calls:
 18694 ;;		Nothing
 18695 ;; This function is called by:
 18696 ;;		_pwm_set_duty_cycle
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           	psect	text87
 18701   001AA2                     __ptext87:
 18702                           	callstack 0
 18703   001AA2                     _PWM2_LoadDutyValue:
 18704                           	callstack 14
 18705                           
 18706                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     dutyValue &= 0x03FF;
 18707                           
 18708                           ;incstack = 0
 18709   001AA2  0EFF               	movlw	255
 18710   001AA4  1601               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
 18711   001AA6  0E03               	movlw	3
 18712   001AA8  1602               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
 18713                           
 18714                           ;mcc_generated_files/pwm2.c: 87:     if(CCP2CONbits.FMT)
 18715   001AAA  A8A7               	btfss	167,4,c	;volatile
 18716   001AAC  D006               	goto	i2l4354
 18717                           
 18718                           ;mcc_generated_files/pwm2.c: 88:     {;mcc_generated_files/pwm2.c: 89:         dutyValue
      +                           <<= 6;
 18719   001AAE  0E06               	movlw	6
 18720   001AB0                     i2u256_45:
 18721   001AB0  90D8               	bcf	status,0,c
 18722   001AB2  3601               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
 18723   001AB4  3602               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
 18724   001AB6  2EE8               	decfsz	wreg,f,c
 18725   001AB8  D7FB               	goto	i2u256_45
 18726   001ABA                     i2l4354:
 18727                           
 18728                           ;mcc_generated_files/pwm2.c: 90:         CCPR2H = dutyValue >> 8;
 18729   001ABA  5002               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
 18730   001ABC  6EA6               	movwf	166,c	;volatile
 18731                           
 18732                           ;mcc_generated_files/pwm2.c: 91:         CCPR2L = dutyValue;
 18733   001ABE  C001  FFA5         	movff	PWM2_LoadDutyValue@dutyValue,4005	;volatile
 18734                           
 18735                           ;mcc_generated_files/pwm2.c: 92:     }
 18736   001AC2  0012               	return		;funcret
 18737   001AC4                     __end_of_PWM2_LoadDutyValue:
 18738                           	callstack 0
 18739                           
 18740 ;; *************** function _PWM1_LoadDutyValue *****************
 18741 ;; Defined at:
 18742 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 18743 ;; Parameters:    Size  Location     Type
 18744 ;;  dutyValue       2    0[COMRAM] unsigned short 
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;		None
 18747 ;; Return value:  Size  Location     Type
 18748 ;;                  1    wreg      void 
 18749 ;; Registers used:
 18750 ;;		wreg, status,2, status,0
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/0
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18756 ;;      Params:         2       0       0       0       0
 18757 ;;      Locals:         0       0       0       0       0
 18758 ;;      Temps:          0       0       0       0       0
 18759 ;;      Totals:         2       0       0       0       0
 18760 ;;Total ram usage:        2 bytes
 18761 ;; Hardware stack levels used: 1
 18762 ;; This function calls:
 18763 ;;		Nothing
 18764 ;; This function is called by:
 18765 ;;		_pwm_set_duty_cycle
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text88
 18770   001AC4                     __ptext88:
 18771                           	callstack 0
 18772   001AC4                     _PWM1_LoadDutyValue:
 18773                           	callstack 14
 18774                           
 18775                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
 18776                           
 18777                           ;incstack = 0
 18778   001AC4  0EFF               	movlw	255
 18779   001AC6  1601               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
 18780   001AC8  0E03               	movlw	3
 18781   001ACA  1602               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
 18782                           
 18783                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.FMT)
 18784   001ACC  A8AB               	btfss	171,4,c	;volatile
 18785   001ACE  D006               	goto	i2l4340
 18786                           
 18787                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
 18788   001AD0  0E06               	movlw	6
 18789   001AD2                     i2u254_45:
 18790   001AD2  90D8               	bcf	status,0,c
 18791   001AD4  3601               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
 18792   001AD6  3602               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
 18793   001AD8  2EE8               	decfsz	wreg,f,c
 18794   001ADA  D7FB               	goto	i2u254_45
 18795   001ADC                     i2l4340:
 18796                           
 18797                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
 18798   001ADC  5002               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
 18799   001ADE  6EAA               	movwf	170,c	;volatile
 18800                           
 18801                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = (unsigned char)dutyValue;
 18802   001AE0  C001  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
 18803                           
 18804                           ;mcc_generated_files/pwm1.c: 92:     }
 18805   001AE4  0012               	return		;funcret
 18806   001AE6                     __end_of_PWM1_LoadDutyValue:
 18807                           	callstack 0
 18808                           
 18809 ;; *************** function _pwm_configure_pin *****************
 18810 ;; Defined at:
 18811 ;;		line 12 in file "pwm.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;  port            1    wreg     unsigned char 
 18814 ;;  pin             1    0[COMRAM] unsigned char 
 18815 ;;  module          1    1[COMRAM] unsigned char 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;  port            1   14[COMRAM] unsigned char 
 18818 ;;  pwm_con         2   12[COMRAM] PTR volatile unsigned ch
 18819 ;;		 -> PWM3CON(1), 
 18820 ;;  ccp_con         2   10[COMRAM] PTR volatile unsigned ch
 18821 ;;		 -> CCP1CON(1), 
 18822 ;;  phyPin          2   17[COMRAM] PTR const struct .
 18823 ;;		 -> PINS(32), 
 18824 ;;  pps_reg         2   15[COMRAM] PTR volatile unsigned ch
 18825 ;;		 -> RA0PPS(1), 
 18826 ;;  tris_reg        2    8[COMRAM] PTR volatile unsigned ch
 18827 ;;		 -> TRISA(1), 
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  1    wreg      _Bool 
 18830 ;; Registers used:
 18831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 18837 ;;      Params:         2       0       0       0       0
 18838 ;;      Locals:        11       0       0       0       0
 18839 ;;      Temps:          6       0       0       0       0
 18840 ;;      Totals:        19       0       0       0       0
 18841 ;;Total ram usage:       19 bytes
 18842 ;; Hardware stack levels used: 1
 18843 ;; This function calls:
 18844 ;;		Nothing
 18845 ;; This function is called by:
 18846 ;;		_handle_write_cmd
 18847 ;; This function uses a non-reentrant model
 18848 ;;
 18849                           
 18850                           	psect	text89
 18851   0004EE                     __ptext89:
 18852                           	callstack 0
 18853   0004EE                     _pwm_configure_pin:
 18854                           	callstack 15
 18855                           
 18856                           ;incstack = 0
 18857                           ;pwm_configure_pin@port stored from wreg
 18858   0004EE  6E0F               	movwf	pwm_configure_pin@port^0,c
 18859                           
 18860                           ;pwm.c: 14:     if (pin > 7 || port > 2 || module > 4) {
 18861   0004F0  0E08               	movlw	8
 18862   0004F2  6001               	cpfslt	pwm_configure_pin@pin^0,c
 18863   0004F4  D006               	goto	i2u266_40
 18864   0004F6  0E03               	movlw	3
 18865   0004F8  600F               	cpfslt	pwm_configure_pin@port^0,c
 18866   0004FA  D003               	goto	i2u266_40
 18867   0004FC  0E04               	movlw	4
 18868   0004FE  6402               	cpfsgt	pwm_configure_pin@module^0,c
 18869   000500  D002               	goto	i2l4410
 18870   000502                     i2u266_40:
 18871                           
 18872                           ;pwm.c: 15:         return 0;
 18873   000502  0E00               	movlw	0
 18874   000504  0012               	return	
 18875   000506                     i2l4410:
 18876                           
 18877                           ;pwm.c: 18:     const Pin_t *phyPin = &PINS[port][pin];
 18878   000506  5001               	movf	pwm_configure_pin@pin^0,w,c
 18879   000508  0D02               	mullw	2
 18880   00050A  CFF3 F003          	movff	prodl,??_pwm_configure_pin
 18881   00050E  CFF4 F004          	movff	prodh,??_pwm_configure_pin+1
 18882   000512  500F               	movf	pwm_configure_pin@port^0,w,c
 18883   000514  0D10               	mullw	16
 18884   000516  0ED0               	movlw	low _PINS
 18885   000518  24F3               	addwf	243,w,c
 18886   00051A  6E05               	movwf	(??_pwm_configure_pin+2)^0,c
 18887   00051C  0E3E               	movlw	high _PINS
 18888   00051E  20F4               	addwfc	prodh,w,c
 18889   000520  6E06               	movwf	(??_pwm_configure_pin+3)^0,c
 18890   000522  5003               	movf	??_pwm_configure_pin^0,w,c
 18891   000524  2405               	addwf	(??_pwm_configure_pin+2)^0,w,c
 18892   000526  6E12               	movwf	pwm_configure_pin@phyPin^0,c
 18893   000528  5004               	movf	(??_pwm_configure_pin+1)^0,w,c
 18894   00052A  2006               	addwfc	(??_pwm_configure_pin+3)^0,w,c
 18895   00052C  6E13               	movwf	(pwm_configure_pin@phyPin+1)^0,c
 18896                           
 18897                           ;pwm.c: 21:     volatile uint8_t* pps_reg = (volatile uint8_t*)&RA0PPS;
 18898   00052E  0EE2               	movlw	226
 18899   000530  6E10               	movwf	pwm_configure_pin@pps_reg^0,c
 18900   000532  0E0E               	movlw	14
 18901   000534  6E11               	movwf	(pwm_configure_pin@pps_reg+1)^0,c
 18902                           
 18903                           ;pwm.c: 24:     pps_reg += (phyPin->Port * 8) + phyPin->Pin;
 18904   000536  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 18905   00053A  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 18906   00053E                     	if	0	;tblptru may be non-zero
 18907   00053E                     	endif
 18908   00053E                     	if	0	;tblptru may be non-zero
 18909   00053E                     	endif
 18910   00053E  0008               	tblrd		*
 18911   000540  CFF5 F003          	movff	tablat,??_pwm_configure_pin
 18912   000544  5003               	movf	??_pwm_configure_pin^0,w,c
 18913   000546  0B0F               	andlw	15
 18914   000548  6E04               	movwf	(??_pwm_configure_pin+1)^0,c
 18915   00054A  5004               	movf	(??_pwm_configure_pin+1)^0,w,c
 18916   00054C  0D08               	mullw	8
 18917   00054E  CFF3 F005          	movff	prodl,??_pwm_configure_pin+2
 18918   000552  CFF4 F006          	movff	prodh,??_pwm_configure_pin+3
 18919   000556  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 18920   00055A  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 18921   00055E                     	if	0	;tblptru may be non-zero
 18922   00055E                     	endif
 18923   00055E                     	if	0	;tblptru may be non-zero
 18924   00055E                     	endif
 18925   00055E  0008               	tblrd		*
 18926   000560  CFF5 F007          	movff	tablat,??_pwm_configure_pin+4
 18927   000564  3807               	swapf	(??_pwm_configure_pin+4)^0,w,c
 18928   000566  0B0F               	andlw	15
 18929   000568  6E08               	movwf	(??_pwm_configure_pin+5)^0,c
 18930   00056A  5008               	movf	(??_pwm_configure_pin+5)^0,w,c
 18931   00056C  2605               	addwf	(??_pwm_configure_pin+2)^0,f,c
 18932   00056E  0E00               	movlw	0
 18933   000570  2206               	addwfc	(??_pwm_configure_pin+3)^0,f,c
 18934   000572  5005               	movf	(??_pwm_configure_pin+2)^0,w,c
 18935   000574  2610               	addwf	pwm_configure_pin@pps_reg^0,f,c
 18936   000576  5006               	movf	(??_pwm_configure_pin+3)^0,w,c
 18937   000578  2211               	addwfc	(pwm_configure_pin@pps_reg+1)^0,f,c
 18938                           
 18939                           ;pwm.c: 27:     volatile uint8_t* tris_reg = (volatile uint8_t*)&TRISA + phyPin->Port;
 18940   00057A  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 18941   00057E  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 18942   000582                     	if	0	;tblptru may be non-zero
 18943   000582                     	endif
 18944   000582                     	if	0	;tblptru may be non-zero
 18945   000582                     	endif
 18946   000582  0008               	tblrd		*
 18947   000584  CFF5 F003          	movff	tablat,??_pwm_configure_pin
 18948   000588  5003               	movf	??_pwm_configure_pin^0,w,c
 18949   00058A  0B0F               	andlw	15
 18950   00058C  6E04               	movwf	(??_pwm_configure_pin+1)^0,c
 18951   00058E  6A05               	clrf	(??_pwm_configure_pin+2)^0,c
 18952   000590  0E87               	movlw	135
 18953   000592  2404               	addwf	(??_pwm_configure_pin+1)^0,w,c
 18954   000594  6E09               	movwf	pwm_configure_pin@tris_reg^0,c
 18955   000596  0E0F               	movlw	15
 18956   000598  2005               	addwfc	(??_pwm_configure_pin+2)^0,w,c
 18957   00059A  6E0A               	movwf	(pwm_configure_pin@tris_reg+1)^0,c
 18958                           
 18959                           ;pwm.c: 28:     *tris_reg &= ~(1 << phyPin->Pin);
 18960   00059C  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 18961   0005A0  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 18962   0005A4                     	if	0	;tblptru may be non-zero
 18963   0005A4                     	endif
 18964   0005A4                     	if	0	;tblptru may be non-zero
 18965   0005A4                     	endif
 18966   0005A4  0008               	tblrd		*
 18967   0005A6  CFF5 F003          	movff	tablat,??_pwm_configure_pin
 18968   0005AA  3803               	swapf	??_pwm_configure_pin^0,w,c
 18969   0005AC  0B0F               	andlw	15
 18970   0005AE  6E04               	movwf	(??_pwm_configure_pin+1)^0,c
 18971   0005B0  0E01               	movlw	1
 18972   0005B2  6E05               	movwf	(??_pwm_configure_pin+2)^0,c
 18973   0005B4  2A04               	incf	(??_pwm_configure_pin+1)^0,f,c
 18974   0005B6  D002               	goto	i2u267_44
 18975   0005B8                     i2u267_45:
 18976   0005B8  90D8               	bcf	status,0,c
 18977   0005BA  3605               	rlcf	(??_pwm_configure_pin+2)^0,f,c
 18978   0005BC                     i2u267_44:
 18979   0005BC  2E04               	decfsz	(??_pwm_configure_pin+1)^0,f,c
 18980   0005BE  D7FC               	goto	i2u267_45
 18981   0005C0  5005               	movf	(??_pwm_configure_pin+2)^0,w,c
 18982   0005C2  0AFF               	xorlw	255
 18983   0005C4  6E06               	movwf	(??_pwm_configure_pin+3)^0,c
 18984   0005C6  C009  FFD9         	movff	pwm_configure_pin@tris_reg,fsr2l
 18985   0005CA  C00A  FFDA         	movff	pwm_configure_pin@tris_reg+1,fsr2h
 18986   0005CE  5006               	movf	(??_pwm_configure_pin+3)^0,w,c
 18987   0005D0  16DF               	andwf	indf2,f,c
 18988                           
 18989                           ;pwm.c: 31:     if (module == 0) {
 18990   0005D2  5002               	movf	pwm_configure_pin@module^0,w,c
 18991   0005D4  A4D8               	btfss	status,2,c
 18992   0005D6  D007               	goto	i2l4426
 18993                           
 18994                           ;pwm.c: 32:         *pps_reg = 0x00;
 18995   0005D8  C010  FFD9         	movff	pwm_configure_pin@pps_reg,fsr2l
 18996   0005DC  C011  FFDA         	movff	pwm_configure_pin@pps_reg+1,fsr2h
 18997   0005E0  6ADF               	clrf	indf2,c
 18998   0005E2                     i2l4422:
 18999                           
 19000                           ;pwm.c: 33:         return 1;
 19001   0005E2  0E01               	movlw	1
 19002   0005E4  0012               	return	
 19003   0005E6                     i2l4426:
 19004                           
 19005                           ;pwm.c: 37:     if (module <= 2) {
 19006   0005E6  0E03               	movlw	3
 19007   0005E8  6002               	cpfslt	pwm_configure_pin@module^0,c
 19008   0005EA  D029               	goto	i2l4440
 19009                           
 19010                           ;pwm.c: 38:         if(phyPin->Port == ePORTA)
 19011   0005EC  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 19012   0005F0  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 19013   0005F4                     	if	0	;tblptru may be non-zero
 19014   0005F4                     	endif
 19015   0005F4                     	if	0	;tblptru may be non-zero
 19016   0005F4                     	endif
 19017   0005F4  0008               	tblrd		*
 19018   0005F6  CFF5 F003          	movff	tablat,??_pwm_configure_pin
 19019   0005FA  5003               	movf	??_pwm_configure_pin^0,w,c
 19020   0005FC  0B0F               	andlw	15
 19021   0005FE  0900               	iorlw	0
 19022   000600  B4D8               	btfsc	status,2,c
 19023   000602  D77F               	goto	i2u266_40
 19024                           
 19025                           ;pwm.c: 42:         volatile uint8_t* ccp_con = (volatile uint8_t*)&CCP1CON + ((module -
      +                           1) * 4);
 19026   000604  5002               	movf	pwm_configure_pin@module^0,w,c
 19027   000606  6E03               	movwf	??_pwm_configure_pin^0,c
 19028   000608  6A04               	clrf	(??_pwm_configure_pin+1)^0,c
 19029   00060A  90D8               	bcf	status,0,c
 19030   00060C  3603               	rlcf	??_pwm_configure_pin^0,f,c
 19031   00060E  3604               	rlcf	(??_pwm_configure_pin+1)^0,f,c
 19032   000610  90D8               	bcf	status,0,c
 19033   000612  3603               	rlcf	??_pwm_configure_pin^0,f,c
 19034   000614  3604               	rlcf	(??_pwm_configure_pin+1)^0,f,c
 19035   000616  0EA7               	movlw	167
 19036   000618  2403               	addwf	??_pwm_configure_pin^0,w,c
 19037   00061A  6E0B               	movwf	pwm_configure_pin@ccp_con^0,c
 19038   00061C  0E0F               	movlw	15
 19039   00061E  2004               	addwfc	(??_pwm_configure_pin+1)^0,w,c
 19040   000620  6E0C               	movwf	(pwm_configure_pin@ccp_con+1)^0,c
 19041                           
 19042                           ;pwm.c: 43:         *ccp_con = 0x0C;
 19043   000622  C00B  FFD9         	movff	pwm_configure_pin@ccp_con,fsr2l
 19044   000626  C00C  FFDA         	movff	pwm_configure_pin@ccp_con+1,fsr2h
 19045   00062A  0E0C               	movlw	12
 19046   00062C  6EDF               	movwf	indf2,c
 19047                           
 19048                           ;pwm.c: 45:         *pps_reg = 0x05 + (module - 1);
 19049   00062E  5002               	movf	pwm_configure_pin@module^0,w,c
 19050   000630  0F04               	addlw	4
 19051   000632  C010  FFD9         	movff	pwm_configure_pin@pps_reg,fsr2l
 19052   000636  C011  FFDA         	movff	pwm_configure_pin@pps_reg+1,fsr2h
 19053   00063A  6EDF               	movwf	indf2,c
 19054                           
 19055                           ;pwm.c: 46:     }
 19056   00063C  D7D2               	goto	i2l4422
 19057   00063E                     i2l4440:
 19058                           
 19059                           ;pwm.c: 48:         if(phyPin->Port == ePORTB)
 19060   00063E  C012  FFF6         	movff	pwm_configure_pin@phyPin,tblptrl
 19061   000642  C013  FFF7         	movff	pwm_configure_pin@phyPin+1,tblptrh
 19062   000646                     	if	0	;tblptru may be non-zero
 19063   000646                     	endif
 19064   000646                     	if	0	;tblptru may be non-zero
 19065   000646                     	endif
 19066   000646  0008               	tblrd		*
 19067   000648  CFF5 F003          	movff	tablat,??_pwm_configure_pin
 19068   00064C  5003               	movf	??_pwm_configure_pin^0,w,c
 19069   00064E  0B0F               	andlw	15
 19070   000650  06E8               	decf	wreg,f,c
 19071   000652  B4D8               	btfsc	status,2,c
 19072   000654  D756               	goto	i2u266_40
 19073                           
 19074                           ;pwm.c: 52:         volatile uint8_t* pwm_con = (volatile uint8_t*)&PWM3CON + ((module-3
      +                          ) * 4);
 19075   000656  5002               	movf	pwm_configure_pin@module^0,w,c
 19076   000658  6E03               	movwf	??_pwm_configure_pin^0,c
 19077   00065A  6A04               	clrf	(??_pwm_configure_pin+1)^0,c
 19078   00065C  90D8               	bcf	status,0,c
 19079   00065E  3603               	rlcf	??_pwm_configure_pin^0,f,c
 19080   000660  3604               	rlcf	(??_pwm_configure_pin+1)^0,f,c
 19081   000662  90D8               	bcf	status,0,c
 19082   000664  3603               	rlcf	??_pwm_configure_pin^0,f,c
 19083   000666  3604               	rlcf	(??_pwm_configure_pin+1)^0,f,c
 19084   000668  0E98               	movlw	152
 19085   00066A  2403               	addwf	??_pwm_configure_pin^0,w,c
 19086   00066C  6E0D               	movwf	pwm_configure_pin@pwm_con^0,c
 19087   00066E  0E0F               	movlw	15
 19088   000670  2004               	addwfc	(??_pwm_configure_pin+1)^0,w,c
 19089   000672  6E0E               	movwf	(pwm_configure_pin@pwm_con+1)^0,c
 19090                           
 19091                           ;pwm.c: 53:         *pwm_con = 0x80;
 19092   000674  C00D  FFD9         	movff	pwm_configure_pin@pwm_con,fsr2l
 19093   000678  C00E  FFDA         	movff	pwm_configure_pin@pwm_con+1,fsr2h
 19094   00067C  0E80               	movlw	128
 19095   00067E  D7D6               	goto	L10
 19096   000680                     __end_of_pwm_configure_pin:
 19097                           	callstack 0
 19098                           
 19099 ;; *************** function _WriteReg *****************
 19100 ;; Defined at:
 19101 ;;		line 87 in file "registers.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  regNo           1    wreg     enum E10193
 19104 ;;  portNo          1   14[COMRAM] enum E10154
 19105 ;;  value           1   15[COMRAM] unsigned char 
 19106 ;; Auto vars:     Size  Location     Type
 19107 ;;  regNo           1   16[COMRAM] enum E10193
 19108 ;;  p               1   17[COMRAM] unsigned char 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  1    wreg      _Bool 
 19111 ;; Registers used:
 19112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19118 ;;      Params:         2       0       0       0       0
 19119 ;;      Locals:         2       0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0
 19121 ;;      Totals:         4       0       0       0       0
 19122 ;;Total ram usage:        4 bytes
 19123 ;; Hardware stack levels used: 1
 19124 ;; Hardware stack levels required when called: 8
 19125 ;; This function calls:
 19126 ;;		_WriteBit
 19127 ;;		___assert_fail
 19128 ;; This function is called by:
 19129 ;;		_handle_write_cmd
 19130 ;; This function uses a non-reentrant model
 19131 ;;
 19132                           
 19133                           	psect	text90
 19134   001060                     __ptext90:
 19135                           	callstack 0
 19136   001060                     _WriteReg:
 19137                           	callstack 7
 19138                           
 19139                           ;incstack = 0
 19140                           ;WriteReg@regNo stored from wreg
 19141   001060  6E11               	movwf	WriteReg@regNo^0,c
 19142                           
 19143                           ;registers.c: 87: _Bool WriteReg(Registers_t regNo, EXP_PORT portNo, port_t value);regis
      +                          ters.c: 88: {;registers.c: 89:     ((void)((regNo < eRegistersCNT) || (__assert_fail("re
      +                          gNo < eRegistersCNT", "registers.c", 89, __func__),0)));
 19144   001062  0E0A               	movlw	10
 19145   001064  6411               	cpfsgt	WriteReg@regNo^0,c
 19146   001066  D012               	goto	i2l4368
 19147   001068  0EDC               	movlw	low STR_52
 19148   00106A  6EE6               	movwf	postinc1,c
 19149   00106C  0E3F               	movlw	high STR_52
 19150   00106E  6EE6               	movwf	postinc1,c
 19151   001070  0E59               	movlw	89
 19152   001072  6EE6               	movwf	postinc1,c
 19153   001074  0E00               	movlw	0
 19154   001076  6EE6               	movwf	postinc1,c
 19155   001078  0EC7               	movlw	low STR_3
 19156   00107A  6EE6               	movwf	postinc1,c
 19157   00107C  0E3F               	movlw	high STR_3
 19158   00107E  6EE6               	movwf	postinc1,c
 19159   001080  0E72               	movlw	low STR_2
 19160   001082  6EE6               	movwf	postinc1,c
 19161   001084  0E3F               	movlw	high STR_2
 19162   001086  6EE6               	movwf	postinc1,c
 19163   001088  ECAA  F00B         	call	___assert_fail	;wreg free
 19164   00108C                     i2l4368:
 19165                           
 19166                           ;registers.c: 90:     ((void)((portNo < 2) || (__assert_fail("portNo < EXP_PORTS_CNT", "
      +                          registers.c", 90, __func__),0)));
 19167   00108C  0E01               	movlw	1
 19168   00108E  640F               	cpfsgt	WriteReg@portNo^0,c
 19169   001090  D012               	goto	i2l4372
 19170   001092  0EDC               	movlw	low STR_52
 19171   001094  6EE6               	movwf	postinc1,c
 19172   001096  0E3F               	movlw	high STR_52
 19173   001098  6EE6               	movwf	postinc1,c
 19174   00109A  0E5A               	movlw	90
 19175   00109C  6EE6               	movwf	postinc1,c
 19176   00109E  0E00               	movlw	0
 19177   0010A0  6EE6               	movwf	postinc1,c
 19178   0010A2  0EC7               	movlw	low STR_3
 19179   0010A4  6EE6               	movwf	postinc1,c
 19180   0010A6  0E3F               	movlw	high STR_3
 19181   0010A8  6EE6               	movwf	postinc1,c
 19182   0010AA  0E44               	movlw	low STR_26
 19183   0010AC  6EE6               	movwf	postinc1,c
 19184   0010AE  0E3F               	movlw	high STR_26
 19185   0010B0  6EE6               	movwf	postinc1,c
 19186   0010B2  ECAA  F00B         	call	___assert_fail	;wreg free
 19187   0010B6                     i2l4372:
 19188                           
 19189                           ;registers.c: 92:     if(regNo >= eRegistersCNT)
 19190   0010B6  0E0A               	movlw	10
 19191   0010B8  6411               	cpfsgt	WriteReg@regNo^0,c
 19192   0010BA  D002               	goto	i2l4378
 19193   0010BC                     i2u259_40:
 19194                           
 19195                           ;registers.c: 93:         return 0;
 19196   0010BC  0E00               	movlw	0
 19197   0010BE  0012               	return	
 19198   0010C0                     i2l4378:
 19199                           
 19200                           ;registers.c: 95:     if(portNo >= eEXP_PORT_CNT)
 19201   0010C0  0E01               	movlw	1
 19202   0010C2  640F               	cpfsgt	WriteReg@portNo^0,c
 19203   0010C4  D001               	goto	i2l1140
 19204   0010C6  D7FA               	goto	i2u259_40
 19205   0010C8                     i2l1140:
 19206                           
 19207                           ;registers.c: 98:     for(uint8_t p = 0; p < 8; p++)
 19208   0010C8  6A12               	clrf	WriteReg@p^0,c
 19209   0010CA                     i2l4388:
 19210                           
 19211                           ;registers.c: 99:     {;registers.c: 100:         WriteBit(regNo, portNo, p, value & 1);
 19212   0010CA  C00F  F001         	movff	WriteReg@portNo,WriteBit@portNo
 19213   0010CE  C012  F002         	movff	WriteReg@p,WriteBit@pinNo
 19214   0010D2  A010               	btfss	WriteReg@value^0,0,c
 19215   0010D4  D002               	goto	i2u261_40
 19216   0010D6  0E01               	movlw	1
 19217   0010D8  D001               	goto	i2u262_40
 19218   0010DA                     i2u261_40:
 19219   0010DA  0E00               	movlw	0
 19220   0010DC                     i2u262_40:
 19221   0010DC  6E03               	movwf	WriteBit@value^0,c
 19222   0010DE  5011               	movf	WriteReg@regNo^0,w,c
 19223   0010E0  EC40  F003         	call	_WriteBit
 19224                           
 19225                           ;registers.c: 101:         value >>= 1;
 19226   0010E4  90D8               	bcf	status,0,c
 19227   0010E6  3210               	rrcf	WriteReg@value^0,f,c
 19228                           
 19229                           ;registers.c: 102:     }
 19230   0010E8  2A12               	incf	WriteReg@p^0,f,c
 19231   0010EA  0E07               	movlw	7
 19232   0010EC  6412               	cpfsgt	WriteReg@p^0,c
 19233   0010EE  D7ED               	goto	i2l4388
 19234                           
 19235                           ;registers.c: 103:     return 1;
 19236   0010F0  0E01               	movlw	1
 19237   0010F2  0012               	return		;funcret
 19238   0010F4                     __end_of_WriteReg:
 19239                           	callstack 0
 19240                           
 19241 ;; *************** function _WriteBit *****************
 19242 ;; Defined at:
 19243 ;;		line 66 in file "registers.c"
 19244 ;; Parameters:    Size  Location     Type
 19245 ;;  regNo           1    wreg     enum E10193
 19246 ;;  portNo          1    0[COMRAM] enum E10154
 19247 ;;  pinNo           1    1[COMRAM] enum E10159
 19248 ;;  value           1    2[COMRAM] _Bool 
 19249 ;; Auto vars:     Size  Location     Type
 19250 ;;  regNo           1   13[COMRAM] enum E10193
 19251 ;;  reg             2   10[COMRAM] PTR volatile unsigned ch
 19252 ;;		 -> IOCAP(1), IOCAN(1), IOCAF(1), PORTA(1), 
 19253 ;;		 -> INLVLA(1), SLRCONA(1), ODCONA(1), WPUA(1), 
 19254 ;;		 -> ANSELA(1), TRISA(1), LATA(1), 
 19255 ;;  pin             2    8[COMRAM] PTR const struct .
 19256 ;;		 -> PINS(32), 
 19257 ;;  portMask        1   12[COMRAM] unsigned char 
 19258 ;;  portData        1    7[COMRAM] unsigned char 
 19259 ;; Return value:  Size  Location     Type
 19260 ;;                  1    wreg      void 
 19261 ;; Registers used:
 19262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19263 ;; Tracked objects:
 19264 ;;		On entry : 0/0
 19265 ;;		On exit  : 0/0
 19266 ;;		Unchanged: 0/0
 19267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19268 ;;      Params:         3       0       0       0       0
 19269 ;;      Locals:         7       0       0       0       0
 19270 ;;      Temps:          4       0       0       0       0
 19271 ;;      Totals:        14       0       0       0       0
 19272 ;;Total ram usage:       14 bytes
 19273 ;; Hardware stack levels used: 1
 19274 ;; Hardware stack levels required when called: 7
 19275 ;; This function calls:
 19276 ;;		___assert_fail
 19277 ;; This function is called by:
 19278 ;;		_WriteReg
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text91
 19283   000680                     __ptext91:
 19284                           	callstack 0
 19285   000680                     _WriteBit:
 19286                           	callstack 7
 19287                           
 19288                           ;incstack = 0
 19289                           ;WriteBit@regNo stored from wreg
 19290   000680  6E0E               	movwf	WriteBit@regNo^0,c
 19291                           
 19292                           ;registers.c: 66: void WriteBit(Registers_t regNo, EXP_PORT portNo, EXP_PIN pinNo, _Bool
      +                           value);registers.c: 67: {;registers.c: 68:     ((void)((regNo < eRegistersCNT) || (__as
      +                          sert_fail("regNo < eRegistersCNT", "registers.c", 68, __func__),0)));
 19293   000682  0E0A               	movlw	10
 19294   000684  640E               	cpfsgt	WriteBit@regNo^0,c
 19295   000686  D012               	goto	i2l4300
 19296   000688  0EE5               	movlw	low STR_34
 19297   00068A  6EE6               	movwf	postinc1,c
 19298   00068C  0E3F               	movlw	high STR_34
 19299   00068E  6EE6               	movwf	postinc1,c
 19300   000690  0E44               	movlw	68
 19301   000692  6EE6               	movwf	postinc1,c
 19302   000694  0E00               	movlw	0
 19303   000696  6EE6               	movwf	postinc1,c
 19304   000698  0EC7               	movlw	low STR_3
 19305   00069A  6EE6               	movwf	postinc1,c
 19306   00069C  0E3F               	movlw	high STR_3
 19307   00069E  6EE6               	movwf	postinc1,c
 19308   0006A0  0E72               	movlw	low STR_2
 19309   0006A2  6EE6               	movwf	postinc1,c
 19310   0006A4  0E3F               	movlw	high STR_2
 19311   0006A6  6EE6               	movwf	postinc1,c
 19312   0006A8  ECAA  F00B         	call	___assert_fail	;wreg free
 19313   0006AC                     i2l4300:
 19314                           
 19315                           ;registers.c: 69:     ((void)((portNo < eEXP_PORT_CNT) || (__assert_fail("portNo < eEXP_
      +                          PORT_CNT", "registers.c", 69, __func__),0)));
 19316   0006AC  0E01               	movlw	1
 19317   0006AE  6401               	cpfsgt	WriteBit@portNo^0,c
 19318   0006B0  D012               	goto	i2l4304
 19319   0006B2  0EE5               	movlw	low STR_34
 19320   0006B4  6EE6               	movwf	postinc1,c
 19321   0006B6  0E3F               	movlw	high STR_34
 19322   0006B8  6EE6               	movwf	postinc1,c
 19323   0006BA  0E45               	movlw	69
 19324   0006BC  6EE6               	movwf	postinc1,c
 19325   0006BE  0E00               	movlw	0
 19326   0006C0  6EE6               	movwf	postinc1,c
 19327   0006C2  0EC7               	movlw	low STR_3
 19328   0006C4  6EE6               	movwf	postinc1,c
 19329   0006C6  0E3F               	movlw	high STR_3
 19330   0006C8  6EE6               	movwf	postinc1,c
 19331   0006CA  0E5B               	movlw	low STR_8
 19332   0006CC  6EE6               	movwf	postinc1,c
 19333   0006CE  0E3F               	movlw	high STR_8
 19334   0006D0  6EE6               	movwf	postinc1,c
 19335   0006D2  ECAA  F00B         	call	___assert_fail	;wreg free
 19336   0006D6                     i2l4304:
 19337                           
 19338                           ;registers.c: 70:     ((void)((pinNo < eEXP_PIN_CNT) || (__assert_fail("pinNo < eEXP_PIN
      +                          _CNT", "registers.c", 70, __func__),0)));
 19339   0006D6  0E07               	movlw	7
 19340   0006D8  6402               	cpfsgt	WriteBit@pinNo^0,c
 19341   0006DA  D012               	goto	i2l4308
 19342   0006DC  0EE5               	movlw	low STR_34
 19343   0006DE  6EE6               	movwf	postinc1,c
 19344   0006E0  0E3F               	movlw	high STR_34
 19345   0006E2  6EE6               	movwf	postinc1,c
 19346   0006E4  0E46               	movlw	70
 19347   0006E6  6EE6               	movwf	postinc1,c
 19348   0006E8  0E00               	movlw	0
 19349   0006EA  6EE6               	movwf	postinc1,c
 19350   0006EC  0EC7               	movlw	low STR_3
 19351   0006EE  6EE6               	movwf	postinc1,c
 19352   0006F0  0E3F               	movlw	high STR_3
 19353   0006F2  6EE6               	movwf	postinc1,c
 19354   0006F4  0E9D               	movlw	low STR_14
 19355   0006F6  6EE6               	movwf	postinc1,c
 19356   0006F8  0E3F               	movlw	high STR_14
 19357   0006FA  6EE6               	movwf	postinc1,c
 19358   0006FC  ECAA  F00B         	call	___assert_fail	;wreg free
 19359   000700                     i2l4308:
 19360                           
 19361                           ;registers.c: 72:     const Pin_t *pin = &PINS[portNo][pinNo];
 19362   000700  5002               	movf	WriteBit@pinNo^0,w,c
 19363   000702  0D02               	mullw	2
 19364   000704  CFF3 F004          	movff	prodl,??_WriteBit
 19365   000708  CFF4 F005          	movff	prodh,??_WriteBit+1
 19366   00070C  5001               	movf	WriteBit@portNo^0,w,c
 19367   00070E  0D10               	mullw	16
 19368   000710  0ED0               	movlw	low _PINS
 19369   000712  24F3               	addwf	243,w,c
 19370   000714  6E06               	movwf	(??_WriteBit+2)^0,c
 19371   000716  0E3E               	movlw	high _PINS
 19372   000718  20F4               	addwfc	prodh,w,c
 19373   00071A  6E07               	movwf	(??_WriteBit+3)^0,c
 19374   00071C  5004               	movf	??_WriteBit^0,w,c
 19375   00071E  2406               	addwf	(??_WriteBit+2)^0,w,c
 19376   000720  6E09               	movwf	WriteBit@pin^0,c
 19377   000722  5005               	movf	(??_WriteBit+1)^0,w,c
 19378   000724  2007               	addwfc	(??_WriteBit+3)^0,w,c
 19379   000726  6E0A               	movwf	(WriteBit@pin+1)^0,c
 19380                           
 19381                           ;registers.c: 75:     volatile unsigned char *reg = Registers[regNo].reg;
 19382   000728  500E               	movf	WriteBit@regNo^0,w,c
 19383   00072A  0D03               	mullw	3
 19384   00072C  0EAF               	movlw	low _Registers
 19385   00072E  24F3               	addwf	243,w,c
 19386   000730  6EF6               	movwf	tblptrl,c
 19387   000732  0E3E               	movlw	high _Registers
 19388   000734  20F4               	addwfc	244,w,c
 19389   000736  6EF7               	movwf	tblptrh,c
 19390   000738                     	if	0	;There are less than 3 active tblptr bytes
 19391   000738                     	endif
 19392   000738  0009               	tblrd		*+
 19393   00073A  CFF5 F00B          	movff	tablat,WriteBit@reg
 19394   00073E  000A               	tblrd		*-
 19395   000740  CFF5 F00C          	movff	tablat,WriteBit@reg+1
 19396                           
 19397                           ;registers.c: 76:     reg += pin->Port * (Registers[regNo].portCntOffset & 31);
 19398   000744  500E               	movf	WriteBit@regNo^0,w,c
 19399   000746  0D03               	mullw	3
 19400   000748  0E02               	movlw	2
 19401   00074A  26F3               	addwf	243,f,c
 19402   00074C  0E00               	movlw	0
 19403   00074E  22F4               	addwfc	244,f,c
 19404   000750  0EAF               	movlw	low _Registers
 19405   000752  24F3               	addwf	243,w,c
 19406   000754  6EF6               	movwf	tblptrl,c
 19407   000756  0E3E               	movlw	high _Registers
 19408   000758  20F4               	addwfc	244,w,c
 19409   00075A  6EF7               	movwf	tblptrh,c
 19410   00075C                     	if	0	;There are less than 3 active tblptr bytes
 19411   00075C                     	endif
 19412   00075C  0008               	tblrd		*
 19413   00075E  CFF5 F004          	movff	tablat,??_WriteBit
 19414   000762  0E1F               	movlw	31
 19415   000764  1604               	andwf	??_WriteBit^0,f,c
 19416   000766  C009  FFF6         	movff	WriteBit@pin,tblptrl
 19417   00076A  C00A  FFF7         	movff	WriteBit@pin+1,tblptrh
 19418   00076E                     	if	0	;tblptru may be non-zero
 19419   00076E                     	endif
 19420   00076E                     	if	0	;tblptru may be non-zero
 19421   00076E                     	endif
 19422   00076E  0008               	tblrd		*
 19423   000770  CFF5 F005          	movff	tablat,??_WriteBit+1
 19424   000774  5005               	movf	(??_WriteBit+1)^0,w,c
 19425   000776  0B0F               	andlw	15
 19426   000778  6E06               	movwf	(??_WriteBit+2)^0,c
 19427   00077A  5006               	movf	(??_WriteBit+2)^0,w,c
 19428   00077C  0204               	mulwf	??_WriteBit^0,c
 19429   00077E  50F3               	movf	243,w,c
 19430   000780  260B               	addwf	WriteBit@reg^0,f,c
 19431   000782  50F4               	movf	244,w,c
 19432   000784  220C               	addwfc	(WriteBit@reg+1)^0,f,c
 19433                           
 19434                           ;registers.c: 78:     port_t portData = *reg;
 19435   000786  C00B  FFD9         	movff	WriteBit@reg,fsr2l
 19436   00078A  C00C  FFDA         	movff	WriteBit@reg+1,fsr2h
 19437   00078E  50DF               	movf	indf2,w,c
 19438   000790  6E08               	movwf	WriteBit@portData^0,c
 19439                           
 19440                           ;registers.c: 79:     port_t portMask = (port_t)((int)1<<pin->Pin);
 19441   000792  C009  FFF6         	movff	WriteBit@pin,tblptrl
 19442   000796  C00A  FFF7         	movff	WriteBit@pin+1,tblptrh
 19443   00079A                     	if	0	;tblptru may be non-zero
 19444   00079A                     	endif
 19445   00079A                     	if	0	;tblptru may be non-zero
 19446   00079A                     	endif
 19447   00079A  0008               	tblrd		*
 19448   00079C  CFF5 F004          	movff	tablat,??_WriteBit
 19449   0007A0  3804               	swapf	??_WriteBit^0,w,c
 19450   0007A2  0B0F               	andlw	15
 19451   0007A4  6E05               	movwf	(??_WriteBit+1)^0,c
 19452   0007A6  0E01               	movlw	1
 19453   0007A8  6E06               	movwf	(??_WriteBit+2)^0,c
 19454   0007AA  2A05               	incf	(??_WriteBit+1)^0,f,c
 19455   0007AC  D002               	goto	i2u250_44
 19456   0007AE                     i2u250_45:
 19457   0007AE  90D8               	bcf	status,0,c
 19458   0007B0  3606               	rlcf	(??_WriteBit+2)^0,f,c
 19459   0007B2                     i2u250_44:
 19460   0007B2  2E05               	decfsz	(??_WriteBit+1)^0,f,c
 19461   0007B4  D7FC               	goto	i2u250_45
 19462   0007B6  5006               	movf	(??_WriteBit+2)^0,w,c
 19463   0007B8  6E0D               	movwf	WriteBit@portMask^0,c
 19464                           
 19465                           ;registers.c: 80:     if(value)
 19466   0007BA  5003               	movf	WriteBit@value^0,w,c
 19467   0007BC  B4D8               	btfsc	status,2,c
 19468   0007BE  D003               	goto	i2l4322
 19469                           
 19470                           ;registers.c: 81:         portData |= portMask;
 19471   0007C0  500D               	movf	WriteBit@portMask^0,w,c
 19472   0007C2  1208               	iorwf	WriteBit@portData^0,f,c
 19473   0007C4  D003               	goto	i2l4324
 19474   0007C6                     i2l4322:
 19475                           
 19476                           ;registers.c: 83:         portData &= ~portMask;
 19477   0007C6  500D               	movf	WriteBit@portMask^0,w,c
 19478   0007C8  0AFF               	xorlw	255
 19479   0007CA  1608               	andwf	WriteBit@portData^0,f,c
 19480   0007CC                     i2l4324:
 19481                           
 19482                           ;registers.c: 84:     *reg = portData;
 19483   0007CC  C00B  FFD9         	movff	WriteBit@reg,fsr2l
 19484   0007D0  C00C  FFDA         	movff	WriteBit@reg+1,fsr2h
 19485   0007D4  C008  FFDF         	movff	WriteBit@portData,indf2
 19486   0007D8  0012               	return		;funcret
 19487   0007DA                     __end_of_WriteBit:
 19488                           	callstack 0
 19489                           
 19490 ;; *************** function _DAC1_SetOutput *****************
 19491 ;; Defined at:
 19492 ;;		line 66 in file "mcc_generated_files/dac1.c"
 19493 ;; Parameters:    Size  Location     Type
 19494 ;;  inputData       1    wreg     unsigned char 
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;  inputData       1    0[COMRAM] unsigned char 
 19497 ;; Return value:  Size  Location     Type
 19498 ;;                  1    wreg      void 
 19499 ;; Registers used:
 19500 ;;		wreg
 19501 ;; Tracked objects:
 19502 ;;		On entry : 0/0
 19503 ;;		On exit  : 0/0
 19504 ;;		Unchanged: 0/0
 19505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19506 ;;      Params:         0       0       0       0       0
 19507 ;;      Locals:         1       0       0       0       0
 19508 ;;      Temps:          0       0       0       0       0
 19509 ;;      Totals:         1       0       0       0       0
 19510 ;;Total ram usage:        1 bytes
 19511 ;; Hardware stack levels used: 1
 19512 ;; This function calls:
 19513 ;;		Nothing
 19514 ;; This function is called by:
 19515 ;;		_handle_write_cmd
 19516 ;; This function uses a non-reentrant model
 19517 ;;
 19518                           
 19519                           	psect	text92
 19520   001E0A                     __ptext92:
 19521                           	callstack 0
 19522   001E0A                     _DAC1_SetOutput:
 19523                           	callstack 15
 19524                           
 19525                           ;incstack = 0
 19526                           ;DAC1_SetOutput@inputData stored from wreg
 19527   001E0A  6E01               	movwf	DAC1_SetOutput@inputData^0,c
 19528                           
 19529                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 19530   001E0C  C001  FF2F         	movff	DAC1_SetOutput@inputData,3887	;volatile
 19531   001E10  0012               	return		;funcret
 19532   001E12                     __end_of_DAC1_SetOutput:
 19533                           	callstack 0
 19534                           
 19535 ;; *************** function _eeprom_write_buffer *****************
 19536 ;; Defined at:
 19537 ;;		line 29 in file "eeprom.c"
 19538 ;; Parameters:    Size  Location     Type
 19539 ;;  addr            1    wreg     unsigned char 
 19540 ;;  data            1    0[COMRAM] unsigned char 
 19541 ;; Auto vars:     Size  Location     Type
 19542 ;;  addr            1    4[COMRAM] unsigned char 
 19543 ;; Return value:  Size  Location     Type
 19544 ;;                  1    wreg      void 
 19545 ;; Registers used:
 19546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19547 ;; Tracked objects:
 19548 ;;		On entry : 0/0
 19549 ;;		On exit  : 0/0
 19550 ;;		Unchanged: 0/0
 19551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19552 ;;      Params:         1       0       0       0       0
 19553 ;;      Locals:         1       0       0       0       0
 19554 ;;      Temps:          3       0       0       0       0
 19555 ;;      Totals:         5       0       0       0       0
 19556 ;;Total ram usage:        5 bytes
 19557 ;; Hardware stack levels used: 1
 19558 ;; This function calls:
 19559 ;;		Nothing
 19560 ;; This function is called by:
 19561 ;;		_i2c_write_to_slave_cb
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text93
 19566   0016C6                     __ptext93:
 19567                           	callstack 0
 19568   0016C6                     _eeprom_write_buffer:
 19569                           	callstack 16
 19570                           
 19571                           ;incstack = 0
 19572                           ;eeprom_write_buffer@addr stored from wreg
 19573   0016C6  6E05               	movwf	eeprom_write_buffer@addr^0,c
 19574                           
 19575                           ;eeprom.c: 29: void eeprom_write_buffer(eeAddr_t addr, uint8_t data);eeprom.c: 30: {;eep
      +                          rom.c: 31:     E2_DATA[addr] = data;
 19576   0016C8  0E00               	movlw	low _E2_DATA
 19577   0016CA  2405               	addwf	eeprom_write_buffer@addr^0,w,c
 19578   0016CC  6ED9               	movwf	fsr2l,c
 19579   0016CE  6ADA               	clrf	fsr2h,c
 19580   0016D0  0E02               	movlw	high _E2_DATA
 19581   0016D2  22DA               	addwfc	fsr2h,f,c
 19582   0016D4  C001  FFDF         	movff	eeprom_write_buffer@data,indf2
 19583                           
 19584                           ;eeprom.c: 32:     E2_Changes[addr >> 3] |= 1 << (addr & 0x7);
 19585   0016D8  C005  F002         	movff	eeprom_write_buffer@addr,??_eeprom_write_buffer
 19586   0016DC  0E07               	movlw	7
 19587   0016DE  1602               	andwf	??_eeprom_write_buffer^0,f,c
 19588   0016E0  0E01               	movlw	1
 19589   0016E2  6E03               	movwf	(??_eeprom_write_buffer+1)^0,c
 19590   0016E4  2A02               	incf	??_eeprom_write_buffer^0,f,c
 19591   0016E6  D002               	goto	i2u285_44
 19592   0016E8                     i2u285_45:
 19593   0016E8  90D8               	bcf	status,0,c
 19594   0016EA  3603               	rlcf	(??_eeprom_write_buffer+1)^0,f,c
 19595   0016EC                     i2u285_44:
 19596   0016EC  2E02               	decfsz	??_eeprom_write_buffer^0,f,c
 19597   0016EE  D7FC               	goto	i2u285_45
 19598   0016F0  C005  F004         	movff	eeprom_write_buffer@addr,??_eeprom_write_buffer+2
 19599   0016F4  90D8               	bcf	status,0,c
 19600   0016F6  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 19601   0016F8  90D8               	bcf	status,0,c
 19602   0016FA  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 19603   0016FC  90D8               	bcf	status,0,c
 19604   0016FE  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 19605   001700  5004               	movf	(??_eeprom_write_buffer+2)^0,w,c
 19606   001702  0F91               	addlw	low _E2_Changes
 19607   001704  6ED9               	movwf	fsr2l,c
 19608   001706  6ADA               	clrf	fsr2h,c
 19609   001708  5003               	movf	(??_eeprom_write_buffer+1)^0,w,c
 19610   00170A  12DF               	iorwf	indf2,f,c
 19611   00170C  0012               	return		;funcret
 19612   00170E                     __end_of_eeprom_write_buffer:
 19613                           	callstack 0
 19614                           
 19615 ;; *************** function _eeprom_read_buffer *****************
 19616 ;; Defined at:
 19617 ;;		line 24 in file "eeprom.c"
 19618 ;; Parameters:    Size  Location     Type
 19619 ;;  addr            1    wreg     unsigned char 
 19620 ;; Auto vars:     Size  Location     Type
 19621 ;;  addr            1    0[COMRAM] unsigned char 
 19622 ;; Return value:  Size  Location     Type
 19623 ;;                  1    wreg      unsigned char 
 19624 ;; Registers used:
 19625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19626 ;; Tracked objects:
 19627 ;;		On entry : 0/0
 19628 ;;		On exit  : 0/0
 19629 ;;		Unchanged: 0/0
 19630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19631 ;;      Params:         0       0       0       0       0
 19632 ;;      Locals:         1       0       0       0       0
 19633 ;;      Temps:          0       0       0       0       0
 19634 ;;      Totals:         1       0       0       0       0
 19635 ;;Total ram usage:        1 bytes
 19636 ;; Hardware stack levels used: 1
 19637 ;; This function calls:
 19638 ;;		Nothing
 19639 ;; This function is called by:
 19640 ;;		_i2c_write_to_slave_cb
 19641 ;;		_i2c_read_from_slave_cb
 19642 ;; This function uses a non-reentrant model
 19643 ;;
 19644                           
 19645                           	psect	text94
 19646   001C68                     __ptext94:
 19647                           	callstack 0
 19648   001C68                     _eeprom_read_buffer:
 19649                           	callstack 16
 19650                           
 19651                           ;incstack = 0
 19652                           ;eeprom_read_buffer@addr stored from wreg
 19653   001C68  6E01               	movwf	eeprom_read_buffer@addr^0,c
 19654                           
 19655                           ;eeprom.c: 24: uint8_t eeprom_read_buffer(eeAddr_t addr);eeprom.c: 25: {;eeprom.c: 26:  
      +                             return E2_DATA[addr];
 19656   001C6A  0E00               	movlw	low _E2_DATA
 19657   001C6C  2401               	addwf	eeprom_read_buffer@addr^0,w,c
 19658   001C6E  6ED9               	movwf	fsr2l,c
 19659   001C70  6ADA               	clrf	fsr2h,c
 19660   001C72  0E02               	movlw	high _E2_DATA
 19661   001C74  22DA               	addwfc	fsr2h,f,c
 19662   001C76  50DF               	movf	indf2,w,c
 19663   001C78  0012               	return		;funcret
 19664   001C7A                     __end_of_eeprom_read_buffer:
 19665                           	callstack 0
 19666                           
 19667 ;; *************** function _I2C1_SendNack *****************
 19668 ;; Defined at:
 19669 ;;		line 160 in file "mcc_generated_files/i2c1_slave.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;		None
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  1    wreg      void 
 19676 ;; Registers used:
 19677 ;;		cstack
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19683 ;;      Params:         0       0       0       0       0
 19684 ;;      Locals:         0       0       0       0       0
 19685 ;;      Temps:          0       0       0       0       0
 19686 ;;      Totals:         0       0       0       0       0
 19687 ;;Total ram usage:        0 bytes
 19688 ;; Hardware stack levels used: 1
 19689 ;; Hardware stack levels required when called: 1
 19690 ;; This function calls:
 19691 ;;		_I2C1_SlaveSendNack
 19692 ;; This function is called by:
 19693 ;;		_MasterR_SlaveW
 19694 ;;		_MasterW_SlaveR
 19695 ;; This function uses a non-reentrant model
 19696 ;;
 19697                           
 19698                           	psect	text95
 19699   001E24                     __ptext95:
 19700                           	callstack 0
 19701   001E24                     _I2C1_SendNack:
 19702                           	callstack 16
 19703                           
 19704                           ;mcc_generated_files/i2c1_slave.c: 162:     I2C1_SlaveSendNack();
 19705                           
 19706                           ;incstack = 0
 19707   001E24  EC15  F00F         	call	_I2C1_SlaveSendNack	;wreg free
 19708   001E28  0012               	return		;funcret
 19709   001E2A                     __end_of_I2C1_SendNack:
 19710                           	callstack 0
 19711                           
 19712 ;; *************** function _I2C1_SlaveSendNack *****************
 19713 ;; Defined at:
 19714 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
 19715 ;; Parameters:    Size  Location     Type
 19716 ;;		None
 19717 ;; Auto vars:     Size  Location     Type
 19718 ;;		None
 19719 ;; Return value:  Size  Location     Type
 19720 ;;                  1    wreg      void 
 19721 ;; Registers used:
 19722 ;;		None
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19728 ;;      Params:         0       0       0       0       0
 19729 ;;      Locals:         0       0       0       0       0
 19730 ;;      Temps:          0       0       0       0       0
 19731 ;;      Totals:         0       0       0       0       0
 19732 ;;Total ram usage:        0 bytes
 19733 ;; Hardware stack levels used: 1
 19734 ;; This function calls:
 19735 ;;		Nothing
 19736 ;; This function is called by:
 19737 ;;		_I2C1_SendNack
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text96
 19742   001E2A                     __ptext96:
 19743                           	callstack 0
 19744   001E2A                     _I2C1_SlaveSendNack:
 19745                           	callstack 16
 19746                           
 19747                           ;mcc_generated_files/i2c1_slave.c: 414:     SSP1CON2bits.ACKDT = 1;
 19748                           
 19749                           ;incstack = 0
 19750   001E2A  8A96               	bsf	150,5,c	;volatile
 19751                           
 19752                           ;mcc_generated_files/i2c1_slave.c: 415:     SSP1CON2bits.ACKEN = 1;
 19753   001E2C  8896               	bsf	150,4,c	;volatile
 19754   001E2E  0012               	return		;funcret
 19755   001E30                     __end_of_I2C1_SlaveSendNack:
 19756                           	callstack 0
 19757                           
 19758 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
 19759 ;; Defined at:
 19760 ;;		line 381 in file "mcc_generated_files/i2c1_slave.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1    wreg      _Bool 
 19767 ;; Registers used:
 19768 ;;		wreg
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/0
 19771 ;;		On exit  : 0/0
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19774 ;;      Params:         0       0       0       0       0
 19775 ;;      Locals:         0       0       0       0       0
 19776 ;;      Temps:          0       0       0       0       0
 19777 ;;      Totals:         0       0       0       0       0
 19778 ;;Total ram usage:        0 bytes
 19779 ;; Hardware stack levels used: 1
 19780 ;; This function calls:
 19781 ;;		Nothing
 19782 ;; This function is called by:
 19783 ;;		_I2C1_Isr
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           	psect	text97
 19788   001D36                     __ptext97:
 19789                           	callstack 0
 19790   001D36                     _I2C1_SlaveIsTxBufEmpty:
 19791                           	callstack 19
 19792                           
 19793                           ;mcc_generated_files/i2c1_slave.c: 383:     return !SSP1STATbits.BF;
 19794                           
 19795                           ;incstack = 0
 19796   001D36  B094               	btfsc	148,0,c	;volatile
 19797   001D38  D002               	goto	i2u319_40
 19798   001D3A  0E01               	movlw	1
 19799   001D3C  0012               	return	
 19800   001D3E                     i2u319_40:
 19801   001D3E  0E00               	movlw	0
 19802   001D40  0012               	return		;funcret
 19803   001D42                     __end_of_I2C1_SlaveIsTxBufEmpty:
 19804                           	callstack 0
 19805                           
 19806 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
 19807 ;; Defined at:
 19808 ;;		line 386 in file "mcc_generated_files/i2c1_slave.c"
 19809 ;; Parameters:    Size  Location     Type
 19810 ;;		None
 19811 ;; Auto vars:     Size  Location     Type
 19812 ;;		None
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  1    wreg      _Bool 
 19815 ;; Registers used:
 19816 ;;		wreg
 19817 ;; Tracked objects:
 19818 ;;		On entry : 0/0
 19819 ;;		On exit  : 0/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19822 ;;      Params:         0       0       0       0       0
 19823 ;;      Locals:         0       0       0       0       0
 19824 ;;      Temps:          0       0       0       0       0
 19825 ;;      Totals:         0       0       0       0       0
 19826 ;;Total ram usage:        0 bytes
 19827 ;; Hardware stack levels used: 1
 19828 ;; This function calls:
 19829 ;;		Nothing
 19830 ;; This function is called by:
 19831 ;;		_I2C1_Isr
 19832 ;; This function uses a non-reentrant model
 19833 ;;
 19834                           
 19835                           	psect	text98
 19836   001D42                     __ptext98:
 19837                           	callstack 0
 19838   001D42                     _I2C1_SlaveIsRxBufFull:
 19839                           	callstack 19
 19840                           
 19841                           ;mcc_generated_files/i2c1_slave.c: 388:     return SSP1STATbits.BF;
 19842                           
 19843                           ;incstack = 0
 19844   001D42  A094               	btfss	148,0,c	;volatile
 19845   001D44  D002               	goto	i2u323_40
 19846   001D46  0E01               	movlw	1
 19847   001D48  0012               	return	
 19848   001D4A                     i2u323_40:
 19849   001D4A  0E00               	movlw	0
 19850   001D4C  0012               	return		;funcret
 19851   001D4E                     __end_of_I2C1_SlaveIsRxBufFull:
 19852                           	callstack 0
 19853                           
 19854 ;; *************** function _I2C1_SlaveIsAddr *****************
 19855 ;; Defined at:
 19856 ;;		line 346 in file "mcc_generated_files/i2c1_slave.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;		None
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;		None
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  1    wreg      _Bool 
 19863 ;; Registers used:
 19864 ;;		wreg
 19865 ;; Tracked objects:
 19866 ;;		On entry : 0/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19870 ;;      Params:         0       0       0       0       0
 19871 ;;      Locals:         0       0       0       0       0
 19872 ;;      Temps:          0       0       0       0       0
 19873 ;;      Totals:         0       0       0       0       0
 19874 ;;Total ram usage:        0 bytes
 19875 ;; Hardware stack levels used: 1
 19876 ;; This function calls:
 19877 ;;		Nothing
 19878 ;; This function is called by:
 19879 ;;		_I2C1_Isr
 19880 ;; This function uses a non-reentrant model
 19881 ;;
 19882                           
 19883                           	psect	text99
 19884   001D4E                     __ptext99:
 19885                           	callstack 0
 19886   001D4E                     _I2C1_SlaveIsAddr:
 19887                           	callstack 19
 19888                           
 19889                           ;mcc_generated_files/i2c1_slave.c: 348:     return !(SSP1STATbits.D_nA);
 19890                           
 19891                           ;incstack = 0
 19892   001D4E  BA94               	btfsc	148,5,c	;volatile
 19893   001D50  D002               	goto	i2u315_40
 19894   001D52  0E01               	movlw	1
 19895   001D54  0012               	return	
 19896   001D56                     i2u315_40:
 19897   001D56  0E00               	movlw	0
 19898   001D58  0012               	return		;funcret
 19899   001D5A                     __end_of_I2C1_SlaveIsAddr:
 19900                           	callstack 0
 19901                           
 19902 ;; *************** function _I2C1_SlaveClearIrq *****************
 19903 ;; Defined at:
 19904 ;;		line 356 in file "mcc_generated_files/i2c1_slave.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;		None
 19907 ;; Auto vars:     Size  Location     Type
 19908 ;;		None
 19909 ;; Return value:  Size  Location     Type
 19910 ;;                  1    wreg      void 
 19911 ;; Registers used:
 19912 ;;		None
 19913 ;; Tracked objects:
 19914 ;;		On entry : 0/0
 19915 ;;		On exit  : 0/0
 19916 ;;		Unchanged: 0/0
 19917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19918 ;;      Params:         0       0       0       0       0
 19919 ;;      Locals:         0       0       0       0       0
 19920 ;;      Temps:          0       0       0       0       0
 19921 ;;      Totals:         0       0       0       0       0
 19922 ;;Total ram usage:        0 bytes
 19923 ;; Hardware stack levels used: 1
 19924 ;; This function calls:
 19925 ;;		Nothing
 19926 ;; This function is called by:
 19927 ;;		_I2C1_Isr
 19928 ;; This function uses a non-reentrant model
 19929 ;;
 19930                           
 19931                           	psect	text100
 19932   001E30                     __ptext100:
 19933                           	callstack 0
 19934   001E30                     _I2C1_SlaveClearIrq:
 19935                           	callstack 19
 19936                           
 19937                           ;mcc_generated_files/i2c1_slave.c: 358:     PIR3bits.SSP1IF = 0;
 19938                           
 19939                           ;incstack = 0
 19940   001E30  010E               	movlb	14	; () banked
 19941   001E32  91C8               	bcf	200,0,b	;volatile
 19942                           
 19943                           ; BSR set to: 14
 19944   001E34  0012               	return		;funcret
 19945   001E36                     __end_of_I2C1_SlaveClearIrq:
 19946                           	callstack 0
 19947                           
 19948 ;; *************** function _I2C1_SlaveAddrCallBack *****************
 19949 ;; Defined at:
 19950 ;;		line 267 in file "mcc_generated_files/i2c1_slave.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;		None
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;		None
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      void 
 19957 ;; Registers used:
 19958 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 19964 ;;      Params:         0       0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used: 1
 19970 ;; Hardware stack levels required when called: 3
 19971 ;; This function calls:
 19972 ;;		NULL
 19973 ;;		_I2C1_SlaveDefAddrInterruptHandler
 19974 ;;		_SlaveRdDevAddrFromBus
 19975 ;; This function is called by:
 19976 ;;		_I2C1_Isr
 19977 ;; This function uses a non-reentrant model
 19978 ;;
 19979                           
 19980                           	psect	text101
 19981   001AE6                     __ptext101:
 19982                           	callstack 0
 19983   001AE6                     _I2C1_SlaveAddrCallBack:
 19984                           	callstack 16
 19985                           
 19986                           ;mcc_generated_files/i2c1_slave.c: 269:     if (I2C1_SlaveAddrInterruptHandler) {
 19987                           
 19988                           ; BSR set to: 14
 19989                           ;incstack = 0
 19990   001AE6  0100               	movlb	0	; () banked
 19991   001AE8  51C5               	movf	_I2C1_SlaveAddrInterruptHandler& (0+255),w,b
 19992   001AEA  11C6               	iorwf	(_I2C1_SlaveAddrInterruptHandler+1)& (0+255),w,b
 19993   001AEC  B4D8               	btfsc	status,2,c
 19994   001AEE  0012               	return	
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;mcc_generated_files/i2c1_slave.c: 270:         I2C1_SlaveAddrInterruptHandler();
 19998   001AF0  D801               	call	i2u318_48
 19999   001AF2  0012               	return	
 20000   001AF4                     i2u318_48:
 20001   001AF4  0005               	push	
 20002   001AF6  6EFA               	movwf	pclath,c
 20003   001AF8  51C5               	movf	_I2C1_SlaveAddrInterruptHandler& (0+255),w,b
 20004   001AFA  6EFD               	movwf	tosl,c
 20005   001AFC  51C6               	movf	(_I2C1_SlaveAddrInterruptHandler+1)& (0+255),w,b
 20006   001AFE  6EFE               	movwf	tosh,c
 20007   001B00  50F8               	movf	tblptru,w,c
 20008   001B02  6EFF               	movwf	tosu,c
 20009   001B04  50FA               	movf	pclath,w,c
 20010   001B06  0012               	return		;indir
 20011   001B08                     __end_of_I2C1_SlaveAddrCallBack:
 20012                           	callstack 0
 20013                           
 20014 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
 20015 ;; Defined at:
 20016 ;;		line 274 in file "mcc_generated_files/i2c1_slave.c"
 20017 ;; Parameters:    Size  Location     Type
 20018 ;;		None
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;		None
 20021 ;; Return value:  Size  Location     Type
 20022 ;;                  1    wreg      void 
 20023 ;; Registers used:
 20024 ;;		wreg, status,2, cstack
 20025 ;; Tracked objects:
 20026 ;;		On entry : 0/0
 20027 ;;		On exit  : 0/0
 20028 ;;		Unchanged: 0/0
 20029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20030 ;;      Params:         0       0       0       0       0
 20031 ;;      Locals:         0       0       0       0       0
 20032 ;;      Temps:          0       0       0       0       0
 20033 ;;      Totals:         0       0       0       0       0
 20034 ;;Total ram usage:        0 bytes
 20035 ;; Hardware stack levels used: 1
 20036 ;; Hardware stack levels required when called: 1
 20037 ;; This function calls:
 20038 ;;		_I2C1_SlaveGetRxData
 20039 ;; This function is called by:
 20040 ;;		_I2C1_Open
 20041 ;;		_I2C1_SlaveAddrCallBack
 20042 ;; This function uses a non-reentrant model
 20043 ;;
 20044                           
 20045                           	psect	text102
 20046   001DE8                     __ptext102:
 20047                           	callstack 0
 20048   001DE8                     _I2C1_SlaveDefAddrInterruptHandler:
 20049                           	callstack 17
 20050                           
 20051                           ;mcc_generated_files/i2c1_slave.c: 275:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
 20052                           
 20053                           ;incstack = 0
 20054   001DE8  EC2B  F00F         	call	_I2C1_SlaveGetRxData	;wreg free
 20055   001DEC  0100               	movlb	0	; () banked
 20056   001DEE  6FCE               	movwf	_i2c1SlaveAddr& (0+255),b	;volatile
 20057                           
 20058                           ; BSR set to: 0
 20059   001DF0  0012               	return		;funcret
 20060   001DF2                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
 20061                           	callstack 0
 20062                           
 20063 ;; *************** function _SlaveRdDevAddrFromBus *****************
 20064 ;; Defined at:
 20065 ;;		line 44 in file "i2c_slave.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;		None
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;		None
 20070 ;; Return value:  Size  Location     Type
 20071 ;;                  1    wreg      void 
 20072 ;; Registers used:
 20073 ;;		wreg, status,2, cstack
 20074 ;; Tracked objects:
 20075 ;;		On entry : 0/0
 20076 ;;		On exit  : 0/0
 20077 ;;		Unchanged: 0/0
 20078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20079 ;;      Params:         0       0       0       0       0
 20080 ;;      Locals:         0       0       0       0       0
 20081 ;;      Temps:          0       0       0       0       0
 20082 ;;      Totals:         0       0       0       0       0
 20083 ;;Total ram usage:        0 bytes
 20084 ;; Hardware stack levels used: 1
 20085 ;; Hardware stack levels required when called: 2
 20086 ;; This function calls:
 20087 ;;		_I2C1_IsRead
 20088 ;;		_I2C1_Read
 20089 ;;		_TestForStopBit
 20090 ;; This function is called by:
 20091 ;;		_i2c_slave_init
 20092 ;;		_I2C1_SlaveAddrCallBack
 20093 ;; This function uses a non-reentrant model
 20094 ;;
 20095                           
 20096                           	psect	text103
 20097   001A36                     __ptext103:
 20098                           	callstack 0
 20099   001A36                     _SlaveRdDevAddrFromBus:
 20100                           	callstack 16
 20101                           
 20102                           ;i2c_slave.c: 46:     i2c.byteNo = 0;
 20103                           
 20104                           ; BSR set to: 0
 20105                           ;incstack = 0
 20106   001A36  0100               	movlb	0	; () banked
 20107   001A38  6BD9               	clrf	(_i2c+8)& (0+255),b	;volatile
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;i2c_slave.c: 47:     if(TestForStopBit())
 20111   001A3A  EC55  F00E         	call	_TestForStopBit	;wreg free
 20112   001A3E  0900               	iorlw	0
 20113   001A40  A4D8               	btfss	status,2,c
 20114   001A42  0012               	return	
 20115                           
 20116                           ;i2c_slave.c: 51:     i2c.rxSlaveAddr = I2C1_Read();
 20117   001A44  EC1B  F00F         	call	_I2C1_Read	;wreg free
 20118   001A48  0100               	movlb	0	; () banked
 20119   001A4A  6FD1               	movwf	_i2c& (0+255),b	;volatile
 20120                           
 20121                           ;i2c_slave.c: 52:     if(!I2C1_IsRead())
 20122   001A4C  EC1E  F00F         	call	_I2C1_IsRead	;wreg free
 20123   001A50  0900               	iorlw	0
 20124   001A52  A4D8               	btfss	status,2,c
 20125   001A54  0012               	return	
 20126                           
 20127                           ;i2c_slave.c: 53:         i2c.state = eAddrH;
 20128   001A56  0E01               	movlw	1
 20129   001A58  0100               	movlb	0	; () banked
 20130   001A5A  6FD4               	movwf	(_i2c+3)& (0+255),b	;volatile
 20131   001A5C  0012               	return		;funcret
 20132   001A5E                     __end_of_SlaveRdDevAddrFromBus:
 20133                           	callstack 0
 20134                           
 20135 ;; *************** function _TestForStopBit *****************
 20136 ;; Defined at:
 20137 ;;		line 33 in file "i2c_slave.c"
 20138 ;; Parameters:    Size  Location     Type
 20139 ;;		None
 20140 ;; Auto vars:     Size  Location     Type
 20141 ;;		None
 20142 ;; Return value:  Size  Location     Type
 20143 ;;                  1    wreg      _Bool 
 20144 ;; Registers used:
 20145 ;;		wreg
 20146 ;; Tracked objects:
 20147 ;;		On entry : 0/0
 20148 ;;		On exit  : 0/0
 20149 ;;		Unchanged: 0/0
 20150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20151 ;;      Params:         0       0       0       0       0
 20152 ;;      Locals:         0       0       0       0       0
 20153 ;;      Temps:          0       0       0       0       0
 20154 ;;      Totals:         0       0       0       0       0
 20155 ;;Total ram usage:        0 bytes
 20156 ;; Hardware stack levels used: 1
 20157 ;; This function calls:
 20158 ;;		Nothing
 20159 ;; This function is called by:
 20160 ;;		_SlaveRdDevAddrFromBus
 20161 ;;		_MasterR_SlaveW
 20162 ;;		_MasterW_SlaveR
 20163 ;; This function uses a non-reentrant model
 20164 ;;
 20165                           
 20166                           	psect	text104
 20167   001CAA                     __ptext104:
 20168                           	callstack 0
 20169   001CAA                     _TestForStopBit:
 20170                           	callstack 17
 20171                           
 20172                           ;i2c_slave.c: 35:     if(SSP1STATbits.P)
 20173                           
 20174                           ;incstack = 0
 20175   001CAA  A894               	btfss	148,4,c	;volatile
 20176   001CAC  D004               	goto	i2l4698
 20177                           
 20178                           ;i2c_slave.c: 36:     {;i2c_slave.c: 37:       i2c.state = eIdle;
 20179   001CAE  0100               	movlb	0	; () banked
 20180   001CB0  6BD4               	clrf	(_i2c+3)& (0+255),b	;volatile
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;i2c_slave.c: 39:       return 1;
 20184   001CB2  0E01               	movlw	1
 20185   001CB4  0012               	return	
 20186   001CB6                     i2l4698:
 20187                           
 20188                           ;i2c_slave.c: 41:     return 0;
 20189   001CB6  0E00               	movlw	0
 20190   001CB8  0012               	return		;funcret
 20191   001CBA                     __end_of_TestForStopBit:
 20192                           	callstack 0
 20193                           
 20194 ;; *************** function _I2C1_Read *****************
 20195 ;; Defined at:
 20196 ;;		line 135 in file "mcc_generated_files/i2c1_slave.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;		None
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;		None
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  1    wreg      unsigned char 
 20203 ;; Registers used:
 20204 ;;		wreg, status,2, cstack
 20205 ;; Tracked objects:
 20206 ;;		On entry : 0/0
 20207 ;;		On exit  : 0/0
 20208 ;;		Unchanged: 0/0
 20209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20210 ;;      Params:         0       0       0       0       0
 20211 ;;      Locals:         0       0       0       0       0
 20212 ;;      Temps:          0       0       0       0       0
 20213 ;;      Totals:         0       0       0       0       0
 20214 ;;Total ram usage:        0 bytes
 20215 ;; Hardware stack levels used: 1
 20216 ;; Hardware stack levels required when called: 1
 20217 ;; This function calls:
 20218 ;;		_I2C1_SlaveGetRxData
 20219 ;; This function is called by:
 20220 ;;		_SlaveRdDevAddrFromBus
 20221 ;;		_MasterW_SlaveR
 20222 ;; This function uses a non-reentrant model
 20223 ;;
 20224                           
 20225                           	psect	text105
 20226   001E36                     __ptext105:
 20227                           	callstack 0
 20228   001E36                     _I2C1_Read:
 20229                           	callstack 16
 20230                           
 20231                           ;mcc_generated_files/i2c1_slave.c: 137:    return I2C1_SlaveGetRxData();
 20232                           
 20233                           ;incstack = 0
 20234   001E36  EC2B  F00F         	call	_I2C1_SlaveGetRxData	;wreg free
 20235   001E3A  0012               	return		;funcret
 20236   001E3C                     __end_of_I2C1_Read:
 20237                           	callstack 0
 20238                           
 20239 ;; *************** function _I2C1_IsRead *****************
 20240 ;; Defined at:
 20241 ;;		line 145 in file "mcc_generated_files/i2c1_slave.c"
 20242 ;; Parameters:    Size  Location     Type
 20243 ;;		None
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;		None
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      _Bool 
 20248 ;; Registers used:
 20249 ;;		wreg, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20255 ;;      Params:         0       0       0       0       0
 20256 ;;      Locals:         0       0       0       0       0
 20257 ;;      Temps:          0       0       0       0       0
 20258 ;;      Totals:         0       0       0       0       0
 20259 ;;Total ram usage:        0 bytes
 20260 ;; Hardware stack levels used: 1
 20261 ;; Hardware stack levels required when called: 1
 20262 ;; This function calls:
 20263 ;;		_I2C1_SlaveIsRead
 20264 ;; This function is called by:
 20265 ;;		_SlaveRdDevAddrFromBus
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text106
 20270   001E3C                     __ptext106:
 20271                           	callstack 0
 20272   001E3C                     _I2C1_IsRead:
 20273                           	callstack 16
 20274                           
 20275                           ;mcc_generated_files/i2c1_slave.c: 147:     return I2C1_SlaveIsRead();
 20276                           
 20277                           ;incstack = 0
 20278   001E3C  ECAD  F00E         	call	_I2C1_SlaveIsRead	;wreg free
 20279   001E40  0012               	return		;funcret
 20280   001E42                     __end_of_I2C1_IsRead:
 20281                           	callstack 0
 20282                           
 20283 ;; *************** function _I2C1_SlaveIsRead *****************
 20284 ;; Defined at:
 20285 ;;		line 351 in file "mcc_generated_files/i2c1_slave.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;		None
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;		None
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  1    wreg      _Bool 
 20292 ;; Registers used:
 20293 ;;		wreg
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/0
 20296 ;;		On exit  : 0/0
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20299 ;;      Params:         0       0       0       0       0
 20300 ;;      Locals:         0       0       0       0       0
 20301 ;;      Temps:          0       0       0       0       0
 20302 ;;      Totals:         0       0       0       0       0
 20303 ;;Total ram usage:        0 bytes
 20304 ;; Hardware stack levels used: 1
 20305 ;; This function calls:
 20306 ;;		Nothing
 20307 ;; This function is called by:
 20308 ;;		_I2C1_IsRead
 20309 ;;		_I2C1_Isr
 20310 ;; This function uses a non-reentrant model
 20311 ;;
 20312                           
 20313                           	psect	text107
 20314   001D5A                     __ptext107:
 20315                           	callstack 0
 20316   001D5A                     _I2C1_SlaveIsRead:
 20317                           	callstack 19
 20318                           
 20319                           ;mcc_generated_files/i2c1_slave.c: 353:     return (SSP1STATbits.R_nW);
 20320                           
 20321                           ;incstack = 0
 20322   001D5A  A494               	btfss	148,2,c	;volatile
 20323   001D5C  D002               	goto	i2u277_40
 20324   001D5E  0E01               	movlw	1
 20325   001D60  0012               	return	
 20326   001D62                     i2u277_40:
 20327   001D62  0E00               	movlw	0
 20328   001D64  0012               	return		;funcret
 20329   001D66                     __end_of_I2C1_SlaveIsRead:
 20330                           	callstack 0
 20331                           
 20332 ;; *************** function _I2C1_SlaveGetRxData *****************
 20333 ;; Defined at:
 20334 ;;		line 396 in file "mcc_generated_files/i2c1_slave.c"
 20335 ;; Parameters:    Size  Location     Type
 20336 ;;		None
 20337 ;; Auto vars:     Size  Location     Type
 20338 ;;		None
 20339 ;; Return value:  Size  Location     Type
 20340 ;;                  1    wreg      unsigned char 
 20341 ;; Registers used:
 20342 ;;		wreg, status,2
 20343 ;; Tracked objects:
 20344 ;;		On entry : 0/0
 20345 ;;		On exit  : 0/0
 20346 ;;		Unchanged: 0/0
 20347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20348 ;;      Params:         0       0       0       0       0
 20349 ;;      Locals:         0       0       0       0       0
 20350 ;;      Temps:          0       0       0       0       0
 20351 ;;      Totals:         0       0       0       0       0
 20352 ;;Total ram usage:        0 bytes
 20353 ;; Hardware stack levels used: 1
 20354 ;; This function calls:
 20355 ;;		Nothing
 20356 ;; This function is called by:
 20357 ;;		_I2C1_Read
 20358 ;;		_I2C1_SlaveDefRdInterruptHandler
 20359 ;;		_I2C1_SlaveDefAddrInterruptHandler
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text108
 20364   001E56                     __ptext108:
 20365                           	callstack 0
 20366   001E56                     _I2C1_SlaveGetRxData:
 20367                           	callstack 16
 20368                           
 20369                           ;mcc_generated_files/i2c1_slave.c: 398:     return SSP1BUF;
 20370                           
 20371                           ;incstack = 0
 20372   001E56  5091               	movf	145,w,c	;volatile
 20373   001E58  0012               	return		;funcret
 20374   001E5A                     __end_of_I2C1_SlaveGetRxData:
 20375                           	callstack 0
 20376                           
 20377 ;; *************** function _EUSART1_Transmit_ISR *****************
 20378 ;; Defined at:
 20379 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;		None
 20382 ;; Auto vars:     Size  Location     Type
 20383 ;;		None
 20384 ;; Return value:  Size  Location     Type
 20385 ;;                  1    wreg      void 
 20386 ;; Registers used:
 20387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20388 ;; Tracked objects:
 20389 ;;		On entry : 0/0
 20390 ;;		On exit  : 0/0
 20391 ;;		Unchanged: 0/0
 20392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20393 ;;      Params:         0       0       0       0       0
 20394 ;;      Locals:         0       0       0       0       0
 20395 ;;      Temps:          0       0       0       0       0
 20396 ;;      Totals:         0       0       0       0       0
 20397 ;;Total ram usage:        0 bytes
 20398 ;; Hardware stack levels used: 1
 20399 ;; This function calls:
 20400 ;;		Nothing
 20401 ;; This function is called by:
 20402 ;;		_EUSART1_Initialize
 20403 ;;		_INTERRUPT_InterruptManager
 20404 ;; This function uses a non-reentrant model
 20405 ;;
 20406                           
 20407                           	psect	text109
 20408   001A0C                     __ptext109:
 20409                           	callstack 0
 20410   001A0C                     _EUSART1_Transmit_ISR:
 20411                           	callstack 20
 20412                           
 20413                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 20414                           
 20415                           ;incstack = 0
 20416   001A0C  0E40               	movlw	64
 20417   001A0E  605D               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
 20418   001A10  D00F               	goto	i2l112
 20419                           
 20420                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 20421   001A12  0E80               	movlw	low _eusart1TxBuffer
 20422   001A14  245E               	addwf	_eusart1TxTail^0,w,c	;volatile
 20423   001A16  6ED9               	movwf	fsr2l,c
 20424   001A18  6ADA               	clrf	fsr2h,c
 20425   001A1A  0E01               	movlw	high _eusart1TxBuffer
 20426   001A1C  22DA               	addwfc	fsr2h,f,c
 20427   001A1E  50DF               	movf	indf2,w,c
 20428   001A20  6E99               	movwf	153,c	;volatile
 20429   001A22  2A5E               	incf	_eusart1TxTail^0,f,c	;volatile
 20430                           
 20431                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 20432   001A24  0E3F               	movlw	63
 20433   001A26  645E               	cpfsgt	_eusart1TxTail^0,c	;volatile
 20434   001A28  D001               	goto	i2l5128
 20435                           
 20436                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 20437   001A2A  6A5E               	clrf	_eusart1TxTail^0,c	;volatile
 20438   001A2C                     i2l5128:
 20439                           
 20440                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 20441   001A2C  2A5D               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
 20442                           
 20443                           ;mcc_generated_files/eusart1.c: 218:     }
 20444   001A2E  0012               	return	
 20445   001A30                     i2l112:
 20446                           
 20447                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 20448   001A30  010E               	movlb	14	; () banked
 20449   001A32  99C0               	bcf	192,4,b	;volatile
 20450   001A34  0012               	return		;funcret
 20451   001A36                     __end_of_EUSART1_Transmit_ISR:
 20452                           	callstack 0
 20453                           
 20454 ;; *************** function _EUSART1_Receive_ISR *****************
 20455 ;; Defined at:
 20456 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;		None
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;		None
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      void 
 20463 ;; Registers used:
 20464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20470 ;;      Params:         0       0       0       0       0
 20471 ;;      Locals:         0       0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0
 20473 ;;      Totals:         0       0       0       0       0
 20474 ;;Total ram usage:        0 bytes
 20475 ;; Hardware stack levels used: 1
 20476 ;; Hardware stack levels required when called: 2
 20477 ;; This function calls:
 20478 ;;		NULL
 20479 ;;		_EUSART1_DefaultErrorHandler
 20480 ;;		_EUSART1_DefaultFramingErrorHandler
 20481 ;;		_EUSART1_DefaultOverrunErrorHandler
 20482 ;;		_EUSART1_RxDataHandler
 20483 ;; This function is called by:
 20484 ;;		_EUSART1_Initialize
 20485 ;;		_INTERRUPT_InterruptManager
 20486 ;; This function uses a non-reentrant model
 20487 ;;
 20488                           
 20489                           	psect	text110
 20490   000DFA                     __ptext110:
 20491                           	callstack 0
 20492   000DFA                     _EUSART1_Receive_ISR:
 20493                           	callstack 18
 20494                           
 20495                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 20496                           
 20497                           ;incstack = 0
 20498   000DFA  0E00               	movlw	low _eusart1RxStatusBuffer
 20499   000DFC  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 20500   000DFE  6ED9               	movwf	fsr2l,c
 20501   000E00  6ADA               	clrf	fsr2h,c
 20502   000E02  0E01               	movlw	high _eusart1RxStatusBuffer
 20503   000E04  22DA               	addwfc	fsr2h,f,c
 20504   000E06  6ADF               	clrf	indf2,c
 20505                           
 20506                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 20507   000E08  A49C               	btfss	156,2,c	;volatile
 20508   000E0A  D015               	goto	i2u337_49
 20509                           
 20510                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 20511   000E0C  0E00               	movlw	low _eusart1RxStatusBuffer
 20512   000E0E  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 20513   000E10  6ED9               	movwf	fsr2l,c
 20514   000E12  6ADA               	clrf	fsr2h,c
 20515   000E14  0E01               	movlw	high _eusart1RxStatusBuffer
 20516   000E16  22DA               	addwfc	fsr2h,f,c
 20517   000E18  0101               	movlb	1	; () banked
 20518   000E1A  82DF               	bsf	indf2,1,c
 20519                           
 20520                           ; BSR set to: 1
 20521                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 20522   000E1C  D801               	call	i2u337_48
 20523   000E1E  D00B               	goto	i2u337_49
 20524   000E20                     i2u337_48:
 20525   000E20  0005               	push	
 20526   000E22  0100               	movlb	0	; () banked
 20527   000E24  6EFA               	movwf	pclath,c
 20528   000E26  51ED               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 20529   000E28  6EFD               	movwf	tosl,c
 20530   000E2A  51EE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 20531   000E2C  6EFE               	movwf	tosh,c
 20532   000E2E  50F8               	movf	tblptru,w,c
 20533   000E30  6EFF               	movwf	tosu,c
 20534   000E32  50FA               	movf	pclath,w,c
 20535   000E34  0012               	return		;indir
 20536   000E36                     i2u337_49:
 20537                           
 20538                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 20539   000E36  A29C               	btfss	156,1,c	;volatile
 20540   000E38  D015               	goto	i2u339_49
 20541                           
 20542                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 20543   000E3A  0E00               	movlw	low _eusart1RxStatusBuffer
 20544   000E3C  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 20545   000E3E  6ED9               	movwf	fsr2l,c
 20546   000E40  6ADA               	clrf	fsr2h,c
 20547   000E42  0E01               	movlw	high _eusart1RxStatusBuffer
 20548   000E44  22DA               	addwfc	fsr2h,f,c
 20549   000E46  0101               	movlb	1	; () banked
 20550   000E48  84DF               	bsf	indf2,2,c
 20551                           
 20552                           ; BSR set to: 1
 20553                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 20554   000E4A  D801               	call	i2u339_48
 20555   000E4C  D00B               	goto	i2u339_49
 20556   000E4E                     i2u339_48:
 20557   000E4E  0005               	push	
 20558   000E50  0100               	movlb	0	; () banked
 20559   000E52  6EFA               	movwf	pclath,c
 20560   000E54  51EB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 20561   000E56  6EFD               	movwf	tosl,c
 20562   000E58  51EC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 20563   000E5A  6EFE               	movwf	tosh,c
 20564   000E5C  50F8               	movf	tblptru,w,c
 20565   000E5E  6EFF               	movwf	tosu,c
 20566   000E60  50FA               	movf	pclath,w,c
 20567   000E62  0012               	return		;indir
 20568   000E64                     i2u339_49:
 20569                           
 20570                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 20571   000E64  0E00               	movlw	low _eusart1RxStatusBuffer
 20572   000E66  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 20573   000E68  6ED9               	movwf	fsr2l,c
 20574   000E6A  6ADA               	clrf	fsr2h,c
 20575   000E6C  0E01               	movlw	high _eusart1RxStatusBuffer
 20576   000E6E  22DA               	addwfc	fsr2h,f,c
 20577   000E70  50DF               	movf	indf2,w,c
 20578   000E72  B4D8               	btfsc	status,2,c
 20579   000E74  D00D               	goto	i2l5148
 20580                           
 20581                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 20582   000E76  D801               	call	i2u341_48
 20583   000E78  0012               	return	
 20584   000E7A                     i2u341_48:
 20585   000E7A  0005               	push	
 20586   000E7C  0100               	movlb	0	; () banked
 20587   000E7E  6EFA               	movwf	pclath,c
 20588   000E80  51E9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 20589   000E82  6EFD               	movwf	tosl,c
 20590   000E84  51EA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 20591   000E86  6EFE               	movwf	tosh,c
 20592   000E88  50F8               	movf	tblptru,w,c
 20593   000E8A  6EFF               	movwf	tosu,c
 20594   000E8C  50FA               	movf	pclath,w,c
 20595   000E8E  0012               	return		;indir
 20596   000E90                     i2l5148:
 20597                           
 20598                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 20599   000E90  EC94  F00D         	call	_EUSART1_RxDataHandler	;wreg free
 20600   000E94  0012               	return		;funcret
 20601   000E96                     __end_of_EUSART1_Receive_ISR:
 20602                           	callstack 0
 20603                           
 20604 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 20605 ;; Defined at:
 20606 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 20607 ;; Parameters:    Size  Location     Type
 20608 ;;		None
 20609 ;; Auto vars:     Size  Location     Type
 20610 ;;		None
 20611 ;; Return value:  Size  Location     Type
 20612 ;;                  1    wreg      void 
 20613 ;; Registers used:
 20614 ;;		None
 20615 ;; Tracked objects:
 20616 ;;		On entry : 0/0
 20617 ;;		On exit  : 0/0
 20618 ;;		Unchanged: 0/0
 20619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20620 ;;      Params:         0       0       0       0       0
 20621 ;;      Locals:         0       0       0       0       0
 20622 ;;      Temps:          0       0       0       0       0
 20623 ;;      Totals:         0       0       0       0       0
 20624 ;;Total ram usage:        0 bytes
 20625 ;; Hardware stack levels used: 1
 20626 ;; This function calls:
 20627 ;;		Nothing
 20628 ;; This function is called by:
 20629 ;;		_EUSART1_Initialize
 20630 ;;		_EUSART1_Receive_ISR
 20631 ;; This function uses a non-reentrant model
 20632 ;;
 20633                           
 20634                           	psect	text111
 20635   001E42                     __ptext111:
 20636                           	callstack 0
 20637   001E42                     _EUSART1_DefaultOverrunErrorHandler:
 20638                           	callstack 19
 20639                           
 20640                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 20641                           
 20642                           ;incstack = 0
 20643   001E42  989C               	bcf	156,4,c	;volatile
 20644                           
 20645                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 20646   001E44  889C               	bsf	156,4,c	;volatile
 20647   001E46  0012               	return		;funcret
 20648   001E48                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 20649                           	callstack 0
 20650                           
 20651 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 20652 ;; Defined at:
 20653 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 20654 ;; Parameters:    Size  Location     Type
 20655 ;;		None
 20656 ;; Auto vars:     Size  Location     Type
 20657 ;;		None
 20658 ;; Return value:  Size  Location     Type
 20659 ;;                  1    wreg      void 
 20660 ;; Registers used:
 20661 ;;		None
 20662 ;; Tracked objects:
 20663 ;;		On entry : 0/0
 20664 ;;		On exit  : 0/0
 20665 ;;		Unchanged: 0/0
 20666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20667 ;;      Params:         0       0       0       0       0
 20668 ;;      Locals:         0       0       0       0       0
 20669 ;;      Temps:          0       0       0       0       0
 20670 ;;      Totals:         0       0       0       0       0
 20671 ;;Total ram usage:        0 bytes
 20672 ;; Hardware stack levels used: 1
 20673 ;; This function calls:
 20674 ;;		Nothing
 20675 ;; This function is called by:
 20676 ;;		_EUSART1_Initialize
 20677 ;;		_EUSART1_Receive_ISR
 20678 ;; This function uses a non-reentrant model
 20679 ;;
 20680                           
 20681                           	psect	text112
 20682   001E5C                     __ptext112:
 20683                           	callstack 0
 20684   001E5C                     _EUSART1_DefaultFramingErrorHandler:
 20685                           	callstack 19
 20686                           
 20687                           ;incstack = 0
 20688   001E5C  0012               	return		;funcret
 20689   001E5E                     __end_of_EUSART1_DefaultFramingErrorHandler:
 20690                           	callstack 0
 20691                           
 20692 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 20693 ;; Defined at:
 20694 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 20695 ;; Parameters:    Size  Location     Type
 20696 ;;		None
 20697 ;; Auto vars:     Size  Location     Type
 20698 ;;		None
 20699 ;; Return value:  Size  Location     Type
 20700 ;;                  1    wreg      void 
 20701 ;; Registers used:
 20702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20703 ;; Tracked objects:
 20704 ;;		On entry : 0/0
 20705 ;;		On exit  : 0/0
 20706 ;;		Unchanged: 0/0
 20707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20708 ;;      Params:         0       0       0       0       0
 20709 ;;      Locals:         0       0       0       0       0
 20710 ;;      Temps:          0       0       0       0       0
 20711 ;;      Totals:         0       0       0       0       0
 20712 ;;Total ram usage:        0 bytes
 20713 ;; Hardware stack levels used: 1
 20714 ;; Hardware stack levels required when called: 1
 20715 ;; This function calls:
 20716 ;;		_EUSART1_RxDataHandler
 20717 ;; This function is called by:
 20718 ;;		_EUSART1_Initialize
 20719 ;;		_EUSART1_Receive_ISR
 20720 ;; This function uses a non-reentrant model
 20721 ;;
 20722                           
 20723                           	psect	text113
 20724   001E48                     __ptext113:
 20725                           	callstack 0
 20726   001E48                     _EUSART1_DefaultErrorHandler:
 20727                           	callstack 18
 20728                           
 20729                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 20730                           
 20731                           ;incstack = 0
 20732   001E48  EC94  F00D         	call	_EUSART1_RxDataHandler	;wreg free
 20733   001E4C  0012               	return		;funcret
 20734   001E4E                     __end_of_EUSART1_DefaultErrorHandler:
 20735                           	callstack 0
 20736                           
 20737 ;; *************** function _EUSART1_RxDataHandler *****************
 20738 ;; Defined at:
 20739 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 20740 ;; Parameters:    Size  Location     Type
 20741 ;;		None
 20742 ;; Auto vars:     Size  Location     Type
 20743 ;;		None
 20744 ;; Return value:  Size  Location     Type
 20745 ;;                  1    wreg      void 
 20746 ;; Registers used:
 20747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20748 ;; Tracked objects:
 20749 ;;		On entry : 0/0
 20750 ;;		On exit  : 0/0
 20751 ;;		Unchanged: 0/0
 20752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 20753 ;;      Params:         0       0       0       0       0
 20754 ;;      Locals:         0       0       0       0       0
 20755 ;;      Temps:          0       0       0       0       0
 20756 ;;      Totals:         0       0       0       0       0
 20757 ;;Total ram usage:        0 bytes
 20758 ;; Hardware stack levels used: 1
 20759 ;; This function calls:
 20760 ;;		Nothing
 20761 ;; This function is called by:
 20762 ;;		_EUSART1_Receive_ISR
 20763 ;;		_EUSART1_DefaultErrorHandler
 20764 ;; This function uses a non-reentrant model
 20765 ;;
 20766                           
 20767                           	psect	text114
 20768   001B28                     __ptext114:
 20769                           	callstack 0
 20770   001B28                     _EUSART1_RxDataHandler:
 20771                           	callstack 19
 20772                           
 20773                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 20774                           
 20775                           ;incstack = 0
 20776   001B28  0E40               	movlw	low _eusart1RxBuffer
 20777   001B2A  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 20778   001B2C  6ED9               	movwf	fsr2l,c
 20779   001B2E  6ADA               	clrf	fsr2h,c
 20780   001B30  0E01               	movlw	high _eusart1RxBuffer
 20781   001B32  22DA               	addwfc	fsr2h,f,c
 20782   001B34  CF98 FFDF          	movff	3992,indf2	;volatile
 20783   001B38  2A5C               	incf	_eusart1RxHead^0,f,c	;volatile
 20784                           
 20785                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 20786   001B3A  0E3F               	movlw	63
 20787   001B3C  645C               	cpfsgt	_eusart1RxHead^0,c	;volatile
 20788   001B3E  D001               	goto	i2l4720
 20789                           
 20790                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 20791   001B40  6A5C               	clrf	_eusart1RxHead^0,c	;volatile
 20792   001B42                     i2l4720:
 20793                           
 20794                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 20795   001B42  2A5A               	incf	_eusart1RxCount^0,f,c	;volatile
 20796   001B44  0012               	return		;funcret
 20797   001B46                     __end_of_EUSART1_RxDataHandler:
 20798                           	callstack 0
 20799                           
 20800                           	psect	rparam
 20801   000001                     ___rparam_used  equ	1
 20802   000000                     ___param_bank   equ	0
 20803   000000                     __Lparam        equ	__Lrparam
 20804   000000                     __Hparam        equ	__Hrparam
 20805                           
 20806                           	psect	temp
 20807   000037                     btemp:
 20808                           	callstack 0
 20809   000037                     	ds	32
 20810   000037                     wtemp0          set	btemp
 20811   000039                     wtemp1          set	btemp+2
 20812   00003B                     wtemp2          set	btemp+4
 20813   00003D                     wtemp3          set	btemp+6
 20814   00003F                     wtemp4          set	btemp+8
 20815   000041                     wtemp5          set	btemp+10
 20816   000038                     wtemp8          set	btemp+1
 20817   000037                     ttemp0          set	btemp
 20818   00003A                     ttemp1          set	btemp+3
 20819   00003D                     ttemp2          set	btemp+6
 20820   000040                     ttemp3          set	btemp+9
 20821   000038                     ttemp5          set	btemp+1
 20822   00003B                     ttemp6          set	btemp+4
 20823   00003F                     ttemp7          set	btemp+8
 20824   000037                     ltemp0          set	btemp
 20825   00003B                     ltemp1          set	btemp+4
 20826   00003F                     ltemp2          set	btemp+8
 20827   000037                     lltemp0         set	btemp
 20828   00003F                     lltemp1         set	btemp+8
 20829   000047                     lltemp2         set	btemp+16
 20830   00004F                     lltemp3         set	btemp+24
 20831                           
 20832                           	psect	config
 20833                           
 20834                           ;Config register CONFIG1L @ 0x300000
 20835                           ;	External Oscillator mode Selection bits
 20836                           ;	FEXTOSC = OFF, Oscillator not enabled
 20837                           ;	Power-up default value for COSC bits
 20838                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 20839   300000                     	org	3145728
 20840   300000  EC                 	db	236
 20841                           
 20842                           ;Config register CONFIG1H @ 0x300001
 20843                           ;	Clock Out Enable bit
 20844                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 20845                           ;	Clock Switch Enable bit
 20846                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 20847                           ;	Fail-Safe Clock Monitor Enable bit
 20848                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 20849   300001                     	org	3145729
 20850   300001  FF                 	db	255
 20851                           
 20852                           ;Config register CONFIG2L @ 0x300002
 20853                           ;	Master Clear Enable bit
 20854                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 20855                           ;	Power-up Timer Enable bit
 20856                           ;	PWRTE = OFF, Power up timer disabled
 20857                           ;	Low-power BOR enable bit
 20858                           ;	LPBOREN = OFF, Low power BOR is disabled
 20859                           ;	Brown-out Reset Enable bits
 20860                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 20861   300002                     	org	3145730
 20862   300002  FF                 	db	255
 20863                           
 20864                           ;Config register CONFIG2H @ 0x300003
 20865                           ;	Brown Out Reset Voltage selection bits
 20866                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 20867                           ;	ZCD Disable bit
 20868                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 20869                           ;	PPSLOCK bit One-Way Set Enable bit
 20870                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 20871                           ;	Stack Full/Underflow Reset Enable bit
 20872                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20873                           ;	Extended Instruction Set Enable bit
 20874                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 20875   300003                     	org	3145731
 20876   300003  FF                 	db	255
 20877                           
 20878                           ;Config register CONFIG3L @ 0x300004
 20879                           ;	WDT Period Select bits
 20880                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 20881                           ;	WDT operating mode
 20882                           ;	WDTE = OFF, WDT Disabled
 20883   300004                     	org	3145732
 20884   300004  9F                 	db	159
 20885                           
 20886                           ;Config register CONFIG3H @ 0x300005
 20887                           ;	WDT Window Select bits
 20888                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 20889                           ;	WDT input clock selector
 20890                           ;	WDTCCS = SC, Software Control
 20891   300005                     	org	3145733
 20892   300005  FF                 	db	255
 20893                           
 20894                           ;Config register CONFIG4L @ 0x300006
 20895                           ;	Write Protection Block 0
 20896                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20897                           ;	Write Protection Block 1
 20898                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20899   300006                     	org	3145734
 20900   300006  FF                 	db	255
 20901                           
 20902                           ;Config register CONFIG4H @ 0x300007
 20903                           ;	Configuration Register Write Protection bit
 20904                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 20905                           ;	Boot Block Write Protection bit
 20906                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20907                           ;	Data EEPROM Write Protection bit
 20908                           ;	WRTD = OFF, Data EEPROM not write-protected
 20909                           ;	Scanner Enable bit
 20910                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 20911                           ;	Low Voltage Programming Enable bit
 20912                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 20913   300007                     	org	3145735
 20914   300007  FF                 	db	255
 20915                           
 20916                           ;Config register CONFIG5L @ 0x300008
 20917                           ;	UserNVM Program Memory Code Protection bit
 20918                           ;	CP = OFF, UserNVM code protection disabled
 20919                           ;	DataNVM Memory Code Protection bit
 20920                           ;	CPD = OFF, DataNVM code protection disabled
 20921   300008                     	org	3145736
 20922   300008  FF                 	db	255
 20923                           
 20924                           ;Config register CONFIG5H @ 0x300009
 20925                           ;	unspecified, using default values
 20926   300009                     	org	3145737
 20927   300009  FF                 	db	255
 20928                           
 20929                           ;Config register CONFIG6L @ 0x30000A
 20930                           ;	Table Read Protection Block 0
 20931                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20932                           ;	Table Read Protection Block 1
 20933                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20934   30000A                     	org	3145738
 20935   30000A  FF                 	db	255
 20936                           
 20937                           ;Config register CONFIG6H @ 0x30000B
 20938                           ;	Boot Block Table Read Protection bit
 20939                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20940   30000B                     	org	3145739
 20941   30000B  FF                 	db	255
 20942                           tosu	equ	0xFFF
 20943                           tosh	equ	0xFFE
 20944                           tosl	equ	0xFFD
 20945                           stkptr	equ	0xFFC
 20946                           pclatu	equ	0xFFB
 20947                           pclath	equ	0xFFA
 20948                           pcl	equ	0xFF9
 20949                           tblptru	equ	0xFF8
 20950                           tblptrh	equ	0xFF7
 20951                           tblptrl	equ	0xFF6
 20952                           tablat	equ	0xFF5
 20953                           prodh	equ	0xFF4
 20954                           prodl	equ	0xFF3
 20955                           indf0	equ	0xFEF
 20956                           postinc0	equ	0xFEE
 20957                           postdec0	equ	0xFED
 20958                           preinc0	equ	0xFEC
 20959                           plusw0	equ	0xFEB
 20960                           fsr0h	equ	0xFEA
 20961                           fsr0l	equ	0xFE9
 20962                           wreg	equ	0xFE8
 20963                           indf1	equ	0xFE7
 20964                           postinc1	equ	0xFE6
 20965                           postdec1	equ	0xFE5
 20966                           preinc1	equ	0xFE4
 20967                           plusw1	equ	0xFE3
 20968                           fsr1h	equ	0xFE2
 20969                           fsr1l	equ	0xFE1
 20970                           bsr	equ	0xFE0
 20971                           indf2	equ	0xFDF
 20972                           postinc2	equ	0xFDE
 20973                           postdec2	equ	0xFDD
 20974                           preinc2	equ	0xFDC
 20975                           plusw2	equ	0xFDB
 20976                           fsr2h	equ	0xFDA
 20977                           fsr2l	equ	0xFD9
 20978                           status	equ	0xFD8

Data Sizes:
    Strings     270
    Constant    65
    Data        0
    BSS         611
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     54      63
    BANK0           160     15     147
    BANK1           256      0     224
    BANK2           256      0     256
    BANK3           256      0       0

Pointer List with Targets:

    __assert_fail@expr	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_11(CODE[23]), STR_17(CODE[21]), STR_23(CODE[22]), STR_29(CODE[23]), 
		 -> STR_35(CODE[22]), STR_41(CODE[23]), STR_47(CODE[21]), STR_5(CODE[22]), 
		 -> STR_53(CODE[22]), STR_59(CODE[23]), STR_65(CODE[21]), STR_71(CODE[21]), 

    __assert_fail@file	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_12(CODE[12]), STR_18(CODE[12]), STR_24(CODE[12]), STR_30(CODE[12]), 
		 -> STR_36(CODE[12]), STR_42(CODE[12]), STR_48(CODE[12]), STR_54(CODE[12]), 
		 -> STR_6(CODE[12]), STR_60(CODE[12]), STR_66(CODE[9]), STR_72(CODE[9]), 

    __assert_fail@func	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[8]), STR_19(CODE[8]), STR_25(CODE[8]), STR_31(CODE[8]), 
		 -> STR_37(CODE[9]), STR_43(CODE[9]), STR_49(CODE[9]), STR_55(CODE[9]), 
		 -> STR_61(CODE[9]), STR_67(CODE[26]), STR_7(CODE[8]), STR_73(CODE[23]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    from_slave_func$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    from_slave_func$1	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    handle_read_cmd@wb	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    i2c$from_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    i2c$to_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), SlaveRdDevAddrFromBus(), NULL(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), NULL(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), MasterW_SlaveR(), NULL(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), SlaveRdDevAddrFromBus(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), MasterW_SlaveR(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), MasterR_SlaveW(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), NULL(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), MasterR_SlaveW(), NULL(), 

    i2c_read_from_slave_cb@addr	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    i2c_read_from_slave_cb@wb	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    i2c_slave_init@from_slave_func	PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    i2c_slave_init@to_slave_func	PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    i2c_write_to_slave_cb@addr	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), NULL(), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    pwm_configure_pin@ccp_con	PTR volatile unsigned char  size(2) Largest target is 1
		 -> CCP1CON(SFR_3[1]), 

    pwm_configure_pin@phyPin	PTR const struct . size(2) Largest target is 32
		 -> PINS(CODE[32]), 

    pwm_configure_pin@pps_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RA0PPS(SFR_1[1]), 

    pwm_configure_pin@pwm_con	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PWM3CON(SFR_3[1]), 

    pwm_configure_pin@tris_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR_3[1]), 

    ReadBit@pin	PTR const struct . size(2) Largest target is 32
		 -> PINS(CODE[32]), 

    ReadBit@reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    ReadReg@dst	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    Registers$reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    S2479$reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    S2740$3$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    S2740$4$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    S2740$4$1	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    S2740$from_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    S2740$to_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    S4136$buffer	PTR unsigned char  size(2) Largest target is 0

    S4136$source	PTR const unsigned char  size(2) Largest target is 0

    to_slave_func$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(UNKNOWN), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfpfcnvrt@cp_4205	PTR unsigned char  size(2) Largest target is 26
		 -> ?_printf(COMRAM[2]), STR_11(CODE[23]), STR_12(CODE[12]), STR_13(CODE[8]), 
		 -> STR_17(CODE[21]), STR_18(CODE[12]), STR_19(CODE[8]), STR_23(CODE[22]), 
		 -> STR_24(CODE[12]), STR_25(CODE[8]), STR_29(CODE[23]), STR_30(CODE[12]), 
		 -> STR_31(CODE[8]), STR_35(CODE[22]), STR_36(CODE[12]), STR_37(CODE[9]), 
		 -> STR_41(CODE[23]), STR_42(CODE[12]), STR_43(CODE[9]), STR_47(CODE[21]), 
		 -> STR_48(CODE[12]), STR_49(CODE[9]), STR_5(CODE[22]), STR_53(CODE[22]), 
		 -> STR_54(CODE[12]), STR_55(CODE[9]), STR_59(CODE[23]), STR_6(CODE[12]), 
		 -> STR_60(CODE[12]), STR_61(CODE[9]), STR_65(CODE[21]), STR_66(CODE[9]), 
		 -> STR_67(CODE[26]), STR_7(CODE[8]), STR_71(CODE[21]), STR_72(CODE[9]), 
		 -> STR_73(CODE[23]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(UNKNOWN), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(UNKNOWN), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    WriteBit@pin	PTR const struct . size(2) Largest target is 32
		 -> PINS(CODE[32]), 

    WriteBit@reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _I2C1_SlaveWrCallBack->_MasterR_SlaveW
    _MasterR_SlaveW->_i2c_read_from_slave_cb
    _i2c_read_from_slave_cb->_handle_read_cmd
    _handle_read_cmd->_ReadReg
    _analog_get_adc_val->_analog_get_adc_val_idx
    _ReadReg->_ReadBit
    _I2C1_Write->_I2C1_SlaveSendTxData
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData
    _I2C1_SlaveRdCallBack->_MasterW_SlaveR
    _MasterW_SlaveR->_i2c_write_to_slave_cb
    _i2c_write_to_slave_cb->_handle_write_cmd
    _handle_write_cmd->_pwm_configure_pin
    _pwm_set_duty_cycle->_PWM3_LoadDutyValue
    _pwm_set_duty_cycle->_PWM4_LoadDutyValue
    _WriteReg->_WriteBit

Critical Paths under _main in BANK0

    _main->_eeprom_handle_writing
    _i2c_slave_init->_I2C1_SlaveSetAddrIntHandler
    _i2c_slave_init->_I2C1_SlaveSetReadIntHandler
    _i2c_slave_init->_I2C1_SlaveSetWriteIntHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler
    _eeprom_handle_writing->_eeprom_write_byte
    _eeprom_write_byte->_DATAEE_WriteByte
    _eeprom_buffer_whole->_eeprom_read_byte
    _eeprom_read_byte->_DATAEE_ReadByte
    _analog_init->_analog_select_pos_ref_idx
    _analog_handler->_analog_set_pos_ref
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5747
                  _SYSTEM_Initialize
                     _analog_handler
                        _analog_init
                _eeprom_buffer_whole
              _eeprom_handle_writing
                     _i2c_slave_init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       6     1      5     369
                                              2 BANK0      6     1      5
                          _I2C1_Open
        _I2C1_SlaveSetAddrIntHandler
        _I2C1_SlaveSetReadIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_Open                                            0     0      0     199
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetWrColIntHandler                         2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetSlaveMask                               1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetSlaveAddr                               1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetIsrHandler                              2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetBusColIntHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_handle_writing                                6     6      0     455
                                              9 BANK0      6     6      0
                  _eeprom_write_byte
                _i2c_slave_get_state
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_get_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eeprom_write_byte                                    6     5      1     185
                                              3 BANK0      6     5      1
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1      75
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_buffer_whole                                  2     2      0     148
                                              2 BANK0      2     2      0
                   _eeprom_read_byte
 ---------------------------------------------------------------------------------
 (2) _eeprom_read_byte                                     1     1      0      58
                                              1 BANK0      1     1      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _analog_init                                          1     1      0    2180
                                              2 BANK0      1     1      0
          _analog_select_pos_ref_idx
 ---------------------------------------------------------------------------------
 (2) _analog_select_pos_ref_idx                            2     1      1    2112
                                              0 BANK0      2     1      1
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (18) ___assert_fail                                       8     0      8    2030
                              _abort
                             _printf
 ---------------------------------------------------------------------------------
 (19) _printf                                             14     4     10    1920
                           _vfprintf
 ---------------------------------------------------------------------------------
 (20) _vfprintf                                            8     2      6    1864
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (21) _vfpfcnvrt                                          16    10      6    1734
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (22) _fputc                                               4     0      4     292
                              _putch
 ---------------------------------------------------------------------------------
 (23) _putch                                               1     0      1      66
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (24) _EUSART1_Write                                       1     0      1      44
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (19) _abort                                               0     0      0      22
                               _exit
 ---------------------------------------------------------------------------------
 (20) _exit                                                2     0      2      22
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (21) ___funcs_on_exit                                     2     2      0       0
 ---------------------------------------------------------------------------------
 (21) __Exit                                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _analog_handler                                       9     9      0     560
                                              5 BANK0      9     9      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                            ___awdiv
                 _analog_set_pos_ref
 ---------------------------------------------------------------------------------
 (2) _analog_set_pos_ref                                   5     5      0     185
                                              0 BANK0      5     5      0
                  _FVR_IsOutputReady
 ---------------------------------------------------------------------------------
 (3) _FVR_IsOutputReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     115
                    _ADCC_Initialize
                     _CWG_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     115
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CWG_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         20    20      0   13713
                                             34 COMRAM    20    20      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _I2C1_Isr *
 ---------------------------------------------------------------------------------
 (11) _I2C1_Isr                                            2     2      0   13713
                                             32 COMRAM     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveWrCallBack                                0     0      0    7332
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
                     _MasterR_SlaveW *
 ---------------------------------------------------------------------------------
 (13) _MasterR_SlaveW                                      2     2      0    7303
                                             30 COMRAM     2     2      0
                      _I2C1_SendNack
                         _I2C1_Write
                     _TestForStopBit
             _i2c_read_from_slave_cb *
 ---------------------------------------------------------------------------------
 (14) _i2c_read_from_slave_cb                              6     4      2    7172
                                             24 COMRAM     6     4      2
                 _eeprom_read_buffer
                    _handle_read_cmd
 ---------------------------------------------------------------------------------
 (15) _handle_read_cmd                                     6     3      3    6919
                                             18 COMRAM     6     3      3
                            _ReadReg
                 _analog_get_adc_val
              _i2c_slave_get_byte_no
 ---------------------------------------------------------------------------------
 (16) _i2c_slave_get_byte_no                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _analog_get_adc_val                                  3     1      2    2140
                                              3 COMRAM     3     1      2
             _analog_get_adc_val_idx
 ---------------------------------------------------------------------------------
 (17) _analog_get_adc_val_idx                              3     1      2    2088
                                              0 COMRAM     3     1      2
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (16) _ReadReg                                             5     3      2    4622
                                             13 COMRAM     5     3      2
                            _ReadBit
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (17) _ReadBit                                            13    11      2    2322
                                              0 COMRAM    13    11      2
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (14) _I2C1_Write                                          1     1      0      58
                                              1 COMRAM     1     1      0
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefWrInterruptHandler                     0     0      0      29
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveSendTxData                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveReleaseClock                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveRdCallBack                                0     0      0    6381
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                     _MasterW_SlaveR *
 ---------------------------------------------------------------------------------
 (13) _MasterW_SlaveR                                      2     2      0    6381
                                             30 COMRAM     2     2      0
                          _I2C1_Read
                      _I2C1_SendNack
                     _TestForStopBit
              _i2c_write_to_slave_cb *
 ---------------------------------------------------------------------------------
 (14) _i2c_write_to_slave_cb                               6     4      2    6291
                                             24 COMRAM     6     4      2
                 _eeprom_read_buffer
                _eeprom_write_buffer
                   _handle_write_cmd
 ---------------------------------------------------------------------------------
 (15) _handle_write_cmd                                    5     2      3    5884
                                             19 COMRAM     5     2      3
                     _DAC1_SetOutput
                           _WriteReg
                  _pwm_configure_pin
                 _pwm_set_duty_cycle
 ---------------------------------------------------------------------------------
 (16) _pwm_set_duty_cycle                                  3     1      2     412
                                              4 COMRAM     3     1      2
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (17) _PWM4_LoadDutyValue                                  4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _PWM3_LoadDutyValue                                  4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _PWM2_LoadDutyValue                                  2     0      2      91
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _PWM1_LoadDutyValue                                  2     0      2      91
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _pwm_configure_pin                                  19    17      2     528
                                              0 COMRAM    19    17      2
 ---------------------------------------------------------------------------------
 (16) _WriteReg                                            4     2      2    4667
                                             14 COMRAM     4     2      2
                           _WriteBit
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (17) _WriteBit                                           14    11      3    2391
                                              0 COMRAM    14    11      3
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (18) ___assert_fail                                       8     0      8    2030
                              _abort
                             _printf
 ---------------------------------------------------------------------------------
 (19) _printf                                             14     4     10    1920
                           _vfprintf
 ---------------------------------------------------------------------------------
 (20) _vfprintf                                            8     2      6    1864
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (21) _vfpfcnvrt                                          16    10      6    1734
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (22) _fputc                                               4     0      4     292
                              _putch
 ---------------------------------------------------------------------------------
 (23) _putch                                               1     0      1      66
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (24) _EUSART1_Write                                       1     0      1      44
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (19) _abort                                               0     0      0      22
                               _exit
 ---------------------------------------------------------------------------------
 (20) _exit                                                2     0      2      22
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (21) ___funcs_on_exit                                     2     2      0       0
 ---------------------------------------------------------------------------------
 (21) __Exit                                               2     0      2       0
 ---------------------------------------------------------------------------------
 (16) _DAC1_SetOutput                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _eeprom_write_buffer                                 5     4      1     110
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (15) _eeprom_read_buffer                                  1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _I2C1_SendNack                                       0     0      0       0
                 _I2C1_SlaveSendNack
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefRdInterruptHandler                     0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsTxBufEmpty                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsAddr                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveAddrCallBack                              0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
              _SlaveRdDevAddrFromBus *
 ---------------------------------------------------------------------------------
 (13) _SlaveRdDevAddrFromBus                               0     0      0       0
                        _I2C1_IsRead
                          _I2C1_Read
                     _TestForStopBit
 ---------------------------------------------------------------------------------
 (14) _TestForStopBit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_Read                                           0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (14) _I2C1_IsRead                                         0     0      0       0
                   _I2C1_SlaveIsRead
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsRead                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefAddrInterruptHandler                   0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 24
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CWG_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   _analog_handler
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     ___awdiv
     _analog_set_pos_ref
       _FVR_IsOutputReady
   _analog_init
     _analog_select_pos_ref_idx
       ___assert_fail
         _abort
           _exit
             __Exit
             ___funcs_on_exit
         _printf
           _vfprintf
             _vfpfcnvrt
               ___awdiv
               ___awmod
               _abs
               _fputc
                 _putch
                   _EUSART1_Write
   _eeprom_buffer_whole
     _eeprom_read_byte
       _DATAEE_ReadByte
   _eeprom_handle_writing
     _eeprom_write_byte
       _DATAEE_WriteByte
     _i2c_slave_get_state
   _i2c_slave_init
     _I2C1_Open
       _I2C1_SlaveEnableIrq
       _I2C1_SlaveOpen
       _I2C1_SlaveSetAddrIntHandler
       _I2C1_SlaveSetBusColIntHandler
       _I2C1_SlaveSetIsrHandler
       _I2C1_SlaveSetReadIntHandler
       _I2C1_SlaveSetSlaveAddr
       _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
       _SlaveRdDevAddrFromBus *
         _I2C1_IsRead
           _I2C1_SlaveIsRead
         _I2C1_Read
           _I2C1_SlaveGetRxData
         _TestForStopBit
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _MasterW_SlaveR *
         _I2C1_Read
         _I2C1_SendNack
           _I2C1_SlaveSendNack
         _TestForStopBit
         _i2c_write_to_slave_cb *
           _eeprom_read_buffer
           _eeprom_write_buffer
           _handle_write_cmd
             _DAC1_SetOutput
             _WriteReg
               _WriteBit
                 ___assert_fail
                   _abort
                     _exit
                       __Exit
                       ___funcs_on_exit
                   _printf
                     _vfprintf
                       _vfpfcnvrt
                         ___awdiv
                         ___awmod
                         _abs
                         _fputc
                           _putch
                             _EUSART1_Write
               ___assert_fail
             _pwm_configure_pin
             _pwm_set_duty_cycle
               _PWM1_LoadDutyValue
               _PWM2_LoadDutyValue
               _PWM3_LoadDutyValue
               _PWM4_LoadDutyValue
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
       _MasterR_SlaveW *
         _I2C1_SendNack
         _I2C1_Write
           _I2C1_SlaveSendTxData
         _TestForStopBit
         _i2c_read_from_slave_cb *
           _eeprom_read_buffer
           _handle_read_cmd
             _ReadReg
               _ReadBit
                 ___assert_fail
               ___assert_fail
             _analog_get_adc_val
               _analog_get_adc_val_idx
                 ___assert_fail
             _i2c_slave_get_byte_no

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1023      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     224     87.5%
BITBIGSFR          255      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     15     147     91.9%
BITBIGSFR_1llll     95      0       0      0.0%
BITBIGSFR_1h        64      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     54      63    100.0%
BITBIGSFR_1llh      61      0       0      0.0%
BITBIGSFR_1lh       37      0       0      0.0%
BITBIGSFR_1llll     36      0       0      0.0%
BITBIGSFR_1llll     35      0       0      0.0%
BITBIGSFR_1llll     30      0       0      0.0%
BITBIGSFR_1llll      6      0       0      0.0%
BITBIGSFR_1lllh      4      0       0      0.0%
STACK                0      0     198      0.0%
DATA                 0      0     888      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 12 18:58:12 2025

                             MasterR_SlaveW@res 001F                        _eusart1TxBufferRemaining 005D  
                             MasterR_SlaveW@tmp 0020                        ??_I2C1_SlaveAddrCallBack 0001  
                                I2C1_Write@data 0002                     ??_analog_select_pos_ref_idx 00DB  
                        __end_of_FVR_Initialize 1DFA                            ?_eeprom_write_buffer 0001  
                               _DAC1_Initialize 1D2A                                             l100 18F2  
                                           l666 18CA                                             _PR2 0FBB  
                                           _PR4 0FB5                        __end_of_I2C1_SlaveIsAddr 1D5A  
                                           _i2c 00D1                        __end_of_I2C1_SlaveIsRead 1D66  
                         eeprom_write_byte@addr 00E2                                             _abs 19B0  
                         eeprom_write_byte@data 00DD                                 _TMR2_Initialize 1BDA  
                               _PWM4_Initialize 1BF0                                             prod 0FF3  
                                           tosl 0FFD                                             wreg 0FE8  
                               ??_I2C1_SendNack 0001                                  _DAC1_SetOutput 1E0A  
                __end_of_i2c_read_from_slave_cb 1280                                            l2340 0C4C  
                                          l2308 04E4                                            l4112 0AA0  
                                          l4104 0A78                                            l2328 19DA  
                                          l4200 030A                                __end_of_I2C1_Isr 0FC8  
                                          l4130 0B42                                            l4122 0B10  
                                          l4210 0356                                            l4202 031A  
                                          l4108 0A8A                                            l4044 1910  
                                          l4140 0B84                                            l4220 03E2  
                                          l4070 097E                                            l4046 1912  
                                          l4230 04A2                                            l4064 0960  
                                          l4160 1C7C                                            l4224 0424  
                                          l4058 094A                                            l4162 1C7E  
                                          l4154 19C4                                            l4234 04B6  
                                          l4092 0A42                                            l4084 0A10  
                                          l5300 0D72                                            l4228 0478  
                                          l4246 131C                            _ADCC_StartConversion 1C8A  
                                          l5304 0D7E                                            l4184 0236  
                                          l4248 1348                                            l5240 1B4A  
                                          l5082 1890                                            l5092 14A2  
                                          l5228 19EA                                            l4198 02DE  
                                          l5096 14B8                                            l5280 0F0E  
                                          l5264 0EA4                                            l5360 174A  
                                          l5282 0F12                                            l5268 0EB6  
                                    ReadBit@reg 0007                                      ReadBit@pin 000B  
                                          STR_1 3FB2                                            STR_2 3F72  
                                          STR_3 3FC7                                            STR_4 3FF6  
                                          STR_5 3F72                                            STR_6 3FC7  
                                          STR_7 3FF6                                            STR_8 3F5B  
                       __end_of_PWM1_Initialize 1C44                                            u2100 0AC8  
                                          u2030 09A6                                            u2120 0B2E  
                                          u2050 0A2E                                            u2220 01BE  
                                          _LATA 0F82                                            u2150 0B78  
                                          u2230 022E                                            _LATB 0F83  
                                          _LATC 0F84                                            u3130 1D18  
                                          u2170 0BE8                                            u2260 02B0  
                                          u2350 0450                                            u2360 049A  
                                          u2248 0230                                            _T2PR 0FBB  
                                          u2357 0446                                            u2367 0490  
                                          u3264 169C                                            u3265 1698  
                                          _T4PR 0FB5                                            u3534 0ED2  
                                          u3535 0ECE                                            u3560 0F26  
                                          _PMD0 0EDC                                            _PMD1 0EDD  
                                          u3590 0D46                                            _PMD2 0EDE  
                                          _PMD3 0EDF                                            _PMD4 0EE0  
                                          _PMD5 0EE1                                            u2980 1D0A  
                                          u2965 18D8                                            u2966 18DA  
                                          _PINS 3ED0                                            _TMR2 0FBA  
                                          _TMR4 0FB4                                            _WPUA 0F0B  
                                          _WPUB 0F13                                            _WPUC 0F1B  
                                          _WPUE 0F28                         eeprom_write_buffer@addr 0005  
                                 _EUSART1_Write 18DE                         eeprom_write_buffer@data 0001  
                                          _dbuf 01C0                                            _main 170E  
                                          _exit 1B94              I2C1_SlaveSetAddrIntHandler@handler 00DA  
                                          _prec 00B9                                            fsr0h 0FEA  
                                          fsr1h 0FE2                                            indf0 0FEF  
                                          fsr2h 0FDA                                            fsr0l 0FE9  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            fsr2l 0FD9  
                                    ReadReg@dst 000F                                            btemp 0037  
                 i2c_slave_init@from_slave_func 00DF                                      ReadReg@tmp 0010  
                                          prodh 0FF4                                            prodl 0FF3  
                                          start 010C                                      _i2c1RdData 00CF  
                                 ___assert_fail 1754                                    ___param_bank 0000  
                                    _i2c1WrData 0059              I2C1_SlaveSetReadIntHandler@handler 00DA  
                  _I2C1_SlaveRdInterruptHandler 00C9                    _I2C1_SlaveWrInterruptHandler 00C7  
                               __end_of_ReadBit 0926                                 __end_of_ReadReg 1060  
                              ??_I2C1_SlaveOpen 00DA                         __end_of_PWM2_Initialize 1C30  
                        ?_SlaveRdDevAddrFromBus 0001                           ??_eeprom_write_buffer 0002  
                               ?_FVR_Initialize 0001                   __end_of_OSCILLATOR_Initialize 1C68  
                         _eusart1RxStatusBuffer 0100                               __end_of_I2C1_Read 1E3C  
                                         _ADACQ 0F57                               __end_of_I2C1_Open 145C  
                                         _ADCAP 0F58                                           _ADACT 0F51  
                                         ?_main 0001                                           _ADCLK 0F52  
                                         _ADCNT 0F62                                           _ADPCH 0F5A  
                                         _ADREF 0F53                                 __end_of___awdiv 0A58  
                                         _ADPRE 0F59                                           STR_11 3F5B  
                                         STR_12 3FC7                                           STR_13 3FF6  
                                         STR_30 3FC7                                           STR_22 3FEE  
                                         STR_14 3F9D                                           STR_23 3F72  
                                         STR_31 3FEE                                           STR_24 3FC7  
                                         STR_17 3F9D                                           STR_41 3F5B  
                                         STR_25 3FEE                                           STR_42 3FC7  
                                         STR_18 3FC7                                           STR_34 3FE5  
                                         STR_26 3F44                                           STR_35 3F72  
                                         STR_19 3FF6                                           STR_43 3FE5  
                                         STR_60 3FC7                                           STR_36 3FC7  
                                         STR_52 3FDC                                 __end_of___awmod 0B58  
                                         STR_29 3F44                                           STR_53 3F72  
                                         STR_61 3FDC                                           STR_37 3FE5  
                                         STR_54 3FC7                                           STR_62 3F88  
                                         STR_70 3F2D                                           STR_47 3F9D  
                                         STR_71 3F88                                           STR_55 3FDC  
                                         STR_63 3FD3                                           STR_72 3FD3  
                                         STR_48 3FC7                                           STR_64 3F13  
                                         _ADRPT 0F61                                           STR_65 3F88  
                                         STR_49 3FE5                                           STR_73 3F2D  
                                         STR_66 3FD3                                           STR_74 3EF0  
                                         STR_59 3F44                                           STR_67 3F13  
                                         _T2CON 0FBC                                           _T4CON 0FB6  
                                         _T2HLT 0FBD                                           _IOCAF 0F05  
                                         _IOCAN 0F06                                           _IOCAP 0F07  
                                         _T4HLT 0FB7                                           _T2TMR 0FBA  
                                         _T2RST 0FBF                                           i2l112 1A30  
                                         _T4TMR 0FB4                                           i2l322 007A  
                                         _T4RST 0FB9                                           i2l324 0082  
                                         i2l326 009A                          __end_of_DAC1_SetOutput 1E12  
                                         _OSCEN 0ED7                              _PWM4_LoadDutyValue 194C  
                                         _PORTA 0F8C                                           _TRISA 0F87  
                                         _TRISB 0F88                                           _TRISC 0F89  
                               _TMR4_Initialize 1BC4                         ??_ADCC_IsConversionDone 00DA  
                          _EUSART1_Transmit_ISR 1A0C                                           __Exit 1E5A  
                             ??_I2C1_Initialize 00DA                  I2C1_SlaveSetSlaveMask@maskAddr 00DA  
                                         _abort 1CF2                                 _DATAEE_ReadByte 1B7C  
                                         _flags 00CD                                           _count 0057  
                                         _funcs 00B1                           ?_ADCC_StartConversion 0001  
                                         _fputc 0B58                             ?_PWM4_LoadDutyValue 0001  
                                         _width 00B7                                  _i2c1SlaveState 0058  
                                         _putch 1CE4                               _pwm_configure_pin 04EE  
                     _analog_select_pos_ref_idx 1860                         __end_of_PWM3_Initialize 1C1C  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ltemp0 0037  
                                         ltemp1 003B                                           ltemp2 003F  
                                         plusw1 0FE3                              ?_pwm_configure_pin 0001  
                                         ttemp0 0037                                           ttemp1 003A  
                                         ttemp2 003D                                           ttemp3 0040  
                                         ttemp5 0038                                           ttemp6 003B  
                                         ttemp7 003F                                           status 0FD8  
                                         wtemp0 0037                                           wtemp1 0039  
                                         wtemp2 003B                                           wtemp3 003D  
                                         wtemp4 003F                                           wtemp5 0041  
                                         wtemp8 0038      __end_of_EUSART1_DefaultFramingErrorHandler 1E5E  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1E5C                         ??_eeprom_handle_writing 00E3  
                                  __end_of_PINS 3EF0                                    ??_I2C1_Write 0002  
                      pwm_configure_pin@ccp_con 000B                             ??_pwm_configure_pin 0003  
                               _handle_read_cmd 0C56                                 __initialization 179A  
                    __end_of_EUSART1_Initialize 13F2                                    __end_of_main 1754  
                       __end_of_DAC1_Initialize 1D36                                    __end_of_exit 1BAC  
                          ??_PWM4_LoadDutyValue 0003                         __end_of_PWM4_Initialize 1C06  
                       __end_of_TMR2_Initialize 1BF0                     ?_INTERRUPT_InterruptManager 0001  
                           _i2c_slave_get_state 1E18                                          ??_main 00E9  
                            _I2C1_SlaveClearIrq 1E30                        pwm_configure_pin@pps_reg 0010  
                                 __activetblptr 0002                        pwm_configure_pin@pwm_con 000D  
                               ?_DAC1_SetOutput 0001                                  _i2c_slave_init 15D2  
                         ?_EUSART1_Transmit_ISR 0001                       __end_of_pwm_configure_pin 0680  
                           ?_I2C1_SlaveClearIrq 0001                                          _ADACCH 0F6C  
                                        _ADACCL 0F6B                                          _ADCON0 0F5B  
                                        _ADCON1 0F54                                          _ADCON2 0F55  
                                        _ADCON3 0F56                                          _ADERRH 0F6A  
                                        _ADERRL 0F69                         i2c_write_to_slave_cb@rb 001A  
                             MasterW_SlaveR@res 001F                                          _ADLTHH 0F66  
                                        _ADLTHL 0F65                                          _ADRESH 0F5F  
                                        _ADRESL 0F5E                                          _CCPR1H 0FAA  
                                        _CCPR2H 0FA6                                          _CCPR1L 0FA9  
                                        _CCPR2L 0FA5                                    ReadBit@regNo 000D  
                                        _ADSTAT 0F60                         ?_I2C1_SlaveReleaseClock 0001  
                            __end_of_I2C1_Write 1DDE                                    ReadBit@pinNo 0002  
                                        _ADUTHH 0F68                                          _ADUTHL 0F67  
                                        _ANSELA 0F0C                                          _ANSELB 0F14  
                                        _ANSELC 0F1C                                __end_of_WriteBit 07DA  
                                        _RA0PPS 0EE2                                          _RC1REG 0F98  
                              __end_of_WriteReg 10F4                                          _RC1STA 0F9C  
                                        _RC3PPS 0EF5                                          _RB5PPS 0EEF  
                                        _RC4PPS 0EF6                                ?_PWM1_Initialize 0001  
                                        _ODCONA 0F0A                                          _ODCONB 0F12  
                                        _ODCONC 0F1A                                          i2l1023 0D30  
                                        i2l1140 10C8                                          i2l1118 1030  
                                        i2l4300 06AC                                          i2l4304 06D6  
                                        i2l4322 07C6                                          i2l4410 0506  
                                        i2l4330 184A                                          i2l5202 0F78  
                                        i2l4324 07CC                                          i2l4308 0700  
                                        i2l4340 1ADC                                          i2l5204 0F7E  
                                        i2l4422 05E2                                          i2l4502 1036  
                                        i2l5214 0F9A                                          i2l5128 1A2C  
                                        i2l4440 063E                                          i2l5208 0F8A  
                                        i2l5216 0FC2                                          i2l4426 05E6  
                                        i2l4354 1ABA                                          i2l4282 085A  
                                        i2l4274 0806                                          i2l4602 0D1E  
                                        i2l5148 0E90                                          i2l4372 10B6  
                                        i2l4460 14E4                                          i2l4462 14F2  
                                        i2l4278 0830                                          i2l5190 0F50  
                                        i2l4720 1B42                                          i2l4368 108C  
                                        i2l4464 1500                                          i2l4456 14C8  
                                        i2l4472 1504                                          i2l4552 11B2  
                                        i2l4544 1194                                          i2l4608 0D22  
                                        _INLVLA 0F08                                          i2l4378 10C0  
                                        i2l4458 14D6                                          i2l4474 1520  
                                        i2l4546 119E                                          i2l4642 1118  
                                        i2l4482 0FF4                                          i2l5194 0F5E  
                                        _INLVLB 0F10                                          _INLVLC 0F18  
                                        i2l4388 10CA                                          i2l4564 11DA  
                                        i2l4492 1028                                          i2l5196 0F64  
                                        i2l5188 0F4C                                          _INLVLE 0F25  
                                        i2l4558 11D6                                          i2l4566 11FE  
                                        i2l4654 1174                                          i2l4486 101E  
                                        i2l4590 0CA2                                          i2l4582 0C6E  
                                        i2l4822 1670                                          i2l4648 114C  
                                        i2l4672 1226                                          i2l4658 1178  
                                        i2l4586 0C80                                          i2l4844 12AA  
                                        i2l4854 12B8                                          i2l4838 12A6  
                                        i2l4678 1254                                          i2l4686 127C  
                                        i2l4698 1CB6                                          _TABLAT 0FF5  
                                        _FVRCON 0F2C                                  WriteBit@portNo 0001  
                            _I2C1_SlaveSendNack 1E2A                                _eeprom_read_byte 1CD6  
                          ?_i2c_slave_get_state 0001                                          _OSCFRQ 0ED9  
                                        _RX1PPS 0EB0                                          _TX1REG 0F99  
                                        _TX1STA 0F9D                      ??_ADCC_GetConversionResult 00DC  
                                     ??_ReadBit 0003                                       ??_ReadReg 0010  
                       DAC1_SetOutput@inputData 0001                             ?_I2C1_SlaveSendNack 0001  
                          ??_I2C1_SlaveClearIrq 0001                                          _analog 0060  
                      ?_EUSART1_SetErrorHandler 00DA                                ?_PWM2_Initialize 0001  
                       __end_of_TMR4_Initialize 1BDA                                          clear_0 17A2  
                                        clear_1 17B4                                          clear_2 17C0  
                                        clear_3 17CC                                       ?_I2C1_Isr 0001  
                       ?_I2C1_SlaveSetSlaveAddr 0001                                          isa$std 0001  
                       ?_I2C1_SlaveSetSlaveMask 0001                                          _printf 157C  
              ??_EUSART1_SetOverrunErrorHandler 00DC                 ?_EUSART1_SetOverrunErrorHandler 00DA  
                                  ReadReg@regNo 0011                                  _analog_handler 0D34  
                        __end_of_i2c_slave_init 1624                         __end_of_DATAEE_ReadByte 1B94  
                               _ADCC_Initialize 1918                                  _PMD_Initialize 1C9A  
          __end_of_I2C1_SlaveSetWrColIntHandler 1D7A                    _I2C1_SlaveSetWrColIntHandler 1D70  
                                        lltemp0 0037                                          lltemp1 003F  
                                        lltemp2 0047                                          lltemp3 004F  
          I2C1_SlaveSetBusColIntHandler@handler 00DA                            ??_I2C1_SlaveSendNack 0001  
                                  __mediumconst 3EAE                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                        ??_ADCC_StartConversion 00DA                  __end_of_I2C1_SlaveReleaseClock 1E56  
                              __end_of_vfprintf 137A                          _I2C1_SlaveAddrCallBack 1AE6  
                               _eusart1RxBuffer 0140                                  _CWG_Initialize 1B62  
                    __end_of_analog_get_adc_val 1BC4                                 _eusart1TxBuffer 0180  
                         ??_i2c_slave_get_state 00DA                                ?_PWM3_Initialize 0001  
                             _SYSTEM_Initialize 17DC                   __end_of_i2c_slave_get_byte_no 1E24  
                       __end_of_handle_read_cmd 0D34                                      __accesstop 0060  
                       __end_of__initialization 17D2                                   ??_I2C1_IsRead 0001  
           I2C1_SlaveSetWrColIntHandler@handler 00DA                              ?_SYSTEM_Initialize 0001  
                    __end_of_PWM2_LoadDutyValue 1AC4                                   ___rparam_used 0001  
                           _eeprom_buffer_whole 19E0                     PWM1_LoadDutyValue@dutyValue 0001  
                 __end_of_EUSART1_RxDataHandler 1B46                       analog_get_adc_val_idx@idx 0003  
                                __pcstackCOMRAM 0001                                      ___inthi_sp 0380  
                                 __end_of__Exit 1E5C                                  WriteReg@portNo 000F  
                           ??_SYSTEM_Initialize 00DC                                ?_DAC1_Initialize 0001  
                                 __end_of_abort 1D00                                _DATAEE_WriteByte 18A0  
                __end_of_I2C1_SlaveSetSlaveAddr 1CD6                                   __end_of_fputc 0C56  
                __end_of_I2C1_SlaveSetSlaveMask 1CC8                          __end_of_analog_handler 0DFA  
                                 __end_of_putch 1CF2                              _PWM1_LoadDutyValue 1AC4  
                              ?_TMR2_Initialize 0001                                ?_PWM4_Initialize 0001  
                     i2c_write_to_slave_cb@addr 0019                                      ??_I2C1_Isr 0021  
                        __end_of_PMD_Initialize 1CAA                     PWM4_LoadDutyValue@dutyValue 0001  
                               ?_i2c_slave_init 00DC                          ??_EUSART1_Transmit_ISR 0001  
                          ?_eeprom_buffer_whole 0001                               ?_I2C1_SlaveIsAddr 0001  
                                _MasterR_SlaveW 1624                               ?_I2C1_SlaveIsRead 0001  
                           ?_PWM1_LoadDutyValue 0001                     __end_of_EUSART1_Receive_ISR 0E96  
                            ??_I2C1_SlaveIsAddr 0001                          __end_of_CWG_Initialize 1B7C  
                   ADCC_StartConversion@channel 00DA                              ??_I2C1_SlaveIsRead 0001  
                                _MasterW_SlaveR 1280                       __end_of_SYSTEM_Initialize 181E  
                                _TestForStopBit 1CAA                               __end_of_Registers 3ED0  
                            handle_write_cmd@rb 0016                                   _eusart1RxHead 005C  
                                 _eusart1TxHead 005F                                   _eusart1RxTail 005B  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 005E  
             _EUSART1_TxDefaultInterruptHandler 00F1                 ??_EUSART1_SetRxInterruptHandler 00DC  
                           _I2C1_SlaveEnableIrq 1E12                             _I2C1_SlaveGetRxData 1E56  
                          pwm_configure_pin@pin 0001                           _I2C1_SlaveIsRxBufFull 1D42  
                         _i2c_write_to_slave_cb 10F4                            ??_PWM1_LoadDutyValue 0003  
               __end_of_EUSART1_SetErrorHandler 1DD4                                ??_FVR_Initialize 00DA  
                 ?_I2C1_SlaveSetWriteIntHandler 00DA                                _handle_write_cmd 117C  
                       ??_SlaveRdDevAddrFromBus 0001                             __end_of_I2C1_IsRead 1E42  
                       __end_of_ADCC_Initialize 194C                                 _I2C1_Initialize 1D1C  
                                       _E2_DATA 0200                                         _CCP1CON 0FAB  
                                       _CCP2CON 0FA7                                         _ADFLTRH 0F6E  
                                       _ADFLTRL 0F6D                                 ?_analog_handler 0001  
                                       _ADPREVH 0F5D                                         _ADPREVL 0F5C  
                          ?_I2C1_SlaveEnableIrq 0001                                ?_TMR4_Initialize 0001  
                          ?_I2C1_SlaveGetRxData 0001                                         _ADSTPTH 0F64  
                                       _ADSTPTL 0F63                                       ?_WriteBit 0001  
                        __end_of_MasterR_SlaveW 1676                                 ?_PMD_Initialize 0001  
                                     ?_WriteReg 000F                                         _CWG1DBF 0F3E  
                                       _CWG1AS0 0F41                                         _CWG1AS1 0F42  
                                       _CWG1DBR 0F3D                                   ReadBit@portNo 0001  
                      pwm_set_duty_cycle@module 0007                                         _CWG1ISM 0F3C  
        __end_of_EUSART1_SetFramingErrorHandler 1DCA                  _EUSART1_SetFramingErrorHandler 1DC0  
                                       _CWG1STR 0F43                           ??_eeprom_buffer_whole 00DC  
                              ?_DATAEE_ReadByte 0001                        ??_analog_get_adc_val_idx 0003  
                        __end_of_MasterW_SlaveR 12FE                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 0F9B                                         _SP1BRGL 0F9A  
                                     _I2C1_Read 1E36                                         _OSCCON1 0ED3  
                                       _OSCCON3 0ED5                                       _I2C1_Open 13F2  
                                       _TBLPTRH 0FF7                                         _TBLPTRL 0FF6  
                                       _TBLPTRU 0FF8                          __end_of_TestForStopBit 1CBA  
                                       _NVMADRH 0F7A                                         _NVMADRL 0F79  
                                       _NVMADRU 0F7B                                         _NVMDATH 0F7D  
                                       _OSCTUNE 0ED8                                         _PWM3DCH 0FA3  
                                       _NVMDATL 0F7C                                         _PWM3DCL 0FA2  
                                       _PWM4DCH 0FA0                                         _PWM4DCL 0F9F  
                                       _NVMCON2 0F81                                         _PWM3CON 0FA4  
                                       _PWM4CON 0FA1                                         _SSP1ADD 0F92  
                               ?_CWG_Initialize 0001                     i2c_slave_init@to_slave_func 00DD  
                                       _SLRCONA 0F09                                         _SLRCONB 0F11  
                                       _SLRCONC 0F19                                         _SSP1BUF 0F91  
                                       _SSP1MSK 0F93                           __end_of_I2C1_SendNack 1E2A  
                 __end_of_ADCC_IsConversionDone 1D1C                        ?_I2C1_SlaveSetIsrHandler 00DA  
                          DATAEE_WriteByte@bAdd 00DB                  ?_I2C1_SlaveSetBusColIntHandler 00DA  
                              ?_handle_read_cmd 0013                           analog_set_pos_ref@ref 00DE  
                             handle_read_cmd@wb 0015                                         _ReadBit 07DA  
                                       _ReadReg 0FC8                                         __Hparam 0000  
                                       __Lparam 0000                     __end_of_eeprom_write_buffer 170E  
                 __end_of_eeprom_handle_writing 0F30                    analog_select_pos_ref_idx@idx 00DB  
                  analog_select_pos_ref_idx@ref 00DA               __end_of_analog_select_pos_ref_idx 18A0  
                          eeprom_read_byte@addr 00DB                                         ___awdiv 0926  
                                       ___awmod 0A58                                ??_DAC1_SetOutput 0001  
                               ReadBit@portData 0009                           ??_I2C1_SlaveEnableIrq 00DA  
                               ReadBit@portMask 000A                           ??_I2C1_SlaveGetRxData 0001  
                                       __pcinit 179A                                         __ramtop 0500  
                      __end_of_eeprom_read_byte 1CE4                                      ??_WriteBit 0004  
                                    ??_WriteReg 0011                                 ?_MasterR_SlaveW 0001  
                                       __ptext0 170E                                         __ptext1 15D2  
                                       __ptext2 13F2                                         __ptext3 1D66  
                                       __ptext4 1D70                                         __ptext5 1CBA  
                                       __ptext6 1CC8                                         __ptext7 1D7A  
                                       __ptext8 1D84                                         __ptext9 1D8E  
                _I2C1_SlaveAddrInterruptHandler 00C5                           _OSCILLATOR_Initialize 1C56  
                                     _T2CONbits 0FBC                          handle_read_cmd@adc_tmp 00BF  
                       i2c_read_from_slave_cb@c 001D                                 ?_MasterW_SlaveR 0001  
                                     _T4CONbits 0FB6                 I2C1_SlaveSetSlaveAddr@slaveAddr 00DA  
                            _EUSART1_Initialize 137A                        ??_PIN_MANAGER_Initialize 00DA  
                                    ?_I2C1_Read 0001                                       _T2HLTbits 0FBD  
                                    ?_I2C1_Open 0001                        ??_I2C1_SlaveIsTxBufEmpty 0001  
                               ?_TestForStopBit 0001                      __end_of_eeprom_read_buffer 1C7A  
                                     _T4HLTbits 0FB7                   ??_EUSART1_DefaultErrorHandler 0001  
                          end_of_initialization 17D2                                   ReadReg@portNo 000E  
                                     _T2RSTbits 0FBF                             ?_EUSART1_Initialize 0001  
                                     _T4RSTbits 0FB9                                   ??_analog_init 00DC  
                                 __Lmediumconst 3EAE                     _EUSART1_OverrunErrorHandler 00EB  
                        ?_I2C1_SlaveIsRxBufFull 0001                          analog_get_adc_val@port 0006  
                        ?_i2c_write_to_slave_cb 0019                                     _I2C1_IsRead 1E3C  
                             _FVR_IsOutputReady 1D00                 _I2C1_SlaveWrColInterruptHandler 00C1  
                       __end_of_I2C1_Initialize 1D2A           __end_of_EUSART1_SetRxInterruptHandler 1DB6  
                 _EUSART1_SetRxInterruptHandler 1DAC                    __end_of_I2C1_SlaveRdCallBack 1AA2  
                            ?_FVR_IsOutputReady 0001                               __end_of_vfpfcnvrt 04EE  
                                       postdec1 0FE5                                         postdec2 0FDD  
                       _analog_set_pos_ref$3085 00DB                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                    __end_of_analog_set_pos_ref 14C4                                ?_ADCC_Initialize 0001  
                          ??_EUSART1_Initialize 00DC                  ??_I2C1_SlaveSetWriteIntHandler 00DC  
                           ??_FVR_IsOutputReady 00DA                        ??_i2c_read_from_slave_cb 001B  
                                     _SSPDATPPS 0EB3                                       _SSPCLKPPS 0EB2  
               __end_of_I2C1_SlaveSetIsrHandler 1D8E                         ?_I2C1_SlaveAddrCallBack 0001  
                             _eeprom_write_byte 1676                         eeprom_handle_writing@bi 00E7  
                       eeprom_handle_writing@by 00E8                              ?_eeprom_write_byte 00DD  
                      __end_of_DATAEE_WriteByte 18DE                  I2C1_SlaveSetIsrHandler@handler 00DA  
                   eeprom_handle_writing@eeAddr 00E6                       __end_of_FVR_IsOutputReady 1D0E  
                                   _CCP1CONbits 0FAB                             ??_eeprom_write_byte 00DE  
                    __end_of_pwm_set_duty_cycle 1524                                     _CCP2CONbits 0FA7  
                   eeprom_handle_writing@bitval 00E5                      __end_of_PWM3_LoadDutyValue 19B0  
                           __end_of_analog_init 1B62                              _analog_get_adc_val 1BAC  
                               ___funcs_on_exit 1C7A                                ??_i2c_slave_init 00E1  
                  __end_of_INTERRUPT_Initialize 1E52                              _PWM2_LoadDutyValue 1AA2  
                                 _i2c1SlaveAddr 00CE                             ?_analog_get_adc_val 0004  
                        ?_OSCILLATOR_Initialize 0001                  __end_of_I2C1_SlaveAddrCallBack 1B08  
                     __end_of_eeprom_write_byte 16C6                       ?_ADCC_GetConversionResult 00DA  
                                __end_of_printf 15D2                    __end_of_I2C1_SlaveSendTxData 1E0A  
                           start_initialization 179A                                     ??_I2C1_Read 0001  
                                   ??_I2C1_Open 00DC                     __end_of_i2c_slave_get_state 1E1E  
                  __end_of_I2C1_SlaveWrCallBack 1A80                             ?_PWM2_LoadDutyValue 0001  
                      __end_of_handle_write_cmd 1202                                     __end_of_abs 19E0  
                        eeprom_read_buffer@addr 0001   EUSART1_SetRxInterruptHandler@interruptHandler 00DA  
 EUSART1_SetTxInterruptHandler@interruptHandler 00DA                         pwm_configure_pin@module 0002  
                       pwm_configure_pin@phyPin 0012                           __end_of_EUSART1_Write 1918  
                          ??_analog_get_adc_val 0006                          i2c_write_to_slave_cb@c 001D  
                              MasterW_SlaveR@rb 0020                                   WriteBit@regNo 000E  
                                 WriteBit@pinNo 0002                        I2C1_SlaveSendTxData@data 0001  
                                     _Registers 3EAF                          _analog_get_adc_val_idx 181E  
                                 WriteBit@value 0003                             DATAEE_ReadByte@bAdd 00DA  
                         _i2c_slave_get_byte_no 1E1E                           __end_of___assert_fail 179A  
                              ?_I2C1_Initialize 0001                                ??_analog_handler 00DF  
                          ??_PWM2_LoadDutyValue 0003                     PWM2_LoadDutyValue@dutyValue 0001  
                              ??_PMD_Initialize 00DA                            eeprom_buffer_whole@b 00DC  
                         _EUSART1_RxDataHandler 1B28                                     _CCPTMRSbits 0FAD  
                 __end_of_SlaveRdDevAddrFromBus 1A5E                      i2c_read_from_slave_cb@addr 0019  
                ?_EUSART1_SetRxInterruptHandler 00DA         __end_of_I2C1_SlaveDefRdInterruptHandler 1DE8  
             ??_I2C1_SlaveDefRdInterruptHandler 0001                ?_I2C1_SlaveDefRdInterruptHandler 0001  
               _I2C1_SlaveDefRdInterruptHandler 1DDE         __end_of_I2C1_SlaveDefWrInterruptHandler 1E02  
             ??_I2C1_SlaveDefWrInterruptHandler 0002                ?_I2C1_SlaveDefWrInterruptHandler 0001  
               _I2C1_SlaveDefWrInterruptHandler 1DFA                                ??_CWG_Initialize 00DA  
                                _eusart1RxCount 005A                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00EF                                   __pcstackBANK0 00DA  
                                 WriteReg@regNo 0011                            _I2C1_SlaveRdCallBack 1A80  
                                 WriteReg@value 0010                    ?_I2C1_SlaveSetAddrIntHandler 00DA  
                                   _CWG1AS0bits 0F41                           pwm_configure_pin@port 000F  
                                   WriteBit@reg 000B                                     WriteBit@pin 0009  
               ??_EUSART1_SetTxInterruptHandler 00DC                ??_EUSART1_SetFramingErrorHandler 00DC  
               ?_EUSART1_SetFramingErrorHandler 00DA                                     _analog_init 1B46  
                             handle_write_cmd@c 0014                         __end_of___funcs_on_exit 1C8A  
                                     __pnvBANK0 00E9                                        ?_ReadBit 0001  
                                      ?_ReadReg 000E                                       WriteReg@p 0012  
                        _PIN_MANAGER_Initialize 1524                          _MSSP1_InterruptHandler 00CB  
                        _I2C1_SlaveIsTxBufEmpty 1D36                                       __pintcode 0008  
                              ??_MasterR_SlaveW 001F                                   __pmediumconst 3EAE  
                                     __ptext100 1E30                                       __ptext101 1AE6  
                                     __ptext110 0DFA                                       __ptext102 1DE8  
                                     __ptext111 1E42                                       __ptext103 1A36  
                                     __ptext112 1E5C                                       __ptext104 1CAA  
                                     __ptext113 1E48                                       __ptext105 1E36  
                                     __ptext114 1B28                                       __ptext106 1E3C  
                                     __ptext107 1D5A                                       __ptext108 1E56  
                                     __ptext109 1A0C                     __end_of_eeprom_buffer_whole 1A0C  
                  ?_I2C1_SlaveSetReadIntHandler 00DA                              analog_handler@port 00E6  
               ??_I2C1_SlaveSetBusColIntHandler 00DC                                ??_MasterW_SlaveR 001F  
                                      _DAC1CON0 0F2E                                        _DAC1CON1 0F2F  
                                      _I2C1_Isr 0F30                               ??_PWM1_Initialize 00DA  
                  ??_INTERRUPT_InterruptManager 0023                        ??_I2C1_SlaveReleaseClock 0001  
                             ?_eeprom_read_byte 0001                                ??_TestForStopBit 0001  
                                      _BAUD1CON 0F9E      __end_of_EUSART1_DefaultOverrunErrorHandler 1E48  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1E42                                handle_read_cmd@a 00BD  
                              handle_read_cmd@c 0013                              ??_eeprom_read_byte 00DB  
                          _EUSART1_ErrorHandler 00E9             __end_of_I2C1_SlaveSetAddrIntHandler 1DA2  
                   _I2C1_SlaveSetAddrIntHandler 1D98                                  _I2C1_SlaveOpen 1C44  
                         ?_I2C1_SlaveRdCallBack 0001                         _EUSART1_SetErrorHandler 1DCA  
                                      _CWG1CON0 0F3F                                        _CWG1CON1 0F40  
                                      _T2CLKCON 0FBE                         ??_I2C1_SlaveIsRxBufFull 0001  
                       ??_i2c_write_to_slave_cb 001B                   ?_I2C1_SlaveSetWrColIntHandler 00DA  
                                      _T4CLKCON 0FB8                            _INTERRUPT_Initialize 1E4E  
                                      _CWGINPPS 0EAC                           _ADCC_IsConversionDone 1D0E  
                 ??_I2C1_SlaveSetAddrIntHandler 00DC                          _i2c_read_from_slave_cb 1202  
                             ??_PWM2_Initialize 00DA                          ?_i2c_slave_get_byte_no 0001  
       EUSART1_SetErrorHandler@interruptHandler 00DA                                    ?_I2C1_IsRead 0001  
                              WriteBit@portData 0008                                WriteBit@portMask 000D  
                                     _sectorRAM 0400                                        _PIE3bits 0EC0  
                         analog_get_adc_val@pin 0004                        ??_I2C1_SlaveSetSlaveAddr 00DA  
           __end_of_I2C1_SlaveSetReadIntHandler 1D84                     _I2C1_SlaveSetReadIntHandler 1D7A  
                            _eeprom_read_buffer 1C68                        ??_I2C1_SlaveSetSlaveMask 00DA  
                   __end_of_I2C1_SlaveEnableIrq 1E18                                        i2u311_48 12D8  
                                      i2u303_48 1648                                        i2u311_49 12EC  
                                      i2u303_49 165C                                        i2u240_45 19A2  
                                      i2u250_44 07B2                                        i2u250_45 07AE  
                                      i2u315_40 1D56                                        i2u323_40 1D4A  
                                      i2u322_48 1A6C                                        i2u244_44 090C  
                                      i2u244_45 0908                                        i2u261_40 10DA  
                                      i2u245_40 0922                                        i2u341_48 0E7A  
                                      i2u262_40 10DC                                        i2u325_48 1A8E  
                                      i2u254_45 1AD2                                        i2u318_48 1AF4  
                                      i2u319_40 1D3E                                        i2u239_45 1970  
                                      i2u256_45 1AB0                                        i2u345_40 0F72  
                   __end_of_I2C1_SlaveGetRxData 1E5A                                        i2u337_48 0E20  
                                      i2u266_40 0502                                        i2u274_40 1024  
                                      i2u337_49 0E36                                        i2u259_40 10BC  
                                      i2u267_44 05BC                                        i2u267_45 05B8  
                                      i2u339_48 0E4E                                        i2u371_48 008C  
                                      i2u339_49 0E64                                        i2u277_40 1D62  
                                      i2u365_40 0068                                        _PIR3bits 0EC8  
                                      i2u285_44 16EC                                        i2u285_45 16E8  
                                      i2u374_48 00A4                                        i2u366_48 006C  
                                      i2u374_49 00BA                                        _PIR4bits 0EC9  
                          _I2C1_SlaveSendTxData 1E02                                      _I2C1_Write 1DD4  
                                      _PIR7bits 0ECC                          ?_EUSART1_RxDataHandler 0001  
                          _I2C1_SlaveWrCallBack 1A5E                                        _SSP1CON1 0F95  
                                      _SSP1CON2 0F96                           _eeprom_handle_writing 0E96  
                                      _SSP1STAT 0F94                      ?_analog_select_pos_ref_idx 00DA  
                           ?_eeprom_read_buffer 0001                                  _i2c1EEPMemAddr 00BB  
                                     _vfpfcnvrt 0114                                    analog_init@i 00DC  
                 ??_I2C1_SlaveSetReadIntHandler 00DC                               ??_PWM3_Initialize 00DA  
                                    _ADCON0bits 0F5B                                      _ADCON1bits 0F54  
                                    _ADCON2bits 0F55                                      _ADCON3bits 0F56  
                        __end_of_I2C1_SlaveOpen 1C56                                        ReadReg@p 0012  
                            _analog_set_pos_ref 145C                           DATAEE_WriteByte@bData 00DA  
              _I2C1_SlaveBusColInterruptHandler 00C3                           ?_INTERRUPT_Initialize 0001  
                          ??_eeprom_read_buffer 0001                               ??_DAC1_Initialize 00DA  
                             ?_DATAEE_WriteByte 00DA                             ?_analog_set_pos_ref 0001  
            _I2C1_SlaveDefWrColInterruptHandler 0000                                      _E2_Changes 0091  
                             ??_TMR2_Initialize 00DA                               ??_PWM4_Initialize 00DA  
                            ??_DATAEE_WriteByte 00DB                       analog_set_pos_ref@current 00DD  
     __end_of_I2C1_SlaveDefAddrInterruptHandler 1DF2             ??_I2C1_SlaveDefAddrInterruptHandler 0001  
            ?_I2C1_SlaveDefAddrInterruptHandler 0001               _I2C1_SlaveDefAddrInterruptHandler 1DE8  
                              _I2C1_SlaveIsAddr 1D4E                                _I2C1_SlaveIsRead 1D5A  
                                    _ADSTATbits 0F60           __end_of_EUSART1_SetTxInterruptHandler 1DAC  
                 _EUSART1_SetTxInterruptHandler 1DA2                                        __Hrparam 0000  
              __end_of_ADCC_GetConversionResult 1B28                           ?_I2C1_SlaveSendTxData 0001  
                    __end_of_PWM4_LoadDutyValue 197E                                        __Lrparam 0000  
                         ?_I2C1_SlaveWrCallBack 0001                         ??_OSCILLATOR_Initialize 00DA  
                          ??_analog_set_pos_ref 00DA                              _pwm_set_duty_cycle 14C4  
                                      _WriteBit 0680                                        _WriteReg 1060  
                                    _CWG1CLKCON 0F3B                              _PWM3_LoadDutyValue 197E  
           _I2C1_SlaveDefBusColInterruptHandler 0000                       ??_EUSART1_SetErrorHandler 00DC  
                       i2c_slave_init@slaveAddr 00E1                                 ?_I2C1_SlaveOpen 0001  
           __end_of_EUSART1_DefaultErrorHandler 1E4E                     _EUSART1_DefaultErrorHandler 1E48  
                        ??_I2C1_SlaveRdCallBack 0021           __end_of_I2C1_SlaveSetBusColIntHandler 1D98  
                 _I2C1_SlaveSetBusColIntHandler 1D8E                             ?_pwm_set_duty_cycle 0005  
                                      __ptext10 1D98                                        __ptext11 1C44  
                                      __ptext20 1B46                                        __ptext12 1E12  
                                      __ptext21 1860                                        __ptext13 0E96  
                                      __ptext30 0A58                                        __ptext22 1754  
                                      __ptext14 1E18                                        __ptext31 1CF2  
                                      __ptext23 157C                                        __ptext15 1676  
                                      __ptext40 1D0E                                        __ptext32 1B94  
                                      __ptext24 12FE                                        __ptext16 18A0  
                                      __ptext41 1B08                                        __ptext33 1C7A  
                                      __ptext25 0114                                        __ptext17 19E0  
                                      __ptext50 1524                                        __ptext42 17DC  
                                      __ptext34 1E5A                                        __ptext26 0B58  
                                      __ptext18 1CD6                                        __ptext51 1C56  
                                      __ptext43 1BC4                                        __ptext35 0D34  
                                      __ptext27 1CE4                                        __ptext19 1B7C  
                                      __ptext60 1DCA                                        __ptext52 1E4E  
                                      __ptext44 1BDA                                        __ptext36 145C  
                                      __ptext28 18DE                                        __ptext61 1D2A  
                                      __ptext53 1D1C                                        __ptext45 1BF0  
                                      __ptext37 1D00                                        __ptext29 19B0  
                                      __ptext70 0C56                                        __ptext62 1B62  
                                      __ptext54 1DF2                                        __ptext46 1C06  
                                      __ptext38 0926                                        __ptext71 1E1E  
                                      __ptext63 1918                                        __ptext55 137A  
                                      __ptext47 1C1C                                        __ptext39 1C8A  
                                      __ptext80 1DDE                                        __ptext72 1BAC  
                                      __ptext56 1DA2                                        __ptext48 1C30  
                                      __ptext81 1280                                        __ptext73 181E  
                                      __ptext65 0F30                                        __ptext57 1DAC  
                                      __ptext49 1C9A                                        __ptext90 1060  
                                      __ptext82 10F4                                        __ptext74 0FC8  
                                      __ptext66 1A5E                                        __ptext58 1DB6  
                           ?_PWM3_LoadDutyValue 0001                                        __ptext91 0680  
                                      __ptext83 117C                                        __ptext75 07DA  
                                      __ptext67 1DFA                                        __ptext59 1DC0  
                                      __ptext92 1E0A                                        __ptext84 14C4  
                                      __ptext76 1DD4                                        __ptext68 1624  
                                      __ptext93 16C6                                        __ptext85 194C  
                                      __ptext77 1E02                                        __ptext69 1202  
                                      __ptext94 1C68                                        __ptext86 197E  
                                      __ptext78 1E52                                        __ptext95 1E24  
                                      __ptext87 1AA2                                        __ptext79 1A80  
                                      __ptext96 1E2A                                        __ptext88 1AC4  
                                      __ptext97 1D36                                        __ptext89 04EE  
                                      __ptext98 1D42                                        __ptext99 1D4E  
                             ?_handle_write_cmd 0014                               analog_handler@pin 00E7  
                                  _SSP1CON1bits 0F95                                    _SSP1CON2bits 0F96  
                                  _SSP1CON3bits 0F97                                   _I2C1_SendNack 1E24  
                        ?_ADCC_IsConversionDone 0001                         ?_analog_get_adc_val_idx 0001  
                            ??_handle_write_cmd 0017                     DATAEE_WriteByte@GIEBitValue 00DC  
          __end_of_I2C1_SlaveSetWriteIntHandler 1D70                    _I2C1_SlaveSetWriteIntHandler 1D66  
                             ??_TMR4_Initialize 00DA                  ??_I2C1_SlaveSetWrColIntHandler 00DC  
                      i2c_read_from_slave_cb@wb 001A                               ??_DATAEE_ReadByte 00DA  
                    __end_of_I2C1_SlaveClearIrq 1E36                            ??_pwm_set_duty_cycle 0007  
                       _I2C1_SlaveSetIsrHandler 1D84                                      _RC1STAbits 0F9C  
                                   ?_I2C1_Write 0001  EUSART1_SetOverrunErrorHandler@interruptHandler 00DA  
                          ??_PWM3_LoadDutyValue 0003                                        isa$xinst 0000  
                        ?_eeprom_handle_writing 0001                    __end_of_ADCC_StartConversion 1C9A  
                                      _vfprintf 12FE              __end_of_INTERRUPT_InterruptManager 010C  
                    _INTERRUPT_InterruptManager 0008                                    _SSP1STATbits 0F94  
                   _EUSART1_FramingErrorHandler 00ED                             _EUSART1_Receive_ISR 0DFA  
                    __end_of_I2C1_SlaveSendNack 1E30                               ??_handle_read_cmd 0016  
                        i2c_slave_init@maskAddr 00DC                                      _INTCONbits 0FF2  
                                   _NVMCON0bits 0F7F                                     _NVMCON1bits 0F80  
                                    _FVRCONbits 0F2C                    pwm_set_duty_cycle@duty_cycle 0005  
                        ??_INTERRUPT_Initialize 00DA                  __end_of_analog_get_adc_val_idx 1860  
                                ?_I2C1_SendNack 0001                       pwm_configure_pin@tris_reg 0009  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                        _I2C1_SlaveReleaseClock 1E52                                    ?_analog_init 0001  
                       ?_PIN_MANAGER_Initialize 0001                         ?_I2C1_SlaveIsTxBufEmpty 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1DC0                  _EUSART1_SetOverrunErrorHandler 1DB6  
                        ??_I2C1_SlaveSendTxData 0001                    __end_of_EUSART1_Transmit_ISR 1A36  
                               _PWM1_Initialize 1C30                          ??_I2C1_SlaveWrCallBack 0021  
           I2C1_SlaveSetWriteIntHandler@handler 00DA  EUSART1_SetFramingErrorHandler@interruptHandler 00DA  
                ?_EUSART1_SetTxInterruptHandler 00DA                        _ADCC_GetConversionResult 1B08  
                   PWM3_LoadDutyValue@dutyValue 0001                              _eusart1RxLastError 00D0  
                         _SlaveRdDevAddrFromBus 1A36                                  _FVR_Initialize 1DF2  
                        _I2C1_SlaveSetSlaveAddr 1CC8                                 _PWM2_Initialize 1C1C  
                        _I2C1_SlaveSetSlaveMask 1CBA                                      _TX1STAbits 0F9D  
                       ?_i2c_read_from_slave_cb 0019                         ??_i2c_slave_get_byte_no 0001  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 157C  
                             ??_ADCC_Initialize 00DA                  __end_of_I2C1_SlaveIsTxBufEmpty 1D42  
                 __end_of_I2C1_SlaveIsRxBufFull 1D4E                             _eeprom_write_buffer 16C6  
                 __end_of_i2c_write_to_slave_cb 117C                       ??_I2C1_SlaveSetIsrHandler 00DC  
                    __end_of_PWM1_LoadDutyValue 1AE6                         ??_EUSART1_RxDataHandler 0001  
                               _PWM3_Initialize 1C06  
