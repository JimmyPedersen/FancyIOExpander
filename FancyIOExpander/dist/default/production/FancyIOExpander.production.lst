

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 05 18:18:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F24Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,inline
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,inline
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,inline
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,inline
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1,inline
    88                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1,inline
    89                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1,inline
   100                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1,inline
   101                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1,inline
   102                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1,inline
   103                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1,inline
   104                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,inline
   111                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,inline
   112                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   120                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   121                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   122   000000                     
   123                           ; Generated 23/02/2024 GMT
   124                           ; 
   125                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution. Publication is not required when
   139                           ;        this file is used in an embedded application.
   140                           ; 
   141                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   142                           ;        software without specific prior written permission.
   143                           ; 
   144                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   145                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   146                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   147                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   148                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   149                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   150                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   151                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   152                           ; 
   153                           ; 
   154                           ; Code-generator required, PIC18F24Q10 Definitions
   155                           ; 
   156                           ; SFR Addresses
   157   000FE0                     bsr             equ	4064
   158   000FE9                     fsr0            equ	4073
   159   000FEA                     fsr0h           equ	4074
   160   000FE9                     fsr0l           equ	4073
   161   000FE1                     fsr1            equ	4065
   162   000FE2                     fsr1h           equ	4066
   163   000FE1                     fsr1l           equ	4065
   164   000FD9                     fsr2            equ	4057
   165   000FDA                     fsr2h           equ	4058
   166   000FD9                     fsr2l           equ	4057
   167   000FEF                     indf0           equ	4079
   168   000FE7                     indf1           equ	4071
   169   000FDF                     indf2           equ	4063
   170   000FF2                     intcon          equ	4082
   171   000F80                     nvmcon          equ	3968
   172   000FF9                     pcl             equ	4089
   173   000FFA                     pclath          equ	4090
   174   000FFB                     pclatu          equ	4091
   175   000FEB                     plusw0          equ	4075
   176   000FE3                     plusw1          equ	4067
   177   000FDB                     plusw2          equ	4059
   178   000FED                     postdec0        equ	4077
   179   000FE5                     postdec1        equ	4069
   180   000FDD                     postdec2        equ	4061
   181   000FEE                     postinc0        equ	4078
   182   000FE6                     postinc1        equ	4070
   183   000FDE                     postinc2        equ	4062
   184   000FEC                     preinc0         equ	4076
   185   000FE4                     preinc1         equ	4068
   186   000FDC                     preinc2         equ	4060
   187   000FF3                     prod            equ	4083
   188   000FF4                     prodh           equ	4084
   189   000FF3                     prodl           equ	4083
   190   000FD8                     status          equ	4056
   191   000FF5                     tablat          equ	4085
   192   000FF6                     tblptr          equ	4086
   193   000FF7                     tblptrh         equ	4087
   194   000FF6                     tblptrl         equ	4086
   195   000FF8                     tblptru         equ	4088
   196   000FFD                     tosl            equ	4093
   197   000FE8                     wreg            equ	4072
   198   000E9B                     PPSLOCK         equ	3739	;# 
   199   000E9C                     INT0PPS         equ	3740	;# 
   200   000E9D                     INT1PPS         equ	3741	;# 
   201   000E9E                     INT2PPS         equ	3742	;# 
   202   000E9F                     T0CKIPPS        equ	3743	;# 
   203   000EA0                     T1CKIPPS        equ	3744	;# 
   204   000EA1                     T1GPPS          equ	3745	;# 
   205   000EA2                     T3CKIPPS        equ	3746	;# 
   206   000EA3                     T3GPPS          equ	3747	;# 
   207   000EA4                     T5CKIPPS        equ	3748	;# 
   208   000EA5                     T5GPPS          equ	3749	;# 
   209   000EA6                     T2INPPS         equ	3750	;# 
   210   000EA7                     T4INPPS         equ	3751	;# 
   211   000EA8                     T6INPPS         equ	3752	;# 
   212   000EA9                     ADACTPPS        equ	3753	;# 
   213   000EAA                     CCP1PPS         equ	3754	;# 
   214   000EAB                     CCP2PPS         equ	3755	;# 
   215   000EAC                     CWG1PPS         equ	3756	;# 
   216   000EAC                     CWGPPS          equ	3756	;# 
   217   000EAC                     CWGINPPS        equ	3756	;# 
   218   000EAC                     CWG1INPPS       equ	3756	;# 
   219   000EAD                     MDCARLPPS       equ	3757	;# 
   220   000EAE                     MDCARHPPS       equ	3758	;# 
   221   000EAF                     MDSRCPPS        equ	3759	;# 
   222   000EB0                     RX1PPS          equ	3760	;# 
   223   000EB0                     RXPPS           equ	3760	;# 
   224   000EB0                     RXDT1PPS        equ	3760	;# 
   225   000EB1                     CK1PPS          equ	3761	;# 
   226   000EB1                     TXPPS           equ	3761	;# 
   227   000EB1                     CKPPS           equ	3761	;# 
   228   000EB1                     TXCK1PPS        equ	3761	;# 
   229   000EB1                     TX1PPS          equ	3761	;# 
   230   000EB2                     SSP1CLKPPS      equ	3762	;# 
   231   000EB2                     SSPCLKPPS       equ	3762	;# 
   232   000EB3                     SSP1DATPPS      equ	3763	;# 
   233   000EB3                     SSPDATPPS       equ	3763	;# 
   234   000EB4                     SSP1SSPPS       equ	3764	;# 
   235   000EB4                     SSPSSPPS        equ	3764	;# 
   236   000EB5                     IPR0            equ	3765	;# 
   237   000EB6                     IPR1            equ	3766	;# 
   238   000EB7                     IPR2            equ	3767	;# 
   239   000EB8                     IPR3            equ	3768	;# 
   240   000EB9                     IPR4            equ	3769	;# 
   241   000EBA                     IPR5            equ	3770	;# 
   242   000EBB                     IPR6            equ	3771	;# 
   243   000EBC                     IPR7            equ	3772	;# 
   244   000EBD                     PIE0            equ	3773	;# 
   245   000EBE                     PIE1            equ	3774	;# 
   246   000EBF                     PIE2            equ	3775	;# 
   247   000EC0                     PIE3            equ	3776	;# 
   248   000EC1                     PIE4            equ	3777	;# 
   249   000EC2                     PIE5            equ	3778	;# 
   250   000EC3                     PIE6            equ	3779	;# 
   251   000EC4                     PIE7            equ	3780	;# 
   252   000EC5                     PIR0            equ	3781	;# 
   253   000EC6                     PIR1            equ	3782	;# 
   254   000EC7                     PIR2            equ	3783	;# 
   255   000EC8                     PIR3            equ	3784	;# 
   256   000EC9                     PIR4            equ	3785	;# 
   257   000ECA                     PIR5            equ	3786	;# 
   258   000ECB                     PIR6            equ	3787	;# 
   259   000ECC                     PIR7            equ	3788	;# 
   260   000ECD                     WDTCON0         equ	3789	;# 
   261   000ECE                     WDTCON1         equ	3790	;# 
   262   000ECF                     WDTPSL          equ	3791	;# 
   263   000ED0                     WDTPSH          equ	3792	;# 
   264   000ED1                     WDTTMR          equ	3793	;# 
   265   000ED2                     CPUDOZE         equ	3794	;# 
   266   000ED3                     OSCCON1         equ	3795	;# 
   267   000ED4                     OSCCON2         equ	3796	;# 
   268   000ED5                     OSCCON3         equ	3797	;# 
   269   000ED6                     OSCSTAT         equ	3798	;# 
   270   000ED6                     OSCSTAT1        equ	3798	;# 
   271   000ED7                     OSCEN           equ	3799	;# 
   272   000ED8                     OSCTUNE         equ	3800	;# 
   273   000ED9                     OSCFRQ          equ	3801	;# 
   274   000ED9                     OSCFREQ         equ	3801	;# 
   275   000EDA                     VREGCON         equ	3802	;# 
   276   000EDB                     BORCON          equ	3803	;# 
   277   000EDC                     PMD0            equ	3804	;# 
   278   000EDD                     PMD1            equ	3805	;# 
   279   000EDE                     PMD2            equ	3806	;# 
   280   000EDF                     PMD3            equ	3807	;# 
   281   000EE0                     PMD4            equ	3808	;# 
   282   000EE1                     PMD5            equ	3809	;# 
   283   000EE2                     RA0PPS          equ	3810	;# 
   284   000EE3                     RA1PPS          equ	3811	;# 
   285   000EE4                     RA2PPS          equ	3812	;# 
   286   000EE5                     RA3PPS          equ	3813	;# 
   287   000EE6                     RA4PPS          equ	3814	;# 
   288   000EE7                     RA5PPS          equ	3815	;# 
   289   000EE8                     RA6PPS          equ	3816	;# 
   290   000EE9                     RA7PPS          equ	3817	;# 
   291   000EEA                     RB0PPS          equ	3818	;# 
   292   000EEB                     RB1PPS          equ	3819	;# 
   293   000EEC                     RB2PPS          equ	3820	;# 
   294   000EED                     RB3PPS          equ	3821	;# 
   295   000EEE                     RB4PPS          equ	3822	;# 
   296   000EEF                     RB5PPS          equ	3823	;# 
   297   000EF0                     RB6PPS          equ	3824	;# 
   298   000EF1                     RB7PPS          equ	3825	;# 
   299   000EF2                     RC0PPS          equ	3826	;# 
   300   000EF3                     RC1PPS          equ	3827	;# 
   301   000EF4                     RC2PPS          equ	3828	;# 
   302   000EF5                     RC3PPS          equ	3829	;# 
   303   000EF6                     RC4PPS          equ	3830	;# 
   304   000EF7                     RC5PPS          equ	3831	;# 
   305   000EF8                     RC6PPS          equ	3832	;# 
   306   000EF9                     RC7PPS          equ	3833	;# 
   307   000F05                     IOCAF           equ	3845	;# 
   308   000F06                     IOCAN           equ	3846	;# 
   309   000F07                     IOCAP           equ	3847	;# 
   310   000F08                     INLVLA          equ	3848	;# 
   311   000F09                     SLRCONA         equ	3849	;# 
   312   000F0A                     ODCONA          equ	3850	;# 
   313   000F0B                     WPUA            equ	3851	;# 
   314   000F0C                     ANSELA          equ	3852	;# 
   315   000F0D                     IOCBF           equ	3853	;# 
   316   000F0E                     IOCBN           equ	3854	;# 
   317   000F0F                     IOCBP           equ	3855	;# 
   318   000F10                     INLVLB          equ	3856	;# 
   319   000F11                     SLRCONB         equ	3857	;# 
   320   000F12                     ODCONB          equ	3858	;# 
   321   000F13                     WPUB            equ	3859	;# 
   322   000F14                     ANSELB          equ	3860	;# 
   323   000F15                     IOCCF           equ	3861	;# 
   324   000F16                     IOCCN           equ	3862	;# 
   325   000F17                     IOCCP           equ	3863	;# 
   326   000F18                     INLVLC          equ	3864	;# 
   327   000F19                     SLRCONC         equ	3865	;# 
   328   000F1A                     ODCONC          equ	3866	;# 
   329   000F1B                     WPUC            equ	3867	;# 
   330   000F1C                     ANSELC          equ	3868	;# 
   331   000F22                     IOCEF           equ	3874	;# 
   332   000F23                     IOCEN           equ	3875	;# 
   333   000F24                     IOCEP           equ	3876	;# 
   334   000F25                     INLVLE          equ	3877	;# 
   335   000F28                     WPUE            equ	3880	;# 
   336   000F2A                     HLVDCON0        equ	3882	;# 
   337   000F2B                     HLVDCON1        equ	3883	;# 
   338   000F2C                     FVRCON          equ	3884	;# 
   339   000F2D                     ZCDCON          equ	3885	;# 
   340   000F2E                     DAC1CON0        equ	3886	;# 
   341   000F2F                     DAC1CON1        equ	3887	;# 
   342   000F30                     CM2CON0         equ	3888	;# 
   343   000F31                     CM2CON1         equ	3889	;# 
   344   000F32                     CM2NCH          equ	3890	;# 
   345   000F33                     CM2PCH          equ	3891	;# 
   346   000F34                     CM1CON0         equ	3892	;# 
   347   000F35                     CM1CON1         equ	3893	;# 
   348   000F36                     CM1NCH          equ	3894	;# 
   349   000F37                     CM1PCH          equ	3895	;# 
   350   000F38                     CMOUT           equ	3896	;# 
   351   000F39                     CLKRCON         equ	3897	;# 
   352   000F3A                     CLKRCLK         equ	3898	;# 
   353   000F3B                     CWG1CLK         equ	3899	;# 
   354   000F3B                     CWG1CLKCON      equ	3899	;# 
   355   000F3C                     CWG1ISM         equ	3900	;# 
   356   000F3D                     CWG1DBR         equ	3901	;# 
   357   000F3E                     CWG1DBF         equ	3902	;# 
   358   000F3F                     CWG1CON0        equ	3903	;# 
   359   000F40                     CWG1CON1        equ	3904	;# 
   360   000F41                     CWG1AS0         equ	3905	;# 
   361   000F42                     CWG1AS1         equ	3906	;# 
   362   000F43                     CWG1STR         equ	3907	;# 
   363   000F44                     SCANLADR        equ	3908	;# 
   364   000F44                     SCANLADRL       equ	3908	;# 
   365   000F45                     SCANLADRH       equ	3909	;# 
   366   000F46                     SCANLADRU       equ	3910	;# 
   367   000F47                     SCANHADR        equ	3911	;# 
   368   000F47                     SCANHADRL       equ	3911	;# 
   369   000F48                     SCANHADRH       equ	3912	;# 
   370   000F49                     SCANHADRU       equ	3913	;# 
   371   000F4A                     SCANCON0        equ	3914	;# 
   372   000F4B                     SCANTRIG        equ	3915	;# 
   373   000F4C                     MDCON0          equ	3916	;# 
   374   000F4D                     MDCON1          equ	3917	;# 
   375   000F4E                     MDSRC           equ	3918	;# 
   376   000F4F                     MDCARL          equ	3919	;# 
   377   000F50                     MDCARH          equ	3920	;# 
   378   000F51                     ADACT           equ	3921	;# 
   379   000F52                     ADCLK           equ	3922	;# 
   380   000F53                     ADREF           equ	3923	;# 
   381   000F54                     ADCON1          equ	3924	;# 
   382   000F55                     ADCON2          equ	3925	;# 
   383   000F56                     ADCON3          equ	3926	;# 
   384   000F57                     ADACQ           equ	3927	;# 
   385   000F58                     ADCAP           equ	3928	;# 
   386   000F59                     ADPRE           equ	3929	;# 
   387   000F5A                     ADPCH           equ	3930	;# 
   388   000F5B                     ADCON0          equ	3931	;# 
   389   000F5C                     ADPREV          equ	3932	;# 
   390   000F5C                     ADPREVL         equ	3932	;# 
   391   000F5D                     ADPREVH         equ	3933	;# 
   392   000F5E                     ADRES           equ	3934	;# 
   393   000F5E                     ADRESL          equ	3934	;# 
   394   000F5F                     ADRESH          equ	3935	;# 
   395   000F60                     ADSTAT          equ	3936	;# 
   396   000F61                     ADRPT           equ	3937	;# 
   397   000F62                     ADCNT           equ	3938	;# 
   398   000F63                     ADSTPT          equ	3939	;# 
   399   000F63                     ADSTPTL         equ	3939	;# 
   400   000F64                     ADSTPTH         equ	3940	;# 
   401   000F65                     ADLTH           equ	3941	;# 
   402   000F65                     ADLTHL          equ	3941	;# 
   403   000F66                     ADLTHH          equ	3942	;# 
   404   000F67                     ADUTH           equ	3943	;# 
   405   000F67                     ADUTHL          equ	3943	;# 
   406   000F68                     ADUTHH          equ	3944	;# 
   407   000F69                     ADERR           equ	3945	;# 
   408   000F69                     ADERRL          equ	3945	;# 
   409   000F6A                     ADERRH          equ	3946	;# 
   410   000F6B                     ADACC           equ	3947	;# 
   411   000F6B                     ADACCL          equ	3947	;# 
   412   000F6C                     ADACCH          equ	3948	;# 
   413   000F6D                     ADFLTR          equ	3949	;# 
   414   000F6D                     ADFLTRL         equ	3949	;# 
   415   000F6E                     ADFLTRH         equ	3950	;# 
   416   000F6F                     CRCDATA         equ	3951	;# 
   417   000F6F                     CRCDATL         equ	3951	;# 
   418   000F70                     CRCDATH         equ	3952	;# 
   419   000F71                     CRCACC          equ	3953	;# 
   420   000F71                     CRCACCL         equ	3953	;# 
   421   000F72                     CRCACCH         equ	3954	;# 
   422   000F73                     CRCSHFT         equ	3955	;# 
   423   000F73                     CRCSHIFTL       equ	3955	;# 
   424   000F74                     CRCSHIFTH       equ	3956	;# 
   425   000F75                     CRCXOR          equ	3957	;# 
   426   000F75                     CRCXORL         equ	3957	;# 
   427   000F76                     CRCXORH         equ	3958	;# 
   428   000F77                     CRCCON0         equ	3959	;# 
   429   000F78                     CRCCON1         equ	3960	;# 
   430   000F79                     NVMADR          equ	3961	;# 
   431   000F79                     NVMADRL         equ	3961	;# 
   432   000F7A                     NVMADRH         equ	3962	;# 
   433   000F7B                     NVMADRU         equ	3963	;# 
   434   000F7C                     NVMDAT          equ	3964	;# 
   435   000F7C                     NVMDATL         equ	3964	;# 
   436   000F7D                     NVMDATH         equ	3965	;# 
   437   000F7F                     NVMCON0         equ	3967	;# 
   438   000F80                     NVMCON1         equ	3968	;# 
   439   000F81                     NVMCON2         equ	3969	;# 
   440   000F82                     LATA            equ	3970	;# 
   441   000F83                     LATB            equ	3971	;# 
   442   000F84                     LATC            equ	3972	;# 
   443   000F87                     TRISA           equ	3975	;# 
   444   000F87                     DDRA            equ	3975	;# 
   445   000F88                     TRISB           equ	3976	;# 
   446   000F88                     DDRB            equ	3976	;# 
   447   000F89                     TRISC           equ	3977	;# 
   448   000F89                     DDRC            equ	3977	;# 
   449   000F8C                     PORTA           equ	3980	;# 
   450   000F8D                     PORTB           equ	3981	;# 
   451   000F8E                     PORTC           equ	3982	;# 
   452   000F90                     PORTE           equ	3984	;# 
   453   000F91                     SSP1BUF         equ	3985	;# 
   454   000F92                     SSP1ADD         equ	3986	;# 
   455   000F93                     SSP1MSK         equ	3987	;# 
   456   000F94                     SSP1STAT        equ	3988	;# 
   457   000F95                     SSP1CON1        equ	3989	;# 
   458   000F96                     SSP1CON2        equ	3990	;# 
   459   000F97                     SSP1CON3        equ	3991	;# 
   460   000F98                     RC1REG          equ	3992	;# 
   461   000F98                     RCREG           equ	3992	;# 
   462   000F98                     RCREG1          equ	3992	;# 
   463   000F99                     TX1REG          equ	3993	;# 
   464   000F99                     TXREG1          equ	3993	;# 
   465   000F99                     TXREG           equ	3993	;# 
   466   000F9A                     SP1BRG          equ	3994	;# 
   467   000F9A                     SPBRG           equ	3994	;# 
   468   000F9A                     SP1BRGL         equ	3994	;# 
   469   000F9A                     SPBRG1          equ	3994	;# 
   470   000F9A                     SPBRGL          equ	3994	;# 
   471   000F9B                     SP1BRGH         equ	3995	;# 
   472   000F9B                     SPBRGH          equ	3995	;# 
   473   000F9B                     SPBRGH1         equ	3995	;# 
   474   000F9C                     RC1STA          equ	3996	;# 
   475   000F9C                     RCSTA1          equ	3996	;# 
   476   000F9C                     RCSTA           equ	3996	;# 
   477   000F9D                     TX1STA          equ	3997	;# 
   478   000F9D                     TXSTA1          equ	3997	;# 
   479   000F9D                     TXSTA           equ	3997	;# 
   480   000F9E                     BAUD1CON        equ	3998	;# 
   481   000F9E                     BAUDCON1        equ	3998	;# 
   482   000F9E                     BAUDCTL1        equ	3998	;# 
   483   000F9E                     BAUDCON         equ	3998	;# 
   484   000F9E                     BAUDCTL         equ	3998	;# 
   485   000F9F                     PWM4DC          equ	3999	;# 
   486   000F9F                     PWM4DCL         equ	3999	;# 
   487   000FA0                     PWM4DCH         equ	4000	;# 
   488   000FA1                     PWM4CON         equ	4001	;# 
   489   000FA2                     PWM3DC          equ	4002	;# 
   490   000FA2                     PWM3DCL         equ	4002	;# 
   491   000FA3                     PWM3DCH         equ	4003	;# 
   492   000FA4                     PWM3CON         equ	4004	;# 
   493   000FA5                     CCPR2           equ	4005	;# 
   494   000FA5                     CCPR2L          equ	4005	;# 
   495   000FA6                     CCPR2H          equ	4006	;# 
   496   000FA7                     CCP2CON         equ	4007	;# 
   497   000FA8                     CCP2CAP         equ	4008	;# 
   498   000FA9                     CCPR1           equ	4009	;# 
   499   000FA9                     CCPR1L          equ	4009	;# 
   500   000FAA                     CCPR1H          equ	4010	;# 
   501   000FAB                     CCP1CON         equ	4011	;# 
   502   000FAC                     CCP1CAP         equ	4012	;# 
   503   000FAD                     CCPTMRS         equ	4013	;# 
   504   000FAE                     T6TMR           equ	4014	;# 
   505   000FAE                     TMR6            equ	4014	;# 
   506   000FAF                     T6PR            equ	4015	;# 
   507   000FAF                     PR6             equ	4015	;# 
   508   000FB0                     T6CON           equ	4016	;# 
   509   000FB1                     T6HLT           equ	4017	;# 
   510   000FB2                     T6CLKCON        equ	4018	;# 
   511   000FB2                     T6CLK           equ	4018	;# 
   512   000FB3                     T6RST           equ	4019	;# 
   513   000FB4                     T4TMR           equ	4020	;# 
   514   000FB4                     TMR4            equ	4020	;# 
   515   000FB5                     T4PR            equ	4021	;# 
   516   000FB5                     PR4             equ	4021	;# 
   517   000FB6                     T4CON           equ	4022	;# 
   518   000FB7                     T4HLT           equ	4023	;# 
   519   000FB8                     T4CLKCON        equ	4024	;# 
   520   000FB8                     T4CLK           equ	4024	;# 
   521   000FB9                     T4RST           equ	4025	;# 
   522   000FBA                     T2TMR           equ	4026	;# 
   523   000FBA                     TMR2            equ	4026	;# 
   524   000FBB                     T2PR            equ	4027	;# 
   525   000FBB                     PR2             equ	4027	;# 
   526   000FBC                     T2CON           equ	4028	;# 
   527   000FBD                     T2HLT           equ	4029	;# 
   528   000FBE                     T2CLKCON        equ	4030	;# 
   529   000FBE                     T2CLK           equ	4030	;# 
   530   000FBF                     T2RST           equ	4031	;# 
   531   000FC0                     TMR5            equ	4032	;# 
   532   000FC0                     TMR5L           equ	4032	;# 
   533   000FC1                     TMR5H           equ	4033	;# 
   534   000FC2                     T5CON           equ	4034	;# 
   535   000FC2                     TMR5CON         equ	4034	;# 
   536   000FC3                     T5GCON          equ	4035	;# 
   537   000FC3                     TMR5GCON        equ	4035	;# 
   538   000FC4                     T5GATE          equ	4036	;# 
   539   000FC4                     TMR5GATE        equ	4036	;# 
   540   000FC5                     T5CLK           equ	4037	;# 
   541   000FC5                     TMR5CLK         equ	4037	;# 
   542   000FC5                     PR5             equ	4037	;# 
   543   000FC6                     TMR3            equ	4038	;# 
   544   000FC6                     TMR3L           equ	4038	;# 
   545   000FC7                     TMR3H           equ	4039	;# 
   546   000FC8                     T3CON           equ	4040	;# 
   547   000FC8                     TMR3CON         equ	4040	;# 
   548   000FC9                     T3GCON          equ	4041	;# 
   549   000FC9                     TMR3GCON        equ	4041	;# 
   550   000FCA                     T3GATE          equ	4042	;# 
   551   000FCA                     TMR3GATE        equ	4042	;# 
   552   000FCB                     T3CLK           equ	4043	;# 
   553   000FCB                     TMR3CLK         equ	4043	;# 
   554   000FCB                     PR3             equ	4043	;# 
   555   000FCC                     TMR1            equ	4044	;# 
   556   000FCC                     TMR1L           equ	4044	;# 
   557   000FCD                     TMR1H           equ	4045	;# 
   558   000FCE                     T1CON           equ	4046	;# 
   559   000FCE                     TMR1CON         equ	4046	;# 
   560   000FCF                     T1GCON          equ	4047	;# 
   561   000FCF                     TMR1GCON        equ	4047	;# 
   562   000FD0                     T1GATE          equ	4048	;# 
   563   000FD0                     TMR1GATE        equ	4048	;# 
   564   000FD1                     T1CLK           equ	4049	;# 
   565   000FD1                     TMR1CLK         equ	4049	;# 
   566   000FD1                     PR1             equ	4049	;# 
   567   000FD2                     TMR0L           equ	4050	;# 
   568   000FD2                     TMR0            equ	4050	;# 
   569   000FD3                     TMR0H           equ	4051	;# 
   570   000FD3                     PR0             equ	4051	;# 
   571   000FD4                     T0CON0          equ	4052	;# 
   572   000FD5                     T0CON1          equ	4053	;# 
   573   000FD6                     PCON1           equ	4054	;# 
   574   000FD7                     PCON0           equ	4055	;# 
   575   000FD8                     STATUS          equ	4056	;# 
   576   000FD9                     FSR2            equ	4057	;# 
   577   000FD9                     FSR2L           equ	4057	;# 
   578   000FDA                     FSR2H           equ	4058	;# 
   579   000FDB                     PLUSW2          equ	4059	;# 
   580   000FDC                     PREINC2         equ	4060	;# 
   581   000FDD                     POSTDEC2        equ	4061	;# 
   582   000FDE                     POSTINC2        equ	4062	;# 
   583   000FDF                     INDF2           equ	4063	;# 
   584   000FE0                     BSR             equ	4064	;# 
   585   000FE1                     FSR1            equ	4065	;# 
   586   000FE1                     FSR1L           equ	4065	;# 
   587   000FE2                     FSR1H           equ	4066	;# 
   588   000FE3                     PLUSW1          equ	4067	;# 
   589   000FE4                     PREINC1         equ	4068	;# 
   590   000FE5                     POSTDEC1        equ	4069	;# 
   591   000FE6                     POSTINC1        equ	4070	;# 
   592   000FE7                     INDF1           equ	4071	;# 
   593   000FE8                     WREG            equ	4072	;# 
   594   000FE9                     FSR0            equ	4073	;# 
   595   000FE9                     FSR0L           equ	4073	;# 
   596   000FEA                     FSR0H           equ	4074	;# 
   597   000FEB                     PLUSW0          equ	4075	;# 
   598   000FEC                     PREINC0         equ	4076	;# 
   599   000FED                     POSTDEC0        equ	4077	;# 
   600   000FEE                     POSTINC0        equ	4078	;# 
   601   000FEF                     INDF0           equ	4079	;# 
   602   000FF2                     INTCON          equ	4082	;# 
   603   000FF3                     PROD            equ	4083	;# 
   604   000FF3                     PRODL           equ	4083	;# 
   605   000FF4                     PRODH           equ	4084	;# 
   606   000FF5                     TABLAT          equ	4085	;# 
   607   000FF6                     TBLPTR          equ	4086	;# 
   608   000FF6                     TBLPTRL         equ	4086	;# 
   609   000FF7                     TBLPTRH         equ	4087	;# 
   610   000FF8                     TBLPTRU         equ	4088	;# 
   611   000FF9                     PCLAT           equ	4089	;# 
   612   000FF9                     PC              equ	4089	;# 
   613   000FF9                     PCL             equ	4089	;# 
   614   000FFA                     PCLATH          equ	4090	;# 
   615   000FFB                     PCLATU          equ	4091	;# 
   616   000FFC                     STKPTR          equ	4092	;# 
   617   000FFD                     TOS             equ	4093	;# 
   618   000FFD                     TOSL            equ	4093	;# 
   619   000FFE                     TOSH            equ	4094	;# 
   620   000FFF                     TOSU            equ	4095	;# 
   621   000E9B                     PPSLOCK         equ	3739	;# 
   622   000E9C                     INT0PPS         equ	3740	;# 
   623   000E9D                     INT1PPS         equ	3741	;# 
   624   000E9E                     INT2PPS         equ	3742	;# 
   625   000E9F                     T0CKIPPS        equ	3743	;# 
   626   000EA0                     T1CKIPPS        equ	3744	;# 
   627   000EA1                     T1GPPS          equ	3745	;# 
   628   000EA2                     T3CKIPPS        equ	3746	;# 
   629   000EA3                     T3GPPS          equ	3747	;# 
   630   000EA4                     T5CKIPPS        equ	3748	;# 
   631   000EA5                     T5GPPS          equ	3749	;# 
   632   000EA6                     T2INPPS         equ	3750	;# 
   633   000EA7                     T4INPPS         equ	3751	;# 
   634   000EA8                     T6INPPS         equ	3752	;# 
   635   000EA9                     ADACTPPS        equ	3753	;# 
   636   000EAA                     CCP1PPS         equ	3754	;# 
   637   000EAB                     CCP2PPS         equ	3755	;# 
   638   000EAC                     CWG1PPS         equ	3756	;# 
   639   000EAC                     CWGPPS          equ	3756	;# 
   640   000EAC                     CWGINPPS        equ	3756	;# 
   641   000EAC                     CWG1INPPS       equ	3756	;# 
   642   000EAD                     MDCARLPPS       equ	3757	;# 
   643   000EAE                     MDCARHPPS       equ	3758	;# 
   644   000EAF                     MDSRCPPS        equ	3759	;# 
   645   000EB0                     RX1PPS          equ	3760	;# 
   646   000EB0                     RXPPS           equ	3760	;# 
   647   000EB0                     RXDT1PPS        equ	3760	;# 
   648   000EB1                     CK1PPS          equ	3761	;# 
   649   000EB1                     TXPPS           equ	3761	;# 
   650   000EB1                     CKPPS           equ	3761	;# 
   651   000EB1                     TXCK1PPS        equ	3761	;# 
   652   000EB1                     TX1PPS          equ	3761	;# 
   653   000EB2                     SSP1CLKPPS      equ	3762	;# 
   654   000EB2                     SSPCLKPPS       equ	3762	;# 
   655   000EB3                     SSP1DATPPS      equ	3763	;# 
   656   000EB3                     SSPDATPPS       equ	3763	;# 
   657   000EB4                     SSP1SSPPS       equ	3764	;# 
   658   000EB4                     SSPSSPPS        equ	3764	;# 
   659   000EB5                     IPR0            equ	3765	;# 
   660   000EB6                     IPR1            equ	3766	;# 
   661   000EB7                     IPR2            equ	3767	;# 
   662   000EB8                     IPR3            equ	3768	;# 
   663   000EB9                     IPR4            equ	3769	;# 
   664   000EBA                     IPR5            equ	3770	;# 
   665   000EBB                     IPR6            equ	3771	;# 
   666   000EBC                     IPR7            equ	3772	;# 
   667   000EBD                     PIE0            equ	3773	;# 
   668   000EBE                     PIE1            equ	3774	;# 
   669   000EBF                     PIE2            equ	3775	;# 
   670   000EC0                     PIE3            equ	3776	;# 
   671   000EC1                     PIE4            equ	3777	;# 
   672   000EC2                     PIE5            equ	3778	;# 
   673   000EC3                     PIE6            equ	3779	;# 
   674   000EC4                     PIE7            equ	3780	;# 
   675   000EC5                     PIR0            equ	3781	;# 
   676   000EC6                     PIR1            equ	3782	;# 
   677   000EC7                     PIR2            equ	3783	;# 
   678   000EC8                     PIR3            equ	3784	;# 
   679   000EC9                     PIR4            equ	3785	;# 
   680   000ECA                     PIR5            equ	3786	;# 
   681   000ECB                     PIR6            equ	3787	;# 
   682   000ECC                     PIR7            equ	3788	;# 
   683   000ECD                     WDTCON0         equ	3789	;# 
   684   000ECE                     WDTCON1         equ	3790	;# 
   685   000ECF                     WDTPSL          equ	3791	;# 
   686   000ED0                     WDTPSH          equ	3792	;# 
   687   000ED1                     WDTTMR          equ	3793	;# 
   688   000ED2                     CPUDOZE         equ	3794	;# 
   689   000ED3                     OSCCON1         equ	3795	;# 
   690   000ED4                     OSCCON2         equ	3796	;# 
   691   000ED5                     OSCCON3         equ	3797	;# 
   692   000ED6                     OSCSTAT         equ	3798	;# 
   693   000ED6                     OSCSTAT1        equ	3798	;# 
   694   000ED7                     OSCEN           equ	3799	;# 
   695   000ED8                     OSCTUNE         equ	3800	;# 
   696   000ED9                     OSCFRQ          equ	3801	;# 
   697   000ED9                     OSCFREQ         equ	3801	;# 
   698   000EDA                     VREGCON         equ	3802	;# 
   699   000EDB                     BORCON          equ	3803	;# 
   700   000EDC                     PMD0            equ	3804	;# 
   701   000EDD                     PMD1            equ	3805	;# 
   702   000EDE                     PMD2            equ	3806	;# 
   703   000EDF                     PMD3            equ	3807	;# 
   704   000EE0                     PMD4            equ	3808	;# 
   705   000EE1                     PMD5            equ	3809	;# 
   706   000EE2                     RA0PPS          equ	3810	;# 
   707   000EE3                     RA1PPS          equ	3811	;# 
   708   000EE4                     RA2PPS          equ	3812	;# 
   709   000EE5                     RA3PPS          equ	3813	;# 
   710   000EE6                     RA4PPS          equ	3814	;# 
   711   000EE7                     RA5PPS          equ	3815	;# 
   712   000EE8                     RA6PPS          equ	3816	;# 
   713   000EE9                     RA7PPS          equ	3817	;# 
   714   000EEA                     RB0PPS          equ	3818	;# 
   715   000EEB                     RB1PPS          equ	3819	;# 
   716   000EEC                     RB2PPS          equ	3820	;# 
   717   000EED                     RB3PPS          equ	3821	;# 
   718   000EEE                     RB4PPS          equ	3822	;# 
   719   000EEF                     RB5PPS          equ	3823	;# 
   720   000EF0                     RB6PPS          equ	3824	;# 
   721   000EF1                     RB7PPS          equ	3825	;# 
   722   000EF2                     RC0PPS          equ	3826	;# 
   723   000EF3                     RC1PPS          equ	3827	;# 
   724   000EF4                     RC2PPS          equ	3828	;# 
   725   000EF5                     RC3PPS          equ	3829	;# 
   726   000EF6                     RC4PPS          equ	3830	;# 
   727   000EF7                     RC5PPS          equ	3831	;# 
   728   000EF8                     RC6PPS          equ	3832	;# 
   729   000EF9                     RC7PPS          equ	3833	;# 
   730   000F05                     IOCAF           equ	3845	;# 
   731   000F06                     IOCAN           equ	3846	;# 
   732   000F07                     IOCAP           equ	3847	;# 
   733   000F08                     INLVLA          equ	3848	;# 
   734   000F09                     SLRCONA         equ	3849	;# 
   735   000F0A                     ODCONA          equ	3850	;# 
   736   000F0B                     WPUA            equ	3851	;# 
   737   000F0C                     ANSELA          equ	3852	;# 
   738   000F0D                     IOCBF           equ	3853	;# 
   739   000F0E                     IOCBN           equ	3854	;# 
   740   000F0F                     IOCBP           equ	3855	;# 
   741   000F10                     INLVLB          equ	3856	;# 
   742   000F11                     SLRCONB         equ	3857	;# 
   743   000F12                     ODCONB          equ	3858	;# 
   744   000F13                     WPUB            equ	3859	;# 
   745   000F14                     ANSELB          equ	3860	;# 
   746   000F15                     IOCCF           equ	3861	;# 
   747   000F16                     IOCCN           equ	3862	;# 
   748   000F17                     IOCCP           equ	3863	;# 
   749   000F18                     INLVLC          equ	3864	;# 
   750   000F19                     SLRCONC         equ	3865	;# 
   751   000F1A                     ODCONC          equ	3866	;# 
   752   000F1B                     WPUC            equ	3867	;# 
   753   000F1C                     ANSELC          equ	3868	;# 
   754   000F22                     IOCEF           equ	3874	;# 
   755   000F23                     IOCEN           equ	3875	;# 
   756   000F24                     IOCEP           equ	3876	;# 
   757   000F25                     INLVLE          equ	3877	;# 
   758   000F28                     WPUE            equ	3880	;# 
   759   000F2A                     HLVDCON0        equ	3882	;# 
   760   000F2B                     HLVDCON1        equ	3883	;# 
   761   000F2C                     FVRCON          equ	3884	;# 
   762   000F2D                     ZCDCON          equ	3885	;# 
   763   000F2E                     DAC1CON0        equ	3886	;# 
   764   000F2F                     DAC1CON1        equ	3887	;# 
   765   000F30                     CM2CON0         equ	3888	;# 
   766   000F31                     CM2CON1         equ	3889	;# 
   767   000F32                     CM2NCH          equ	3890	;# 
   768   000F33                     CM2PCH          equ	3891	;# 
   769   000F34                     CM1CON0         equ	3892	;# 
   770   000F35                     CM1CON1         equ	3893	;# 
   771   000F36                     CM1NCH          equ	3894	;# 
   772   000F37                     CM1PCH          equ	3895	;# 
   773   000F38                     CMOUT           equ	3896	;# 
   774   000F39                     CLKRCON         equ	3897	;# 
   775   000F3A                     CLKRCLK         equ	3898	;# 
   776   000F3B                     CWG1CLK         equ	3899	;# 
   777   000F3B                     CWG1CLKCON      equ	3899	;# 
   778   000F3C                     CWG1ISM         equ	3900	;# 
   779   000F3D                     CWG1DBR         equ	3901	;# 
   780   000F3E                     CWG1DBF         equ	3902	;# 
   781   000F3F                     CWG1CON0        equ	3903	;# 
   782   000F40                     CWG1CON1        equ	3904	;# 
   783   000F41                     CWG1AS0         equ	3905	;# 
   784   000F42                     CWG1AS1         equ	3906	;# 
   785   000F43                     CWG1STR         equ	3907	;# 
   786   000F44                     SCANLADR        equ	3908	;# 
   787   000F44                     SCANLADRL       equ	3908	;# 
   788   000F45                     SCANLADRH       equ	3909	;# 
   789   000F46                     SCANLADRU       equ	3910	;# 
   790   000F47                     SCANHADR        equ	3911	;# 
   791   000F47                     SCANHADRL       equ	3911	;# 
   792   000F48                     SCANHADRH       equ	3912	;# 
   793   000F49                     SCANHADRU       equ	3913	;# 
   794   000F4A                     SCANCON0        equ	3914	;# 
   795   000F4B                     SCANTRIG        equ	3915	;# 
   796   000F4C                     MDCON0          equ	3916	;# 
   797   000F4D                     MDCON1          equ	3917	;# 
   798   000F4E                     MDSRC           equ	3918	;# 
   799   000F4F                     MDCARL          equ	3919	;# 
   800   000F50                     MDCARH          equ	3920	;# 
   801   000F51                     ADACT           equ	3921	;# 
   802   000F52                     ADCLK           equ	3922	;# 
   803   000F53                     ADREF           equ	3923	;# 
   804   000F54                     ADCON1          equ	3924	;# 
   805   000F55                     ADCON2          equ	3925	;# 
   806   000F56                     ADCON3          equ	3926	;# 
   807   000F57                     ADACQ           equ	3927	;# 
   808   000F58                     ADCAP           equ	3928	;# 
   809   000F59                     ADPRE           equ	3929	;# 
   810   000F5A                     ADPCH           equ	3930	;# 
   811   000F5B                     ADCON0          equ	3931	;# 
   812   000F5C                     ADPREV          equ	3932	;# 
   813   000F5C                     ADPREVL         equ	3932	;# 
   814   000F5D                     ADPREVH         equ	3933	;# 
   815   000F5E                     ADRES           equ	3934	;# 
   816   000F5E                     ADRESL          equ	3934	;# 
   817   000F5F                     ADRESH          equ	3935	;# 
   818   000F60                     ADSTAT          equ	3936	;# 
   819   000F61                     ADRPT           equ	3937	;# 
   820   000F62                     ADCNT           equ	3938	;# 
   821   000F63                     ADSTPT          equ	3939	;# 
   822   000F63                     ADSTPTL         equ	3939	;# 
   823   000F64                     ADSTPTH         equ	3940	;# 
   824   000F65                     ADLTH           equ	3941	;# 
   825   000F65                     ADLTHL          equ	3941	;# 
   826   000F66                     ADLTHH          equ	3942	;# 
   827   000F67                     ADUTH           equ	3943	;# 
   828   000F67                     ADUTHL          equ	3943	;# 
   829   000F68                     ADUTHH          equ	3944	;# 
   830   000F69                     ADERR           equ	3945	;# 
   831   000F69                     ADERRL          equ	3945	;# 
   832   000F6A                     ADERRH          equ	3946	;# 
   833   000F6B                     ADACC           equ	3947	;# 
   834   000F6B                     ADACCL          equ	3947	;# 
   835   000F6C                     ADACCH          equ	3948	;# 
   836   000F6D                     ADFLTR          equ	3949	;# 
   837   000F6D                     ADFLTRL         equ	3949	;# 
   838   000F6E                     ADFLTRH         equ	3950	;# 
   839   000F6F                     CRCDATA         equ	3951	;# 
   840   000F6F                     CRCDATL         equ	3951	;# 
   841   000F70                     CRCDATH         equ	3952	;# 
   842   000F71                     CRCACC          equ	3953	;# 
   843   000F71                     CRCACCL         equ	3953	;# 
   844   000F72                     CRCACCH         equ	3954	;# 
   845   000F73                     CRCSHFT         equ	3955	;# 
   846   000F73                     CRCSHIFTL       equ	3955	;# 
   847   000F74                     CRCSHIFTH       equ	3956	;# 
   848   000F75                     CRCXOR          equ	3957	;# 
   849   000F75                     CRCXORL         equ	3957	;# 
   850   000F76                     CRCXORH         equ	3958	;# 
   851   000F77                     CRCCON0         equ	3959	;# 
   852   000F78                     CRCCON1         equ	3960	;# 
   853   000F79                     NVMADR          equ	3961	;# 
   854   000F79                     NVMADRL         equ	3961	;# 
   855   000F7A                     NVMADRH         equ	3962	;# 
   856   000F7B                     NVMADRU         equ	3963	;# 
   857   000F7C                     NVMDAT          equ	3964	;# 
   858   000F7C                     NVMDATL         equ	3964	;# 
   859   000F7D                     NVMDATH         equ	3965	;# 
   860   000F7F                     NVMCON0         equ	3967	;# 
   861   000F80                     NVMCON1         equ	3968	;# 
   862   000F81                     NVMCON2         equ	3969	;# 
   863   000F82                     LATA            equ	3970	;# 
   864   000F83                     LATB            equ	3971	;# 
   865   000F84                     LATC            equ	3972	;# 
   866   000F87                     TRISA           equ	3975	;# 
   867   000F87                     DDRA            equ	3975	;# 
   868   000F88                     TRISB           equ	3976	;# 
   869   000F88                     DDRB            equ	3976	;# 
   870   000F89                     TRISC           equ	3977	;# 
   871   000F89                     DDRC            equ	3977	;# 
   872   000F8C                     PORTA           equ	3980	;# 
   873   000F8D                     PORTB           equ	3981	;# 
   874   000F8E                     PORTC           equ	3982	;# 
   875   000F90                     PORTE           equ	3984	;# 
   876   000F91                     SSP1BUF         equ	3985	;# 
   877   000F92                     SSP1ADD         equ	3986	;# 
   878   000F93                     SSP1MSK         equ	3987	;# 
   879   000F94                     SSP1STAT        equ	3988	;# 
   880   000F95                     SSP1CON1        equ	3989	;# 
   881   000F96                     SSP1CON2        equ	3990	;# 
   882   000F97                     SSP1CON3        equ	3991	;# 
   883   000F98                     RC1REG          equ	3992	;# 
   884   000F98                     RCREG           equ	3992	;# 
   885   000F98                     RCREG1          equ	3992	;# 
   886   000F99                     TX1REG          equ	3993	;# 
   887   000F99                     TXREG1          equ	3993	;# 
   888   000F99                     TXREG           equ	3993	;# 
   889   000F9A                     SP1BRG          equ	3994	;# 
   890   000F9A                     SPBRG           equ	3994	;# 
   891   000F9A                     SP1BRGL         equ	3994	;# 
   892   000F9A                     SPBRG1          equ	3994	;# 
   893   000F9A                     SPBRGL          equ	3994	;# 
   894   000F9B                     SP1BRGH         equ	3995	;# 
   895   000F9B                     SPBRGH          equ	3995	;# 
   896   000F9B                     SPBRGH1         equ	3995	;# 
   897   000F9C                     RC1STA          equ	3996	;# 
   898   000F9C                     RCSTA1          equ	3996	;# 
   899   000F9C                     RCSTA           equ	3996	;# 
   900   000F9D                     TX1STA          equ	3997	;# 
   901   000F9D                     TXSTA1          equ	3997	;# 
   902   000F9D                     TXSTA           equ	3997	;# 
   903   000F9E                     BAUD1CON        equ	3998	;# 
   904   000F9E                     BAUDCON1        equ	3998	;# 
   905   000F9E                     BAUDCTL1        equ	3998	;# 
   906   000F9E                     BAUDCON         equ	3998	;# 
   907   000F9E                     BAUDCTL         equ	3998	;# 
   908   000F9F                     PWM4DC          equ	3999	;# 
   909   000F9F                     PWM4DCL         equ	3999	;# 
   910   000FA0                     PWM4DCH         equ	4000	;# 
   911   000FA1                     PWM4CON         equ	4001	;# 
   912   000FA2                     PWM3DC          equ	4002	;# 
   913   000FA2                     PWM3DCL         equ	4002	;# 
   914   000FA3                     PWM3DCH         equ	4003	;# 
   915   000FA4                     PWM3CON         equ	4004	;# 
   916   000FA5                     CCPR2           equ	4005	;# 
   917   000FA5                     CCPR2L          equ	4005	;# 
   918   000FA6                     CCPR2H          equ	4006	;# 
   919   000FA7                     CCP2CON         equ	4007	;# 
   920   000FA8                     CCP2CAP         equ	4008	;# 
   921   000FA9                     CCPR1           equ	4009	;# 
   922   000FA9                     CCPR1L          equ	4009	;# 
   923   000FAA                     CCPR1H          equ	4010	;# 
   924   000FAB                     CCP1CON         equ	4011	;# 
   925   000FAC                     CCP1CAP         equ	4012	;# 
   926   000FAD                     CCPTMRS         equ	4013	;# 
   927   000FAE                     T6TMR           equ	4014	;# 
   928   000FAE                     TMR6            equ	4014	;# 
   929   000FAF                     T6PR            equ	4015	;# 
   930   000FAF                     PR6             equ	4015	;# 
   931   000FB0                     T6CON           equ	4016	;# 
   932   000FB1                     T6HLT           equ	4017	;# 
   933   000FB2                     T6CLKCON        equ	4018	;# 
   934   000FB2                     T6CLK           equ	4018	;# 
   935   000FB3                     T6RST           equ	4019	;# 
   936   000FB4                     T4TMR           equ	4020	;# 
   937   000FB4                     TMR4            equ	4020	;# 
   938   000FB5                     T4PR            equ	4021	;# 
   939   000FB5                     PR4             equ	4021	;# 
   940   000FB6                     T4CON           equ	4022	;# 
   941   000FB7                     T4HLT           equ	4023	;# 
   942   000FB8                     T4CLKCON        equ	4024	;# 
   943   000FB8                     T4CLK           equ	4024	;# 
   944   000FB9                     T4RST           equ	4025	;# 
   945   000FBA                     T2TMR           equ	4026	;# 
   946   000FBA                     TMR2            equ	4026	;# 
   947   000FBB                     T2PR            equ	4027	;# 
   948   000FBB                     PR2             equ	4027	;# 
   949   000FBC                     T2CON           equ	4028	;# 
   950   000FBD                     T2HLT           equ	4029	;# 
   951   000FBE                     T2CLKCON        equ	4030	;# 
   952   000FBE                     T2CLK           equ	4030	;# 
   953   000FBF                     T2RST           equ	4031	;# 
   954   000FC0                     TMR5            equ	4032	;# 
   955   000FC0                     TMR5L           equ	4032	;# 
   956   000FC1                     TMR5H           equ	4033	;# 
   957   000FC2                     T5CON           equ	4034	;# 
   958   000FC2                     TMR5CON         equ	4034	;# 
   959   000FC3                     T5GCON          equ	4035	;# 
   960   000FC3                     TMR5GCON        equ	4035	;# 
   961   000FC4                     T5GATE          equ	4036	;# 
   962   000FC4                     TMR5GATE        equ	4036	;# 
   963   000FC5                     T5CLK           equ	4037	;# 
   964   000FC5                     TMR5CLK         equ	4037	;# 
   965   000FC5                     PR5             equ	4037	;# 
   966   000FC6                     TMR3            equ	4038	;# 
   967   000FC6                     TMR3L           equ	4038	;# 
   968   000FC7                     TMR3H           equ	4039	;# 
   969   000FC8                     T3CON           equ	4040	;# 
   970   000FC8                     TMR3CON         equ	4040	;# 
   971   000FC9                     T3GCON          equ	4041	;# 
   972   000FC9                     TMR3GCON        equ	4041	;# 
   973   000FCA                     T3GATE          equ	4042	;# 
   974   000FCA                     TMR3GATE        equ	4042	;# 
   975   000FCB                     T3CLK           equ	4043	;# 
   976   000FCB                     TMR3CLK         equ	4043	;# 
   977   000FCB                     PR3             equ	4043	;# 
   978   000FCC                     TMR1            equ	4044	;# 
   979   000FCC                     TMR1L           equ	4044	;# 
   980   000FCD                     TMR1H           equ	4045	;# 
   981   000FCE                     T1CON           equ	4046	;# 
   982   000FCE                     TMR1CON         equ	4046	;# 
   983   000FCF                     T1GCON          equ	4047	;# 
   984   000FCF                     TMR1GCON        equ	4047	;# 
   985   000FD0                     T1GATE          equ	4048	;# 
   986   000FD0                     TMR1GATE        equ	4048	;# 
   987   000FD1                     T1CLK           equ	4049	;# 
   988   000FD1                     TMR1CLK         equ	4049	;# 
   989   000FD1                     PR1             equ	4049	;# 
   990   000FD2                     TMR0L           equ	4050	;# 
   991   000FD2                     TMR0            equ	4050	;# 
   992   000FD3                     TMR0H           equ	4051	;# 
   993   000FD3                     PR0             equ	4051	;# 
   994   000FD4                     T0CON0          equ	4052	;# 
   995   000FD5                     T0CON1          equ	4053	;# 
   996   000FD6                     PCON1           equ	4054	;# 
   997   000FD7                     PCON0           equ	4055	;# 
   998   000FD8                     STATUS          equ	4056	;# 
   999   000FD9                     FSR2            equ	4057	;# 
  1000   000FD9                     FSR2L           equ	4057	;# 
  1001   000FDA                     FSR2H           equ	4058	;# 
  1002   000FDB                     PLUSW2          equ	4059	;# 
  1003   000FDC                     PREINC2         equ	4060	;# 
  1004   000FDD                     POSTDEC2        equ	4061	;# 
  1005   000FDE                     POSTINC2        equ	4062	;# 
  1006   000FDF                     INDF2           equ	4063	;# 
  1007   000FE0                     BSR             equ	4064	;# 
  1008   000FE1                     FSR1            equ	4065	;# 
  1009   000FE1                     FSR1L           equ	4065	;# 
  1010   000FE2                     FSR1H           equ	4066	;# 
  1011   000FE3                     PLUSW1          equ	4067	;# 
  1012   000FE4                     PREINC1         equ	4068	;# 
  1013   000FE5                     POSTDEC1        equ	4069	;# 
  1014   000FE6                     POSTINC1        equ	4070	;# 
  1015   000FE7                     INDF1           equ	4071	;# 
  1016   000FE8                     WREG            equ	4072	;# 
  1017   000FE9                     FSR0            equ	4073	;# 
  1018   000FE9                     FSR0L           equ	4073	;# 
  1019   000FEA                     FSR0H           equ	4074	;# 
  1020   000FEB                     PLUSW0          equ	4075	;# 
  1021   000FEC                     PREINC0         equ	4076	;# 
  1022   000FED                     POSTDEC0        equ	4077	;# 
  1023   000FEE                     POSTINC0        equ	4078	;# 
  1024   000FEF                     INDF0           equ	4079	;# 
  1025   000FF2                     INTCON          equ	4082	;# 
  1026   000FF3                     PROD            equ	4083	;# 
  1027   000FF3                     PRODL           equ	4083	;# 
  1028   000FF4                     PRODH           equ	4084	;# 
  1029   000FF5                     TABLAT          equ	4085	;# 
  1030   000FF6                     TBLPTR          equ	4086	;# 
  1031   000FF6                     TBLPTRL         equ	4086	;# 
  1032   000FF7                     TBLPTRH         equ	4087	;# 
  1033   000FF8                     TBLPTRU         equ	4088	;# 
  1034   000FF9                     PCLAT           equ	4089	;# 
  1035   000FF9                     PC              equ	4089	;# 
  1036   000FF9                     PCL             equ	4089	;# 
  1037   000FFA                     PCLATH          equ	4090	;# 
  1038   000FFB                     PCLATU          equ	4091	;# 
  1039   000FFC                     STKPTR          equ	4092	;# 
  1040   000FFD                     TOS             equ	4093	;# 
  1041   000FFD                     TOSL            equ	4093	;# 
  1042   000FFE                     TOSH            equ	4094	;# 
  1043   000FFF                     TOSU            equ	4095	;# 
  1044   000E9B                     PPSLOCK         equ	3739	;# 
  1045   000E9C                     INT0PPS         equ	3740	;# 
  1046   000E9D                     INT1PPS         equ	3741	;# 
  1047   000E9E                     INT2PPS         equ	3742	;# 
  1048   000E9F                     T0CKIPPS        equ	3743	;# 
  1049   000EA0                     T1CKIPPS        equ	3744	;# 
  1050   000EA1                     T1GPPS          equ	3745	;# 
  1051   000EA2                     T3CKIPPS        equ	3746	;# 
  1052   000EA3                     T3GPPS          equ	3747	;# 
  1053   000EA4                     T5CKIPPS        equ	3748	;# 
  1054   000EA5                     T5GPPS          equ	3749	;# 
  1055   000EA6                     T2INPPS         equ	3750	;# 
  1056   000EA7                     T4INPPS         equ	3751	;# 
  1057   000EA8                     T6INPPS         equ	3752	;# 
  1058   000EA9                     ADACTPPS        equ	3753	;# 
  1059   000EAA                     CCP1PPS         equ	3754	;# 
  1060   000EAB                     CCP2PPS         equ	3755	;# 
  1061   000EAC                     CWG1PPS         equ	3756	;# 
  1062   000EAC                     CWGPPS          equ	3756	;# 
  1063   000EAC                     CWGINPPS        equ	3756	;# 
  1064   000EAC                     CWG1INPPS       equ	3756	;# 
  1065   000EAD                     MDCARLPPS       equ	3757	;# 
  1066   000EAE                     MDCARHPPS       equ	3758	;# 
  1067   000EAF                     MDSRCPPS        equ	3759	;# 
  1068   000EB0                     RX1PPS          equ	3760	;# 
  1069   000EB0                     RXPPS           equ	3760	;# 
  1070   000EB0                     RXDT1PPS        equ	3760	;# 
  1071   000EB1                     CK1PPS          equ	3761	;# 
  1072   000EB1                     TXPPS           equ	3761	;# 
  1073   000EB1                     CKPPS           equ	3761	;# 
  1074   000EB1                     TXCK1PPS        equ	3761	;# 
  1075   000EB1                     TX1PPS          equ	3761	;# 
  1076   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1077   000EB2                     SSPCLKPPS       equ	3762	;# 
  1078   000EB3                     SSP1DATPPS      equ	3763	;# 
  1079   000EB3                     SSPDATPPS       equ	3763	;# 
  1080   000EB4                     SSP1SSPPS       equ	3764	;# 
  1081   000EB4                     SSPSSPPS        equ	3764	;# 
  1082   000EB5                     IPR0            equ	3765	;# 
  1083   000EB6                     IPR1            equ	3766	;# 
  1084   000EB7                     IPR2            equ	3767	;# 
  1085   000EB8                     IPR3            equ	3768	;# 
  1086   000EB9                     IPR4            equ	3769	;# 
  1087   000EBA                     IPR5            equ	3770	;# 
  1088   000EBB                     IPR6            equ	3771	;# 
  1089   000EBC                     IPR7            equ	3772	;# 
  1090   000EBD                     PIE0            equ	3773	;# 
  1091   000EBE                     PIE1            equ	3774	;# 
  1092   000EBF                     PIE2            equ	3775	;# 
  1093   000EC0                     PIE3            equ	3776	;# 
  1094   000EC1                     PIE4            equ	3777	;# 
  1095   000EC2                     PIE5            equ	3778	;# 
  1096   000EC3                     PIE6            equ	3779	;# 
  1097   000EC4                     PIE7            equ	3780	;# 
  1098   000EC5                     PIR0            equ	3781	;# 
  1099   000EC6                     PIR1            equ	3782	;# 
  1100   000EC7                     PIR2            equ	3783	;# 
  1101   000EC8                     PIR3            equ	3784	;# 
  1102   000EC9                     PIR4            equ	3785	;# 
  1103   000ECA                     PIR5            equ	3786	;# 
  1104   000ECB                     PIR6            equ	3787	;# 
  1105   000ECC                     PIR7            equ	3788	;# 
  1106   000ECD                     WDTCON0         equ	3789	;# 
  1107   000ECE                     WDTCON1         equ	3790	;# 
  1108   000ECF                     WDTPSL          equ	3791	;# 
  1109   000ED0                     WDTPSH          equ	3792	;# 
  1110   000ED1                     WDTTMR          equ	3793	;# 
  1111   000ED2                     CPUDOZE         equ	3794	;# 
  1112   000ED3                     OSCCON1         equ	3795	;# 
  1113   000ED4                     OSCCON2         equ	3796	;# 
  1114   000ED5                     OSCCON3         equ	3797	;# 
  1115   000ED6                     OSCSTAT         equ	3798	;# 
  1116   000ED6                     OSCSTAT1        equ	3798	;# 
  1117   000ED7                     OSCEN           equ	3799	;# 
  1118   000ED8                     OSCTUNE         equ	3800	;# 
  1119   000ED9                     OSCFRQ          equ	3801	;# 
  1120   000ED9                     OSCFREQ         equ	3801	;# 
  1121   000EDA                     VREGCON         equ	3802	;# 
  1122   000EDB                     BORCON          equ	3803	;# 
  1123   000EDC                     PMD0            equ	3804	;# 
  1124   000EDD                     PMD1            equ	3805	;# 
  1125   000EDE                     PMD2            equ	3806	;# 
  1126   000EDF                     PMD3            equ	3807	;# 
  1127   000EE0                     PMD4            equ	3808	;# 
  1128   000EE1                     PMD5            equ	3809	;# 
  1129   000EE2                     RA0PPS          equ	3810	;# 
  1130   000EE3                     RA1PPS          equ	3811	;# 
  1131   000EE4                     RA2PPS          equ	3812	;# 
  1132   000EE5                     RA3PPS          equ	3813	;# 
  1133   000EE6                     RA4PPS          equ	3814	;# 
  1134   000EE7                     RA5PPS          equ	3815	;# 
  1135   000EE8                     RA6PPS          equ	3816	;# 
  1136   000EE9                     RA7PPS          equ	3817	;# 
  1137   000EEA                     RB0PPS          equ	3818	;# 
  1138   000EEB                     RB1PPS          equ	3819	;# 
  1139   000EEC                     RB2PPS          equ	3820	;# 
  1140   000EED                     RB3PPS          equ	3821	;# 
  1141   000EEE                     RB4PPS          equ	3822	;# 
  1142   000EEF                     RB5PPS          equ	3823	;# 
  1143   000EF0                     RB6PPS          equ	3824	;# 
  1144   000EF1                     RB7PPS          equ	3825	;# 
  1145   000EF2                     RC0PPS          equ	3826	;# 
  1146   000EF3                     RC1PPS          equ	3827	;# 
  1147   000EF4                     RC2PPS          equ	3828	;# 
  1148   000EF5                     RC3PPS          equ	3829	;# 
  1149   000EF6                     RC4PPS          equ	3830	;# 
  1150   000EF7                     RC5PPS          equ	3831	;# 
  1151   000EF8                     RC6PPS          equ	3832	;# 
  1152   000EF9                     RC7PPS          equ	3833	;# 
  1153   000F05                     IOCAF           equ	3845	;# 
  1154   000F06                     IOCAN           equ	3846	;# 
  1155   000F07                     IOCAP           equ	3847	;# 
  1156   000F08                     INLVLA          equ	3848	;# 
  1157   000F09                     SLRCONA         equ	3849	;# 
  1158   000F0A                     ODCONA          equ	3850	;# 
  1159   000F0B                     WPUA            equ	3851	;# 
  1160   000F0C                     ANSELA          equ	3852	;# 
  1161   000F0D                     IOCBF           equ	3853	;# 
  1162   000F0E                     IOCBN           equ	3854	;# 
  1163   000F0F                     IOCBP           equ	3855	;# 
  1164   000F10                     INLVLB          equ	3856	;# 
  1165   000F11                     SLRCONB         equ	3857	;# 
  1166   000F12                     ODCONB          equ	3858	;# 
  1167   000F13                     WPUB            equ	3859	;# 
  1168   000F14                     ANSELB          equ	3860	;# 
  1169   000F15                     IOCCF           equ	3861	;# 
  1170   000F16                     IOCCN           equ	3862	;# 
  1171   000F17                     IOCCP           equ	3863	;# 
  1172   000F18                     INLVLC          equ	3864	;# 
  1173   000F19                     SLRCONC         equ	3865	;# 
  1174   000F1A                     ODCONC          equ	3866	;# 
  1175   000F1B                     WPUC            equ	3867	;# 
  1176   000F1C                     ANSELC          equ	3868	;# 
  1177   000F22                     IOCEF           equ	3874	;# 
  1178   000F23                     IOCEN           equ	3875	;# 
  1179   000F24                     IOCEP           equ	3876	;# 
  1180   000F25                     INLVLE          equ	3877	;# 
  1181   000F28                     WPUE            equ	3880	;# 
  1182   000F2A                     HLVDCON0        equ	3882	;# 
  1183   000F2B                     HLVDCON1        equ	3883	;# 
  1184   000F2C                     FVRCON          equ	3884	;# 
  1185   000F2D                     ZCDCON          equ	3885	;# 
  1186   000F2E                     DAC1CON0        equ	3886	;# 
  1187   000F2F                     DAC1CON1        equ	3887	;# 
  1188   000F30                     CM2CON0         equ	3888	;# 
  1189   000F31                     CM2CON1         equ	3889	;# 
  1190   000F32                     CM2NCH          equ	3890	;# 
  1191   000F33                     CM2PCH          equ	3891	;# 
  1192   000F34                     CM1CON0         equ	3892	;# 
  1193   000F35                     CM1CON1         equ	3893	;# 
  1194   000F36                     CM1NCH          equ	3894	;# 
  1195   000F37                     CM1PCH          equ	3895	;# 
  1196   000F38                     CMOUT           equ	3896	;# 
  1197   000F39                     CLKRCON         equ	3897	;# 
  1198   000F3A                     CLKRCLK         equ	3898	;# 
  1199   000F3B                     CWG1CLK         equ	3899	;# 
  1200   000F3B                     CWG1CLKCON      equ	3899	;# 
  1201   000F3C                     CWG1ISM         equ	3900	;# 
  1202   000F3D                     CWG1DBR         equ	3901	;# 
  1203   000F3E                     CWG1DBF         equ	3902	;# 
  1204   000F3F                     CWG1CON0        equ	3903	;# 
  1205   000F40                     CWG1CON1        equ	3904	;# 
  1206   000F41                     CWG1AS0         equ	3905	;# 
  1207   000F42                     CWG1AS1         equ	3906	;# 
  1208   000F43                     CWG1STR         equ	3907	;# 
  1209   000F44                     SCANLADR        equ	3908	;# 
  1210   000F44                     SCANLADRL       equ	3908	;# 
  1211   000F45                     SCANLADRH       equ	3909	;# 
  1212   000F46                     SCANLADRU       equ	3910	;# 
  1213   000F47                     SCANHADR        equ	3911	;# 
  1214   000F47                     SCANHADRL       equ	3911	;# 
  1215   000F48                     SCANHADRH       equ	3912	;# 
  1216   000F49                     SCANHADRU       equ	3913	;# 
  1217   000F4A                     SCANCON0        equ	3914	;# 
  1218   000F4B                     SCANTRIG        equ	3915	;# 
  1219   000F4C                     MDCON0          equ	3916	;# 
  1220   000F4D                     MDCON1          equ	3917	;# 
  1221   000F4E                     MDSRC           equ	3918	;# 
  1222   000F4F                     MDCARL          equ	3919	;# 
  1223   000F50                     MDCARH          equ	3920	;# 
  1224   000F51                     ADACT           equ	3921	;# 
  1225   000F52                     ADCLK           equ	3922	;# 
  1226   000F53                     ADREF           equ	3923	;# 
  1227   000F54                     ADCON1          equ	3924	;# 
  1228   000F55                     ADCON2          equ	3925	;# 
  1229   000F56                     ADCON3          equ	3926	;# 
  1230   000F57                     ADACQ           equ	3927	;# 
  1231   000F58                     ADCAP           equ	3928	;# 
  1232   000F59                     ADPRE           equ	3929	;# 
  1233   000F5A                     ADPCH           equ	3930	;# 
  1234   000F5B                     ADCON0          equ	3931	;# 
  1235   000F5C                     ADPREV          equ	3932	;# 
  1236   000F5C                     ADPREVL         equ	3932	;# 
  1237   000F5D                     ADPREVH         equ	3933	;# 
  1238   000F5E                     ADRES           equ	3934	;# 
  1239   000F5E                     ADRESL          equ	3934	;# 
  1240   000F5F                     ADRESH          equ	3935	;# 
  1241   000F60                     ADSTAT          equ	3936	;# 
  1242   000F61                     ADRPT           equ	3937	;# 
  1243   000F62                     ADCNT           equ	3938	;# 
  1244   000F63                     ADSTPT          equ	3939	;# 
  1245   000F63                     ADSTPTL         equ	3939	;# 
  1246   000F64                     ADSTPTH         equ	3940	;# 
  1247   000F65                     ADLTH           equ	3941	;# 
  1248   000F65                     ADLTHL          equ	3941	;# 
  1249   000F66                     ADLTHH          equ	3942	;# 
  1250   000F67                     ADUTH           equ	3943	;# 
  1251   000F67                     ADUTHL          equ	3943	;# 
  1252   000F68                     ADUTHH          equ	3944	;# 
  1253   000F69                     ADERR           equ	3945	;# 
  1254   000F69                     ADERRL          equ	3945	;# 
  1255   000F6A                     ADERRH          equ	3946	;# 
  1256   000F6B                     ADACC           equ	3947	;# 
  1257   000F6B                     ADACCL          equ	3947	;# 
  1258   000F6C                     ADACCH          equ	3948	;# 
  1259   000F6D                     ADFLTR          equ	3949	;# 
  1260   000F6D                     ADFLTRL         equ	3949	;# 
  1261   000F6E                     ADFLTRH         equ	3950	;# 
  1262   000F6F                     CRCDATA         equ	3951	;# 
  1263   000F6F                     CRCDATL         equ	3951	;# 
  1264   000F70                     CRCDATH         equ	3952	;# 
  1265   000F71                     CRCACC          equ	3953	;# 
  1266   000F71                     CRCACCL         equ	3953	;# 
  1267   000F72                     CRCACCH         equ	3954	;# 
  1268   000F73                     CRCSHFT         equ	3955	;# 
  1269   000F73                     CRCSHIFTL       equ	3955	;# 
  1270   000F74                     CRCSHIFTH       equ	3956	;# 
  1271   000F75                     CRCXOR          equ	3957	;# 
  1272   000F75                     CRCXORL         equ	3957	;# 
  1273   000F76                     CRCXORH         equ	3958	;# 
  1274   000F77                     CRCCON0         equ	3959	;# 
  1275   000F78                     CRCCON1         equ	3960	;# 
  1276   000F79                     NVMADR          equ	3961	;# 
  1277   000F79                     NVMADRL         equ	3961	;# 
  1278   000F7A                     NVMADRH         equ	3962	;# 
  1279   000F7B                     NVMADRU         equ	3963	;# 
  1280   000F7C                     NVMDAT          equ	3964	;# 
  1281   000F7C                     NVMDATL         equ	3964	;# 
  1282   000F7D                     NVMDATH         equ	3965	;# 
  1283   000F7F                     NVMCON0         equ	3967	;# 
  1284   000F80                     NVMCON1         equ	3968	;# 
  1285   000F81                     NVMCON2         equ	3969	;# 
  1286   000F82                     LATA            equ	3970	;# 
  1287   000F83                     LATB            equ	3971	;# 
  1288   000F84                     LATC            equ	3972	;# 
  1289   000F87                     TRISA           equ	3975	;# 
  1290   000F87                     DDRA            equ	3975	;# 
  1291   000F88                     TRISB           equ	3976	;# 
  1292   000F88                     DDRB            equ	3976	;# 
  1293   000F89                     TRISC           equ	3977	;# 
  1294   000F89                     DDRC            equ	3977	;# 
  1295   000F8C                     PORTA           equ	3980	;# 
  1296   000F8D                     PORTB           equ	3981	;# 
  1297   000F8E                     PORTC           equ	3982	;# 
  1298   000F90                     PORTE           equ	3984	;# 
  1299   000F91                     SSP1BUF         equ	3985	;# 
  1300   000F92                     SSP1ADD         equ	3986	;# 
  1301   000F93                     SSP1MSK         equ	3987	;# 
  1302   000F94                     SSP1STAT        equ	3988	;# 
  1303   000F95                     SSP1CON1        equ	3989	;# 
  1304   000F96                     SSP1CON2        equ	3990	;# 
  1305   000F97                     SSP1CON3        equ	3991	;# 
  1306   000F98                     RC1REG          equ	3992	;# 
  1307   000F98                     RCREG           equ	3992	;# 
  1308   000F98                     RCREG1          equ	3992	;# 
  1309   000F99                     TX1REG          equ	3993	;# 
  1310   000F99                     TXREG1          equ	3993	;# 
  1311   000F99                     TXREG           equ	3993	;# 
  1312   000F9A                     SP1BRG          equ	3994	;# 
  1313   000F9A                     SPBRG           equ	3994	;# 
  1314   000F9A                     SP1BRGL         equ	3994	;# 
  1315   000F9A                     SPBRG1          equ	3994	;# 
  1316   000F9A                     SPBRGL          equ	3994	;# 
  1317   000F9B                     SP1BRGH         equ	3995	;# 
  1318   000F9B                     SPBRGH          equ	3995	;# 
  1319   000F9B                     SPBRGH1         equ	3995	;# 
  1320   000F9C                     RC1STA          equ	3996	;# 
  1321   000F9C                     RCSTA1          equ	3996	;# 
  1322   000F9C                     RCSTA           equ	3996	;# 
  1323   000F9D                     TX1STA          equ	3997	;# 
  1324   000F9D                     TXSTA1          equ	3997	;# 
  1325   000F9D                     TXSTA           equ	3997	;# 
  1326   000F9E                     BAUD1CON        equ	3998	;# 
  1327   000F9E                     BAUDCON1        equ	3998	;# 
  1328   000F9E                     BAUDCTL1        equ	3998	;# 
  1329   000F9E                     BAUDCON         equ	3998	;# 
  1330   000F9E                     BAUDCTL         equ	3998	;# 
  1331   000F9F                     PWM4DC          equ	3999	;# 
  1332   000F9F                     PWM4DCL         equ	3999	;# 
  1333   000FA0                     PWM4DCH         equ	4000	;# 
  1334   000FA1                     PWM4CON         equ	4001	;# 
  1335   000FA2                     PWM3DC          equ	4002	;# 
  1336   000FA2                     PWM3DCL         equ	4002	;# 
  1337   000FA3                     PWM3DCH         equ	4003	;# 
  1338   000FA4                     PWM3CON         equ	4004	;# 
  1339   000FA5                     CCPR2           equ	4005	;# 
  1340   000FA5                     CCPR2L          equ	4005	;# 
  1341   000FA6                     CCPR2H          equ	4006	;# 
  1342   000FA7                     CCP2CON         equ	4007	;# 
  1343   000FA8                     CCP2CAP         equ	4008	;# 
  1344   000FA9                     CCPR1           equ	4009	;# 
  1345   000FA9                     CCPR1L          equ	4009	;# 
  1346   000FAA                     CCPR1H          equ	4010	;# 
  1347   000FAB                     CCP1CON         equ	4011	;# 
  1348   000FAC                     CCP1CAP         equ	4012	;# 
  1349   000FAD                     CCPTMRS         equ	4013	;# 
  1350   000FAE                     T6TMR           equ	4014	;# 
  1351   000FAE                     TMR6            equ	4014	;# 
  1352   000FAF                     T6PR            equ	4015	;# 
  1353   000FAF                     PR6             equ	4015	;# 
  1354   000FB0                     T6CON           equ	4016	;# 
  1355   000FB1                     T6HLT           equ	4017	;# 
  1356   000FB2                     T6CLKCON        equ	4018	;# 
  1357   000FB2                     T6CLK           equ	4018	;# 
  1358   000FB3                     T6RST           equ	4019	;# 
  1359   000FB4                     T4TMR           equ	4020	;# 
  1360   000FB4                     TMR4            equ	4020	;# 
  1361   000FB5                     T4PR            equ	4021	;# 
  1362   000FB5                     PR4             equ	4021	;# 
  1363   000FB6                     T4CON           equ	4022	;# 
  1364   000FB7                     T4HLT           equ	4023	;# 
  1365   000FB8                     T4CLKCON        equ	4024	;# 
  1366   000FB8                     T4CLK           equ	4024	;# 
  1367   000FB9                     T4RST           equ	4025	;# 
  1368   000FBA                     T2TMR           equ	4026	;# 
  1369   000FBA                     TMR2            equ	4026	;# 
  1370   000FBB                     T2PR            equ	4027	;# 
  1371   000FBB                     PR2             equ	4027	;# 
  1372   000FBC                     T2CON           equ	4028	;# 
  1373   000FBD                     T2HLT           equ	4029	;# 
  1374   000FBE                     T2CLKCON        equ	4030	;# 
  1375   000FBE                     T2CLK           equ	4030	;# 
  1376   000FBF                     T2RST           equ	4031	;# 
  1377   000FC0                     TMR5            equ	4032	;# 
  1378   000FC0                     TMR5L           equ	4032	;# 
  1379   000FC1                     TMR5H           equ	4033	;# 
  1380   000FC2                     T5CON           equ	4034	;# 
  1381   000FC2                     TMR5CON         equ	4034	;# 
  1382   000FC3                     T5GCON          equ	4035	;# 
  1383   000FC3                     TMR5GCON        equ	4035	;# 
  1384   000FC4                     T5GATE          equ	4036	;# 
  1385   000FC4                     TMR5GATE        equ	4036	;# 
  1386   000FC5                     T5CLK           equ	4037	;# 
  1387   000FC5                     TMR5CLK         equ	4037	;# 
  1388   000FC5                     PR5             equ	4037	;# 
  1389   000FC6                     TMR3            equ	4038	;# 
  1390   000FC6                     TMR3L           equ	4038	;# 
  1391   000FC7                     TMR3H           equ	4039	;# 
  1392   000FC8                     T3CON           equ	4040	;# 
  1393   000FC8                     TMR3CON         equ	4040	;# 
  1394   000FC9                     T3GCON          equ	4041	;# 
  1395   000FC9                     TMR3GCON        equ	4041	;# 
  1396   000FCA                     T3GATE          equ	4042	;# 
  1397   000FCA                     TMR3GATE        equ	4042	;# 
  1398   000FCB                     T3CLK           equ	4043	;# 
  1399   000FCB                     TMR3CLK         equ	4043	;# 
  1400   000FCB                     PR3             equ	4043	;# 
  1401   000FCC                     TMR1            equ	4044	;# 
  1402   000FCC                     TMR1L           equ	4044	;# 
  1403   000FCD                     TMR1H           equ	4045	;# 
  1404   000FCE                     T1CON           equ	4046	;# 
  1405   000FCE                     TMR1CON         equ	4046	;# 
  1406   000FCF                     T1GCON          equ	4047	;# 
  1407   000FCF                     TMR1GCON        equ	4047	;# 
  1408   000FD0                     T1GATE          equ	4048	;# 
  1409   000FD0                     TMR1GATE        equ	4048	;# 
  1410   000FD1                     T1CLK           equ	4049	;# 
  1411   000FD1                     TMR1CLK         equ	4049	;# 
  1412   000FD1                     PR1             equ	4049	;# 
  1413   000FD2                     TMR0L           equ	4050	;# 
  1414   000FD2                     TMR0            equ	4050	;# 
  1415   000FD3                     TMR0H           equ	4051	;# 
  1416   000FD3                     PR0             equ	4051	;# 
  1417   000FD4                     T0CON0          equ	4052	;# 
  1418   000FD5                     T0CON1          equ	4053	;# 
  1419   000FD6                     PCON1           equ	4054	;# 
  1420   000FD7                     PCON0           equ	4055	;# 
  1421   000FD8                     STATUS          equ	4056	;# 
  1422   000FD9                     FSR2            equ	4057	;# 
  1423   000FD9                     FSR2L           equ	4057	;# 
  1424   000FDA                     FSR2H           equ	4058	;# 
  1425   000FDB                     PLUSW2          equ	4059	;# 
  1426   000FDC                     PREINC2         equ	4060	;# 
  1427   000FDD                     POSTDEC2        equ	4061	;# 
  1428   000FDE                     POSTINC2        equ	4062	;# 
  1429   000FDF                     INDF2           equ	4063	;# 
  1430   000FE0                     BSR             equ	4064	;# 
  1431   000FE1                     FSR1            equ	4065	;# 
  1432   000FE1                     FSR1L           equ	4065	;# 
  1433   000FE2                     FSR1H           equ	4066	;# 
  1434   000FE3                     PLUSW1          equ	4067	;# 
  1435   000FE4                     PREINC1         equ	4068	;# 
  1436   000FE5                     POSTDEC1        equ	4069	;# 
  1437   000FE6                     POSTINC1        equ	4070	;# 
  1438   000FE7                     INDF1           equ	4071	;# 
  1439   000FE8                     WREG            equ	4072	;# 
  1440   000FE9                     FSR0            equ	4073	;# 
  1441   000FE9                     FSR0L           equ	4073	;# 
  1442   000FEA                     FSR0H           equ	4074	;# 
  1443   000FEB                     PLUSW0          equ	4075	;# 
  1444   000FEC                     PREINC0         equ	4076	;# 
  1445   000FED                     POSTDEC0        equ	4077	;# 
  1446   000FEE                     POSTINC0        equ	4078	;# 
  1447   000FEF                     INDF0           equ	4079	;# 
  1448   000FF2                     INTCON          equ	4082	;# 
  1449   000FF3                     PROD            equ	4083	;# 
  1450   000FF3                     PRODL           equ	4083	;# 
  1451   000FF4                     PRODH           equ	4084	;# 
  1452   000FF5                     TABLAT          equ	4085	;# 
  1453   000FF6                     TBLPTR          equ	4086	;# 
  1454   000FF6                     TBLPTRL         equ	4086	;# 
  1455   000FF7                     TBLPTRH         equ	4087	;# 
  1456   000FF8                     TBLPTRU         equ	4088	;# 
  1457   000FF9                     PCLAT           equ	4089	;# 
  1458   000FF9                     PC              equ	4089	;# 
  1459   000FF9                     PCL             equ	4089	;# 
  1460   000FFA                     PCLATH          equ	4090	;# 
  1461   000FFB                     PCLATU          equ	4091	;# 
  1462   000FFC                     STKPTR          equ	4092	;# 
  1463   000FFD                     TOS             equ	4093	;# 
  1464   000FFD                     TOSL            equ	4093	;# 
  1465   000FFE                     TOSH            equ	4094	;# 
  1466   000FFF                     TOSU            equ	4095	;# 
  1467   000E9B                     PPSLOCK         equ	3739	;# 
  1468   000E9C                     INT0PPS         equ	3740	;# 
  1469   000E9D                     INT1PPS         equ	3741	;# 
  1470   000E9E                     INT2PPS         equ	3742	;# 
  1471   000E9F                     T0CKIPPS        equ	3743	;# 
  1472   000EA0                     T1CKIPPS        equ	3744	;# 
  1473   000EA1                     T1GPPS          equ	3745	;# 
  1474   000EA2                     T3CKIPPS        equ	3746	;# 
  1475   000EA3                     T3GPPS          equ	3747	;# 
  1476   000EA4                     T5CKIPPS        equ	3748	;# 
  1477   000EA5                     T5GPPS          equ	3749	;# 
  1478   000EA6                     T2INPPS         equ	3750	;# 
  1479   000EA7                     T4INPPS         equ	3751	;# 
  1480   000EA8                     T6INPPS         equ	3752	;# 
  1481   000EA9                     ADACTPPS        equ	3753	;# 
  1482   000EAA                     CCP1PPS         equ	3754	;# 
  1483   000EAB                     CCP2PPS         equ	3755	;# 
  1484   000EAC                     CWG1PPS         equ	3756	;# 
  1485   000EAC                     CWGPPS          equ	3756	;# 
  1486   000EAC                     CWGINPPS        equ	3756	;# 
  1487   000EAC                     CWG1INPPS       equ	3756	;# 
  1488   000EAD                     MDCARLPPS       equ	3757	;# 
  1489   000EAE                     MDCARHPPS       equ	3758	;# 
  1490   000EAF                     MDSRCPPS        equ	3759	;# 
  1491   000EB0                     RX1PPS          equ	3760	;# 
  1492   000EB0                     RXPPS           equ	3760	;# 
  1493   000EB0                     RXDT1PPS        equ	3760	;# 
  1494   000EB1                     CK1PPS          equ	3761	;# 
  1495   000EB1                     TXPPS           equ	3761	;# 
  1496   000EB1                     CKPPS           equ	3761	;# 
  1497   000EB1                     TXCK1PPS        equ	3761	;# 
  1498   000EB1                     TX1PPS          equ	3761	;# 
  1499   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1500   000EB2                     SSPCLKPPS       equ	3762	;# 
  1501   000EB3                     SSP1DATPPS      equ	3763	;# 
  1502   000EB3                     SSPDATPPS       equ	3763	;# 
  1503   000EB4                     SSP1SSPPS       equ	3764	;# 
  1504   000EB4                     SSPSSPPS        equ	3764	;# 
  1505   000EB5                     IPR0            equ	3765	;# 
  1506   000EB6                     IPR1            equ	3766	;# 
  1507   000EB7                     IPR2            equ	3767	;# 
  1508   000EB8                     IPR3            equ	3768	;# 
  1509   000EB9                     IPR4            equ	3769	;# 
  1510   000EBA                     IPR5            equ	3770	;# 
  1511   000EBB                     IPR6            equ	3771	;# 
  1512   000EBC                     IPR7            equ	3772	;# 
  1513   000EBD                     PIE0            equ	3773	;# 
  1514   000EBE                     PIE1            equ	3774	;# 
  1515   000EBF                     PIE2            equ	3775	;# 
  1516   000EC0                     PIE3            equ	3776	;# 
  1517   000EC1                     PIE4            equ	3777	;# 
  1518   000EC2                     PIE5            equ	3778	;# 
  1519   000EC3                     PIE6            equ	3779	;# 
  1520   000EC4                     PIE7            equ	3780	;# 
  1521   000EC5                     PIR0            equ	3781	;# 
  1522   000EC6                     PIR1            equ	3782	;# 
  1523   000EC7                     PIR2            equ	3783	;# 
  1524   000EC8                     PIR3            equ	3784	;# 
  1525   000EC9                     PIR4            equ	3785	;# 
  1526   000ECA                     PIR5            equ	3786	;# 
  1527   000ECB                     PIR6            equ	3787	;# 
  1528   000ECC                     PIR7            equ	3788	;# 
  1529   000ECD                     WDTCON0         equ	3789	;# 
  1530   000ECE                     WDTCON1         equ	3790	;# 
  1531   000ECF                     WDTPSL          equ	3791	;# 
  1532   000ED0                     WDTPSH          equ	3792	;# 
  1533   000ED1                     WDTTMR          equ	3793	;# 
  1534   000ED2                     CPUDOZE         equ	3794	;# 
  1535   000ED3                     OSCCON1         equ	3795	;# 
  1536   000ED4                     OSCCON2         equ	3796	;# 
  1537   000ED5                     OSCCON3         equ	3797	;# 
  1538   000ED6                     OSCSTAT         equ	3798	;# 
  1539   000ED6                     OSCSTAT1        equ	3798	;# 
  1540   000ED7                     OSCEN           equ	3799	;# 
  1541   000ED8                     OSCTUNE         equ	3800	;# 
  1542   000ED9                     OSCFRQ          equ	3801	;# 
  1543   000ED9                     OSCFREQ         equ	3801	;# 
  1544   000EDA                     VREGCON         equ	3802	;# 
  1545   000EDB                     BORCON          equ	3803	;# 
  1546   000EDC                     PMD0            equ	3804	;# 
  1547   000EDD                     PMD1            equ	3805	;# 
  1548   000EDE                     PMD2            equ	3806	;# 
  1549   000EDF                     PMD3            equ	3807	;# 
  1550   000EE0                     PMD4            equ	3808	;# 
  1551   000EE1                     PMD5            equ	3809	;# 
  1552   000EE2                     RA0PPS          equ	3810	;# 
  1553   000EE3                     RA1PPS          equ	3811	;# 
  1554   000EE4                     RA2PPS          equ	3812	;# 
  1555   000EE5                     RA3PPS          equ	3813	;# 
  1556   000EE6                     RA4PPS          equ	3814	;# 
  1557   000EE7                     RA5PPS          equ	3815	;# 
  1558   000EE8                     RA6PPS          equ	3816	;# 
  1559   000EE9                     RA7PPS          equ	3817	;# 
  1560   000EEA                     RB0PPS          equ	3818	;# 
  1561   000EEB                     RB1PPS          equ	3819	;# 
  1562   000EEC                     RB2PPS          equ	3820	;# 
  1563   000EED                     RB3PPS          equ	3821	;# 
  1564   000EEE                     RB4PPS          equ	3822	;# 
  1565   000EEF                     RB5PPS          equ	3823	;# 
  1566   000EF0                     RB6PPS          equ	3824	;# 
  1567   000EF1                     RB7PPS          equ	3825	;# 
  1568   000EF2                     RC0PPS          equ	3826	;# 
  1569   000EF3                     RC1PPS          equ	3827	;# 
  1570   000EF4                     RC2PPS          equ	3828	;# 
  1571   000EF5                     RC3PPS          equ	3829	;# 
  1572   000EF6                     RC4PPS          equ	3830	;# 
  1573   000EF7                     RC5PPS          equ	3831	;# 
  1574   000EF8                     RC6PPS          equ	3832	;# 
  1575   000EF9                     RC7PPS          equ	3833	;# 
  1576   000F05                     IOCAF           equ	3845	;# 
  1577   000F06                     IOCAN           equ	3846	;# 
  1578   000F07                     IOCAP           equ	3847	;# 
  1579   000F08                     INLVLA          equ	3848	;# 
  1580   000F09                     SLRCONA         equ	3849	;# 
  1581   000F0A                     ODCONA          equ	3850	;# 
  1582   000F0B                     WPUA            equ	3851	;# 
  1583   000F0C                     ANSELA          equ	3852	;# 
  1584   000F0D                     IOCBF           equ	3853	;# 
  1585   000F0E                     IOCBN           equ	3854	;# 
  1586   000F0F                     IOCBP           equ	3855	;# 
  1587   000F10                     INLVLB          equ	3856	;# 
  1588   000F11                     SLRCONB         equ	3857	;# 
  1589   000F12                     ODCONB          equ	3858	;# 
  1590   000F13                     WPUB            equ	3859	;# 
  1591   000F14                     ANSELB          equ	3860	;# 
  1592   000F15                     IOCCF           equ	3861	;# 
  1593   000F16                     IOCCN           equ	3862	;# 
  1594   000F17                     IOCCP           equ	3863	;# 
  1595   000F18                     INLVLC          equ	3864	;# 
  1596   000F19                     SLRCONC         equ	3865	;# 
  1597   000F1A                     ODCONC          equ	3866	;# 
  1598   000F1B                     WPUC            equ	3867	;# 
  1599   000F1C                     ANSELC          equ	3868	;# 
  1600   000F22                     IOCEF           equ	3874	;# 
  1601   000F23                     IOCEN           equ	3875	;# 
  1602   000F24                     IOCEP           equ	3876	;# 
  1603   000F25                     INLVLE          equ	3877	;# 
  1604   000F28                     WPUE            equ	3880	;# 
  1605   000F2A                     HLVDCON0        equ	3882	;# 
  1606   000F2B                     HLVDCON1        equ	3883	;# 
  1607   000F2C                     FVRCON          equ	3884	;# 
  1608   000F2D                     ZCDCON          equ	3885	;# 
  1609   000F2E                     DAC1CON0        equ	3886	;# 
  1610   000F2F                     DAC1CON1        equ	3887	;# 
  1611   000F30                     CM2CON0         equ	3888	;# 
  1612   000F31                     CM2CON1         equ	3889	;# 
  1613   000F32                     CM2NCH          equ	3890	;# 
  1614   000F33                     CM2PCH          equ	3891	;# 
  1615   000F34                     CM1CON0         equ	3892	;# 
  1616   000F35                     CM1CON1         equ	3893	;# 
  1617   000F36                     CM1NCH          equ	3894	;# 
  1618   000F37                     CM1PCH          equ	3895	;# 
  1619   000F38                     CMOUT           equ	3896	;# 
  1620   000F39                     CLKRCON         equ	3897	;# 
  1621   000F3A                     CLKRCLK         equ	3898	;# 
  1622   000F3B                     CWG1CLK         equ	3899	;# 
  1623   000F3B                     CWG1CLKCON      equ	3899	;# 
  1624   000F3C                     CWG1ISM         equ	3900	;# 
  1625   000F3D                     CWG1DBR         equ	3901	;# 
  1626   000F3E                     CWG1DBF         equ	3902	;# 
  1627   000F3F                     CWG1CON0        equ	3903	;# 
  1628   000F40                     CWG1CON1        equ	3904	;# 
  1629   000F41                     CWG1AS0         equ	3905	;# 
  1630   000F42                     CWG1AS1         equ	3906	;# 
  1631   000F43                     CWG1STR         equ	3907	;# 
  1632   000F44                     SCANLADR        equ	3908	;# 
  1633   000F44                     SCANLADRL       equ	3908	;# 
  1634   000F45                     SCANLADRH       equ	3909	;# 
  1635   000F46                     SCANLADRU       equ	3910	;# 
  1636   000F47                     SCANHADR        equ	3911	;# 
  1637   000F47                     SCANHADRL       equ	3911	;# 
  1638   000F48                     SCANHADRH       equ	3912	;# 
  1639   000F49                     SCANHADRU       equ	3913	;# 
  1640   000F4A                     SCANCON0        equ	3914	;# 
  1641   000F4B                     SCANTRIG        equ	3915	;# 
  1642   000F4C                     MDCON0          equ	3916	;# 
  1643   000F4D                     MDCON1          equ	3917	;# 
  1644   000F4E                     MDSRC           equ	3918	;# 
  1645   000F4F                     MDCARL          equ	3919	;# 
  1646   000F50                     MDCARH          equ	3920	;# 
  1647   000F51                     ADACT           equ	3921	;# 
  1648   000F52                     ADCLK           equ	3922	;# 
  1649   000F53                     ADREF           equ	3923	;# 
  1650   000F54                     ADCON1          equ	3924	;# 
  1651   000F55                     ADCON2          equ	3925	;# 
  1652   000F56                     ADCON3          equ	3926	;# 
  1653   000F57                     ADACQ           equ	3927	;# 
  1654   000F58                     ADCAP           equ	3928	;# 
  1655   000F59                     ADPRE           equ	3929	;# 
  1656   000F5A                     ADPCH           equ	3930	;# 
  1657   000F5B                     ADCON0          equ	3931	;# 
  1658   000F5C                     ADPREV          equ	3932	;# 
  1659   000F5C                     ADPREVL         equ	3932	;# 
  1660   000F5D                     ADPREVH         equ	3933	;# 
  1661   000F5E                     ADRES           equ	3934	;# 
  1662   000F5E                     ADRESL          equ	3934	;# 
  1663   000F5F                     ADRESH          equ	3935	;# 
  1664   000F60                     ADSTAT          equ	3936	;# 
  1665   000F61                     ADRPT           equ	3937	;# 
  1666   000F62                     ADCNT           equ	3938	;# 
  1667   000F63                     ADSTPT          equ	3939	;# 
  1668   000F63                     ADSTPTL         equ	3939	;# 
  1669   000F64                     ADSTPTH         equ	3940	;# 
  1670   000F65                     ADLTH           equ	3941	;# 
  1671   000F65                     ADLTHL          equ	3941	;# 
  1672   000F66                     ADLTHH          equ	3942	;# 
  1673   000F67                     ADUTH           equ	3943	;# 
  1674   000F67                     ADUTHL          equ	3943	;# 
  1675   000F68                     ADUTHH          equ	3944	;# 
  1676   000F69                     ADERR           equ	3945	;# 
  1677   000F69                     ADERRL          equ	3945	;# 
  1678   000F6A                     ADERRH          equ	3946	;# 
  1679   000F6B                     ADACC           equ	3947	;# 
  1680   000F6B                     ADACCL          equ	3947	;# 
  1681   000F6C                     ADACCH          equ	3948	;# 
  1682   000F6D                     ADFLTR          equ	3949	;# 
  1683   000F6D                     ADFLTRL         equ	3949	;# 
  1684   000F6E                     ADFLTRH         equ	3950	;# 
  1685   000F6F                     CRCDATA         equ	3951	;# 
  1686   000F6F                     CRCDATL         equ	3951	;# 
  1687   000F70                     CRCDATH         equ	3952	;# 
  1688   000F71                     CRCACC          equ	3953	;# 
  1689   000F71                     CRCACCL         equ	3953	;# 
  1690   000F72                     CRCACCH         equ	3954	;# 
  1691   000F73                     CRCSHFT         equ	3955	;# 
  1692   000F73                     CRCSHIFTL       equ	3955	;# 
  1693   000F74                     CRCSHIFTH       equ	3956	;# 
  1694   000F75                     CRCXOR          equ	3957	;# 
  1695   000F75                     CRCXORL         equ	3957	;# 
  1696   000F76                     CRCXORH         equ	3958	;# 
  1697   000F77                     CRCCON0         equ	3959	;# 
  1698   000F78                     CRCCON1         equ	3960	;# 
  1699   000F79                     NVMADR          equ	3961	;# 
  1700   000F79                     NVMADRL         equ	3961	;# 
  1701   000F7A                     NVMADRH         equ	3962	;# 
  1702   000F7B                     NVMADRU         equ	3963	;# 
  1703   000F7C                     NVMDAT          equ	3964	;# 
  1704   000F7C                     NVMDATL         equ	3964	;# 
  1705   000F7D                     NVMDATH         equ	3965	;# 
  1706   000F7F                     NVMCON0         equ	3967	;# 
  1707   000F80                     NVMCON1         equ	3968	;# 
  1708   000F81                     NVMCON2         equ	3969	;# 
  1709   000F82                     LATA            equ	3970	;# 
  1710   000F83                     LATB            equ	3971	;# 
  1711   000F84                     LATC            equ	3972	;# 
  1712   000F87                     TRISA           equ	3975	;# 
  1713   000F87                     DDRA            equ	3975	;# 
  1714   000F88                     TRISB           equ	3976	;# 
  1715   000F88                     DDRB            equ	3976	;# 
  1716   000F89                     TRISC           equ	3977	;# 
  1717   000F89                     DDRC            equ	3977	;# 
  1718   000F8C                     PORTA           equ	3980	;# 
  1719   000F8D                     PORTB           equ	3981	;# 
  1720   000F8E                     PORTC           equ	3982	;# 
  1721   000F90                     PORTE           equ	3984	;# 
  1722   000F91                     SSP1BUF         equ	3985	;# 
  1723   000F92                     SSP1ADD         equ	3986	;# 
  1724   000F93                     SSP1MSK         equ	3987	;# 
  1725   000F94                     SSP1STAT        equ	3988	;# 
  1726   000F95                     SSP1CON1        equ	3989	;# 
  1727   000F96                     SSP1CON2        equ	3990	;# 
  1728   000F97                     SSP1CON3        equ	3991	;# 
  1729   000F98                     RC1REG          equ	3992	;# 
  1730   000F98                     RCREG           equ	3992	;# 
  1731   000F98                     RCREG1          equ	3992	;# 
  1732   000F99                     TX1REG          equ	3993	;# 
  1733   000F99                     TXREG1          equ	3993	;# 
  1734   000F99                     TXREG           equ	3993	;# 
  1735   000F9A                     SP1BRG          equ	3994	;# 
  1736   000F9A                     SPBRG           equ	3994	;# 
  1737   000F9A                     SP1BRGL         equ	3994	;# 
  1738   000F9A                     SPBRG1          equ	3994	;# 
  1739   000F9A                     SPBRGL          equ	3994	;# 
  1740   000F9B                     SP1BRGH         equ	3995	;# 
  1741   000F9B                     SPBRGH          equ	3995	;# 
  1742   000F9B                     SPBRGH1         equ	3995	;# 
  1743   000F9C                     RC1STA          equ	3996	;# 
  1744   000F9C                     RCSTA1          equ	3996	;# 
  1745   000F9C                     RCSTA           equ	3996	;# 
  1746   000F9D                     TX1STA          equ	3997	;# 
  1747   000F9D                     TXSTA1          equ	3997	;# 
  1748   000F9D                     TXSTA           equ	3997	;# 
  1749   000F9E                     BAUD1CON        equ	3998	;# 
  1750   000F9E                     BAUDCON1        equ	3998	;# 
  1751   000F9E                     BAUDCTL1        equ	3998	;# 
  1752   000F9E                     BAUDCON         equ	3998	;# 
  1753   000F9E                     BAUDCTL         equ	3998	;# 
  1754   000F9F                     PWM4DC          equ	3999	;# 
  1755   000F9F                     PWM4DCL         equ	3999	;# 
  1756   000FA0                     PWM4DCH         equ	4000	;# 
  1757   000FA1                     PWM4CON         equ	4001	;# 
  1758   000FA2                     PWM3DC          equ	4002	;# 
  1759   000FA2                     PWM3DCL         equ	4002	;# 
  1760   000FA3                     PWM3DCH         equ	4003	;# 
  1761   000FA4                     PWM3CON         equ	4004	;# 
  1762   000FA5                     CCPR2           equ	4005	;# 
  1763   000FA5                     CCPR2L          equ	4005	;# 
  1764   000FA6                     CCPR2H          equ	4006	;# 
  1765   000FA7                     CCP2CON         equ	4007	;# 
  1766   000FA8                     CCP2CAP         equ	4008	;# 
  1767   000FA9                     CCPR1           equ	4009	;# 
  1768   000FA9                     CCPR1L          equ	4009	;# 
  1769   000FAA                     CCPR1H          equ	4010	;# 
  1770   000FAB                     CCP1CON         equ	4011	;# 
  1771   000FAC                     CCP1CAP         equ	4012	;# 
  1772   000FAD                     CCPTMRS         equ	4013	;# 
  1773   000FAE                     T6TMR           equ	4014	;# 
  1774   000FAE                     TMR6            equ	4014	;# 
  1775   000FAF                     T6PR            equ	4015	;# 
  1776   000FAF                     PR6             equ	4015	;# 
  1777   000FB0                     T6CON           equ	4016	;# 
  1778   000FB1                     T6HLT           equ	4017	;# 
  1779   000FB2                     T6CLKCON        equ	4018	;# 
  1780   000FB2                     T6CLK           equ	4018	;# 
  1781   000FB3                     T6RST           equ	4019	;# 
  1782   000FB4                     T4TMR           equ	4020	;# 
  1783   000FB4                     TMR4            equ	4020	;# 
  1784   000FB5                     T4PR            equ	4021	;# 
  1785   000FB5                     PR4             equ	4021	;# 
  1786   000FB6                     T4CON           equ	4022	;# 
  1787   000FB7                     T4HLT           equ	4023	;# 
  1788   000FB8                     T4CLKCON        equ	4024	;# 
  1789   000FB8                     T4CLK           equ	4024	;# 
  1790   000FB9                     T4RST           equ	4025	;# 
  1791   000FBA                     T2TMR           equ	4026	;# 
  1792   000FBA                     TMR2            equ	4026	;# 
  1793   000FBB                     T2PR            equ	4027	;# 
  1794   000FBB                     PR2             equ	4027	;# 
  1795   000FBC                     T2CON           equ	4028	;# 
  1796   000FBD                     T2HLT           equ	4029	;# 
  1797   000FBE                     T2CLKCON        equ	4030	;# 
  1798   000FBE                     T2CLK           equ	4030	;# 
  1799   000FBF                     T2RST           equ	4031	;# 
  1800   000FC0                     TMR5            equ	4032	;# 
  1801   000FC0                     TMR5L           equ	4032	;# 
  1802   000FC1                     TMR5H           equ	4033	;# 
  1803   000FC2                     T5CON           equ	4034	;# 
  1804   000FC2                     TMR5CON         equ	4034	;# 
  1805   000FC3                     T5GCON          equ	4035	;# 
  1806   000FC3                     TMR5GCON        equ	4035	;# 
  1807   000FC4                     T5GATE          equ	4036	;# 
  1808   000FC4                     TMR5GATE        equ	4036	;# 
  1809   000FC5                     T5CLK           equ	4037	;# 
  1810   000FC5                     TMR5CLK         equ	4037	;# 
  1811   000FC5                     PR5             equ	4037	;# 
  1812   000FC6                     TMR3            equ	4038	;# 
  1813   000FC6                     TMR3L           equ	4038	;# 
  1814   000FC7                     TMR3H           equ	4039	;# 
  1815   000FC8                     T3CON           equ	4040	;# 
  1816   000FC8                     TMR3CON         equ	4040	;# 
  1817   000FC9                     T3GCON          equ	4041	;# 
  1818   000FC9                     TMR3GCON        equ	4041	;# 
  1819   000FCA                     T3GATE          equ	4042	;# 
  1820   000FCA                     TMR3GATE        equ	4042	;# 
  1821   000FCB                     T3CLK           equ	4043	;# 
  1822   000FCB                     TMR3CLK         equ	4043	;# 
  1823   000FCB                     PR3             equ	4043	;# 
  1824   000FCC                     TMR1            equ	4044	;# 
  1825   000FCC                     TMR1L           equ	4044	;# 
  1826   000FCD                     TMR1H           equ	4045	;# 
  1827   000FCE                     T1CON           equ	4046	;# 
  1828   000FCE                     TMR1CON         equ	4046	;# 
  1829   000FCF                     T1GCON          equ	4047	;# 
  1830   000FCF                     TMR1GCON        equ	4047	;# 
  1831   000FD0                     T1GATE          equ	4048	;# 
  1832   000FD0                     TMR1GATE        equ	4048	;# 
  1833   000FD1                     T1CLK           equ	4049	;# 
  1834   000FD1                     TMR1CLK         equ	4049	;# 
  1835   000FD1                     PR1             equ	4049	;# 
  1836   000FD2                     TMR0L           equ	4050	;# 
  1837   000FD2                     TMR0            equ	4050	;# 
  1838   000FD3                     TMR0H           equ	4051	;# 
  1839   000FD3                     PR0             equ	4051	;# 
  1840   000FD4                     T0CON0          equ	4052	;# 
  1841   000FD5                     T0CON1          equ	4053	;# 
  1842   000FD6                     PCON1           equ	4054	;# 
  1843   000FD7                     PCON0           equ	4055	;# 
  1844   000FD8                     STATUS          equ	4056	;# 
  1845   000FD9                     FSR2            equ	4057	;# 
  1846   000FD9                     FSR2L           equ	4057	;# 
  1847   000FDA                     FSR2H           equ	4058	;# 
  1848   000FDB                     PLUSW2          equ	4059	;# 
  1849   000FDC                     PREINC2         equ	4060	;# 
  1850   000FDD                     POSTDEC2        equ	4061	;# 
  1851   000FDE                     POSTINC2        equ	4062	;# 
  1852   000FDF                     INDF2           equ	4063	;# 
  1853   000FE0                     BSR             equ	4064	;# 
  1854   000FE1                     FSR1            equ	4065	;# 
  1855   000FE1                     FSR1L           equ	4065	;# 
  1856   000FE2                     FSR1H           equ	4066	;# 
  1857   000FE3                     PLUSW1          equ	4067	;# 
  1858   000FE4                     PREINC1         equ	4068	;# 
  1859   000FE5                     POSTDEC1        equ	4069	;# 
  1860   000FE6                     POSTINC1        equ	4070	;# 
  1861   000FE7                     INDF1           equ	4071	;# 
  1862   000FE8                     WREG            equ	4072	;# 
  1863   000FE9                     FSR0            equ	4073	;# 
  1864   000FE9                     FSR0L           equ	4073	;# 
  1865   000FEA                     FSR0H           equ	4074	;# 
  1866   000FEB                     PLUSW0          equ	4075	;# 
  1867   000FEC                     PREINC0         equ	4076	;# 
  1868   000FED                     POSTDEC0        equ	4077	;# 
  1869   000FEE                     POSTINC0        equ	4078	;# 
  1870   000FEF                     INDF0           equ	4079	;# 
  1871   000FF2                     INTCON          equ	4082	;# 
  1872   000FF3                     PROD            equ	4083	;# 
  1873   000FF3                     PRODL           equ	4083	;# 
  1874   000FF4                     PRODH           equ	4084	;# 
  1875   000FF5                     TABLAT          equ	4085	;# 
  1876   000FF6                     TBLPTR          equ	4086	;# 
  1877   000FF6                     TBLPTRL         equ	4086	;# 
  1878   000FF7                     TBLPTRH         equ	4087	;# 
  1879   000FF8                     TBLPTRU         equ	4088	;# 
  1880   000FF9                     PCLAT           equ	4089	;# 
  1881   000FF9                     PC              equ	4089	;# 
  1882   000FF9                     PCL             equ	4089	;# 
  1883   000FFA                     PCLATH          equ	4090	;# 
  1884   000FFB                     PCLATU          equ	4091	;# 
  1885   000FFC                     STKPTR          equ	4092	;# 
  1886   000FFD                     TOS             equ	4093	;# 
  1887   000FFD                     TOSL            equ	4093	;# 
  1888   000FFE                     TOSH            equ	4094	;# 
  1889   000FFF                     TOSU            equ	4095	;# 
  1890   000E9B                     PPSLOCK         equ	3739	;# 
  1891   000E9C                     INT0PPS         equ	3740	;# 
  1892   000E9D                     INT1PPS         equ	3741	;# 
  1893   000E9E                     INT2PPS         equ	3742	;# 
  1894   000E9F                     T0CKIPPS        equ	3743	;# 
  1895   000EA0                     T1CKIPPS        equ	3744	;# 
  1896   000EA1                     T1GPPS          equ	3745	;# 
  1897   000EA2                     T3CKIPPS        equ	3746	;# 
  1898   000EA3                     T3GPPS          equ	3747	;# 
  1899   000EA4                     T5CKIPPS        equ	3748	;# 
  1900   000EA5                     T5GPPS          equ	3749	;# 
  1901   000EA6                     T2INPPS         equ	3750	;# 
  1902   000EA7                     T4INPPS         equ	3751	;# 
  1903   000EA8                     T6INPPS         equ	3752	;# 
  1904   000EA9                     ADACTPPS        equ	3753	;# 
  1905   000EAA                     CCP1PPS         equ	3754	;# 
  1906   000EAB                     CCP2PPS         equ	3755	;# 
  1907   000EAC                     CWG1PPS         equ	3756	;# 
  1908   000EAC                     CWGPPS          equ	3756	;# 
  1909   000EAC                     CWGINPPS        equ	3756	;# 
  1910   000EAC                     CWG1INPPS       equ	3756	;# 
  1911   000EAD                     MDCARLPPS       equ	3757	;# 
  1912   000EAE                     MDCARHPPS       equ	3758	;# 
  1913   000EAF                     MDSRCPPS        equ	3759	;# 
  1914   000EB0                     RX1PPS          equ	3760	;# 
  1915   000EB0                     RXPPS           equ	3760	;# 
  1916   000EB0                     RXDT1PPS        equ	3760	;# 
  1917   000EB1                     CK1PPS          equ	3761	;# 
  1918   000EB1                     TXPPS           equ	3761	;# 
  1919   000EB1                     CKPPS           equ	3761	;# 
  1920   000EB1                     TXCK1PPS        equ	3761	;# 
  1921   000EB1                     TX1PPS          equ	3761	;# 
  1922   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1923   000EB2                     SSPCLKPPS       equ	3762	;# 
  1924   000EB3                     SSP1DATPPS      equ	3763	;# 
  1925   000EB3                     SSPDATPPS       equ	3763	;# 
  1926   000EB4                     SSP1SSPPS       equ	3764	;# 
  1927   000EB4                     SSPSSPPS        equ	3764	;# 
  1928   000EB5                     IPR0            equ	3765	;# 
  1929   000EB6                     IPR1            equ	3766	;# 
  1930   000EB7                     IPR2            equ	3767	;# 
  1931   000EB8                     IPR3            equ	3768	;# 
  1932   000EB9                     IPR4            equ	3769	;# 
  1933   000EBA                     IPR5            equ	3770	;# 
  1934   000EBB                     IPR6            equ	3771	;# 
  1935   000EBC                     IPR7            equ	3772	;# 
  1936   000EBD                     PIE0            equ	3773	;# 
  1937   000EBE                     PIE1            equ	3774	;# 
  1938   000EBF                     PIE2            equ	3775	;# 
  1939   000EC0                     PIE3            equ	3776	;# 
  1940   000EC1                     PIE4            equ	3777	;# 
  1941   000EC2                     PIE5            equ	3778	;# 
  1942   000EC3                     PIE6            equ	3779	;# 
  1943   000EC4                     PIE7            equ	3780	;# 
  1944   000EC5                     PIR0            equ	3781	;# 
  1945   000EC6                     PIR1            equ	3782	;# 
  1946   000EC7                     PIR2            equ	3783	;# 
  1947   000EC8                     PIR3            equ	3784	;# 
  1948   000EC9                     PIR4            equ	3785	;# 
  1949   000ECA                     PIR5            equ	3786	;# 
  1950   000ECB                     PIR6            equ	3787	;# 
  1951   000ECC                     PIR7            equ	3788	;# 
  1952   000ECD                     WDTCON0         equ	3789	;# 
  1953   000ECE                     WDTCON1         equ	3790	;# 
  1954   000ECF                     WDTPSL          equ	3791	;# 
  1955   000ED0                     WDTPSH          equ	3792	;# 
  1956   000ED1                     WDTTMR          equ	3793	;# 
  1957   000ED2                     CPUDOZE         equ	3794	;# 
  1958   000ED3                     OSCCON1         equ	3795	;# 
  1959   000ED4                     OSCCON2         equ	3796	;# 
  1960   000ED5                     OSCCON3         equ	3797	;# 
  1961   000ED6                     OSCSTAT         equ	3798	;# 
  1962   000ED6                     OSCSTAT1        equ	3798	;# 
  1963   000ED7                     OSCEN           equ	3799	;# 
  1964   000ED8                     OSCTUNE         equ	3800	;# 
  1965   000ED9                     OSCFRQ          equ	3801	;# 
  1966   000ED9                     OSCFREQ         equ	3801	;# 
  1967   000EDA                     VREGCON         equ	3802	;# 
  1968   000EDB                     BORCON          equ	3803	;# 
  1969   000EDC                     PMD0            equ	3804	;# 
  1970   000EDD                     PMD1            equ	3805	;# 
  1971   000EDE                     PMD2            equ	3806	;# 
  1972   000EDF                     PMD3            equ	3807	;# 
  1973   000EE0                     PMD4            equ	3808	;# 
  1974   000EE1                     PMD5            equ	3809	;# 
  1975   000EE2                     RA0PPS          equ	3810	;# 
  1976   000EE3                     RA1PPS          equ	3811	;# 
  1977   000EE4                     RA2PPS          equ	3812	;# 
  1978   000EE5                     RA3PPS          equ	3813	;# 
  1979   000EE6                     RA4PPS          equ	3814	;# 
  1980   000EE7                     RA5PPS          equ	3815	;# 
  1981   000EE8                     RA6PPS          equ	3816	;# 
  1982   000EE9                     RA7PPS          equ	3817	;# 
  1983   000EEA                     RB0PPS          equ	3818	;# 
  1984   000EEB                     RB1PPS          equ	3819	;# 
  1985   000EEC                     RB2PPS          equ	3820	;# 
  1986   000EED                     RB3PPS          equ	3821	;# 
  1987   000EEE                     RB4PPS          equ	3822	;# 
  1988   000EEF                     RB5PPS          equ	3823	;# 
  1989   000EF0                     RB6PPS          equ	3824	;# 
  1990   000EF1                     RB7PPS          equ	3825	;# 
  1991   000EF2                     RC0PPS          equ	3826	;# 
  1992   000EF3                     RC1PPS          equ	3827	;# 
  1993   000EF4                     RC2PPS          equ	3828	;# 
  1994   000EF5                     RC3PPS          equ	3829	;# 
  1995   000EF6                     RC4PPS          equ	3830	;# 
  1996   000EF7                     RC5PPS          equ	3831	;# 
  1997   000EF8                     RC6PPS          equ	3832	;# 
  1998   000EF9                     RC7PPS          equ	3833	;# 
  1999   000F05                     IOCAF           equ	3845	;# 
  2000   000F06                     IOCAN           equ	3846	;# 
  2001   000F07                     IOCAP           equ	3847	;# 
  2002   000F08                     INLVLA          equ	3848	;# 
  2003   000F09                     SLRCONA         equ	3849	;# 
  2004   000F0A                     ODCONA          equ	3850	;# 
  2005   000F0B                     WPUA            equ	3851	;# 
  2006   000F0C                     ANSELA          equ	3852	;# 
  2007   000F0D                     IOCBF           equ	3853	;# 
  2008   000F0E                     IOCBN           equ	3854	;# 
  2009   000F0F                     IOCBP           equ	3855	;# 
  2010   000F10                     INLVLB          equ	3856	;# 
  2011   000F11                     SLRCONB         equ	3857	;# 
  2012   000F12                     ODCONB          equ	3858	;# 
  2013   000F13                     WPUB            equ	3859	;# 
  2014   000F14                     ANSELB          equ	3860	;# 
  2015   000F15                     IOCCF           equ	3861	;# 
  2016   000F16                     IOCCN           equ	3862	;# 
  2017   000F17                     IOCCP           equ	3863	;# 
  2018   000F18                     INLVLC          equ	3864	;# 
  2019   000F19                     SLRCONC         equ	3865	;# 
  2020   000F1A                     ODCONC          equ	3866	;# 
  2021   000F1B                     WPUC            equ	3867	;# 
  2022   000F1C                     ANSELC          equ	3868	;# 
  2023   000F22                     IOCEF           equ	3874	;# 
  2024   000F23                     IOCEN           equ	3875	;# 
  2025   000F24                     IOCEP           equ	3876	;# 
  2026   000F25                     INLVLE          equ	3877	;# 
  2027   000F28                     WPUE            equ	3880	;# 
  2028   000F2A                     HLVDCON0        equ	3882	;# 
  2029   000F2B                     HLVDCON1        equ	3883	;# 
  2030   000F2C                     FVRCON          equ	3884	;# 
  2031   000F2D                     ZCDCON          equ	3885	;# 
  2032   000F2E                     DAC1CON0        equ	3886	;# 
  2033   000F2F                     DAC1CON1        equ	3887	;# 
  2034   000F30                     CM2CON0         equ	3888	;# 
  2035   000F31                     CM2CON1         equ	3889	;# 
  2036   000F32                     CM2NCH          equ	3890	;# 
  2037   000F33                     CM2PCH          equ	3891	;# 
  2038   000F34                     CM1CON0         equ	3892	;# 
  2039   000F35                     CM1CON1         equ	3893	;# 
  2040   000F36                     CM1NCH          equ	3894	;# 
  2041   000F37                     CM1PCH          equ	3895	;# 
  2042   000F38                     CMOUT           equ	3896	;# 
  2043   000F39                     CLKRCON         equ	3897	;# 
  2044   000F3A                     CLKRCLK         equ	3898	;# 
  2045   000F3B                     CWG1CLK         equ	3899	;# 
  2046   000F3B                     CWG1CLKCON      equ	3899	;# 
  2047   000F3C                     CWG1ISM         equ	3900	;# 
  2048   000F3D                     CWG1DBR         equ	3901	;# 
  2049   000F3E                     CWG1DBF         equ	3902	;# 
  2050   000F3F                     CWG1CON0        equ	3903	;# 
  2051   000F40                     CWG1CON1        equ	3904	;# 
  2052   000F41                     CWG1AS0         equ	3905	;# 
  2053   000F42                     CWG1AS1         equ	3906	;# 
  2054   000F43                     CWG1STR         equ	3907	;# 
  2055   000F44                     SCANLADR        equ	3908	;# 
  2056   000F44                     SCANLADRL       equ	3908	;# 
  2057   000F45                     SCANLADRH       equ	3909	;# 
  2058   000F46                     SCANLADRU       equ	3910	;# 
  2059   000F47                     SCANHADR        equ	3911	;# 
  2060   000F47                     SCANHADRL       equ	3911	;# 
  2061   000F48                     SCANHADRH       equ	3912	;# 
  2062   000F49                     SCANHADRU       equ	3913	;# 
  2063   000F4A                     SCANCON0        equ	3914	;# 
  2064   000F4B                     SCANTRIG        equ	3915	;# 
  2065   000F4C                     MDCON0          equ	3916	;# 
  2066   000F4D                     MDCON1          equ	3917	;# 
  2067   000F4E                     MDSRC           equ	3918	;# 
  2068   000F4F                     MDCARL          equ	3919	;# 
  2069   000F50                     MDCARH          equ	3920	;# 
  2070   000F51                     ADACT           equ	3921	;# 
  2071   000F52                     ADCLK           equ	3922	;# 
  2072   000F53                     ADREF           equ	3923	;# 
  2073   000F54                     ADCON1          equ	3924	;# 
  2074   000F55                     ADCON2          equ	3925	;# 
  2075   000F56                     ADCON3          equ	3926	;# 
  2076   000F57                     ADACQ           equ	3927	;# 
  2077   000F58                     ADCAP           equ	3928	;# 
  2078   000F59                     ADPRE           equ	3929	;# 
  2079   000F5A                     ADPCH           equ	3930	;# 
  2080   000F5B                     ADCON0          equ	3931	;# 
  2081   000F5C                     ADPREV          equ	3932	;# 
  2082   000F5C                     ADPREVL         equ	3932	;# 
  2083   000F5D                     ADPREVH         equ	3933	;# 
  2084   000F5E                     ADRES           equ	3934	;# 
  2085   000F5E                     ADRESL          equ	3934	;# 
  2086   000F5F                     ADRESH          equ	3935	;# 
  2087   000F60                     ADSTAT          equ	3936	;# 
  2088   000F61                     ADRPT           equ	3937	;# 
  2089   000F62                     ADCNT           equ	3938	;# 
  2090   000F63                     ADSTPT          equ	3939	;# 
  2091   000F63                     ADSTPTL         equ	3939	;# 
  2092   000F64                     ADSTPTH         equ	3940	;# 
  2093   000F65                     ADLTH           equ	3941	;# 
  2094   000F65                     ADLTHL          equ	3941	;# 
  2095   000F66                     ADLTHH          equ	3942	;# 
  2096   000F67                     ADUTH           equ	3943	;# 
  2097   000F67                     ADUTHL          equ	3943	;# 
  2098   000F68                     ADUTHH          equ	3944	;# 
  2099   000F69                     ADERR           equ	3945	;# 
  2100   000F69                     ADERRL          equ	3945	;# 
  2101   000F6A                     ADERRH          equ	3946	;# 
  2102   000F6B                     ADACC           equ	3947	;# 
  2103   000F6B                     ADACCL          equ	3947	;# 
  2104   000F6C                     ADACCH          equ	3948	;# 
  2105   000F6D                     ADFLTR          equ	3949	;# 
  2106   000F6D                     ADFLTRL         equ	3949	;# 
  2107   000F6E                     ADFLTRH         equ	3950	;# 
  2108   000F6F                     CRCDATA         equ	3951	;# 
  2109   000F6F                     CRCDATL         equ	3951	;# 
  2110   000F70                     CRCDATH         equ	3952	;# 
  2111   000F71                     CRCACC          equ	3953	;# 
  2112   000F71                     CRCACCL         equ	3953	;# 
  2113   000F72                     CRCACCH         equ	3954	;# 
  2114   000F73                     CRCSHFT         equ	3955	;# 
  2115   000F73                     CRCSHIFTL       equ	3955	;# 
  2116   000F74                     CRCSHIFTH       equ	3956	;# 
  2117   000F75                     CRCXOR          equ	3957	;# 
  2118   000F75                     CRCXORL         equ	3957	;# 
  2119   000F76                     CRCXORH         equ	3958	;# 
  2120   000F77                     CRCCON0         equ	3959	;# 
  2121   000F78                     CRCCON1         equ	3960	;# 
  2122   000F79                     NVMADR          equ	3961	;# 
  2123   000F79                     NVMADRL         equ	3961	;# 
  2124   000F7A                     NVMADRH         equ	3962	;# 
  2125   000F7B                     NVMADRU         equ	3963	;# 
  2126   000F7C                     NVMDAT          equ	3964	;# 
  2127   000F7C                     NVMDATL         equ	3964	;# 
  2128   000F7D                     NVMDATH         equ	3965	;# 
  2129   000F7F                     NVMCON0         equ	3967	;# 
  2130   000F80                     NVMCON1         equ	3968	;# 
  2131   000F81                     NVMCON2         equ	3969	;# 
  2132   000F82                     LATA            equ	3970	;# 
  2133   000F83                     LATB            equ	3971	;# 
  2134   000F84                     LATC            equ	3972	;# 
  2135   000F87                     TRISA           equ	3975	;# 
  2136   000F87                     DDRA            equ	3975	;# 
  2137   000F88                     TRISB           equ	3976	;# 
  2138   000F88                     DDRB            equ	3976	;# 
  2139   000F89                     TRISC           equ	3977	;# 
  2140   000F89                     DDRC            equ	3977	;# 
  2141   000F8C                     PORTA           equ	3980	;# 
  2142   000F8D                     PORTB           equ	3981	;# 
  2143   000F8E                     PORTC           equ	3982	;# 
  2144   000F90                     PORTE           equ	3984	;# 
  2145   000F91                     SSP1BUF         equ	3985	;# 
  2146   000F92                     SSP1ADD         equ	3986	;# 
  2147   000F93                     SSP1MSK         equ	3987	;# 
  2148   000F94                     SSP1STAT        equ	3988	;# 
  2149   000F95                     SSP1CON1        equ	3989	;# 
  2150   000F96                     SSP1CON2        equ	3990	;# 
  2151   000F97                     SSP1CON3        equ	3991	;# 
  2152   000F98                     RC1REG          equ	3992	;# 
  2153   000F98                     RCREG           equ	3992	;# 
  2154   000F98                     RCREG1          equ	3992	;# 
  2155   000F99                     TX1REG          equ	3993	;# 
  2156   000F99                     TXREG1          equ	3993	;# 
  2157   000F99                     TXREG           equ	3993	;# 
  2158   000F9A                     SP1BRG          equ	3994	;# 
  2159   000F9A                     SPBRG           equ	3994	;# 
  2160   000F9A                     SP1BRGL         equ	3994	;# 
  2161   000F9A                     SPBRG1          equ	3994	;# 
  2162   000F9A                     SPBRGL          equ	3994	;# 
  2163   000F9B                     SP1BRGH         equ	3995	;# 
  2164   000F9B                     SPBRGH          equ	3995	;# 
  2165   000F9B                     SPBRGH1         equ	3995	;# 
  2166   000F9C                     RC1STA          equ	3996	;# 
  2167   000F9C                     RCSTA1          equ	3996	;# 
  2168   000F9C                     RCSTA           equ	3996	;# 
  2169   000F9D                     TX1STA          equ	3997	;# 
  2170   000F9D                     TXSTA1          equ	3997	;# 
  2171   000F9D                     TXSTA           equ	3997	;# 
  2172   000F9E                     BAUD1CON        equ	3998	;# 
  2173   000F9E                     BAUDCON1        equ	3998	;# 
  2174   000F9E                     BAUDCTL1        equ	3998	;# 
  2175   000F9E                     BAUDCON         equ	3998	;# 
  2176   000F9E                     BAUDCTL         equ	3998	;# 
  2177   000F9F                     PWM4DC          equ	3999	;# 
  2178   000F9F                     PWM4DCL         equ	3999	;# 
  2179   000FA0                     PWM4DCH         equ	4000	;# 
  2180   000FA1                     PWM4CON         equ	4001	;# 
  2181   000FA2                     PWM3DC          equ	4002	;# 
  2182   000FA2                     PWM3DCL         equ	4002	;# 
  2183   000FA3                     PWM3DCH         equ	4003	;# 
  2184   000FA4                     PWM3CON         equ	4004	;# 
  2185   000FA5                     CCPR2           equ	4005	;# 
  2186   000FA5                     CCPR2L          equ	4005	;# 
  2187   000FA6                     CCPR2H          equ	4006	;# 
  2188   000FA7                     CCP2CON         equ	4007	;# 
  2189   000FA8                     CCP2CAP         equ	4008	;# 
  2190   000FA9                     CCPR1           equ	4009	;# 
  2191   000FA9                     CCPR1L          equ	4009	;# 
  2192   000FAA                     CCPR1H          equ	4010	;# 
  2193   000FAB                     CCP1CON         equ	4011	;# 
  2194   000FAC                     CCP1CAP         equ	4012	;# 
  2195   000FAD                     CCPTMRS         equ	4013	;# 
  2196   000FAE                     T6TMR           equ	4014	;# 
  2197   000FAE                     TMR6            equ	4014	;# 
  2198   000FAF                     T6PR            equ	4015	;# 
  2199   000FAF                     PR6             equ	4015	;# 
  2200   000FB0                     T6CON           equ	4016	;# 
  2201   000FB1                     T6HLT           equ	4017	;# 
  2202   000FB2                     T6CLKCON        equ	4018	;# 
  2203   000FB2                     T6CLK           equ	4018	;# 
  2204   000FB3                     T6RST           equ	4019	;# 
  2205   000FB4                     T4TMR           equ	4020	;# 
  2206   000FB4                     TMR4            equ	4020	;# 
  2207   000FB5                     T4PR            equ	4021	;# 
  2208   000FB5                     PR4             equ	4021	;# 
  2209   000FB6                     T4CON           equ	4022	;# 
  2210   000FB7                     T4HLT           equ	4023	;# 
  2211   000FB8                     T4CLKCON        equ	4024	;# 
  2212   000FB8                     T4CLK           equ	4024	;# 
  2213   000FB9                     T4RST           equ	4025	;# 
  2214   000FBA                     T2TMR           equ	4026	;# 
  2215   000FBA                     TMR2            equ	4026	;# 
  2216   000FBB                     T2PR            equ	4027	;# 
  2217   000FBB                     PR2             equ	4027	;# 
  2218   000FBC                     T2CON           equ	4028	;# 
  2219   000FBD                     T2HLT           equ	4029	;# 
  2220   000FBE                     T2CLKCON        equ	4030	;# 
  2221   000FBE                     T2CLK           equ	4030	;# 
  2222   000FBF                     T2RST           equ	4031	;# 
  2223   000FC0                     TMR5            equ	4032	;# 
  2224   000FC0                     TMR5L           equ	4032	;# 
  2225   000FC1                     TMR5H           equ	4033	;# 
  2226   000FC2                     T5CON           equ	4034	;# 
  2227   000FC2                     TMR5CON         equ	4034	;# 
  2228   000FC3                     T5GCON          equ	4035	;# 
  2229   000FC3                     TMR5GCON        equ	4035	;# 
  2230   000FC4                     T5GATE          equ	4036	;# 
  2231   000FC4                     TMR5GATE        equ	4036	;# 
  2232   000FC5                     T5CLK           equ	4037	;# 
  2233   000FC5                     TMR5CLK         equ	4037	;# 
  2234   000FC5                     PR5             equ	4037	;# 
  2235   000FC6                     TMR3            equ	4038	;# 
  2236   000FC6                     TMR3L           equ	4038	;# 
  2237   000FC7                     TMR3H           equ	4039	;# 
  2238   000FC8                     T3CON           equ	4040	;# 
  2239   000FC8                     TMR3CON         equ	4040	;# 
  2240   000FC9                     T3GCON          equ	4041	;# 
  2241   000FC9                     TMR3GCON        equ	4041	;# 
  2242   000FCA                     T3GATE          equ	4042	;# 
  2243   000FCA                     TMR3GATE        equ	4042	;# 
  2244   000FCB                     T3CLK           equ	4043	;# 
  2245   000FCB                     TMR3CLK         equ	4043	;# 
  2246   000FCB                     PR3             equ	4043	;# 
  2247   000FCC                     TMR1            equ	4044	;# 
  2248   000FCC                     TMR1L           equ	4044	;# 
  2249   000FCD                     TMR1H           equ	4045	;# 
  2250   000FCE                     T1CON           equ	4046	;# 
  2251   000FCE                     TMR1CON         equ	4046	;# 
  2252   000FCF                     T1GCON          equ	4047	;# 
  2253   000FCF                     TMR1GCON        equ	4047	;# 
  2254   000FD0                     T1GATE          equ	4048	;# 
  2255   000FD0                     TMR1GATE        equ	4048	;# 
  2256   000FD1                     T1CLK           equ	4049	;# 
  2257   000FD1                     TMR1CLK         equ	4049	;# 
  2258   000FD1                     PR1             equ	4049	;# 
  2259   000FD2                     TMR0L           equ	4050	;# 
  2260   000FD2                     TMR0            equ	4050	;# 
  2261   000FD3                     TMR0H           equ	4051	;# 
  2262   000FD3                     PR0             equ	4051	;# 
  2263   000FD4                     T0CON0          equ	4052	;# 
  2264   000FD5                     T0CON1          equ	4053	;# 
  2265   000FD6                     PCON1           equ	4054	;# 
  2266   000FD7                     PCON0           equ	4055	;# 
  2267   000FD8                     STATUS          equ	4056	;# 
  2268   000FD9                     FSR2            equ	4057	;# 
  2269   000FD9                     FSR2L           equ	4057	;# 
  2270   000FDA                     FSR2H           equ	4058	;# 
  2271   000FDB                     PLUSW2          equ	4059	;# 
  2272   000FDC                     PREINC2         equ	4060	;# 
  2273   000FDD                     POSTDEC2        equ	4061	;# 
  2274   000FDE                     POSTINC2        equ	4062	;# 
  2275   000FDF                     INDF2           equ	4063	;# 
  2276   000FE0                     BSR             equ	4064	;# 
  2277   000FE1                     FSR1            equ	4065	;# 
  2278   000FE1                     FSR1L           equ	4065	;# 
  2279   000FE2                     FSR1H           equ	4066	;# 
  2280   000FE3                     PLUSW1          equ	4067	;# 
  2281   000FE4                     PREINC1         equ	4068	;# 
  2282   000FE5                     POSTDEC1        equ	4069	;# 
  2283   000FE6                     POSTINC1        equ	4070	;# 
  2284   000FE7                     INDF1           equ	4071	;# 
  2285   000FE8                     WREG            equ	4072	;# 
  2286   000FE9                     FSR0            equ	4073	;# 
  2287   000FE9                     FSR0L           equ	4073	;# 
  2288   000FEA                     FSR0H           equ	4074	;# 
  2289   000FEB                     PLUSW0          equ	4075	;# 
  2290   000FEC                     PREINC0         equ	4076	;# 
  2291   000FED                     POSTDEC0        equ	4077	;# 
  2292   000FEE                     POSTINC0        equ	4078	;# 
  2293   000FEF                     INDF0           equ	4079	;# 
  2294   000FF2                     INTCON          equ	4082	;# 
  2295   000FF3                     PROD            equ	4083	;# 
  2296   000FF3                     PRODL           equ	4083	;# 
  2297   000FF4                     PRODH           equ	4084	;# 
  2298   000FF5                     TABLAT          equ	4085	;# 
  2299   000FF6                     TBLPTR          equ	4086	;# 
  2300   000FF6                     TBLPTRL         equ	4086	;# 
  2301   000FF7                     TBLPTRH         equ	4087	;# 
  2302   000FF8                     TBLPTRU         equ	4088	;# 
  2303   000FF9                     PCLAT           equ	4089	;# 
  2304   000FF9                     PC              equ	4089	;# 
  2305   000FF9                     PCL             equ	4089	;# 
  2306   000FFA                     PCLATH          equ	4090	;# 
  2307   000FFB                     PCLATU          equ	4091	;# 
  2308   000FFC                     STKPTR          equ	4092	;# 
  2309   000FFD                     TOS             equ	4093	;# 
  2310   000FFD                     TOSL            equ	4093	;# 
  2311   000FFE                     TOSH            equ	4094	;# 
  2312   000FFF                     TOSU            equ	4095	;# 
  2313   000E9B                     PPSLOCK         equ	3739	;# 
  2314   000E9C                     INT0PPS         equ	3740	;# 
  2315   000E9D                     INT1PPS         equ	3741	;# 
  2316   000E9E                     INT2PPS         equ	3742	;# 
  2317   000E9F                     T0CKIPPS        equ	3743	;# 
  2318   000EA0                     T1CKIPPS        equ	3744	;# 
  2319   000EA1                     T1GPPS          equ	3745	;# 
  2320   000EA2                     T3CKIPPS        equ	3746	;# 
  2321   000EA3                     T3GPPS          equ	3747	;# 
  2322   000EA4                     T5CKIPPS        equ	3748	;# 
  2323   000EA5                     T5GPPS          equ	3749	;# 
  2324   000EA6                     T2INPPS         equ	3750	;# 
  2325   000EA7                     T4INPPS         equ	3751	;# 
  2326   000EA8                     T6INPPS         equ	3752	;# 
  2327   000EA9                     ADACTPPS        equ	3753	;# 
  2328   000EAA                     CCP1PPS         equ	3754	;# 
  2329   000EAB                     CCP2PPS         equ	3755	;# 
  2330   000EAC                     CWG1PPS         equ	3756	;# 
  2331   000EAC                     CWGPPS          equ	3756	;# 
  2332   000EAC                     CWGINPPS        equ	3756	;# 
  2333   000EAC                     CWG1INPPS       equ	3756	;# 
  2334   000EAD                     MDCARLPPS       equ	3757	;# 
  2335   000EAE                     MDCARHPPS       equ	3758	;# 
  2336   000EAF                     MDSRCPPS        equ	3759	;# 
  2337   000EB0                     RX1PPS          equ	3760	;# 
  2338   000EB0                     RXPPS           equ	3760	;# 
  2339   000EB0                     RXDT1PPS        equ	3760	;# 
  2340   000EB1                     CK1PPS          equ	3761	;# 
  2341   000EB1                     TXPPS           equ	3761	;# 
  2342   000EB1                     CKPPS           equ	3761	;# 
  2343   000EB1                     TXCK1PPS        equ	3761	;# 
  2344   000EB1                     TX1PPS          equ	3761	;# 
  2345   000EB2                     SSP1CLKPPS      equ	3762	;# 
  2346   000EB2                     SSPCLKPPS       equ	3762	;# 
  2347   000EB3                     SSP1DATPPS      equ	3763	;# 
  2348   000EB3                     SSPDATPPS       equ	3763	;# 
  2349   000EB4                     SSP1SSPPS       equ	3764	;# 
  2350   000EB4                     SSPSSPPS        equ	3764	;# 
  2351   000EB5                     IPR0            equ	3765	;# 
  2352   000EB6                     IPR1            equ	3766	;# 
  2353   000EB7                     IPR2            equ	3767	;# 
  2354   000EB8                     IPR3            equ	3768	;# 
  2355   000EB9                     IPR4            equ	3769	;# 
  2356   000EBA                     IPR5            equ	3770	;# 
  2357   000EBB                     IPR6            equ	3771	;# 
  2358   000EBC                     IPR7            equ	3772	;# 
  2359   000EBD                     PIE0            equ	3773	;# 
  2360   000EBE                     PIE1            equ	3774	;# 
  2361   000EBF                     PIE2            equ	3775	;# 
  2362   000EC0                     PIE3            equ	3776	;# 
  2363   000EC1                     PIE4            equ	3777	;# 
  2364   000EC2                     PIE5            equ	3778	;# 
  2365   000EC3                     PIE6            equ	3779	;# 
  2366   000EC4                     PIE7            equ	3780	;# 
  2367   000EC5                     PIR0            equ	3781	;# 
  2368   000EC6                     PIR1            equ	3782	;# 
  2369   000EC7                     PIR2            equ	3783	;# 
  2370   000EC8                     PIR3            equ	3784	;# 
  2371   000EC9                     PIR4            equ	3785	;# 
  2372   000ECA                     PIR5            equ	3786	;# 
  2373   000ECB                     PIR6            equ	3787	;# 
  2374   000ECC                     PIR7            equ	3788	;# 
  2375   000ECD                     WDTCON0         equ	3789	;# 
  2376   000ECE                     WDTCON1         equ	3790	;# 
  2377   000ECF                     WDTPSL          equ	3791	;# 
  2378   000ED0                     WDTPSH          equ	3792	;# 
  2379   000ED1                     WDTTMR          equ	3793	;# 
  2380   000ED2                     CPUDOZE         equ	3794	;# 
  2381   000ED3                     OSCCON1         equ	3795	;# 
  2382   000ED4                     OSCCON2         equ	3796	;# 
  2383   000ED5                     OSCCON3         equ	3797	;# 
  2384   000ED6                     OSCSTAT         equ	3798	;# 
  2385   000ED6                     OSCSTAT1        equ	3798	;# 
  2386   000ED7                     OSCEN           equ	3799	;# 
  2387   000ED8                     OSCTUNE         equ	3800	;# 
  2388   000ED9                     OSCFRQ          equ	3801	;# 
  2389   000ED9                     OSCFREQ         equ	3801	;# 
  2390   000EDA                     VREGCON         equ	3802	;# 
  2391   000EDB                     BORCON          equ	3803	;# 
  2392   000EDC                     PMD0            equ	3804	;# 
  2393   000EDD                     PMD1            equ	3805	;# 
  2394   000EDE                     PMD2            equ	3806	;# 
  2395   000EDF                     PMD3            equ	3807	;# 
  2396   000EE0                     PMD4            equ	3808	;# 
  2397   000EE1                     PMD5            equ	3809	;# 
  2398   000EE2                     RA0PPS          equ	3810	;# 
  2399   000EE3                     RA1PPS          equ	3811	;# 
  2400   000EE4                     RA2PPS          equ	3812	;# 
  2401   000EE5                     RA3PPS          equ	3813	;# 
  2402   000EE6                     RA4PPS          equ	3814	;# 
  2403   000EE7                     RA5PPS          equ	3815	;# 
  2404   000EE8                     RA6PPS          equ	3816	;# 
  2405   000EE9                     RA7PPS          equ	3817	;# 
  2406   000EEA                     RB0PPS          equ	3818	;# 
  2407   000EEB                     RB1PPS          equ	3819	;# 
  2408   000EEC                     RB2PPS          equ	3820	;# 
  2409   000EED                     RB3PPS          equ	3821	;# 
  2410   000EEE                     RB4PPS          equ	3822	;# 
  2411   000EEF                     RB5PPS          equ	3823	;# 
  2412   000EF0                     RB6PPS          equ	3824	;# 
  2413   000EF1                     RB7PPS          equ	3825	;# 
  2414   000EF2                     RC0PPS          equ	3826	;# 
  2415   000EF3                     RC1PPS          equ	3827	;# 
  2416   000EF4                     RC2PPS          equ	3828	;# 
  2417   000EF5                     RC3PPS          equ	3829	;# 
  2418   000EF6                     RC4PPS          equ	3830	;# 
  2419   000EF7                     RC5PPS          equ	3831	;# 
  2420   000EF8                     RC6PPS          equ	3832	;# 
  2421   000EF9                     RC7PPS          equ	3833	;# 
  2422   000F05                     IOCAF           equ	3845	;# 
  2423   000F06                     IOCAN           equ	3846	;# 
  2424   000F07                     IOCAP           equ	3847	;# 
  2425   000F08                     INLVLA          equ	3848	;# 
  2426   000F09                     SLRCONA         equ	3849	;# 
  2427   000F0A                     ODCONA          equ	3850	;# 
  2428   000F0B                     WPUA            equ	3851	;# 
  2429   000F0C                     ANSELA          equ	3852	;# 
  2430   000F0D                     IOCBF           equ	3853	;# 
  2431   000F0E                     IOCBN           equ	3854	;# 
  2432   000F0F                     IOCBP           equ	3855	;# 
  2433   000F10                     INLVLB          equ	3856	;# 
  2434   000F11                     SLRCONB         equ	3857	;# 
  2435   000F12                     ODCONB          equ	3858	;# 
  2436   000F13                     WPUB            equ	3859	;# 
  2437   000F14                     ANSELB          equ	3860	;# 
  2438   000F15                     IOCCF           equ	3861	;# 
  2439   000F16                     IOCCN           equ	3862	;# 
  2440   000F17                     IOCCP           equ	3863	;# 
  2441   000F18                     INLVLC          equ	3864	;# 
  2442   000F19                     SLRCONC         equ	3865	;# 
  2443   000F1A                     ODCONC          equ	3866	;# 
  2444   000F1B                     WPUC            equ	3867	;# 
  2445   000F1C                     ANSELC          equ	3868	;# 
  2446   000F22                     IOCEF           equ	3874	;# 
  2447   000F23                     IOCEN           equ	3875	;# 
  2448   000F24                     IOCEP           equ	3876	;# 
  2449   000F25                     INLVLE          equ	3877	;# 
  2450   000F28                     WPUE            equ	3880	;# 
  2451   000F2A                     HLVDCON0        equ	3882	;# 
  2452   000F2B                     HLVDCON1        equ	3883	;# 
  2453   000F2C                     FVRCON          equ	3884	;# 
  2454   000F2D                     ZCDCON          equ	3885	;# 
  2455   000F2E                     DAC1CON0        equ	3886	;# 
  2456   000F2F                     DAC1CON1        equ	3887	;# 
  2457   000F30                     CM2CON0         equ	3888	;# 
  2458   000F31                     CM2CON1         equ	3889	;# 
  2459   000F32                     CM2NCH          equ	3890	;# 
  2460   000F33                     CM2PCH          equ	3891	;# 
  2461   000F34                     CM1CON0         equ	3892	;# 
  2462   000F35                     CM1CON1         equ	3893	;# 
  2463   000F36                     CM1NCH          equ	3894	;# 
  2464   000F37                     CM1PCH          equ	3895	;# 
  2465   000F38                     CMOUT           equ	3896	;# 
  2466   000F39                     CLKRCON         equ	3897	;# 
  2467   000F3A                     CLKRCLK         equ	3898	;# 
  2468   000F3B                     CWG1CLK         equ	3899	;# 
  2469   000F3B                     CWG1CLKCON      equ	3899	;# 
  2470   000F3C                     CWG1ISM         equ	3900	;# 
  2471   000F3D                     CWG1DBR         equ	3901	;# 
  2472   000F3E                     CWG1DBF         equ	3902	;# 
  2473   000F3F                     CWG1CON0        equ	3903	;# 
  2474   000F40                     CWG1CON1        equ	3904	;# 
  2475   000F41                     CWG1AS0         equ	3905	;# 
  2476   000F42                     CWG1AS1         equ	3906	;# 
  2477   000F43                     CWG1STR         equ	3907	;# 
  2478   000F44                     SCANLADR        equ	3908	;# 
  2479   000F44                     SCANLADRL       equ	3908	;# 
  2480   000F45                     SCANLADRH       equ	3909	;# 
  2481   000F46                     SCANLADRU       equ	3910	;# 
  2482   000F47                     SCANHADR        equ	3911	;# 
  2483   000F47                     SCANHADRL       equ	3911	;# 
  2484   000F48                     SCANHADRH       equ	3912	;# 
  2485   000F49                     SCANHADRU       equ	3913	;# 
  2486   000F4A                     SCANCON0        equ	3914	;# 
  2487   000F4B                     SCANTRIG        equ	3915	;# 
  2488   000F4C                     MDCON0          equ	3916	;# 
  2489   000F4D                     MDCON1          equ	3917	;# 
  2490   000F4E                     MDSRC           equ	3918	;# 
  2491   000F4F                     MDCARL          equ	3919	;# 
  2492   000F50                     MDCARH          equ	3920	;# 
  2493   000F51                     ADACT           equ	3921	;# 
  2494   000F52                     ADCLK           equ	3922	;# 
  2495   000F53                     ADREF           equ	3923	;# 
  2496   000F54                     ADCON1          equ	3924	;# 
  2497   000F55                     ADCON2          equ	3925	;# 
  2498   000F56                     ADCON3          equ	3926	;# 
  2499   000F57                     ADACQ           equ	3927	;# 
  2500   000F58                     ADCAP           equ	3928	;# 
  2501   000F59                     ADPRE           equ	3929	;# 
  2502   000F5A                     ADPCH           equ	3930	;# 
  2503   000F5B                     ADCON0          equ	3931	;# 
  2504   000F5C                     ADPREV          equ	3932	;# 
  2505   000F5C                     ADPREVL         equ	3932	;# 
  2506   000F5D                     ADPREVH         equ	3933	;# 
  2507   000F5E                     ADRES           equ	3934	;# 
  2508   000F5E                     ADRESL          equ	3934	;# 
  2509   000F5F                     ADRESH          equ	3935	;# 
  2510   000F60                     ADSTAT          equ	3936	;# 
  2511   000F61                     ADRPT           equ	3937	;# 
  2512   000F62                     ADCNT           equ	3938	;# 
  2513   000F63                     ADSTPT          equ	3939	;# 
  2514   000F63                     ADSTPTL         equ	3939	;# 
  2515   000F64                     ADSTPTH         equ	3940	;# 
  2516   000F65                     ADLTH           equ	3941	;# 
  2517   000F65                     ADLTHL          equ	3941	;# 
  2518   000F66                     ADLTHH          equ	3942	;# 
  2519   000F67                     ADUTH           equ	3943	;# 
  2520   000F67                     ADUTHL          equ	3943	;# 
  2521   000F68                     ADUTHH          equ	3944	;# 
  2522   000F69                     ADERR           equ	3945	;# 
  2523   000F69                     ADERRL          equ	3945	;# 
  2524   000F6A                     ADERRH          equ	3946	;# 
  2525   000F6B                     ADACC           equ	3947	;# 
  2526   000F6B                     ADACCL          equ	3947	;# 
  2527   000F6C                     ADACCH          equ	3948	;# 
  2528   000F6D                     ADFLTR          equ	3949	;# 
  2529   000F6D                     ADFLTRL         equ	3949	;# 
  2530   000F6E                     ADFLTRH         equ	3950	;# 
  2531   000F6F                     CRCDATA         equ	3951	;# 
  2532   000F6F                     CRCDATL         equ	3951	;# 
  2533   000F70                     CRCDATH         equ	3952	;# 
  2534   000F71                     CRCACC          equ	3953	;# 
  2535   000F71                     CRCACCL         equ	3953	;# 
  2536   000F72                     CRCACCH         equ	3954	;# 
  2537   000F73                     CRCSHFT         equ	3955	;# 
  2538   000F73                     CRCSHIFTL       equ	3955	;# 
  2539   000F74                     CRCSHIFTH       equ	3956	;# 
  2540   000F75                     CRCXOR          equ	3957	;# 
  2541   000F75                     CRCXORL         equ	3957	;# 
  2542   000F76                     CRCXORH         equ	3958	;# 
  2543   000F77                     CRCCON0         equ	3959	;# 
  2544   000F78                     CRCCON1         equ	3960	;# 
  2545   000F79                     NVMADR          equ	3961	;# 
  2546   000F79                     NVMADRL         equ	3961	;# 
  2547   000F7A                     NVMADRH         equ	3962	;# 
  2548   000F7B                     NVMADRU         equ	3963	;# 
  2549   000F7C                     NVMDAT          equ	3964	;# 
  2550   000F7C                     NVMDATL         equ	3964	;# 
  2551   000F7D                     NVMDATH         equ	3965	;# 
  2552   000F7F                     NVMCON0         equ	3967	;# 
  2553   000F80                     NVMCON1         equ	3968	;# 
  2554   000F81                     NVMCON2         equ	3969	;# 
  2555   000F82                     LATA            equ	3970	;# 
  2556   000F83                     LATB            equ	3971	;# 
  2557   000F84                     LATC            equ	3972	;# 
  2558   000F87                     TRISA           equ	3975	;# 
  2559   000F87                     DDRA            equ	3975	;# 
  2560   000F88                     TRISB           equ	3976	;# 
  2561   000F88                     DDRB            equ	3976	;# 
  2562   000F89                     TRISC           equ	3977	;# 
  2563   000F89                     DDRC            equ	3977	;# 
  2564   000F8C                     PORTA           equ	3980	;# 
  2565   000F8D                     PORTB           equ	3981	;# 
  2566   000F8E                     PORTC           equ	3982	;# 
  2567   000F90                     PORTE           equ	3984	;# 
  2568   000F91                     SSP1BUF         equ	3985	;# 
  2569   000F92                     SSP1ADD         equ	3986	;# 
  2570   000F93                     SSP1MSK         equ	3987	;# 
  2571   000F94                     SSP1STAT        equ	3988	;# 
  2572   000F95                     SSP1CON1        equ	3989	;# 
  2573   000F96                     SSP1CON2        equ	3990	;# 
  2574   000F97                     SSP1CON3        equ	3991	;# 
  2575   000F98                     RC1REG          equ	3992	;# 
  2576   000F98                     RCREG           equ	3992	;# 
  2577   000F98                     RCREG1          equ	3992	;# 
  2578   000F99                     TX1REG          equ	3993	;# 
  2579   000F99                     TXREG1          equ	3993	;# 
  2580   000F99                     TXREG           equ	3993	;# 
  2581   000F9A                     SP1BRG          equ	3994	;# 
  2582   000F9A                     SPBRG           equ	3994	;# 
  2583   000F9A                     SP1BRGL         equ	3994	;# 
  2584   000F9A                     SPBRG1          equ	3994	;# 
  2585   000F9A                     SPBRGL          equ	3994	;# 
  2586   000F9B                     SP1BRGH         equ	3995	;# 
  2587   000F9B                     SPBRGH          equ	3995	;# 
  2588   000F9B                     SPBRGH1         equ	3995	;# 
  2589   000F9C                     RC1STA          equ	3996	;# 
  2590   000F9C                     RCSTA1          equ	3996	;# 
  2591   000F9C                     RCSTA           equ	3996	;# 
  2592   000F9D                     TX1STA          equ	3997	;# 
  2593   000F9D                     TXSTA1          equ	3997	;# 
  2594   000F9D                     TXSTA           equ	3997	;# 
  2595   000F9E                     BAUD1CON        equ	3998	;# 
  2596   000F9E                     BAUDCON1        equ	3998	;# 
  2597   000F9E                     BAUDCTL1        equ	3998	;# 
  2598   000F9E                     BAUDCON         equ	3998	;# 
  2599   000F9E                     BAUDCTL         equ	3998	;# 
  2600   000F9F                     PWM4DC          equ	3999	;# 
  2601   000F9F                     PWM4DCL         equ	3999	;# 
  2602   000FA0                     PWM4DCH         equ	4000	;# 
  2603   000FA1                     PWM4CON         equ	4001	;# 
  2604   000FA2                     PWM3DC          equ	4002	;# 
  2605   000FA2                     PWM3DCL         equ	4002	;# 
  2606   000FA3                     PWM3DCH         equ	4003	;# 
  2607   000FA4                     PWM3CON         equ	4004	;# 
  2608   000FA5                     CCPR2           equ	4005	;# 
  2609   000FA5                     CCPR2L          equ	4005	;# 
  2610   000FA6                     CCPR2H          equ	4006	;# 
  2611   000FA7                     CCP2CON         equ	4007	;# 
  2612   000FA8                     CCP2CAP         equ	4008	;# 
  2613   000FA9                     CCPR1           equ	4009	;# 
  2614   000FA9                     CCPR1L          equ	4009	;# 
  2615   000FAA                     CCPR1H          equ	4010	;# 
  2616   000FAB                     CCP1CON         equ	4011	;# 
  2617   000FAC                     CCP1CAP         equ	4012	;# 
  2618   000FAD                     CCPTMRS         equ	4013	;# 
  2619   000FAE                     T6TMR           equ	4014	;# 
  2620   000FAE                     TMR6            equ	4014	;# 
  2621   000FAF                     T6PR            equ	4015	;# 
  2622   000FAF                     PR6             equ	4015	;# 
  2623   000FB0                     T6CON           equ	4016	;# 
  2624   000FB1                     T6HLT           equ	4017	;# 
  2625   000FB2                     T6CLKCON        equ	4018	;# 
  2626   000FB2                     T6CLK           equ	4018	;# 
  2627   000FB3                     T6RST           equ	4019	;# 
  2628   000FB4                     T4TMR           equ	4020	;# 
  2629   000FB4                     TMR4            equ	4020	;# 
  2630   000FB5                     T4PR            equ	4021	;# 
  2631   000FB5                     PR4             equ	4021	;# 
  2632   000FB6                     T4CON           equ	4022	;# 
  2633   000FB7                     T4HLT           equ	4023	;# 
  2634   000FB8                     T4CLKCON        equ	4024	;# 
  2635   000FB8                     T4CLK           equ	4024	;# 
  2636   000FB9                     T4RST           equ	4025	;# 
  2637   000FBA                     T2TMR           equ	4026	;# 
  2638   000FBA                     TMR2            equ	4026	;# 
  2639   000FBB                     T2PR            equ	4027	;# 
  2640   000FBB                     PR2             equ	4027	;# 
  2641   000FBC                     T2CON           equ	4028	;# 
  2642   000FBD                     T2HLT           equ	4029	;# 
  2643   000FBE                     T2CLKCON        equ	4030	;# 
  2644   000FBE                     T2CLK           equ	4030	;# 
  2645   000FBF                     T2RST           equ	4031	;# 
  2646   000FC0                     TMR5            equ	4032	;# 
  2647   000FC0                     TMR5L           equ	4032	;# 
  2648   000FC1                     TMR5H           equ	4033	;# 
  2649   000FC2                     T5CON           equ	4034	;# 
  2650   000FC2                     TMR5CON         equ	4034	;# 
  2651   000FC3                     T5GCON          equ	4035	;# 
  2652   000FC3                     TMR5GCON        equ	4035	;# 
  2653   000FC4                     T5GATE          equ	4036	;# 
  2654   000FC4                     TMR5GATE        equ	4036	;# 
  2655   000FC5                     T5CLK           equ	4037	;# 
  2656   000FC5                     TMR5CLK         equ	4037	;# 
  2657   000FC5                     PR5             equ	4037	;# 
  2658   000FC6                     TMR3            equ	4038	;# 
  2659   000FC6                     TMR3L           equ	4038	;# 
  2660   000FC7                     TMR3H           equ	4039	;# 
  2661   000FC8                     T3CON           equ	4040	;# 
  2662   000FC8                     TMR3CON         equ	4040	;# 
  2663   000FC9                     T3GCON          equ	4041	;# 
  2664   000FC9                     TMR3GCON        equ	4041	;# 
  2665   000FCA                     T3GATE          equ	4042	;# 
  2666   000FCA                     TMR3GATE        equ	4042	;# 
  2667   000FCB                     T3CLK           equ	4043	;# 
  2668   000FCB                     TMR3CLK         equ	4043	;# 
  2669   000FCB                     PR3             equ	4043	;# 
  2670   000FCC                     TMR1            equ	4044	;# 
  2671   000FCC                     TMR1L           equ	4044	;# 
  2672   000FCD                     TMR1H           equ	4045	;# 
  2673   000FCE                     T1CON           equ	4046	;# 
  2674   000FCE                     TMR1CON         equ	4046	;# 
  2675   000FCF                     T1GCON          equ	4047	;# 
  2676   000FCF                     TMR1GCON        equ	4047	;# 
  2677   000FD0                     T1GATE          equ	4048	;# 
  2678   000FD0                     TMR1GATE        equ	4048	;# 
  2679   000FD1                     T1CLK           equ	4049	;# 
  2680   000FD1                     TMR1CLK         equ	4049	;# 
  2681   000FD1                     PR1             equ	4049	;# 
  2682   000FD2                     TMR0L           equ	4050	;# 
  2683   000FD2                     TMR0            equ	4050	;# 
  2684   000FD3                     TMR0H           equ	4051	;# 
  2685   000FD3                     PR0             equ	4051	;# 
  2686   000FD4                     T0CON0          equ	4052	;# 
  2687   000FD5                     T0CON1          equ	4053	;# 
  2688   000FD6                     PCON1           equ	4054	;# 
  2689   000FD7                     PCON0           equ	4055	;# 
  2690   000FD8                     STATUS          equ	4056	;# 
  2691   000FD9                     FSR2            equ	4057	;# 
  2692   000FD9                     FSR2L           equ	4057	;# 
  2693   000FDA                     FSR2H           equ	4058	;# 
  2694   000FDB                     PLUSW2          equ	4059	;# 
  2695   000FDC                     PREINC2         equ	4060	;# 
  2696   000FDD                     POSTDEC2        equ	4061	;# 
  2697   000FDE                     POSTINC2        equ	4062	;# 
  2698   000FDF                     INDF2           equ	4063	;# 
  2699   000FE0                     BSR             equ	4064	;# 
  2700   000FE1                     FSR1            equ	4065	;# 
  2701   000FE1                     FSR1L           equ	4065	;# 
  2702   000FE2                     FSR1H           equ	4066	;# 
  2703   000FE3                     PLUSW1          equ	4067	;# 
  2704   000FE4                     PREINC1         equ	4068	;# 
  2705   000FE5                     POSTDEC1        equ	4069	;# 
  2706   000FE6                     POSTINC1        equ	4070	;# 
  2707   000FE7                     INDF1           equ	4071	;# 
  2708   000FE8                     WREG            equ	4072	;# 
  2709   000FE9                     FSR0            equ	4073	;# 
  2710   000FE9                     FSR0L           equ	4073	;# 
  2711   000FEA                     FSR0H           equ	4074	;# 
  2712   000FEB                     PLUSW0          equ	4075	;# 
  2713   000FEC                     PREINC0         equ	4076	;# 
  2714   000FED                     POSTDEC0        equ	4077	;# 
  2715   000FEE                     POSTINC0        equ	4078	;# 
  2716   000FEF                     INDF0           equ	4079	;# 
  2717   000FF2                     INTCON          equ	4082	;# 
  2718   000FF3                     PROD            equ	4083	;# 
  2719   000FF3                     PRODL           equ	4083	;# 
  2720   000FF4                     PRODH           equ	4084	;# 
  2721   000FF5                     TABLAT          equ	4085	;# 
  2722   000FF6                     TBLPTR          equ	4086	;# 
  2723   000FF6                     TBLPTRL         equ	4086	;# 
  2724   000FF7                     TBLPTRH         equ	4087	;# 
  2725   000FF8                     TBLPTRU         equ	4088	;# 
  2726   000FF9                     PCLAT           equ	4089	;# 
  2727   000FF9                     PC              equ	4089	;# 
  2728   000FF9                     PCL             equ	4089	;# 
  2729   000FFA                     PCLATH          equ	4090	;# 
  2730   000FFB                     PCLATU          equ	4091	;# 
  2731   000FFC                     STKPTR          equ	4092	;# 
  2732   000FFD                     TOS             equ	4093	;# 
  2733   000FFD                     TOSL            equ	4093	;# 
  2734   000FFE                     TOSH            equ	4094	;# 
  2735   000FFF                     TOSU            equ	4095	;# 
  2736   000E9B                     PPSLOCK         equ	3739	;# 
  2737   000E9C                     INT0PPS         equ	3740	;# 
  2738   000E9D                     INT1PPS         equ	3741	;# 
  2739   000E9E                     INT2PPS         equ	3742	;# 
  2740   000E9F                     T0CKIPPS        equ	3743	;# 
  2741   000EA0                     T1CKIPPS        equ	3744	;# 
  2742   000EA1                     T1GPPS          equ	3745	;# 
  2743   000EA2                     T3CKIPPS        equ	3746	;# 
  2744   000EA3                     T3GPPS          equ	3747	;# 
  2745   000EA4                     T5CKIPPS        equ	3748	;# 
  2746   000EA5                     T5GPPS          equ	3749	;# 
  2747   000EA6                     T2INPPS         equ	3750	;# 
  2748   000EA7                     T4INPPS         equ	3751	;# 
  2749   000EA8                     T6INPPS         equ	3752	;# 
  2750   000EA9                     ADACTPPS        equ	3753	;# 
  2751   000EAA                     CCP1PPS         equ	3754	;# 
  2752   000EAB                     CCP2PPS         equ	3755	;# 
  2753   000EAC                     CWG1PPS         equ	3756	;# 
  2754   000EAC                     CWGPPS          equ	3756	;# 
  2755   000EAC                     CWGINPPS        equ	3756	;# 
  2756   000EAC                     CWG1INPPS       equ	3756	;# 
  2757   000EAD                     MDCARLPPS       equ	3757	;# 
  2758   000EAE                     MDCARHPPS       equ	3758	;# 
  2759   000EAF                     MDSRCPPS        equ	3759	;# 
  2760   000EB0                     RX1PPS          equ	3760	;# 
  2761   000EB0                     RXPPS           equ	3760	;# 
  2762   000EB0                     RXDT1PPS        equ	3760	;# 
  2763   000EB1                     CK1PPS          equ	3761	;# 
  2764   000EB1                     TXPPS           equ	3761	;# 
  2765   000EB1                     CKPPS           equ	3761	;# 
  2766   000EB1                     TXCK1PPS        equ	3761	;# 
  2767   000EB1                     TX1PPS          equ	3761	;# 
  2768   000EB2                     SSP1CLKPPS      equ	3762	;# 
  2769   000EB2                     SSPCLKPPS       equ	3762	;# 
  2770   000EB3                     SSP1DATPPS      equ	3763	;# 
  2771   000EB3                     SSPDATPPS       equ	3763	;# 
  2772   000EB4                     SSP1SSPPS       equ	3764	;# 
  2773   000EB4                     SSPSSPPS        equ	3764	;# 
  2774   000EB5                     IPR0            equ	3765	;# 
  2775   000EB6                     IPR1            equ	3766	;# 
  2776   000EB7                     IPR2            equ	3767	;# 
  2777   000EB8                     IPR3            equ	3768	;# 
  2778   000EB9                     IPR4            equ	3769	;# 
  2779   000EBA                     IPR5            equ	3770	;# 
  2780   000EBB                     IPR6            equ	3771	;# 
  2781   000EBC                     IPR7            equ	3772	;# 
  2782   000EBD                     PIE0            equ	3773	;# 
  2783   000EBE                     PIE1            equ	3774	;# 
  2784   000EBF                     PIE2            equ	3775	;# 
  2785   000EC0                     PIE3            equ	3776	;# 
  2786   000EC1                     PIE4            equ	3777	;# 
  2787   000EC2                     PIE5            equ	3778	;# 
  2788   000EC3                     PIE6            equ	3779	;# 
  2789   000EC4                     PIE7            equ	3780	;# 
  2790   000EC5                     PIR0            equ	3781	;# 
  2791   000EC6                     PIR1            equ	3782	;# 
  2792   000EC7                     PIR2            equ	3783	;# 
  2793   000EC8                     PIR3            equ	3784	;# 
  2794   000EC9                     PIR4            equ	3785	;# 
  2795   000ECA                     PIR5            equ	3786	;# 
  2796   000ECB                     PIR6            equ	3787	;# 
  2797   000ECC                     PIR7            equ	3788	;# 
  2798   000ECD                     WDTCON0         equ	3789	;# 
  2799   000ECE                     WDTCON1         equ	3790	;# 
  2800   000ECF                     WDTPSL          equ	3791	;# 
  2801   000ED0                     WDTPSH          equ	3792	;# 
  2802   000ED1                     WDTTMR          equ	3793	;# 
  2803   000ED2                     CPUDOZE         equ	3794	;# 
  2804   000ED3                     OSCCON1         equ	3795	;# 
  2805   000ED4                     OSCCON2         equ	3796	;# 
  2806   000ED5                     OSCCON3         equ	3797	;# 
  2807   000ED6                     OSCSTAT         equ	3798	;# 
  2808   000ED6                     OSCSTAT1        equ	3798	;# 
  2809   000ED7                     OSCEN           equ	3799	;# 
  2810   000ED8                     OSCTUNE         equ	3800	;# 
  2811   000ED9                     OSCFRQ          equ	3801	;# 
  2812   000ED9                     OSCFREQ         equ	3801	;# 
  2813   000EDA                     VREGCON         equ	3802	;# 
  2814   000EDB                     BORCON          equ	3803	;# 
  2815   000EDC                     PMD0            equ	3804	;# 
  2816   000EDD                     PMD1            equ	3805	;# 
  2817   000EDE                     PMD2            equ	3806	;# 
  2818   000EDF                     PMD3            equ	3807	;# 
  2819   000EE0                     PMD4            equ	3808	;# 
  2820   000EE1                     PMD5            equ	3809	;# 
  2821   000EE2                     RA0PPS          equ	3810	;# 
  2822   000EE3                     RA1PPS          equ	3811	;# 
  2823   000EE4                     RA2PPS          equ	3812	;# 
  2824   000EE5                     RA3PPS          equ	3813	;# 
  2825   000EE6                     RA4PPS          equ	3814	;# 
  2826   000EE7                     RA5PPS          equ	3815	;# 
  2827   000EE8                     RA6PPS          equ	3816	;# 
  2828   000EE9                     RA7PPS          equ	3817	;# 
  2829   000EEA                     RB0PPS          equ	3818	;# 
  2830   000EEB                     RB1PPS          equ	3819	;# 
  2831   000EEC                     RB2PPS          equ	3820	;# 
  2832   000EED                     RB3PPS          equ	3821	;# 
  2833   000EEE                     RB4PPS          equ	3822	;# 
  2834   000EEF                     RB5PPS          equ	3823	;# 
  2835   000EF0                     RB6PPS          equ	3824	;# 
  2836   000EF1                     RB7PPS          equ	3825	;# 
  2837   000EF2                     RC0PPS          equ	3826	;# 
  2838   000EF3                     RC1PPS          equ	3827	;# 
  2839   000EF4                     RC2PPS          equ	3828	;# 
  2840   000EF5                     RC3PPS          equ	3829	;# 
  2841   000EF6                     RC4PPS          equ	3830	;# 
  2842   000EF7                     RC5PPS          equ	3831	;# 
  2843   000EF8                     RC6PPS          equ	3832	;# 
  2844   000EF9                     RC7PPS          equ	3833	;# 
  2845   000F05                     IOCAF           equ	3845	;# 
  2846   000F06                     IOCAN           equ	3846	;# 
  2847   000F07                     IOCAP           equ	3847	;# 
  2848   000F08                     INLVLA          equ	3848	;# 
  2849   000F09                     SLRCONA         equ	3849	;# 
  2850   000F0A                     ODCONA          equ	3850	;# 
  2851   000F0B                     WPUA            equ	3851	;# 
  2852   000F0C                     ANSELA          equ	3852	;# 
  2853   000F0D                     IOCBF           equ	3853	;# 
  2854   000F0E                     IOCBN           equ	3854	;# 
  2855   000F0F                     IOCBP           equ	3855	;# 
  2856   000F10                     INLVLB          equ	3856	;# 
  2857   000F11                     SLRCONB         equ	3857	;# 
  2858   000F12                     ODCONB          equ	3858	;# 
  2859   000F13                     WPUB            equ	3859	;# 
  2860   000F14                     ANSELB          equ	3860	;# 
  2861   000F15                     IOCCF           equ	3861	;# 
  2862   000F16                     IOCCN           equ	3862	;# 
  2863   000F17                     IOCCP           equ	3863	;# 
  2864   000F18                     INLVLC          equ	3864	;# 
  2865   000F19                     SLRCONC         equ	3865	;# 
  2866   000F1A                     ODCONC          equ	3866	;# 
  2867   000F1B                     WPUC            equ	3867	;# 
  2868   000F1C                     ANSELC          equ	3868	;# 
  2869   000F22                     IOCEF           equ	3874	;# 
  2870   000F23                     IOCEN           equ	3875	;# 
  2871   000F24                     IOCEP           equ	3876	;# 
  2872   000F25                     INLVLE          equ	3877	;# 
  2873   000F28                     WPUE            equ	3880	;# 
  2874   000F2A                     HLVDCON0        equ	3882	;# 
  2875   000F2B                     HLVDCON1        equ	3883	;# 
  2876   000F2C                     FVRCON          equ	3884	;# 
  2877   000F2D                     ZCDCON          equ	3885	;# 
  2878   000F2E                     DAC1CON0        equ	3886	;# 
  2879   000F2F                     DAC1CON1        equ	3887	;# 
  2880   000F30                     CM2CON0         equ	3888	;# 
  2881   000F31                     CM2CON1         equ	3889	;# 
  2882   000F32                     CM2NCH          equ	3890	;# 
  2883   000F33                     CM2PCH          equ	3891	;# 
  2884   000F34                     CM1CON0         equ	3892	;# 
  2885   000F35                     CM1CON1         equ	3893	;# 
  2886   000F36                     CM1NCH          equ	3894	;# 
  2887   000F37                     CM1PCH          equ	3895	;# 
  2888   000F38                     CMOUT           equ	3896	;# 
  2889   000F39                     CLKRCON         equ	3897	;# 
  2890   000F3A                     CLKRCLK         equ	3898	;# 
  2891   000F3B                     CWG1CLK         equ	3899	;# 
  2892   000F3B                     CWG1CLKCON      equ	3899	;# 
  2893   000F3C                     CWG1ISM         equ	3900	;# 
  2894   000F3D                     CWG1DBR         equ	3901	;# 
  2895   000F3E                     CWG1DBF         equ	3902	;# 
  2896   000F3F                     CWG1CON0        equ	3903	;# 
  2897   000F40                     CWG1CON1        equ	3904	;# 
  2898   000F41                     CWG1AS0         equ	3905	;# 
  2899   000F42                     CWG1AS1         equ	3906	;# 
  2900   000F43                     CWG1STR         equ	3907	;# 
  2901   000F44                     SCANLADR        equ	3908	;# 
  2902   000F44                     SCANLADRL       equ	3908	;# 
  2903   000F45                     SCANLADRH       equ	3909	;# 
  2904   000F46                     SCANLADRU       equ	3910	;# 
  2905   000F47                     SCANHADR        equ	3911	;# 
  2906   000F47                     SCANHADRL       equ	3911	;# 
  2907   000F48                     SCANHADRH       equ	3912	;# 
  2908   000F49                     SCANHADRU       equ	3913	;# 
  2909   000F4A                     SCANCON0        equ	3914	;# 
  2910   000F4B                     SCANTRIG        equ	3915	;# 
  2911   000F4C                     MDCON0          equ	3916	;# 
  2912   000F4D                     MDCON1          equ	3917	;# 
  2913   000F4E                     MDSRC           equ	3918	;# 
  2914   000F4F                     MDCARL          equ	3919	;# 
  2915   000F50                     MDCARH          equ	3920	;# 
  2916   000F51                     ADACT           equ	3921	;# 
  2917   000F52                     ADCLK           equ	3922	;# 
  2918   000F53                     ADREF           equ	3923	;# 
  2919   000F54                     ADCON1          equ	3924	;# 
  2920   000F55                     ADCON2          equ	3925	;# 
  2921   000F56                     ADCON3          equ	3926	;# 
  2922   000F57                     ADACQ           equ	3927	;# 
  2923   000F58                     ADCAP           equ	3928	;# 
  2924   000F59                     ADPRE           equ	3929	;# 
  2925   000F5A                     ADPCH           equ	3930	;# 
  2926   000F5B                     ADCON0          equ	3931	;# 
  2927   000F5C                     ADPREV          equ	3932	;# 
  2928   000F5C                     ADPREVL         equ	3932	;# 
  2929   000F5D                     ADPREVH         equ	3933	;# 
  2930   000F5E                     ADRES           equ	3934	;# 
  2931   000F5E                     ADRESL          equ	3934	;# 
  2932   000F5F                     ADRESH          equ	3935	;# 
  2933   000F60                     ADSTAT          equ	3936	;# 
  2934   000F61                     ADRPT           equ	3937	;# 
  2935   000F62                     ADCNT           equ	3938	;# 
  2936   000F63                     ADSTPT          equ	3939	;# 
  2937   000F63                     ADSTPTL         equ	3939	;# 
  2938   000F64                     ADSTPTH         equ	3940	;# 
  2939   000F65                     ADLTH           equ	3941	;# 
  2940   000F65                     ADLTHL          equ	3941	;# 
  2941   000F66                     ADLTHH          equ	3942	;# 
  2942   000F67                     ADUTH           equ	3943	;# 
  2943   000F67                     ADUTHL          equ	3943	;# 
  2944   000F68                     ADUTHH          equ	3944	;# 
  2945   000F69                     ADERR           equ	3945	;# 
  2946   000F69                     ADERRL          equ	3945	;# 
  2947   000F6A                     ADERRH          equ	3946	;# 
  2948   000F6B                     ADACC           equ	3947	;# 
  2949   000F6B                     ADACCL          equ	3947	;# 
  2950   000F6C                     ADACCH          equ	3948	;# 
  2951   000F6D                     ADFLTR          equ	3949	;# 
  2952   000F6D                     ADFLTRL         equ	3949	;# 
  2953   000F6E                     ADFLTRH         equ	3950	;# 
  2954   000F6F                     CRCDATA         equ	3951	;# 
  2955   000F6F                     CRCDATL         equ	3951	;# 
  2956   000F70                     CRCDATH         equ	3952	;# 
  2957   000F71                     CRCACC          equ	3953	;# 
  2958   000F71                     CRCACCL         equ	3953	;# 
  2959   000F72                     CRCACCH         equ	3954	;# 
  2960   000F73                     CRCSHFT         equ	3955	;# 
  2961   000F73                     CRCSHIFTL       equ	3955	;# 
  2962   000F74                     CRCSHIFTH       equ	3956	;# 
  2963   000F75                     CRCXOR          equ	3957	;# 
  2964   000F75                     CRCXORL         equ	3957	;# 
  2965   000F76                     CRCXORH         equ	3958	;# 
  2966   000F77                     CRCCON0         equ	3959	;# 
  2967   000F78                     CRCCON1         equ	3960	;# 
  2968   000F79                     NVMADR          equ	3961	;# 
  2969   000F79                     NVMADRL         equ	3961	;# 
  2970   000F7A                     NVMADRH         equ	3962	;# 
  2971   000F7B                     NVMADRU         equ	3963	;# 
  2972   000F7C                     NVMDAT          equ	3964	;# 
  2973   000F7C                     NVMDATL         equ	3964	;# 
  2974   000F7D                     NVMDATH         equ	3965	;# 
  2975   000F7F                     NVMCON0         equ	3967	;# 
  2976   000F80                     NVMCON1         equ	3968	;# 
  2977   000F81                     NVMCON2         equ	3969	;# 
  2978   000F82                     LATA            equ	3970	;# 
  2979   000F83                     LATB            equ	3971	;# 
  2980   000F84                     LATC            equ	3972	;# 
  2981   000F87                     TRISA           equ	3975	;# 
  2982   000F87                     DDRA            equ	3975	;# 
  2983   000F88                     TRISB           equ	3976	;# 
  2984   000F88                     DDRB            equ	3976	;# 
  2985   000F89                     TRISC           equ	3977	;# 
  2986   000F89                     DDRC            equ	3977	;# 
  2987   000F8C                     PORTA           equ	3980	;# 
  2988   000F8D                     PORTB           equ	3981	;# 
  2989   000F8E                     PORTC           equ	3982	;# 
  2990   000F90                     PORTE           equ	3984	;# 
  2991   000F91                     SSP1BUF         equ	3985	;# 
  2992   000F92                     SSP1ADD         equ	3986	;# 
  2993   000F93                     SSP1MSK         equ	3987	;# 
  2994   000F94                     SSP1STAT        equ	3988	;# 
  2995   000F95                     SSP1CON1        equ	3989	;# 
  2996   000F96                     SSP1CON2        equ	3990	;# 
  2997   000F97                     SSP1CON3        equ	3991	;# 
  2998   000F98                     RC1REG          equ	3992	;# 
  2999   000F98                     RCREG           equ	3992	;# 
  3000   000F98                     RCREG1          equ	3992	;# 
  3001   000F99                     TX1REG          equ	3993	;# 
  3002   000F99                     TXREG1          equ	3993	;# 
  3003   000F99                     TXREG           equ	3993	;# 
  3004   000F9A                     SP1BRG          equ	3994	;# 
  3005   000F9A                     SPBRG           equ	3994	;# 
  3006   000F9A                     SP1BRGL         equ	3994	;# 
  3007   000F9A                     SPBRG1          equ	3994	;# 
  3008   000F9A                     SPBRGL          equ	3994	;# 
  3009   000F9B                     SP1BRGH         equ	3995	;# 
  3010   000F9B                     SPBRGH          equ	3995	;# 
  3011   000F9B                     SPBRGH1         equ	3995	;# 
  3012   000F9C                     RC1STA          equ	3996	;# 
  3013   000F9C                     RCSTA1          equ	3996	;# 
  3014   000F9C                     RCSTA           equ	3996	;# 
  3015   000F9D                     TX1STA          equ	3997	;# 
  3016   000F9D                     TXSTA1          equ	3997	;# 
  3017   000F9D                     TXSTA           equ	3997	;# 
  3018   000F9E                     BAUD1CON        equ	3998	;# 
  3019   000F9E                     BAUDCON1        equ	3998	;# 
  3020   000F9E                     BAUDCTL1        equ	3998	;# 
  3021   000F9E                     BAUDCON         equ	3998	;# 
  3022   000F9E                     BAUDCTL         equ	3998	;# 
  3023   000F9F                     PWM4DC          equ	3999	;# 
  3024   000F9F                     PWM4DCL         equ	3999	;# 
  3025   000FA0                     PWM4DCH         equ	4000	;# 
  3026   000FA1                     PWM4CON         equ	4001	;# 
  3027   000FA2                     PWM3DC          equ	4002	;# 
  3028   000FA2                     PWM3DCL         equ	4002	;# 
  3029   000FA3                     PWM3DCH         equ	4003	;# 
  3030   000FA4                     PWM3CON         equ	4004	;# 
  3031   000FA5                     CCPR2           equ	4005	;# 
  3032   000FA5                     CCPR2L          equ	4005	;# 
  3033   000FA6                     CCPR2H          equ	4006	;# 
  3034   000FA7                     CCP2CON         equ	4007	;# 
  3035   000FA8                     CCP2CAP         equ	4008	;# 
  3036   000FA9                     CCPR1           equ	4009	;# 
  3037   000FA9                     CCPR1L          equ	4009	;# 
  3038   000FAA                     CCPR1H          equ	4010	;# 
  3039   000FAB                     CCP1CON         equ	4011	;# 
  3040   000FAC                     CCP1CAP         equ	4012	;# 
  3041   000FAD                     CCPTMRS         equ	4013	;# 
  3042   000FAE                     T6TMR           equ	4014	;# 
  3043   000FAE                     TMR6            equ	4014	;# 
  3044   000FAF                     T6PR            equ	4015	;# 
  3045   000FAF                     PR6             equ	4015	;# 
  3046   000FB0                     T6CON           equ	4016	;# 
  3047   000FB1                     T6HLT           equ	4017	;# 
  3048   000FB2                     T6CLKCON        equ	4018	;# 
  3049   000FB2                     T6CLK           equ	4018	;# 
  3050   000FB3                     T6RST           equ	4019	;# 
  3051   000FB4                     T4TMR           equ	4020	;# 
  3052   000FB4                     TMR4            equ	4020	;# 
  3053   000FB5                     T4PR            equ	4021	;# 
  3054   000FB5                     PR4             equ	4021	;# 
  3055   000FB6                     T4CON           equ	4022	;# 
  3056   000FB7                     T4HLT           equ	4023	;# 
  3057   000FB8                     T4CLKCON        equ	4024	;# 
  3058   000FB8                     T4CLK           equ	4024	;# 
  3059   000FB9                     T4RST           equ	4025	;# 
  3060   000FBA                     T2TMR           equ	4026	;# 
  3061   000FBA                     TMR2            equ	4026	;# 
  3062   000FBB                     T2PR            equ	4027	;# 
  3063   000FBB                     PR2             equ	4027	;# 
  3064   000FBC                     T2CON           equ	4028	;# 
  3065   000FBD                     T2HLT           equ	4029	;# 
  3066   000FBE                     T2CLKCON        equ	4030	;# 
  3067   000FBE                     T2CLK           equ	4030	;# 
  3068   000FBF                     T2RST           equ	4031	;# 
  3069   000FC0                     TMR5            equ	4032	;# 
  3070   000FC0                     TMR5L           equ	4032	;# 
  3071   000FC1                     TMR5H           equ	4033	;# 
  3072   000FC2                     T5CON           equ	4034	;# 
  3073   000FC2                     TMR5CON         equ	4034	;# 
  3074   000FC3                     T5GCON          equ	4035	;# 
  3075   000FC3                     TMR5GCON        equ	4035	;# 
  3076   000FC4                     T5GATE          equ	4036	;# 
  3077   000FC4                     TMR5GATE        equ	4036	;# 
  3078   000FC5                     T5CLK           equ	4037	;# 
  3079   000FC5                     TMR5CLK         equ	4037	;# 
  3080   000FC5                     PR5             equ	4037	;# 
  3081   000FC6                     TMR3            equ	4038	;# 
  3082   000FC6                     TMR3L           equ	4038	;# 
  3083   000FC7                     TMR3H           equ	4039	;# 
  3084   000FC8                     T3CON           equ	4040	;# 
  3085   000FC8                     TMR3CON         equ	4040	;# 
  3086   000FC9                     T3GCON          equ	4041	;# 
  3087   000FC9                     TMR3GCON        equ	4041	;# 
  3088   000FCA                     T3GATE          equ	4042	;# 
  3089   000FCA                     TMR3GATE        equ	4042	;# 
  3090   000FCB                     T3CLK           equ	4043	;# 
  3091   000FCB                     TMR3CLK         equ	4043	;# 
  3092   000FCB                     PR3             equ	4043	;# 
  3093   000FCC                     TMR1            equ	4044	;# 
  3094   000FCC                     TMR1L           equ	4044	;# 
  3095   000FCD                     TMR1H           equ	4045	;# 
  3096   000FCE                     T1CON           equ	4046	;# 
  3097   000FCE                     TMR1CON         equ	4046	;# 
  3098   000FCF                     T1GCON          equ	4047	;# 
  3099   000FCF                     TMR1GCON        equ	4047	;# 
  3100   000FD0                     T1GATE          equ	4048	;# 
  3101   000FD0                     TMR1GATE        equ	4048	;# 
  3102   000FD1                     T1CLK           equ	4049	;# 
  3103   000FD1                     TMR1CLK         equ	4049	;# 
  3104   000FD1                     PR1             equ	4049	;# 
  3105   000FD2                     TMR0L           equ	4050	;# 
  3106   000FD2                     TMR0            equ	4050	;# 
  3107   000FD3                     TMR0H           equ	4051	;# 
  3108   000FD3                     PR0             equ	4051	;# 
  3109   000FD4                     T0CON0          equ	4052	;# 
  3110   000FD5                     T0CON1          equ	4053	;# 
  3111   000FD6                     PCON1           equ	4054	;# 
  3112   000FD7                     PCON0           equ	4055	;# 
  3113   000FD8                     STATUS          equ	4056	;# 
  3114   000FD9                     FSR2            equ	4057	;# 
  3115   000FD9                     FSR2L           equ	4057	;# 
  3116   000FDA                     FSR2H           equ	4058	;# 
  3117   000FDB                     PLUSW2          equ	4059	;# 
  3118   000FDC                     PREINC2         equ	4060	;# 
  3119   000FDD                     POSTDEC2        equ	4061	;# 
  3120   000FDE                     POSTINC2        equ	4062	;# 
  3121   000FDF                     INDF2           equ	4063	;# 
  3122   000FE0                     BSR             equ	4064	;# 
  3123   000FE1                     FSR1            equ	4065	;# 
  3124   000FE1                     FSR1L           equ	4065	;# 
  3125   000FE2                     FSR1H           equ	4066	;# 
  3126   000FE3                     PLUSW1          equ	4067	;# 
  3127   000FE4                     PREINC1         equ	4068	;# 
  3128   000FE5                     POSTDEC1        equ	4069	;# 
  3129   000FE6                     POSTINC1        equ	4070	;# 
  3130   000FE7                     INDF1           equ	4071	;# 
  3131   000FE8                     WREG            equ	4072	;# 
  3132   000FE9                     FSR0            equ	4073	;# 
  3133   000FE9                     FSR0L           equ	4073	;# 
  3134   000FEA                     FSR0H           equ	4074	;# 
  3135   000FEB                     PLUSW0          equ	4075	;# 
  3136   000FEC                     PREINC0         equ	4076	;# 
  3137   000FED                     POSTDEC0        equ	4077	;# 
  3138   000FEE                     POSTINC0        equ	4078	;# 
  3139   000FEF                     INDF0           equ	4079	;# 
  3140   000FF2                     INTCON          equ	4082	;# 
  3141   000FF3                     PROD            equ	4083	;# 
  3142   000FF3                     PRODL           equ	4083	;# 
  3143   000FF4                     PRODH           equ	4084	;# 
  3144   000FF5                     TABLAT          equ	4085	;# 
  3145   000FF6                     TBLPTR          equ	4086	;# 
  3146   000FF6                     TBLPTRL         equ	4086	;# 
  3147   000FF7                     TBLPTRH         equ	4087	;# 
  3148   000FF8                     TBLPTRU         equ	4088	;# 
  3149   000FF9                     PCLAT           equ	4089	;# 
  3150   000FF9                     PC              equ	4089	;# 
  3151   000FF9                     PCL             equ	4089	;# 
  3152   000FFA                     PCLATH          equ	4090	;# 
  3153   000FFB                     PCLATU          equ	4091	;# 
  3154   000FFC                     STKPTR          equ	4092	;# 
  3155   000FFD                     TOS             equ	4093	;# 
  3156   000FFD                     TOSL            equ	4093	;# 
  3157   000FFE                     TOSH            equ	4094	;# 
  3158   000FFF                     TOSU            equ	4095	;# 
  3159   000E9B                     PPSLOCK         equ	3739	;# 
  3160   000E9C                     INT0PPS         equ	3740	;# 
  3161   000E9D                     INT1PPS         equ	3741	;# 
  3162   000E9E                     INT2PPS         equ	3742	;# 
  3163   000E9F                     T0CKIPPS        equ	3743	;# 
  3164   000EA0                     T1CKIPPS        equ	3744	;# 
  3165   000EA1                     T1GPPS          equ	3745	;# 
  3166   000EA2                     T3CKIPPS        equ	3746	;# 
  3167   000EA3                     T3GPPS          equ	3747	;# 
  3168   000EA4                     T5CKIPPS        equ	3748	;# 
  3169   000EA5                     T5GPPS          equ	3749	;# 
  3170   000EA6                     T2INPPS         equ	3750	;# 
  3171   000EA7                     T4INPPS         equ	3751	;# 
  3172   000EA8                     T6INPPS         equ	3752	;# 
  3173   000EA9                     ADACTPPS        equ	3753	;# 
  3174   000EAA                     CCP1PPS         equ	3754	;# 
  3175   000EAB                     CCP2PPS         equ	3755	;# 
  3176   000EAC                     CWG1PPS         equ	3756	;# 
  3177   000EAC                     CWGPPS          equ	3756	;# 
  3178   000EAC                     CWGINPPS        equ	3756	;# 
  3179   000EAC                     CWG1INPPS       equ	3756	;# 
  3180   000EAD                     MDCARLPPS       equ	3757	;# 
  3181   000EAE                     MDCARHPPS       equ	3758	;# 
  3182   000EAF                     MDSRCPPS        equ	3759	;# 
  3183   000EB0                     RX1PPS          equ	3760	;# 
  3184   000EB0                     RXPPS           equ	3760	;# 
  3185   000EB0                     RXDT1PPS        equ	3760	;# 
  3186   000EB1                     CK1PPS          equ	3761	;# 
  3187   000EB1                     TXPPS           equ	3761	;# 
  3188   000EB1                     CKPPS           equ	3761	;# 
  3189   000EB1                     TXCK1PPS        equ	3761	;# 
  3190   000EB1                     TX1PPS          equ	3761	;# 
  3191   000EB2                     SSP1CLKPPS      equ	3762	;# 
  3192   000EB2                     SSPCLKPPS       equ	3762	;# 
  3193   000EB3                     SSP1DATPPS      equ	3763	;# 
  3194   000EB3                     SSPDATPPS       equ	3763	;# 
  3195   000EB4                     SSP1SSPPS       equ	3764	;# 
  3196   000EB4                     SSPSSPPS        equ	3764	;# 
  3197   000EB5                     IPR0            equ	3765	;# 
  3198   000EB6                     IPR1            equ	3766	;# 
  3199   000EB7                     IPR2            equ	3767	;# 
  3200   000EB8                     IPR3            equ	3768	;# 
  3201   000EB9                     IPR4            equ	3769	;# 
  3202   000EBA                     IPR5            equ	3770	;# 
  3203   000EBB                     IPR6            equ	3771	;# 
  3204   000EBC                     IPR7            equ	3772	;# 
  3205   000EBD                     PIE0            equ	3773	;# 
  3206   000EBE                     PIE1            equ	3774	;# 
  3207   000EBF                     PIE2            equ	3775	;# 
  3208   000EC0                     PIE3            equ	3776	;# 
  3209   000EC1                     PIE4            equ	3777	;# 
  3210   000EC2                     PIE5            equ	3778	;# 
  3211   000EC3                     PIE6            equ	3779	;# 
  3212   000EC4                     PIE7            equ	3780	;# 
  3213   000EC5                     PIR0            equ	3781	;# 
  3214   000EC6                     PIR1            equ	3782	;# 
  3215   000EC7                     PIR2            equ	3783	;# 
  3216   000EC8                     PIR3            equ	3784	;# 
  3217   000EC9                     PIR4            equ	3785	;# 
  3218   000ECA                     PIR5            equ	3786	;# 
  3219   000ECB                     PIR6            equ	3787	;# 
  3220   000ECC                     PIR7            equ	3788	;# 
  3221   000ECD                     WDTCON0         equ	3789	;# 
  3222   000ECE                     WDTCON1         equ	3790	;# 
  3223   000ECF                     WDTPSL          equ	3791	;# 
  3224   000ED0                     WDTPSH          equ	3792	;# 
  3225   000ED1                     WDTTMR          equ	3793	;# 
  3226   000ED2                     CPUDOZE         equ	3794	;# 
  3227   000ED3                     OSCCON1         equ	3795	;# 
  3228   000ED4                     OSCCON2         equ	3796	;# 
  3229   000ED5                     OSCCON3         equ	3797	;# 
  3230   000ED6                     OSCSTAT         equ	3798	;# 
  3231   000ED6                     OSCSTAT1        equ	3798	;# 
  3232   000ED7                     OSCEN           equ	3799	;# 
  3233   000ED8                     OSCTUNE         equ	3800	;# 
  3234   000ED9                     OSCFRQ          equ	3801	;# 
  3235   000ED9                     OSCFREQ         equ	3801	;# 
  3236   000EDA                     VREGCON         equ	3802	;# 
  3237   000EDB                     BORCON          equ	3803	;# 
  3238   000EDC                     PMD0            equ	3804	;# 
  3239   000EDD                     PMD1            equ	3805	;# 
  3240   000EDE                     PMD2            equ	3806	;# 
  3241   000EDF                     PMD3            equ	3807	;# 
  3242   000EE0                     PMD4            equ	3808	;# 
  3243   000EE1                     PMD5            equ	3809	;# 
  3244   000EE2                     RA0PPS          equ	3810	;# 
  3245   000EE3                     RA1PPS          equ	3811	;# 
  3246   000EE4                     RA2PPS          equ	3812	;# 
  3247   000EE5                     RA3PPS          equ	3813	;# 
  3248   000EE6                     RA4PPS          equ	3814	;# 
  3249   000EE7                     RA5PPS          equ	3815	;# 
  3250   000EE8                     RA6PPS          equ	3816	;# 
  3251   000EE9                     RA7PPS          equ	3817	;# 
  3252   000EEA                     RB0PPS          equ	3818	;# 
  3253   000EEB                     RB1PPS          equ	3819	;# 
  3254   000EEC                     RB2PPS          equ	3820	;# 
  3255   000EED                     RB3PPS          equ	3821	;# 
  3256   000EEE                     RB4PPS          equ	3822	;# 
  3257   000EEF                     RB5PPS          equ	3823	;# 
  3258   000EF0                     RB6PPS          equ	3824	;# 
  3259   000EF1                     RB7PPS          equ	3825	;# 
  3260   000EF2                     RC0PPS          equ	3826	;# 
  3261   000EF3                     RC1PPS          equ	3827	;# 
  3262   000EF4                     RC2PPS          equ	3828	;# 
  3263   000EF5                     RC3PPS          equ	3829	;# 
  3264   000EF6                     RC4PPS          equ	3830	;# 
  3265   000EF7                     RC5PPS          equ	3831	;# 
  3266   000EF8                     RC6PPS          equ	3832	;# 
  3267   000EF9                     RC7PPS          equ	3833	;# 
  3268   000F05                     IOCAF           equ	3845	;# 
  3269   000F06                     IOCAN           equ	3846	;# 
  3270   000F07                     IOCAP           equ	3847	;# 
  3271   000F08                     INLVLA          equ	3848	;# 
  3272   000F09                     SLRCONA         equ	3849	;# 
  3273   000F0A                     ODCONA          equ	3850	;# 
  3274   000F0B                     WPUA            equ	3851	;# 
  3275   000F0C                     ANSELA          equ	3852	;# 
  3276   000F0D                     IOCBF           equ	3853	;# 
  3277   000F0E                     IOCBN           equ	3854	;# 
  3278   000F0F                     IOCBP           equ	3855	;# 
  3279   000F10                     INLVLB          equ	3856	;# 
  3280   000F11                     SLRCONB         equ	3857	;# 
  3281   000F12                     ODCONB          equ	3858	;# 
  3282   000F13                     WPUB            equ	3859	;# 
  3283   000F14                     ANSELB          equ	3860	;# 
  3284   000F15                     IOCCF           equ	3861	;# 
  3285   000F16                     IOCCN           equ	3862	;# 
  3286   000F17                     IOCCP           equ	3863	;# 
  3287   000F18                     INLVLC          equ	3864	;# 
  3288   000F19                     SLRCONC         equ	3865	;# 
  3289   000F1A                     ODCONC          equ	3866	;# 
  3290   000F1B                     WPUC            equ	3867	;# 
  3291   000F1C                     ANSELC          equ	3868	;# 
  3292   000F22                     IOCEF           equ	3874	;# 
  3293   000F23                     IOCEN           equ	3875	;# 
  3294   000F24                     IOCEP           equ	3876	;# 
  3295   000F25                     INLVLE          equ	3877	;# 
  3296   000F28                     WPUE            equ	3880	;# 
  3297   000F2A                     HLVDCON0        equ	3882	;# 
  3298   000F2B                     HLVDCON1        equ	3883	;# 
  3299   000F2C                     FVRCON          equ	3884	;# 
  3300   000F2D                     ZCDCON          equ	3885	;# 
  3301   000F2E                     DAC1CON0        equ	3886	;# 
  3302   000F2F                     DAC1CON1        equ	3887	;# 
  3303   000F30                     CM2CON0         equ	3888	;# 
  3304   000F31                     CM2CON1         equ	3889	;# 
  3305   000F32                     CM2NCH          equ	3890	;# 
  3306   000F33                     CM2PCH          equ	3891	;# 
  3307   000F34                     CM1CON0         equ	3892	;# 
  3308   000F35                     CM1CON1         equ	3893	;# 
  3309   000F36                     CM1NCH          equ	3894	;# 
  3310   000F37                     CM1PCH          equ	3895	;# 
  3311   000F38                     CMOUT           equ	3896	;# 
  3312   000F39                     CLKRCON         equ	3897	;# 
  3313   000F3A                     CLKRCLK         equ	3898	;# 
  3314   000F3B                     CWG1CLK         equ	3899	;# 
  3315   000F3B                     CWG1CLKCON      equ	3899	;# 
  3316   000F3C                     CWG1ISM         equ	3900	;# 
  3317   000F3D                     CWG1DBR         equ	3901	;# 
  3318   000F3E                     CWG1DBF         equ	3902	;# 
  3319   000F3F                     CWG1CON0        equ	3903	;# 
  3320   000F40                     CWG1CON1        equ	3904	;# 
  3321   000F41                     CWG1AS0         equ	3905	;# 
  3322   000F42                     CWG1AS1         equ	3906	;# 
  3323   000F43                     CWG1STR         equ	3907	;# 
  3324   000F44                     SCANLADR        equ	3908	;# 
  3325   000F44                     SCANLADRL       equ	3908	;# 
  3326   000F45                     SCANLADRH       equ	3909	;# 
  3327   000F46                     SCANLADRU       equ	3910	;# 
  3328   000F47                     SCANHADR        equ	3911	;# 
  3329   000F47                     SCANHADRL       equ	3911	;# 
  3330   000F48                     SCANHADRH       equ	3912	;# 
  3331   000F49                     SCANHADRU       equ	3913	;# 
  3332   000F4A                     SCANCON0        equ	3914	;# 
  3333   000F4B                     SCANTRIG        equ	3915	;# 
  3334   000F4C                     MDCON0          equ	3916	;# 
  3335   000F4D                     MDCON1          equ	3917	;# 
  3336   000F4E                     MDSRC           equ	3918	;# 
  3337   000F4F                     MDCARL          equ	3919	;# 
  3338   000F50                     MDCARH          equ	3920	;# 
  3339   000F51                     ADACT           equ	3921	;# 
  3340   000F52                     ADCLK           equ	3922	;# 
  3341   000F53                     ADREF           equ	3923	;# 
  3342   000F54                     ADCON1          equ	3924	;# 
  3343   000F55                     ADCON2          equ	3925	;# 
  3344   000F56                     ADCON3          equ	3926	;# 
  3345   000F57                     ADACQ           equ	3927	;# 
  3346   000F58                     ADCAP           equ	3928	;# 
  3347   000F59                     ADPRE           equ	3929	;# 
  3348   000F5A                     ADPCH           equ	3930	;# 
  3349   000F5B                     ADCON0          equ	3931	;# 
  3350   000F5C                     ADPREV          equ	3932	;# 
  3351   000F5C                     ADPREVL         equ	3932	;# 
  3352   000F5D                     ADPREVH         equ	3933	;# 
  3353   000F5E                     ADRES           equ	3934	;# 
  3354   000F5E                     ADRESL          equ	3934	;# 
  3355   000F5F                     ADRESH          equ	3935	;# 
  3356   000F60                     ADSTAT          equ	3936	;# 
  3357   000F61                     ADRPT           equ	3937	;# 
  3358   000F62                     ADCNT           equ	3938	;# 
  3359   000F63                     ADSTPT          equ	3939	;# 
  3360   000F63                     ADSTPTL         equ	3939	;# 
  3361   000F64                     ADSTPTH         equ	3940	;# 
  3362   000F65                     ADLTH           equ	3941	;# 
  3363   000F65                     ADLTHL          equ	3941	;# 
  3364   000F66                     ADLTHH          equ	3942	;# 
  3365   000F67                     ADUTH           equ	3943	;# 
  3366   000F67                     ADUTHL          equ	3943	;# 
  3367   000F68                     ADUTHH          equ	3944	;# 
  3368   000F69                     ADERR           equ	3945	;# 
  3369   000F69                     ADERRL          equ	3945	;# 
  3370   000F6A                     ADERRH          equ	3946	;# 
  3371   000F6B                     ADACC           equ	3947	;# 
  3372   000F6B                     ADACCL          equ	3947	;# 
  3373   000F6C                     ADACCH          equ	3948	;# 
  3374   000F6D                     ADFLTR          equ	3949	;# 
  3375   000F6D                     ADFLTRL         equ	3949	;# 
  3376   000F6E                     ADFLTRH         equ	3950	;# 
  3377   000F6F                     CRCDATA         equ	3951	;# 
  3378   000F6F                     CRCDATL         equ	3951	;# 
  3379   000F70                     CRCDATH         equ	3952	;# 
  3380   000F71                     CRCACC          equ	3953	;# 
  3381   000F71                     CRCACCL         equ	3953	;# 
  3382   000F72                     CRCACCH         equ	3954	;# 
  3383   000F73                     CRCSHFT         equ	3955	;# 
  3384   000F73                     CRCSHIFTL       equ	3955	;# 
  3385   000F74                     CRCSHIFTH       equ	3956	;# 
  3386   000F75                     CRCXOR          equ	3957	;# 
  3387   000F75                     CRCXORL         equ	3957	;# 
  3388   000F76                     CRCXORH         equ	3958	;# 
  3389   000F77                     CRCCON0         equ	3959	;# 
  3390   000F78                     CRCCON1         equ	3960	;# 
  3391   000F79                     NVMADR          equ	3961	;# 
  3392   000F79                     NVMADRL         equ	3961	;# 
  3393   000F7A                     NVMADRH         equ	3962	;# 
  3394   000F7B                     NVMADRU         equ	3963	;# 
  3395   000F7C                     NVMDAT          equ	3964	;# 
  3396   000F7C                     NVMDATL         equ	3964	;# 
  3397   000F7D                     NVMDATH         equ	3965	;# 
  3398   000F7F                     NVMCON0         equ	3967	;# 
  3399   000F80                     NVMCON1         equ	3968	;# 
  3400   000F81                     NVMCON2         equ	3969	;# 
  3401   000F82                     LATA            equ	3970	;# 
  3402   000F83                     LATB            equ	3971	;# 
  3403   000F84                     LATC            equ	3972	;# 
  3404   000F87                     TRISA           equ	3975	;# 
  3405   000F87                     DDRA            equ	3975	;# 
  3406   000F88                     TRISB           equ	3976	;# 
  3407   000F88                     DDRB            equ	3976	;# 
  3408   000F89                     TRISC           equ	3977	;# 
  3409   000F89                     DDRC            equ	3977	;# 
  3410   000F8C                     PORTA           equ	3980	;# 
  3411   000F8D                     PORTB           equ	3981	;# 
  3412   000F8E                     PORTC           equ	3982	;# 
  3413   000F90                     PORTE           equ	3984	;# 
  3414   000F91                     SSP1BUF         equ	3985	;# 
  3415   000F92                     SSP1ADD         equ	3986	;# 
  3416   000F93                     SSP1MSK         equ	3987	;# 
  3417   000F94                     SSP1STAT        equ	3988	;# 
  3418   000F95                     SSP1CON1        equ	3989	;# 
  3419   000F96                     SSP1CON2        equ	3990	;# 
  3420   000F97                     SSP1CON3        equ	3991	;# 
  3421   000F98                     RC1REG          equ	3992	;# 
  3422   000F98                     RCREG           equ	3992	;# 
  3423   000F98                     RCREG1          equ	3992	;# 
  3424   000F99                     TX1REG          equ	3993	;# 
  3425   000F99                     TXREG1          equ	3993	;# 
  3426   000F99                     TXREG           equ	3993	;# 
  3427   000F9A                     SP1BRG          equ	3994	;# 
  3428   000F9A                     SPBRG           equ	3994	;# 
  3429   000F9A                     SP1BRGL         equ	3994	;# 
  3430   000F9A                     SPBRG1          equ	3994	;# 
  3431   000F9A                     SPBRGL          equ	3994	;# 
  3432   000F9B                     SP1BRGH         equ	3995	;# 
  3433   000F9B                     SPBRGH          equ	3995	;# 
  3434   000F9B                     SPBRGH1         equ	3995	;# 
  3435   000F9C                     RC1STA          equ	3996	;# 
  3436   000F9C                     RCSTA1          equ	3996	;# 
  3437   000F9C                     RCSTA           equ	3996	;# 
  3438   000F9D                     TX1STA          equ	3997	;# 
  3439   000F9D                     TXSTA1          equ	3997	;# 
  3440   000F9D                     TXSTA           equ	3997	;# 
  3441   000F9E                     BAUD1CON        equ	3998	;# 
  3442   000F9E                     BAUDCON1        equ	3998	;# 
  3443   000F9E                     BAUDCTL1        equ	3998	;# 
  3444   000F9E                     BAUDCON         equ	3998	;# 
  3445   000F9E                     BAUDCTL         equ	3998	;# 
  3446   000F9F                     PWM4DC          equ	3999	;# 
  3447   000F9F                     PWM4DCL         equ	3999	;# 
  3448   000FA0                     PWM4DCH         equ	4000	;# 
  3449   000FA1                     PWM4CON         equ	4001	;# 
  3450   000FA2                     PWM3DC          equ	4002	;# 
  3451   000FA2                     PWM3DCL         equ	4002	;# 
  3452   000FA3                     PWM3DCH         equ	4003	;# 
  3453   000FA4                     PWM3CON         equ	4004	;# 
  3454   000FA5                     CCPR2           equ	4005	;# 
  3455   000FA5                     CCPR2L          equ	4005	;# 
  3456   000FA6                     CCPR2H          equ	4006	;# 
  3457   000FA7                     CCP2CON         equ	4007	;# 
  3458   000FA8                     CCP2CAP         equ	4008	;# 
  3459   000FA9                     CCPR1           equ	4009	;# 
  3460   000FA9                     CCPR1L          equ	4009	;# 
  3461   000FAA                     CCPR1H          equ	4010	;# 
  3462   000FAB                     CCP1CON         equ	4011	;# 
  3463   000FAC                     CCP1CAP         equ	4012	;# 
  3464   000FAD                     CCPTMRS         equ	4013	;# 
  3465   000FAE                     T6TMR           equ	4014	;# 
  3466   000FAE                     TMR6            equ	4014	;# 
  3467   000FAF                     T6PR            equ	4015	;# 
  3468   000FAF                     PR6             equ	4015	;# 
  3469   000FB0                     T6CON           equ	4016	;# 
  3470   000FB1                     T6HLT           equ	4017	;# 
  3471   000FB2                     T6CLKCON        equ	4018	;# 
  3472   000FB2                     T6CLK           equ	4018	;# 
  3473   000FB3                     T6RST           equ	4019	;# 
  3474   000FB4                     T4TMR           equ	4020	;# 
  3475   000FB4                     TMR4            equ	4020	;# 
  3476   000FB5                     T4PR            equ	4021	;# 
  3477   000FB5                     PR4             equ	4021	;# 
  3478   000FB6                     T4CON           equ	4022	;# 
  3479   000FB7                     T4HLT           equ	4023	;# 
  3480   000FB8                     T4CLKCON        equ	4024	;# 
  3481   000FB8                     T4CLK           equ	4024	;# 
  3482   000FB9                     T4RST           equ	4025	;# 
  3483   000FBA                     T2TMR           equ	4026	;# 
  3484   000FBA                     TMR2            equ	4026	;# 
  3485   000FBB                     T2PR            equ	4027	;# 
  3486   000FBB                     PR2             equ	4027	;# 
  3487   000FBC                     T2CON           equ	4028	;# 
  3488   000FBD                     T2HLT           equ	4029	;# 
  3489   000FBE                     T2CLKCON        equ	4030	;# 
  3490   000FBE                     T2CLK           equ	4030	;# 
  3491   000FBF                     T2RST           equ	4031	;# 
  3492   000FC0                     TMR5            equ	4032	;# 
  3493   000FC0                     TMR5L           equ	4032	;# 
  3494   000FC1                     TMR5H           equ	4033	;# 
  3495   000FC2                     T5CON           equ	4034	;# 
  3496   000FC2                     TMR5CON         equ	4034	;# 
  3497   000FC3                     T5GCON          equ	4035	;# 
  3498   000FC3                     TMR5GCON        equ	4035	;# 
  3499   000FC4                     T5GATE          equ	4036	;# 
  3500   000FC4                     TMR5GATE        equ	4036	;# 
  3501   000FC5                     T5CLK           equ	4037	;# 
  3502   000FC5                     TMR5CLK         equ	4037	;# 
  3503   000FC5                     PR5             equ	4037	;# 
  3504   000FC6                     TMR3            equ	4038	;# 
  3505   000FC6                     TMR3L           equ	4038	;# 
  3506   000FC7                     TMR3H           equ	4039	;# 
  3507   000FC8                     T3CON           equ	4040	;# 
  3508   000FC8                     TMR3CON         equ	4040	;# 
  3509   000FC9                     T3GCON          equ	4041	;# 
  3510   000FC9                     TMR3GCON        equ	4041	;# 
  3511   000FCA                     T3GATE          equ	4042	;# 
  3512   000FCA                     TMR3GATE        equ	4042	;# 
  3513   000FCB                     T3CLK           equ	4043	;# 
  3514   000FCB                     TMR3CLK         equ	4043	;# 
  3515   000FCB                     PR3             equ	4043	;# 
  3516   000FCC                     TMR1            equ	4044	;# 
  3517   000FCC                     TMR1L           equ	4044	;# 
  3518   000FCD                     TMR1H           equ	4045	;# 
  3519   000FCE                     T1CON           equ	4046	;# 
  3520   000FCE                     TMR1CON         equ	4046	;# 
  3521   000FCF                     T1GCON          equ	4047	;# 
  3522   000FCF                     TMR1GCON        equ	4047	;# 
  3523   000FD0                     T1GATE          equ	4048	;# 
  3524   000FD0                     TMR1GATE        equ	4048	;# 
  3525   000FD1                     T1CLK           equ	4049	;# 
  3526   000FD1                     TMR1CLK         equ	4049	;# 
  3527   000FD1                     PR1             equ	4049	;# 
  3528   000FD2                     TMR0L           equ	4050	;# 
  3529   000FD2                     TMR0            equ	4050	;# 
  3530   000FD3                     TMR0H           equ	4051	;# 
  3531   000FD3                     PR0             equ	4051	;# 
  3532   000FD4                     T0CON0          equ	4052	;# 
  3533   000FD5                     T0CON1          equ	4053	;# 
  3534   000FD6                     PCON1           equ	4054	;# 
  3535   000FD7                     PCON0           equ	4055	;# 
  3536   000FD8                     STATUS          equ	4056	;# 
  3537   000FD9                     FSR2            equ	4057	;# 
  3538   000FD9                     FSR2L           equ	4057	;# 
  3539   000FDA                     FSR2H           equ	4058	;# 
  3540   000FDB                     PLUSW2          equ	4059	;# 
  3541   000FDC                     PREINC2         equ	4060	;# 
  3542   000FDD                     POSTDEC2        equ	4061	;# 
  3543   000FDE                     POSTINC2        equ	4062	;# 
  3544   000FDF                     INDF2           equ	4063	;# 
  3545   000FE0                     BSR             equ	4064	;# 
  3546   000FE1                     FSR1            equ	4065	;# 
  3547   000FE1                     FSR1L           equ	4065	;# 
  3548   000FE2                     FSR1H           equ	4066	;# 
  3549   000FE3                     PLUSW1          equ	4067	;# 
  3550   000FE4                     PREINC1         equ	4068	;# 
  3551   000FE5                     POSTDEC1        equ	4069	;# 
  3552   000FE6                     POSTINC1        equ	4070	;# 
  3553   000FE7                     INDF1           equ	4071	;# 
  3554   000FE8                     WREG            equ	4072	;# 
  3555   000FE9                     FSR0            equ	4073	;# 
  3556   000FE9                     FSR0L           equ	4073	;# 
  3557   000FEA                     FSR0H           equ	4074	;# 
  3558   000FEB                     PLUSW0          equ	4075	;# 
  3559   000FEC                     PREINC0         equ	4076	;# 
  3560   000FED                     POSTDEC0        equ	4077	;# 
  3561   000FEE                     POSTINC0        equ	4078	;# 
  3562   000FEF                     INDF0           equ	4079	;# 
  3563   000FF2                     INTCON          equ	4082	;# 
  3564   000FF3                     PROD            equ	4083	;# 
  3565   000FF3                     PRODL           equ	4083	;# 
  3566   000FF4                     PRODH           equ	4084	;# 
  3567   000FF5                     TABLAT          equ	4085	;# 
  3568   000FF6                     TBLPTR          equ	4086	;# 
  3569   000FF6                     TBLPTRL         equ	4086	;# 
  3570   000FF7                     TBLPTRH         equ	4087	;# 
  3571   000FF8                     TBLPTRU         equ	4088	;# 
  3572   000FF9                     PCLAT           equ	4089	;# 
  3573   000FF9                     PC              equ	4089	;# 
  3574   000FF9                     PCL             equ	4089	;# 
  3575   000FFA                     PCLATH          equ	4090	;# 
  3576   000FFB                     PCLATU          equ	4091	;# 
  3577   000FFC                     STKPTR          equ	4092	;# 
  3578   000FFD                     TOS             equ	4093	;# 
  3579   000FFD                     TOSL            equ	4093	;# 
  3580   000FFE                     TOSH            equ	4094	;# 
  3581   000FFF                     TOSU            equ	4095	;# 
  3582   000E9B                     PPSLOCK         equ	3739	;# 
  3583   000E9C                     INT0PPS         equ	3740	;# 
  3584   000E9D                     INT1PPS         equ	3741	;# 
  3585   000E9E                     INT2PPS         equ	3742	;# 
  3586   000E9F                     T0CKIPPS        equ	3743	;# 
  3587   000EA0                     T1CKIPPS        equ	3744	;# 
  3588   000EA1                     T1GPPS          equ	3745	;# 
  3589   000EA2                     T3CKIPPS        equ	3746	;# 
  3590   000EA3                     T3GPPS          equ	3747	;# 
  3591   000EA4                     T5CKIPPS        equ	3748	;# 
  3592   000EA5                     T5GPPS          equ	3749	;# 
  3593   000EA6                     T2INPPS         equ	3750	;# 
  3594   000EA7                     T4INPPS         equ	3751	;# 
  3595   000EA8                     T6INPPS         equ	3752	;# 
  3596   000EA9                     ADACTPPS        equ	3753	;# 
  3597   000EAA                     CCP1PPS         equ	3754	;# 
  3598   000EAB                     CCP2PPS         equ	3755	;# 
  3599   000EAC                     CWG1PPS         equ	3756	;# 
  3600   000EAC                     CWGPPS          equ	3756	;# 
  3601   000EAC                     CWGINPPS        equ	3756	;# 
  3602   000EAC                     CWG1INPPS       equ	3756	;# 
  3603   000EAD                     MDCARLPPS       equ	3757	;# 
  3604   000EAE                     MDCARHPPS       equ	3758	;# 
  3605   000EAF                     MDSRCPPS        equ	3759	;# 
  3606   000EB0                     RX1PPS          equ	3760	;# 
  3607   000EB0                     RXPPS           equ	3760	;# 
  3608   000EB0                     RXDT1PPS        equ	3760	;# 
  3609   000EB1                     CK1PPS          equ	3761	;# 
  3610   000EB1                     TXPPS           equ	3761	;# 
  3611   000EB1                     CKPPS           equ	3761	;# 
  3612   000EB1                     TXCK1PPS        equ	3761	;# 
  3613   000EB1                     TX1PPS          equ	3761	;# 
  3614   000EB2                     SSP1CLKPPS      equ	3762	;# 
  3615   000EB2                     SSPCLKPPS       equ	3762	;# 
  3616   000EB3                     SSP1DATPPS      equ	3763	;# 
  3617   000EB3                     SSPDATPPS       equ	3763	;# 
  3618   000EB4                     SSP1SSPPS       equ	3764	;# 
  3619   000EB4                     SSPSSPPS        equ	3764	;# 
  3620   000EB5                     IPR0            equ	3765	;# 
  3621   000EB6                     IPR1            equ	3766	;# 
  3622   000EB7                     IPR2            equ	3767	;# 
  3623   000EB8                     IPR3            equ	3768	;# 
  3624   000EB9                     IPR4            equ	3769	;# 
  3625   000EBA                     IPR5            equ	3770	;# 
  3626   000EBB                     IPR6            equ	3771	;# 
  3627   000EBC                     IPR7            equ	3772	;# 
  3628   000EBD                     PIE0            equ	3773	;# 
  3629   000EBE                     PIE1            equ	3774	;# 
  3630   000EBF                     PIE2            equ	3775	;# 
  3631   000EC0                     PIE3            equ	3776	;# 
  3632   000EC1                     PIE4            equ	3777	;# 
  3633   000EC2                     PIE5            equ	3778	;# 
  3634   000EC3                     PIE6            equ	3779	;# 
  3635   000EC4                     PIE7            equ	3780	;# 
  3636   000EC5                     PIR0            equ	3781	;# 
  3637   000EC6                     PIR1            equ	3782	;# 
  3638   000EC7                     PIR2            equ	3783	;# 
  3639   000EC8                     PIR3            equ	3784	;# 
  3640   000EC9                     PIR4            equ	3785	;# 
  3641   000ECA                     PIR5            equ	3786	;# 
  3642   000ECB                     PIR6            equ	3787	;# 
  3643   000ECC                     PIR7            equ	3788	;# 
  3644   000ECD                     WDTCON0         equ	3789	;# 
  3645   000ECE                     WDTCON1         equ	3790	;# 
  3646   000ECF                     WDTPSL          equ	3791	;# 
  3647   000ED0                     WDTPSH          equ	3792	;# 
  3648   000ED1                     WDTTMR          equ	3793	;# 
  3649   000ED2                     CPUDOZE         equ	3794	;# 
  3650   000ED3                     OSCCON1         equ	3795	;# 
  3651   000ED4                     OSCCON2         equ	3796	;# 
  3652   000ED5                     OSCCON3         equ	3797	;# 
  3653   000ED6                     OSCSTAT         equ	3798	;# 
  3654   000ED6                     OSCSTAT1        equ	3798	;# 
  3655   000ED7                     OSCEN           equ	3799	;# 
  3656   000ED8                     OSCTUNE         equ	3800	;# 
  3657   000ED9                     OSCFRQ          equ	3801	;# 
  3658   000ED9                     OSCFREQ         equ	3801	;# 
  3659   000EDA                     VREGCON         equ	3802	;# 
  3660   000EDB                     BORCON          equ	3803	;# 
  3661   000EDC                     PMD0            equ	3804	;# 
  3662   000EDD                     PMD1            equ	3805	;# 
  3663   000EDE                     PMD2            equ	3806	;# 
  3664   000EDF                     PMD3            equ	3807	;# 
  3665   000EE0                     PMD4            equ	3808	;# 
  3666   000EE1                     PMD5            equ	3809	;# 
  3667   000EE2                     RA0PPS          equ	3810	;# 
  3668   000EE3                     RA1PPS          equ	3811	;# 
  3669   000EE4                     RA2PPS          equ	3812	;# 
  3670   000EE5                     RA3PPS          equ	3813	;# 
  3671   000EE6                     RA4PPS          equ	3814	;# 
  3672   000EE7                     RA5PPS          equ	3815	;# 
  3673   000EE8                     RA6PPS          equ	3816	;# 
  3674   000EE9                     RA7PPS          equ	3817	;# 
  3675   000EEA                     RB0PPS          equ	3818	;# 
  3676   000EEB                     RB1PPS          equ	3819	;# 
  3677   000EEC                     RB2PPS          equ	3820	;# 
  3678   000EED                     RB3PPS          equ	3821	;# 
  3679   000EEE                     RB4PPS          equ	3822	;# 
  3680   000EEF                     RB5PPS          equ	3823	;# 
  3681   000EF0                     RB6PPS          equ	3824	;# 
  3682   000EF1                     RB7PPS          equ	3825	;# 
  3683   000EF2                     RC0PPS          equ	3826	;# 
  3684   000EF3                     RC1PPS          equ	3827	;# 
  3685   000EF4                     RC2PPS          equ	3828	;# 
  3686   000EF5                     RC3PPS          equ	3829	;# 
  3687   000EF6                     RC4PPS          equ	3830	;# 
  3688   000EF7                     RC5PPS          equ	3831	;# 
  3689   000EF8                     RC6PPS          equ	3832	;# 
  3690   000EF9                     RC7PPS          equ	3833	;# 
  3691   000F05                     IOCAF           equ	3845	;# 
  3692   000F06                     IOCAN           equ	3846	;# 
  3693   000F07                     IOCAP           equ	3847	;# 
  3694   000F08                     INLVLA          equ	3848	;# 
  3695   000F09                     SLRCONA         equ	3849	;# 
  3696   000F0A                     ODCONA          equ	3850	;# 
  3697   000F0B                     WPUA            equ	3851	;# 
  3698   000F0C                     ANSELA          equ	3852	;# 
  3699   000F0D                     IOCBF           equ	3853	;# 
  3700   000F0E                     IOCBN           equ	3854	;# 
  3701   000F0F                     IOCBP           equ	3855	;# 
  3702   000F10                     INLVLB          equ	3856	;# 
  3703   000F11                     SLRCONB         equ	3857	;# 
  3704   000F12                     ODCONB          equ	3858	;# 
  3705   000F13                     WPUB            equ	3859	;# 
  3706   000F14                     ANSELB          equ	3860	;# 
  3707   000F15                     IOCCF           equ	3861	;# 
  3708   000F16                     IOCCN           equ	3862	;# 
  3709   000F17                     IOCCP           equ	3863	;# 
  3710   000F18                     INLVLC          equ	3864	;# 
  3711   000F19                     SLRCONC         equ	3865	;# 
  3712   000F1A                     ODCONC          equ	3866	;# 
  3713   000F1B                     WPUC            equ	3867	;# 
  3714   000F1C                     ANSELC          equ	3868	;# 
  3715   000F22                     IOCEF           equ	3874	;# 
  3716   000F23                     IOCEN           equ	3875	;# 
  3717   000F24                     IOCEP           equ	3876	;# 
  3718   000F25                     INLVLE          equ	3877	;# 
  3719   000F28                     WPUE            equ	3880	;# 
  3720   000F2A                     HLVDCON0        equ	3882	;# 
  3721   000F2B                     HLVDCON1        equ	3883	;# 
  3722   000F2C                     FVRCON          equ	3884	;# 
  3723   000F2D                     ZCDCON          equ	3885	;# 
  3724   000F2E                     DAC1CON0        equ	3886	;# 
  3725   000F2F                     DAC1CON1        equ	3887	;# 
  3726   000F30                     CM2CON0         equ	3888	;# 
  3727   000F31                     CM2CON1         equ	3889	;# 
  3728   000F32                     CM2NCH          equ	3890	;# 
  3729   000F33                     CM2PCH          equ	3891	;# 
  3730   000F34                     CM1CON0         equ	3892	;# 
  3731   000F35                     CM1CON1         equ	3893	;# 
  3732   000F36                     CM1NCH          equ	3894	;# 
  3733   000F37                     CM1PCH          equ	3895	;# 
  3734   000F38                     CMOUT           equ	3896	;# 
  3735   000F39                     CLKRCON         equ	3897	;# 
  3736   000F3A                     CLKRCLK         equ	3898	;# 
  3737   000F3B                     CWG1CLK         equ	3899	;# 
  3738   000F3B                     CWG1CLKCON      equ	3899	;# 
  3739   000F3C                     CWG1ISM         equ	3900	;# 
  3740   000F3D                     CWG1DBR         equ	3901	;# 
  3741   000F3E                     CWG1DBF         equ	3902	;# 
  3742   000F3F                     CWG1CON0        equ	3903	;# 
  3743   000F40                     CWG1CON1        equ	3904	;# 
  3744   000F41                     CWG1AS0         equ	3905	;# 
  3745   000F42                     CWG1AS1         equ	3906	;# 
  3746   000F43                     CWG1STR         equ	3907	;# 
  3747   000F44                     SCANLADR        equ	3908	;# 
  3748   000F44                     SCANLADRL       equ	3908	;# 
  3749   000F45                     SCANLADRH       equ	3909	;# 
  3750   000F46                     SCANLADRU       equ	3910	;# 
  3751   000F47                     SCANHADR        equ	3911	;# 
  3752   000F47                     SCANHADRL       equ	3911	;# 
  3753   000F48                     SCANHADRH       equ	3912	;# 
  3754   000F49                     SCANHADRU       equ	3913	;# 
  3755   000F4A                     SCANCON0        equ	3914	;# 
  3756   000F4B                     SCANTRIG        equ	3915	;# 
  3757   000F4C                     MDCON0          equ	3916	;# 
  3758   000F4D                     MDCON1          equ	3917	;# 
  3759   000F4E                     MDSRC           equ	3918	;# 
  3760   000F4F                     MDCARL          equ	3919	;# 
  3761   000F50                     MDCARH          equ	3920	;# 
  3762   000F51                     ADACT           equ	3921	;# 
  3763   000F52                     ADCLK           equ	3922	;# 
  3764   000F53                     ADREF           equ	3923	;# 
  3765   000F54                     ADCON1          equ	3924	;# 
  3766   000F55                     ADCON2          equ	3925	;# 
  3767   000F56                     ADCON3          equ	3926	;# 
  3768   000F57                     ADACQ           equ	3927	;# 
  3769   000F58                     ADCAP           equ	3928	;# 
  3770   000F59                     ADPRE           equ	3929	;# 
  3771   000F5A                     ADPCH           equ	3930	;# 
  3772   000F5B                     ADCON0          equ	3931	;# 
  3773   000F5C                     ADPREV          equ	3932	;# 
  3774   000F5C                     ADPREVL         equ	3932	;# 
  3775   000F5D                     ADPREVH         equ	3933	;# 
  3776   000F5E                     ADRES           equ	3934	;# 
  3777   000F5E                     ADRESL          equ	3934	;# 
  3778   000F5F                     ADRESH          equ	3935	;# 
  3779   000F60                     ADSTAT          equ	3936	;# 
  3780   000F61                     ADRPT           equ	3937	;# 
  3781   000F62                     ADCNT           equ	3938	;# 
  3782   000F63                     ADSTPT          equ	3939	;# 
  3783   000F63                     ADSTPTL         equ	3939	;# 
  3784   000F64                     ADSTPTH         equ	3940	;# 
  3785   000F65                     ADLTH           equ	3941	;# 
  3786   000F65                     ADLTHL          equ	3941	;# 
  3787   000F66                     ADLTHH          equ	3942	;# 
  3788   000F67                     ADUTH           equ	3943	;# 
  3789   000F67                     ADUTHL          equ	3943	;# 
  3790   000F68                     ADUTHH          equ	3944	;# 
  3791   000F69                     ADERR           equ	3945	;# 
  3792   000F69                     ADERRL          equ	3945	;# 
  3793   000F6A                     ADERRH          equ	3946	;# 
  3794   000F6B                     ADACC           equ	3947	;# 
  3795   000F6B                     ADACCL          equ	3947	;# 
  3796   000F6C                     ADACCH          equ	3948	;# 
  3797   000F6D                     ADFLTR          equ	3949	;# 
  3798   000F6D                     ADFLTRL         equ	3949	;# 
  3799   000F6E                     ADFLTRH         equ	3950	;# 
  3800   000F6F                     CRCDATA         equ	3951	;# 
  3801   000F6F                     CRCDATL         equ	3951	;# 
  3802   000F70                     CRCDATH         equ	3952	;# 
  3803   000F71                     CRCACC          equ	3953	;# 
  3804   000F71                     CRCACCL         equ	3953	;# 
  3805   000F72                     CRCACCH         equ	3954	;# 
  3806   000F73                     CRCSHFT         equ	3955	;# 
  3807   000F73                     CRCSHIFTL       equ	3955	;# 
  3808   000F74                     CRCSHIFTH       equ	3956	;# 
  3809   000F75                     CRCXOR          equ	3957	;# 
  3810   000F75                     CRCXORL         equ	3957	;# 
  3811   000F76                     CRCXORH         equ	3958	;# 
  3812   000F77                     CRCCON0         equ	3959	;# 
  3813   000F78                     CRCCON1         equ	3960	;# 
  3814   000F79                     NVMADR          equ	3961	;# 
  3815   000F79                     NVMADRL         equ	3961	;# 
  3816   000F7A                     NVMADRH         equ	3962	;# 
  3817   000F7B                     NVMADRU         equ	3963	;# 
  3818   000F7C                     NVMDAT          equ	3964	;# 
  3819   000F7C                     NVMDATL         equ	3964	;# 
  3820   000F7D                     NVMDATH         equ	3965	;# 
  3821   000F7F                     NVMCON0         equ	3967	;# 
  3822   000F80                     NVMCON1         equ	3968	;# 
  3823   000F81                     NVMCON2         equ	3969	;# 
  3824   000F82                     LATA            equ	3970	;# 
  3825   000F83                     LATB            equ	3971	;# 
  3826   000F84                     LATC            equ	3972	;# 
  3827   000F87                     TRISA           equ	3975	;# 
  3828   000F87                     DDRA            equ	3975	;# 
  3829   000F88                     TRISB           equ	3976	;# 
  3830   000F88                     DDRB            equ	3976	;# 
  3831   000F89                     TRISC           equ	3977	;# 
  3832   000F89                     DDRC            equ	3977	;# 
  3833   000F8C                     PORTA           equ	3980	;# 
  3834   000F8D                     PORTB           equ	3981	;# 
  3835   000F8E                     PORTC           equ	3982	;# 
  3836   000F90                     PORTE           equ	3984	;# 
  3837   000F91                     SSP1BUF         equ	3985	;# 
  3838   000F92                     SSP1ADD         equ	3986	;# 
  3839   000F93                     SSP1MSK         equ	3987	;# 
  3840   000F94                     SSP1STAT        equ	3988	;# 
  3841   000F95                     SSP1CON1        equ	3989	;# 
  3842   000F96                     SSP1CON2        equ	3990	;# 
  3843   000F97                     SSP1CON3        equ	3991	;# 
  3844   000F98                     RC1REG          equ	3992	;# 
  3845   000F98                     RCREG           equ	3992	;# 
  3846   000F98                     RCREG1          equ	3992	;# 
  3847   000F99                     TX1REG          equ	3993	;# 
  3848   000F99                     TXREG1          equ	3993	;# 
  3849   000F99                     TXREG           equ	3993	;# 
  3850   000F9A                     SP1BRG          equ	3994	;# 
  3851   000F9A                     SPBRG           equ	3994	;# 
  3852   000F9A                     SP1BRGL         equ	3994	;# 
  3853   000F9A                     SPBRG1          equ	3994	;# 
  3854   000F9A                     SPBRGL          equ	3994	;# 
  3855   000F9B                     SP1BRGH         equ	3995	;# 
  3856   000F9B                     SPBRGH          equ	3995	;# 
  3857   000F9B                     SPBRGH1         equ	3995	;# 
  3858   000F9C                     RC1STA          equ	3996	;# 
  3859   000F9C                     RCSTA1          equ	3996	;# 
  3860   000F9C                     RCSTA           equ	3996	;# 
  3861   000F9D                     TX1STA          equ	3997	;# 
  3862   000F9D                     TXSTA1          equ	3997	;# 
  3863   000F9D                     TXSTA           equ	3997	;# 
  3864   000F9E                     BAUD1CON        equ	3998	;# 
  3865   000F9E                     BAUDCON1        equ	3998	;# 
  3866   000F9E                     BAUDCTL1        equ	3998	;# 
  3867   000F9E                     BAUDCON         equ	3998	;# 
  3868   000F9E                     BAUDCTL         equ	3998	;# 
  3869   000F9F                     PWM4DC          equ	3999	;# 
  3870   000F9F                     PWM4DCL         equ	3999	;# 
  3871   000FA0                     PWM4DCH         equ	4000	;# 
  3872   000FA1                     PWM4CON         equ	4001	;# 
  3873   000FA2                     PWM3DC          equ	4002	;# 
  3874   000FA2                     PWM3DCL         equ	4002	;# 
  3875   000FA3                     PWM3DCH         equ	4003	;# 
  3876   000FA4                     PWM3CON         equ	4004	;# 
  3877   000FA5                     CCPR2           equ	4005	;# 
  3878   000FA5                     CCPR2L          equ	4005	;# 
  3879   000FA6                     CCPR2H          equ	4006	;# 
  3880   000FA7                     CCP2CON         equ	4007	;# 
  3881   000FA8                     CCP2CAP         equ	4008	;# 
  3882   000FA9                     CCPR1           equ	4009	;# 
  3883   000FA9                     CCPR1L          equ	4009	;# 
  3884   000FAA                     CCPR1H          equ	4010	;# 
  3885   000FAB                     CCP1CON         equ	4011	;# 
  3886   000FAC                     CCP1CAP         equ	4012	;# 
  3887   000FAD                     CCPTMRS         equ	4013	;# 
  3888   000FAE                     T6TMR           equ	4014	;# 
  3889   000FAE                     TMR6            equ	4014	;# 
  3890   000FAF                     T6PR            equ	4015	;# 
  3891   000FAF                     PR6             equ	4015	;# 
  3892   000FB0                     T6CON           equ	4016	;# 
  3893   000FB1                     T6HLT           equ	4017	;# 
  3894   000FB2                     T6CLKCON        equ	4018	;# 
  3895   000FB2                     T6CLK           equ	4018	;# 
  3896   000FB3                     T6RST           equ	4019	;# 
  3897   000FB4                     T4TMR           equ	4020	;# 
  3898   000FB4                     TMR4            equ	4020	;# 
  3899   000FB5                     T4PR            equ	4021	;# 
  3900   000FB5                     PR4             equ	4021	;# 
  3901   000FB6                     T4CON           equ	4022	;# 
  3902   000FB7                     T4HLT           equ	4023	;# 
  3903   000FB8                     T4CLKCON        equ	4024	;# 
  3904   000FB8                     T4CLK           equ	4024	;# 
  3905   000FB9                     T4RST           equ	4025	;# 
  3906   000FBA                     T2TMR           equ	4026	;# 
  3907   000FBA                     TMR2            equ	4026	;# 
  3908   000FBB                     T2PR            equ	4027	;# 
  3909   000FBB                     PR2             equ	4027	;# 
  3910   000FBC                     T2CON           equ	4028	;# 
  3911   000FBD                     T2HLT           equ	4029	;# 
  3912   000FBE                     T2CLKCON        equ	4030	;# 
  3913   000FBE                     T2CLK           equ	4030	;# 
  3914   000FBF                     T2RST           equ	4031	;# 
  3915   000FC0                     TMR5            equ	4032	;# 
  3916   000FC0                     TMR5L           equ	4032	;# 
  3917   000FC1                     TMR5H           equ	4033	;# 
  3918   000FC2                     T5CON           equ	4034	;# 
  3919   000FC2                     TMR5CON         equ	4034	;# 
  3920   000FC3                     T5GCON          equ	4035	;# 
  3921   000FC3                     TMR5GCON        equ	4035	;# 
  3922   000FC4                     T5GATE          equ	4036	;# 
  3923   000FC4                     TMR5GATE        equ	4036	;# 
  3924   000FC5                     T5CLK           equ	4037	;# 
  3925   000FC5                     TMR5CLK         equ	4037	;# 
  3926   000FC5                     PR5             equ	4037	;# 
  3927   000FC6                     TMR3            equ	4038	;# 
  3928   000FC6                     TMR3L           equ	4038	;# 
  3929   000FC7                     TMR3H           equ	4039	;# 
  3930   000FC8                     T3CON           equ	4040	;# 
  3931   000FC8                     TMR3CON         equ	4040	;# 
  3932   000FC9                     T3GCON          equ	4041	;# 
  3933   000FC9                     TMR3GCON        equ	4041	;# 
  3934   000FCA                     T3GATE          equ	4042	;# 
  3935   000FCA                     TMR3GATE        equ	4042	;# 
  3936   000FCB                     T3CLK           equ	4043	;# 
  3937   000FCB                     TMR3CLK         equ	4043	;# 
  3938   000FCB                     PR3             equ	4043	;# 
  3939   000FCC                     TMR1            equ	4044	;# 
  3940   000FCC                     TMR1L           equ	4044	;# 
  3941   000FCD                     TMR1H           equ	4045	;# 
  3942   000FCE                     T1CON           equ	4046	;# 
  3943   000FCE                     TMR1CON         equ	4046	;# 
  3944   000FCF                     T1GCON          equ	4047	;# 
  3945   000FCF                     TMR1GCON        equ	4047	;# 
  3946   000FD0                     T1GATE          equ	4048	;# 
  3947   000FD0                     TMR1GATE        equ	4048	;# 
  3948   000FD1                     T1CLK           equ	4049	;# 
  3949   000FD1                     TMR1CLK         equ	4049	;# 
  3950   000FD1                     PR1             equ	4049	;# 
  3951   000FD2                     TMR0L           equ	4050	;# 
  3952   000FD2                     TMR0            equ	4050	;# 
  3953   000FD3                     TMR0H           equ	4051	;# 
  3954   000FD3                     PR0             equ	4051	;# 
  3955   000FD4                     T0CON0          equ	4052	;# 
  3956   000FD5                     T0CON1          equ	4053	;# 
  3957   000FD6                     PCON1           equ	4054	;# 
  3958   000FD7                     PCON0           equ	4055	;# 
  3959   000FD8                     STATUS          equ	4056	;# 
  3960   000FD9                     FSR2            equ	4057	;# 
  3961   000FD9                     FSR2L           equ	4057	;# 
  3962   000FDA                     FSR2H           equ	4058	;# 
  3963   000FDB                     PLUSW2          equ	4059	;# 
  3964   000FDC                     PREINC2         equ	4060	;# 
  3965   000FDD                     POSTDEC2        equ	4061	;# 
  3966   000FDE                     POSTINC2        equ	4062	;# 
  3967   000FDF                     INDF2           equ	4063	;# 
  3968   000FE0                     BSR             equ	4064	;# 
  3969   000FE1                     FSR1            equ	4065	;# 
  3970   000FE1                     FSR1L           equ	4065	;# 
  3971   000FE2                     FSR1H           equ	4066	;# 
  3972   000FE3                     PLUSW1          equ	4067	;# 
  3973   000FE4                     PREINC1         equ	4068	;# 
  3974   000FE5                     POSTDEC1        equ	4069	;# 
  3975   000FE6                     POSTINC1        equ	4070	;# 
  3976   000FE7                     INDF1           equ	4071	;# 
  3977   000FE8                     WREG            equ	4072	;# 
  3978   000FE9                     FSR0            equ	4073	;# 
  3979   000FE9                     FSR0L           equ	4073	;# 
  3980   000FEA                     FSR0H           equ	4074	;# 
  3981   000FEB                     PLUSW0          equ	4075	;# 
  3982   000FEC                     PREINC0         equ	4076	;# 
  3983   000FED                     POSTDEC0        equ	4077	;# 
  3984   000FEE                     POSTINC0        equ	4078	;# 
  3985   000FEF                     INDF0           equ	4079	;# 
  3986   000FF2                     INTCON          equ	4082	;# 
  3987   000FF3                     PROD            equ	4083	;# 
  3988   000FF3                     PRODL           equ	4083	;# 
  3989   000FF4                     PRODH           equ	4084	;# 
  3990   000FF5                     TABLAT          equ	4085	;# 
  3991   000FF6                     TBLPTR          equ	4086	;# 
  3992   000FF6                     TBLPTRL         equ	4086	;# 
  3993   000FF7                     TBLPTRH         equ	4087	;# 
  3994   000FF8                     TBLPTRU         equ	4088	;# 
  3995   000FF9                     PCLAT           equ	4089	;# 
  3996   000FF9                     PC              equ	4089	;# 
  3997   000FF9                     PCL             equ	4089	;# 
  3998   000FFA                     PCLATH          equ	4090	;# 
  3999   000FFB                     PCLATU          equ	4091	;# 
  4000   000FFC                     STKPTR          equ	4092	;# 
  4001   000FFD                     TOS             equ	4093	;# 
  4002   000FFD                     TOSL            equ	4093	;# 
  4003   000FFE                     TOSH            equ	4094	;# 
  4004   000FFF                     TOSU            equ	4095	;# 
  4005   000E9B                     PPSLOCK         equ	3739	;# 
  4006   000E9C                     INT0PPS         equ	3740	;# 
  4007   000E9D                     INT1PPS         equ	3741	;# 
  4008   000E9E                     INT2PPS         equ	3742	;# 
  4009   000E9F                     T0CKIPPS        equ	3743	;# 
  4010   000EA0                     T1CKIPPS        equ	3744	;# 
  4011   000EA1                     T1GPPS          equ	3745	;# 
  4012   000EA2                     T3CKIPPS        equ	3746	;# 
  4013   000EA3                     T3GPPS          equ	3747	;# 
  4014   000EA4                     T5CKIPPS        equ	3748	;# 
  4015   000EA5                     T5GPPS          equ	3749	;# 
  4016   000EA6                     T2INPPS         equ	3750	;# 
  4017   000EA7                     T4INPPS         equ	3751	;# 
  4018   000EA8                     T6INPPS         equ	3752	;# 
  4019   000EA9                     ADACTPPS        equ	3753	;# 
  4020   000EAA                     CCP1PPS         equ	3754	;# 
  4021   000EAB                     CCP2PPS         equ	3755	;# 
  4022   000EAC                     CWG1PPS         equ	3756	;# 
  4023   000EAC                     CWGPPS          equ	3756	;# 
  4024   000EAC                     CWGINPPS        equ	3756	;# 
  4025   000EAC                     CWG1INPPS       equ	3756	;# 
  4026   000EAD                     MDCARLPPS       equ	3757	;# 
  4027   000EAE                     MDCARHPPS       equ	3758	;# 
  4028   000EAF                     MDSRCPPS        equ	3759	;# 
  4029   000EB0                     RX1PPS          equ	3760	;# 
  4030   000EB0                     RXPPS           equ	3760	;# 
  4031   000EB0                     RXDT1PPS        equ	3760	;# 
  4032   000EB1                     CK1PPS          equ	3761	;# 
  4033   000EB1                     TXPPS           equ	3761	;# 
  4034   000EB1                     CKPPS           equ	3761	;# 
  4035   000EB1                     TXCK1PPS        equ	3761	;# 
  4036   000EB1                     TX1PPS          equ	3761	;# 
  4037   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4038   000EB2                     SSPCLKPPS       equ	3762	;# 
  4039   000EB3                     SSP1DATPPS      equ	3763	;# 
  4040   000EB3                     SSPDATPPS       equ	3763	;# 
  4041   000EB4                     SSP1SSPPS       equ	3764	;# 
  4042   000EB4                     SSPSSPPS        equ	3764	;# 
  4043   000EB5                     IPR0            equ	3765	;# 
  4044   000EB6                     IPR1            equ	3766	;# 
  4045   000EB7                     IPR2            equ	3767	;# 
  4046   000EB8                     IPR3            equ	3768	;# 
  4047   000EB9                     IPR4            equ	3769	;# 
  4048   000EBA                     IPR5            equ	3770	;# 
  4049   000EBB                     IPR6            equ	3771	;# 
  4050   000EBC                     IPR7            equ	3772	;# 
  4051   000EBD                     PIE0            equ	3773	;# 
  4052   000EBE                     PIE1            equ	3774	;# 
  4053   000EBF                     PIE2            equ	3775	;# 
  4054   000EC0                     PIE3            equ	3776	;# 
  4055   000EC1                     PIE4            equ	3777	;# 
  4056   000EC2                     PIE5            equ	3778	;# 
  4057   000EC3                     PIE6            equ	3779	;# 
  4058   000EC4                     PIE7            equ	3780	;# 
  4059   000EC5                     PIR0            equ	3781	;# 
  4060   000EC6                     PIR1            equ	3782	;# 
  4061   000EC7                     PIR2            equ	3783	;# 
  4062   000EC8                     PIR3            equ	3784	;# 
  4063   000EC9                     PIR4            equ	3785	;# 
  4064   000ECA                     PIR5            equ	3786	;# 
  4065   000ECB                     PIR6            equ	3787	;# 
  4066   000ECC                     PIR7            equ	3788	;# 
  4067   000ECD                     WDTCON0         equ	3789	;# 
  4068   000ECE                     WDTCON1         equ	3790	;# 
  4069   000ECF                     WDTPSL          equ	3791	;# 
  4070   000ED0                     WDTPSH          equ	3792	;# 
  4071   000ED1                     WDTTMR          equ	3793	;# 
  4072   000ED2                     CPUDOZE         equ	3794	;# 
  4073   000ED3                     OSCCON1         equ	3795	;# 
  4074   000ED4                     OSCCON2         equ	3796	;# 
  4075   000ED5                     OSCCON3         equ	3797	;# 
  4076   000ED6                     OSCSTAT         equ	3798	;# 
  4077   000ED6                     OSCSTAT1        equ	3798	;# 
  4078   000ED7                     OSCEN           equ	3799	;# 
  4079   000ED8                     OSCTUNE         equ	3800	;# 
  4080   000ED9                     OSCFRQ          equ	3801	;# 
  4081   000ED9                     OSCFREQ         equ	3801	;# 
  4082   000EDA                     VREGCON         equ	3802	;# 
  4083   000EDB                     BORCON          equ	3803	;# 
  4084   000EDC                     PMD0            equ	3804	;# 
  4085   000EDD                     PMD1            equ	3805	;# 
  4086   000EDE                     PMD2            equ	3806	;# 
  4087   000EDF                     PMD3            equ	3807	;# 
  4088   000EE0                     PMD4            equ	3808	;# 
  4089   000EE1                     PMD5            equ	3809	;# 
  4090   000EE2                     RA0PPS          equ	3810	;# 
  4091   000EE3                     RA1PPS          equ	3811	;# 
  4092   000EE4                     RA2PPS          equ	3812	;# 
  4093   000EE5                     RA3PPS          equ	3813	;# 
  4094   000EE6                     RA4PPS          equ	3814	;# 
  4095   000EE7                     RA5PPS          equ	3815	;# 
  4096   000EE8                     RA6PPS          equ	3816	;# 
  4097   000EE9                     RA7PPS          equ	3817	;# 
  4098   000EEA                     RB0PPS          equ	3818	;# 
  4099   000EEB                     RB1PPS          equ	3819	;# 
  4100   000EEC                     RB2PPS          equ	3820	;# 
  4101   000EED                     RB3PPS          equ	3821	;# 
  4102   000EEE                     RB4PPS          equ	3822	;# 
  4103   000EEF                     RB5PPS          equ	3823	;# 
  4104   000EF0                     RB6PPS          equ	3824	;# 
  4105   000EF1                     RB7PPS          equ	3825	;# 
  4106   000EF2                     RC0PPS          equ	3826	;# 
  4107   000EF3                     RC1PPS          equ	3827	;# 
  4108   000EF4                     RC2PPS          equ	3828	;# 
  4109   000EF5                     RC3PPS          equ	3829	;# 
  4110   000EF6                     RC4PPS          equ	3830	;# 
  4111   000EF7                     RC5PPS          equ	3831	;# 
  4112   000EF8                     RC6PPS          equ	3832	;# 
  4113   000EF9                     RC7PPS          equ	3833	;# 
  4114   000F05                     IOCAF           equ	3845	;# 
  4115   000F06                     IOCAN           equ	3846	;# 
  4116   000F07                     IOCAP           equ	3847	;# 
  4117   000F08                     INLVLA          equ	3848	;# 
  4118   000F09                     SLRCONA         equ	3849	;# 
  4119   000F0A                     ODCONA          equ	3850	;# 
  4120   000F0B                     WPUA            equ	3851	;# 
  4121   000F0C                     ANSELA          equ	3852	;# 
  4122   000F0D                     IOCBF           equ	3853	;# 
  4123   000F0E                     IOCBN           equ	3854	;# 
  4124   000F0F                     IOCBP           equ	3855	;# 
  4125   000F10                     INLVLB          equ	3856	;# 
  4126   000F11                     SLRCONB         equ	3857	;# 
  4127   000F12                     ODCONB          equ	3858	;# 
  4128   000F13                     WPUB            equ	3859	;# 
  4129   000F14                     ANSELB          equ	3860	;# 
  4130   000F15                     IOCCF           equ	3861	;# 
  4131   000F16                     IOCCN           equ	3862	;# 
  4132   000F17                     IOCCP           equ	3863	;# 
  4133   000F18                     INLVLC          equ	3864	;# 
  4134   000F19                     SLRCONC         equ	3865	;# 
  4135   000F1A                     ODCONC          equ	3866	;# 
  4136   000F1B                     WPUC            equ	3867	;# 
  4137   000F1C                     ANSELC          equ	3868	;# 
  4138   000F22                     IOCEF           equ	3874	;# 
  4139   000F23                     IOCEN           equ	3875	;# 
  4140   000F24                     IOCEP           equ	3876	;# 
  4141   000F25                     INLVLE          equ	3877	;# 
  4142   000F28                     WPUE            equ	3880	;# 
  4143   000F2A                     HLVDCON0        equ	3882	;# 
  4144   000F2B                     HLVDCON1        equ	3883	;# 
  4145   000F2C                     FVRCON          equ	3884	;# 
  4146   000F2D                     ZCDCON          equ	3885	;# 
  4147   000F2E                     DAC1CON0        equ	3886	;# 
  4148   000F2F                     DAC1CON1        equ	3887	;# 
  4149   000F30                     CM2CON0         equ	3888	;# 
  4150   000F31                     CM2CON1         equ	3889	;# 
  4151   000F32                     CM2NCH          equ	3890	;# 
  4152   000F33                     CM2PCH          equ	3891	;# 
  4153   000F34                     CM1CON0         equ	3892	;# 
  4154   000F35                     CM1CON1         equ	3893	;# 
  4155   000F36                     CM1NCH          equ	3894	;# 
  4156   000F37                     CM1PCH          equ	3895	;# 
  4157   000F38                     CMOUT           equ	3896	;# 
  4158   000F39                     CLKRCON         equ	3897	;# 
  4159   000F3A                     CLKRCLK         equ	3898	;# 
  4160   000F3B                     CWG1CLK         equ	3899	;# 
  4161   000F3B                     CWG1CLKCON      equ	3899	;# 
  4162   000F3C                     CWG1ISM         equ	3900	;# 
  4163   000F3D                     CWG1DBR         equ	3901	;# 
  4164   000F3E                     CWG1DBF         equ	3902	;# 
  4165   000F3F                     CWG1CON0        equ	3903	;# 
  4166   000F40                     CWG1CON1        equ	3904	;# 
  4167   000F41                     CWG1AS0         equ	3905	;# 
  4168   000F42                     CWG1AS1         equ	3906	;# 
  4169   000F43                     CWG1STR         equ	3907	;# 
  4170   000F44                     SCANLADR        equ	3908	;# 
  4171   000F44                     SCANLADRL       equ	3908	;# 
  4172   000F45                     SCANLADRH       equ	3909	;# 
  4173   000F46                     SCANLADRU       equ	3910	;# 
  4174   000F47                     SCANHADR        equ	3911	;# 
  4175   000F47                     SCANHADRL       equ	3911	;# 
  4176   000F48                     SCANHADRH       equ	3912	;# 
  4177   000F49                     SCANHADRU       equ	3913	;# 
  4178   000F4A                     SCANCON0        equ	3914	;# 
  4179   000F4B                     SCANTRIG        equ	3915	;# 
  4180   000F4C                     MDCON0          equ	3916	;# 
  4181   000F4D                     MDCON1          equ	3917	;# 
  4182   000F4E                     MDSRC           equ	3918	;# 
  4183   000F4F                     MDCARL          equ	3919	;# 
  4184   000F50                     MDCARH          equ	3920	;# 
  4185   000F51                     ADACT           equ	3921	;# 
  4186   000F52                     ADCLK           equ	3922	;# 
  4187   000F53                     ADREF           equ	3923	;# 
  4188   000F54                     ADCON1          equ	3924	;# 
  4189   000F55                     ADCON2          equ	3925	;# 
  4190   000F56                     ADCON3          equ	3926	;# 
  4191   000F57                     ADACQ           equ	3927	;# 
  4192   000F58                     ADCAP           equ	3928	;# 
  4193   000F59                     ADPRE           equ	3929	;# 
  4194   000F5A                     ADPCH           equ	3930	;# 
  4195   000F5B                     ADCON0          equ	3931	;# 
  4196   000F5C                     ADPREV          equ	3932	;# 
  4197   000F5C                     ADPREVL         equ	3932	;# 
  4198   000F5D                     ADPREVH         equ	3933	;# 
  4199   000F5E                     ADRES           equ	3934	;# 
  4200   000F5E                     ADRESL          equ	3934	;# 
  4201   000F5F                     ADRESH          equ	3935	;# 
  4202   000F60                     ADSTAT          equ	3936	;# 
  4203   000F61                     ADRPT           equ	3937	;# 
  4204   000F62                     ADCNT           equ	3938	;# 
  4205   000F63                     ADSTPT          equ	3939	;# 
  4206   000F63                     ADSTPTL         equ	3939	;# 
  4207   000F64                     ADSTPTH         equ	3940	;# 
  4208   000F65                     ADLTH           equ	3941	;# 
  4209   000F65                     ADLTHL          equ	3941	;# 
  4210   000F66                     ADLTHH          equ	3942	;# 
  4211   000F67                     ADUTH           equ	3943	;# 
  4212   000F67                     ADUTHL          equ	3943	;# 
  4213   000F68                     ADUTHH          equ	3944	;# 
  4214   000F69                     ADERR           equ	3945	;# 
  4215   000F69                     ADERRL          equ	3945	;# 
  4216   000F6A                     ADERRH          equ	3946	;# 
  4217   000F6B                     ADACC           equ	3947	;# 
  4218   000F6B                     ADACCL          equ	3947	;# 
  4219   000F6C                     ADACCH          equ	3948	;# 
  4220   000F6D                     ADFLTR          equ	3949	;# 
  4221   000F6D                     ADFLTRL         equ	3949	;# 
  4222   000F6E                     ADFLTRH         equ	3950	;# 
  4223   000F6F                     CRCDATA         equ	3951	;# 
  4224   000F6F                     CRCDATL         equ	3951	;# 
  4225   000F70                     CRCDATH         equ	3952	;# 
  4226   000F71                     CRCACC          equ	3953	;# 
  4227   000F71                     CRCACCL         equ	3953	;# 
  4228   000F72                     CRCACCH         equ	3954	;# 
  4229   000F73                     CRCSHFT         equ	3955	;# 
  4230   000F73                     CRCSHIFTL       equ	3955	;# 
  4231   000F74                     CRCSHIFTH       equ	3956	;# 
  4232   000F75                     CRCXOR          equ	3957	;# 
  4233   000F75                     CRCXORL         equ	3957	;# 
  4234   000F76                     CRCXORH         equ	3958	;# 
  4235   000F77                     CRCCON0         equ	3959	;# 
  4236   000F78                     CRCCON1         equ	3960	;# 
  4237   000F79                     NVMADR          equ	3961	;# 
  4238   000F79                     NVMADRL         equ	3961	;# 
  4239   000F7A                     NVMADRH         equ	3962	;# 
  4240   000F7B                     NVMADRU         equ	3963	;# 
  4241   000F7C                     NVMDAT          equ	3964	;# 
  4242   000F7C                     NVMDATL         equ	3964	;# 
  4243   000F7D                     NVMDATH         equ	3965	;# 
  4244   000F7F                     NVMCON0         equ	3967	;# 
  4245   000F80                     NVMCON1         equ	3968	;# 
  4246   000F81                     NVMCON2         equ	3969	;# 
  4247   000F82                     LATA            equ	3970	;# 
  4248   000F83                     LATB            equ	3971	;# 
  4249   000F84                     LATC            equ	3972	;# 
  4250   000F87                     TRISA           equ	3975	;# 
  4251   000F87                     DDRA            equ	3975	;# 
  4252   000F88                     TRISB           equ	3976	;# 
  4253   000F88                     DDRB            equ	3976	;# 
  4254   000F89                     TRISC           equ	3977	;# 
  4255   000F89                     DDRC            equ	3977	;# 
  4256   000F8C                     PORTA           equ	3980	;# 
  4257   000F8D                     PORTB           equ	3981	;# 
  4258   000F8E                     PORTC           equ	3982	;# 
  4259   000F90                     PORTE           equ	3984	;# 
  4260   000F91                     SSP1BUF         equ	3985	;# 
  4261   000F92                     SSP1ADD         equ	3986	;# 
  4262   000F93                     SSP1MSK         equ	3987	;# 
  4263   000F94                     SSP1STAT        equ	3988	;# 
  4264   000F95                     SSP1CON1        equ	3989	;# 
  4265   000F96                     SSP1CON2        equ	3990	;# 
  4266   000F97                     SSP1CON3        equ	3991	;# 
  4267   000F98                     RC1REG          equ	3992	;# 
  4268   000F98                     RCREG           equ	3992	;# 
  4269   000F98                     RCREG1          equ	3992	;# 
  4270   000F99                     TX1REG          equ	3993	;# 
  4271   000F99                     TXREG1          equ	3993	;# 
  4272   000F99                     TXREG           equ	3993	;# 
  4273   000F9A                     SP1BRG          equ	3994	;# 
  4274   000F9A                     SPBRG           equ	3994	;# 
  4275   000F9A                     SP1BRGL         equ	3994	;# 
  4276   000F9A                     SPBRG1          equ	3994	;# 
  4277   000F9A                     SPBRGL          equ	3994	;# 
  4278   000F9B                     SP1BRGH         equ	3995	;# 
  4279   000F9B                     SPBRGH          equ	3995	;# 
  4280   000F9B                     SPBRGH1         equ	3995	;# 
  4281   000F9C                     RC1STA          equ	3996	;# 
  4282   000F9C                     RCSTA1          equ	3996	;# 
  4283   000F9C                     RCSTA           equ	3996	;# 
  4284   000F9D                     TX1STA          equ	3997	;# 
  4285   000F9D                     TXSTA1          equ	3997	;# 
  4286   000F9D                     TXSTA           equ	3997	;# 
  4287   000F9E                     BAUD1CON        equ	3998	;# 
  4288   000F9E                     BAUDCON1        equ	3998	;# 
  4289   000F9E                     BAUDCTL1        equ	3998	;# 
  4290   000F9E                     BAUDCON         equ	3998	;# 
  4291   000F9E                     BAUDCTL         equ	3998	;# 
  4292   000F9F                     PWM4DC          equ	3999	;# 
  4293   000F9F                     PWM4DCL         equ	3999	;# 
  4294   000FA0                     PWM4DCH         equ	4000	;# 
  4295   000FA1                     PWM4CON         equ	4001	;# 
  4296   000FA2                     PWM3DC          equ	4002	;# 
  4297   000FA2                     PWM3DCL         equ	4002	;# 
  4298   000FA3                     PWM3DCH         equ	4003	;# 
  4299   000FA4                     PWM3CON         equ	4004	;# 
  4300   000FA5                     CCPR2           equ	4005	;# 
  4301   000FA5                     CCPR2L          equ	4005	;# 
  4302   000FA6                     CCPR2H          equ	4006	;# 
  4303   000FA7                     CCP2CON         equ	4007	;# 
  4304   000FA8                     CCP2CAP         equ	4008	;# 
  4305   000FA9                     CCPR1           equ	4009	;# 
  4306   000FA9                     CCPR1L          equ	4009	;# 
  4307   000FAA                     CCPR1H          equ	4010	;# 
  4308   000FAB                     CCP1CON         equ	4011	;# 
  4309   000FAC                     CCP1CAP         equ	4012	;# 
  4310   000FAD                     CCPTMRS         equ	4013	;# 
  4311   000FAE                     T6TMR           equ	4014	;# 
  4312   000FAE                     TMR6            equ	4014	;# 
  4313   000FAF                     T6PR            equ	4015	;# 
  4314   000FAF                     PR6             equ	4015	;# 
  4315   000FB0                     T6CON           equ	4016	;# 
  4316   000FB1                     T6HLT           equ	4017	;# 
  4317   000FB2                     T6CLKCON        equ	4018	;# 
  4318   000FB2                     T6CLK           equ	4018	;# 
  4319   000FB3                     T6RST           equ	4019	;# 
  4320   000FB4                     T4TMR           equ	4020	;# 
  4321   000FB4                     TMR4            equ	4020	;# 
  4322   000FB5                     T4PR            equ	4021	;# 
  4323   000FB5                     PR4             equ	4021	;# 
  4324   000FB6                     T4CON           equ	4022	;# 
  4325   000FB7                     T4HLT           equ	4023	;# 
  4326   000FB8                     T4CLKCON        equ	4024	;# 
  4327   000FB8                     T4CLK           equ	4024	;# 
  4328   000FB9                     T4RST           equ	4025	;# 
  4329   000FBA                     T2TMR           equ	4026	;# 
  4330   000FBA                     TMR2            equ	4026	;# 
  4331   000FBB                     T2PR            equ	4027	;# 
  4332   000FBB                     PR2             equ	4027	;# 
  4333   000FBC                     T2CON           equ	4028	;# 
  4334   000FBD                     T2HLT           equ	4029	;# 
  4335   000FBE                     T2CLKCON        equ	4030	;# 
  4336   000FBE                     T2CLK           equ	4030	;# 
  4337   000FBF                     T2RST           equ	4031	;# 
  4338   000FC0                     TMR5            equ	4032	;# 
  4339   000FC0                     TMR5L           equ	4032	;# 
  4340   000FC1                     TMR5H           equ	4033	;# 
  4341   000FC2                     T5CON           equ	4034	;# 
  4342   000FC2                     TMR5CON         equ	4034	;# 
  4343   000FC3                     T5GCON          equ	4035	;# 
  4344   000FC3                     TMR5GCON        equ	4035	;# 
  4345   000FC4                     T5GATE          equ	4036	;# 
  4346   000FC4                     TMR5GATE        equ	4036	;# 
  4347   000FC5                     T5CLK           equ	4037	;# 
  4348   000FC5                     TMR5CLK         equ	4037	;# 
  4349   000FC5                     PR5             equ	4037	;# 
  4350   000FC6                     TMR3            equ	4038	;# 
  4351   000FC6                     TMR3L           equ	4038	;# 
  4352   000FC7                     TMR3H           equ	4039	;# 
  4353   000FC8                     T3CON           equ	4040	;# 
  4354   000FC8                     TMR3CON         equ	4040	;# 
  4355   000FC9                     T3GCON          equ	4041	;# 
  4356   000FC9                     TMR3GCON        equ	4041	;# 
  4357   000FCA                     T3GATE          equ	4042	;# 
  4358   000FCA                     TMR3GATE        equ	4042	;# 
  4359   000FCB                     T3CLK           equ	4043	;# 
  4360   000FCB                     TMR3CLK         equ	4043	;# 
  4361   000FCB                     PR3             equ	4043	;# 
  4362   000FCC                     TMR1            equ	4044	;# 
  4363   000FCC                     TMR1L           equ	4044	;# 
  4364   000FCD                     TMR1H           equ	4045	;# 
  4365   000FCE                     T1CON           equ	4046	;# 
  4366   000FCE                     TMR1CON         equ	4046	;# 
  4367   000FCF                     T1GCON          equ	4047	;# 
  4368   000FCF                     TMR1GCON        equ	4047	;# 
  4369   000FD0                     T1GATE          equ	4048	;# 
  4370   000FD0                     TMR1GATE        equ	4048	;# 
  4371   000FD1                     T1CLK           equ	4049	;# 
  4372   000FD1                     TMR1CLK         equ	4049	;# 
  4373   000FD1                     PR1             equ	4049	;# 
  4374   000FD2                     TMR0L           equ	4050	;# 
  4375   000FD2                     TMR0            equ	4050	;# 
  4376   000FD3                     TMR0H           equ	4051	;# 
  4377   000FD3                     PR0             equ	4051	;# 
  4378   000FD4                     T0CON0          equ	4052	;# 
  4379   000FD5                     T0CON1          equ	4053	;# 
  4380   000FD6                     PCON1           equ	4054	;# 
  4381   000FD7                     PCON0           equ	4055	;# 
  4382   000FD8                     STATUS          equ	4056	;# 
  4383   000FD9                     FSR2            equ	4057	;# 
  4384   000FD9                     FSR2L           equ	4057	;# 
  4385   000FDA                     FSR2H           equ	4058	;# 
  4386   000FDB                     PLUSW2          equ	4059	;# 
  4387   000FDC                     PREINC2         equ	4060	;# 
  4388   000FDD                     POSTDEC2        equ	4061	;# 
  4389   000FDE                     POSTINC2        equ	4062	;# 
  4390   000FDF                     INDF2           equ	4063	;# 
  4391   000FE0                     BSR             equ	4064	;# 
  4392   000FE1                     FSR1            equ	4065	;# 
  4393   000FE1                     FSR1L           equ	4065	;# 
  4394   000FE2                     FSR1H           equ	4066	;# 
  4395   000FE3                     PLUSW1          equ	4067	;# 
  4396   000FE4                     PREINC1         equ	4068	;# 
  4397   000FE5                     POSTDEC1        equ	4069	;# 
  4398   000FE6                     POSTINC1        equ	4070	;# 
  4399   000FE7                     INDF1           equ	4071	;# 
  4400   000FE8                     WREG            equ	4072	;# 
  4401   000FE9                     FSR0            equ	4073	;# 
  4402   000FE9                     FSR0L           equ	4073	;# 
  4403   000FEA                     FSR0H           equ	4074	;# 
  4404   000FEB                     PLUSW0          equ	4075	;# 
  4405   000FEC                     PREINC0         equ	4076	;# 
  4406   000FED                     POSTDEC0        equ	4077	;# 
  4407   000FEE                     POSTINC0        equ	4078	;# 
  4408   000FEF                     INDF0           equ	4079	;# 
  4409   000FF2                     INTCON          equ	4082	;# 
  4410   000FF3                     PROD            equ	4083	;# 
  4411   000FF3                     PRODL           equ	4083	;# 
  4412   000FF4                     PRODH           equ	4084	;# 
  4413   000FF5                     TABLAT          equ	4085	;# 
  4414   000FF6                     TBLPTR          equ	4086	;# 
  4415   000FF6                     TBLPTRL         equ	4086	;# 
  4416   000FF7                     TBLPTRH         equ	4087	;# 
  4417   000FF8                     TBLPTRU         equ	4088	;# 
  4418   000FF9                     PCLAT           equ	4089	;# 
  4419   000FF9                     PC              equ	4089	;# 
  4420   000FF9                     PCL             equ	4089	;# 
  4421   000FFA                     PCLATH          equ	4090	;# 
  4422   000FFB                     PCLATU          equ	4091	;# 
  4423   000FFC                     STKPTR          equ	4092	;# 
  4424   000FFD                     TOS             equ	4093	;# 
  4425   000FFD                     TOSL            equ	4093	;# 
  4426   000FFE                     TOSH            equ	4094	;# 
  4427   000FFF                     TOSU            equ	4095	;# 
  4428   000E9B                     PPSLOCK         equ	3739	;# 
  4429   000E9C                     INT0PPS         equ	3740	;# 
  4430   000E9D                     INT1PPS         equ	3741	;# 
  4431   000E9E                     INT2PPS         equ	3742	;# 
  4432   000E9F                     T0CKIPPS        equ	3743	;# 
  4433   000EA0                     T1CKIPPS        equ	3744	;# 
  4434   000EA1                     T1GPPS          equ	3745	;# 
  4435   000EA2                     T3CKIPPS        equ	3746	;# 
  4436   000EA3                     T3GPPS          equ	3747	;# 
  4437   000EA4                     T5CKIPPS        equ	3748	;# 
  4438   000EA5                     T5GPPS          equ	3749	;# 
  4439   000EA6                     T2INPPS         equ	3750	;# 
  4440   000EA7                     T4INPPS         equ	3751	;# 
  4441   000EA8                     T6INPPS         equ	3752	;# 
  4442   000EA9                     ADACTPPS        equ	3753	;# 
  4443   000EAA                     CCP1PPS         equ	3754	;# 
  4444   000EAB                     CCP2PPS         equ	3755	;# 
  4445   000EAC                     CWG1PPS         equ	3756	;# 
  4446   000EAC                     CWGPPS          equ	3756	;# 
  4447   000EAC                     CWGINPPS        equ	3756	;# 
  4448   000EAC                     CWG1INPPS       equ	3756	;# 
  4449   000EAD                     MDCARLPPS       equ	3757	;# 
  4450   000EAE                     MDCARHPPS       equ	3758	;# 
  4451   000EAF                     MDSRCPPS        equ	3759	;# 
  4452   000EB0                     RX1PPS          equ	3760	;# 
  4453   000EB0                     RXPPS           equ	3760	;# 
  4454   000EB0                     RXDT1PPS        equ	3760	;# 
  4455   000EB1                     CK1PPS          equ	3761	;# 
  4456   000EB1                     TXPPS           equ	3761	;# 
  4457   000EB1                     CKPPS           equ	3761	;# 
  4458   000EB1                     TXCK1PPS        equ	3761	;# 
  4459   000EB1                     TX1PPS          equ	3761	;# 
  4460   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4461   000EB2                     SSPCLKPPS       equ	3762	;# 
  4462   000EB3                     SSP1DATPPS      equ	3763	;# 
  4463   000EB3                     SSPDATPPS       equ	3763	;# 
  4464   000EB4                     SSP1SSPPS       equ	3764	;# 
  4465   000EB4                     SSPSSPPS        equ	3764	;# 
  4466   000EB5                     IPR0            equ	3765	;# 
  4467   000EB6                     IPR1            equ	3766	;# 
  4468   000EB7                     IPR2            equ	3767	;# 
  4469   000EB8                     IPR3            equ	3768	;# 
  4470   000EB9                     IPR4            equ	3769	;# 
  4471   000EBA                     IPR5            equ	3770	;# 
  4472   000EBB                     IPR6            equ	3771	;# 
  4473   000EBC                     IPR7            equ	3772	;# 
  4474   000EBD                     PIE0            equ	3773	;# 
  4475   000EBE                     PIE1            equ	3774	;# 
  4476   000EBF                     PIE2            equ	3775	;# 
  4477   000EC0                     PIE3            equ	3776	;# 
  4478   000EC1                     PIE4            equ	3777	;# 
  4479   000EC2                     PIE5            equ	3778	;# 
  4480   000EC3                     PIE6            equ	3779	;# 
  4481   000EC4                     PIE7            equ	3780	;# 
  4482   000EC5                     PIR0            equ	3781	;# 
  4483   000EC6                     PIR1            equ	3782	;# 
  4484   000EC7                     PIR2            equ	3783	;# 
  4485   000EC8                     PIR3            equ	3784	;# 
  4486   000EC9                     PIR4            equ	3785	;# 
  4487   000ECA                     PIR5            equ	3786	;# 
  4488   000ECB                     PIR6            equ	3787	;# 
  4489   000ECC                     PIR7            equ	3788	;# 
  4490   000ECD                     WDTCON0         equ	3789	;# 
  4491   000ECE                     WDTCON1         equ	3790	;# 
  4492   000ECF                     WDTPSL          equ	3791	;# 
  4493   000ED0                     WDTPSH          equ	3792	;# 
  4494   000ED1                     WDTTMR          equ	3793	;# 
  4495   000ED2                     CPUDOZE         equ	3794	;# 
  4496   000ED3                     OSCCON1         equ	3795	;# 
  4497   000ED4                     OSCCON2         equ	3796	;# 
  4498   000ED5                     OSCCON3         equ	3797	;# 
  4499   000ED6                     OSCSTAT         equ	3798	;# 
  4500   000ED6                     OSCSTAT1        equ	3798	;# 
  4501   000ED7                     OSCEN           equ	3799	;# 
  4502   000ED8                     OSCTUNE         equ	3800	;# 
  4503   000ED9                     OSCFRQ          equ	3801	;# 
  4504   000ED9                     OSCFREQ         equ	3801	;# 
  4505   000EDA                     VREGCON         equ	3802	;# 
  4506   000EDB                     BORCON          equ	3803	;# 
  4507   000EDC                     PMD0            equ	3804	;# 
  4508   000EDD                     PMD1            equ	3805	;# 
  4509   000EDE                     PMD2            equ	3806	;# 
  4510   000EDF                     PMD3            equ	3807	;# 
  4511   000EE0                     PMD4            equ	3808	;# 
  4512   000EE1                     PMD5            equ	3809	;# 
  4513   000EE2                     RA0PPS          equ	3810	;# 
  4514   000EE3                     RA1PPS          equ	3811	;# 
  4515   000EE4                     RA2PPS          equ	3812	;# 
  4516   000EE5                     RA3PPS          equ	3813	;# 
  4517   000EE6                     RA4PPS          equ	3814	;# 
  4518   000EE7                     RA5PPS          equ	3815	;# 
  4519   000EE8                     RA6PPS          equ	3816	;# 
  4520   000EE9                     RA7PPS          equ	3817	;# 
  4521   000EEA                     RB0PPS          equ	3818	;# 
  4522   000EEB                     RB1PPS          equ	3819	;# 
  4523   000EEC                     RB2PPS          equ	3820	;# 
  4524   000EED                     RB3PPS          equ	3821	;# 
  4525   000EEE                     RB4PPS          equ	3822	;# 
  4526   000EEF                     RB5PPS          equ	3823	;# 
  4527   000EF0                     RB6PPS          equ	3824	;# 
  4528   000EF1                     RB7PPS          equ	3825	;# 
  4529   000EF2                     RC0PPS          equ	3826	;# 
  4530   000EF3                     RC1PPS          equ	3827	;# 
  4531   000EF4                     RC2PPS          equ	3828	;# 
  4532   000EF5                     RC3PPS          equ	3829	;# 
  4533   000EF6                     RC4PPS          equ	3830	;# 
  4534   000EF7                     RC5PPS          equ	3831	;# 
  4535   000EF8                     RC6PPS          equ	3832	;# 
  4536   000EF9                     RC7PPS          equ	3833	;# 
  4537   000F05                     IOCAF           equ	3845	;# 
  4538   000F06                     IOCAN           equ	3846	;# 
  4539   000F07                     IOCAP           equ	3847	;# 
  4540   000F08                     INLVLA          equ	3848	;# 
  4541   000F09                     SLRCONA         equ	3849	;# 
  4542   000F0A                     ODCONA          equ	3850	;# 
  4543   000F0B                     WPUA            equ	3851	;# 
  4544   000F0C                     ANSELA          equ	3852	;# 
  4545   000F0D                     IOCBF           equ	3853	;# 
  4546   000F0E                     IOCBN           equ	3854	;# 
  4547   000F0F                     IOCBP           equ	3855	;# 
  4548   000F10                     INLVLB          equ	3856	;# 
  4549   000F11                     SLRCONB         equ	3857	;# 
  4550   000F12                     ODCONB          equ	3858	;# 
  4551   000F13                     WPUB            equ	3859	;# 
  4552   000F14                     ANSELB          equ	3860	;# 
  4553   000F15                     IOCCF           equ	3861	;# 
  4554   000F16                     IOCCN           equ	3862	;# 
  4555   000F17                     IOCCP           equ	3863	;# 
  4556   000F18                     INLVLC          equ	3864	;# 
  4557   000F19                     SLRCONC         equ	3865	;# 
  4558   000F1A                     ODCONC          equ	3866	;# 
  4559   000F1B                     WPUC            equ	3867	;# 
  4560   000F1C                     ANSELC          equ	3868	;# 
  4561   000F22                     IOCEF           equ	3874	;# 
  4562   000F23                     IOCEN           equ	3875	;# 
  4563   000F24                     IOCEP           equ	3876	;# 
  4564   000F25                     INLVLE          equ	3877	;# 
  4565   000F28                     WPUE            equ	3880	;# 
  4566   000F2A                     HLVDCON0        equ	3882	;# 
  4567   000F2B                     HLVDCON1        equ	3883	;# 
  4568   000F2C                     FVRCON          equ	3884	;# 
  4569   000F2D                     ZCDCON          equ	3885	;# 
  4570   000F2E                     DAC1CON0        equ	3886	;# 
  4571   000F2F                     DAC1CON1        equ	3887	;# 
  4572   000F30                     CM2CON0         equ	3888	;# 
  4573   000F31                     CM2CON1         equ	3889	;# 
  4574   000F32                     CM2NCH          equ	3890	;# 
  4575   000F33                     CM2PCH          equ	3891	;# 
  4576   000F34                     CM1CON0         equ	3892	;# 
  4577   000F35                     CM1CON1         equ	3893	;# 
  4578   000F36                     CM1NCH          equ	3894	;# 
  4579   000F37                     CM1PCH          equ	3895	;# 
  4580   000F38                     CMOUT           equ	3896	;# 
  4581   000F39                     CLKRCON         equ	3897	;# 
  4582   000F3A                     CLKRCLK         equ	3898	;# 
  4583   000F3B                     CWG1CLK         equ	3899	;# 
  4584   000F3B                     CWG1CLKCON      equ	3899	;# 
  4585   000F3C                     CWG1ISM         equ	3900	;# 
  4586   000F3D                     CWG1DBR         equ	3901	;# 
  4587   000F3E                     CWG1DBF         equ	3902	;# 
  4588   000F3F                     CWG1CON0        equ	3903	;# 
  4589   000F40                     CWG1CON1        equ	3904	;# 
  4590   000F41                     CWG1AS0         equ	3905	;# 
  4591   000F42                     CWG1AS1         equ	3906	;# 
  4592   000F43                     CWG1STR         equ	3907	;# 
  4593   000F44                     SCANLADR        equ	3908	;# 
  4594   000F44                     SCANLADRL       equ	3908	;# 
  4595   000F45                     SCANLADRH       equ	3909	;# 
  4596   000F46                     SCANLADRU       equ	3910	;# 
  4597   000F47                     SCANHADR        equ	3911	;# 
  4598   000F47                     SCANHADRL       equ	3911	;# 
  4599   000F48                     SCANHADRH       equ	3912	;# 
  4600   000F49                     SCANHADRU       equ	3913	;# 
  4601   000F4A                     SCANCON0        equ	3914	;# 
  4602   000F4B                     SCANTRIG        equ	3915	;# 
  4603   000F4C                     MDCON0          equ	3916	;# 
  4604   000F4D                     MDCON1          equ	3917	;# 
  4605   000F4E                     MDSRC           equ	3918	;# 
  4606   000F4F                     MDCARL          equ	3919	;# 
  4607   000F50                     MDCARH          equ	3920	;# 
  4608   000F51                     ADACT           equ	3921	;# 
  4609   000F52                     ADCLK           equ	3922	;# 
  4610   000F53                     ADREF           equ	3923	;# 
  4611   000F54                     ADCON1          equ	3924	;# 
  4612   000F55                     ADCON2          equ	3925	;# 
  4613   000F56                     ADCON3          equ	3926	;# 
  4614   000F57                     ADACQ           equ	3927	;# 
  4615   000F58                     ADCAP           equ	3928	;# 
  4616   000F59                     ADPRE           equ	3929	;# 
  4617   000F5A                     ADPCH           equ	3930	;# 
  4618   000F5B                     ADCON0          equ	3931	;# 
  4619   000F5C                     ADPREV          equ	3932	;# 
  4620   000F5C                     ADPREVL         equ	3932	;# 
  4621   000F5D                     ADPREVH         equ	3933	;# 
  4622   000F5E                     ADRES           equ	3934	;# 
  4623   000F5E                     ADRESL          equ	3934	;# 
  4624   000F5F                     ADRESH          equ	3935	;# 
  4625   000F60                     ADSTAT          equ	3936	;# 
  4626   000F61                     ADRPT           equ	3937	;# 
  4627   000F62                     ADCNT           equ	3938	;# 
  4628   000F63                     ADSTPT          equ	3939	;# 
  4629   000F63                     ADSTPTL         equ	3939	;# 
  4630   000F64                     ADSTPTH         equ	3940	;# 
  4631   000F65                     ADLTH           equ	3941	;# 
  4632   000F65                     ADLTHL          equ	3941	;# 
  4633   000F66                     ADLTHH          equ	3942	;# 
  4634   000F67                     ADUTH           equ	3943	;# 
  4635   000F67                     ADUTHL          equ	3943	;# 
  4636   000F68                     ADUTHH          equ	3944	;# 
  4637   000F69                     ADERR           equ	3945	;# 
  4638   000F69                     ADERRL          equ	3945	;# 
  4639   000F6A                     ADERRH          equ	3946	;# 
  4640   000F6B                     ADACC           equ	3947	;# 
  4641   000F6B                     ADACCL          equ	3947	;# 
  4642   000F6C                     ADACCH          equ	3948	;# 
  4643   000F6D                     ADFLTR          equ	3949	;# 
  4644   000F6D                     ADFLTRL         equ	3949	;# 
  4645   000F6E                     ADFLTRH         equ	3950	;# 
  4646   000F6F                     CRCDATA         equ	3951	;# 
  4647   000F6F                     CRCDATL         equ	3951	;# 
  4648   000F70                     CRCDATH         equ	3952	;# 
  4649   000F71                     CRCACC          equ	3953	;# 
  4650   000F71                     CRCACCL         equ	3953	;# 
  4651   000F72                     CRCACCH         equ	3954	;# 
  4652   000F73                     CRCSHFT         equ	3955	;# 
  4653   000F73                     CRCSHIFTL       equ	3955	;# 
  4654   000F74                     CRCSHIFTH       equ	3956	;# 
  4655   000F75                     CRCXOR          equ	3957	;# 
  4656   000F75                     CRCXORL         equ	3957	;# 
  4657   000F76                     CRCXORH         equ	3958	;# 
  4658   000F77                     CRCCON0         equ	3959	;# 
  4659   000F78                     CRCCON1         equ	3960	;# 
  4660   000F79                     NVMADR          equ	3961	;# 
  4661   000F79                     NVMADRL         equ	3961	;# 
  4662   000F7A                     NVMADRH         equ	3962	;# 
  4663   000F7B                     NVMADRU         equ	3963	;# 
  4664   000F7C                     NVMDAT          equ	3964	;# 
  4665   000F7C                     NVMDATL         equ	3964	;# 
  4666   000F7D                     NVMDATH         equ	3965	;# 
  4667   000F7F                     NVMCON0         equ	3967	;# 
  4668   000F80                     NVMCON1         equ	3968	;# 
  4669   000F81                     NVMCON2         equ	3969	;# 
  4670   000F82                     LATA            equ	3970	;# 
  4671   000F83                     LATB            equ	3971	;# 
  4672   000F84                     LATC            equ	3972	;# 
  4673   000F87                     TRISA           equ	3975	;# 
  4674   000F87                     DDRA            equ	3975	;# 
  4675   000F88                     TRISB           equ	3976	;# 
  4676   000F88                     DDRB            equ	3976	;# 
  4677   000F89                     TRISC           equ	3977	;# 
  4678   000F89                     DDRC            equ	3977	;# 
  4679   000F8C                     PORTA           equ	3980	;# 
  4680   000F8D                     PORTB           equ	3981	;# 
  4681   000F8E                     PORTC           equ	3982	;# 
  4682   000F90                     PORTE           equ	3984	;# 
  4683   000F91                     SSP1BUF         equ	3985	;# 
  4684   000F92                     SSP1ADD         equ	3986	;# 
  4685   000F93                     SSP1MSK         equ	3987	;# 
  4686   000F94                     SSP1STAT        equ	3988	;# 
  4687   000F95                     SSP1CON1        equ	3989	;# 
  4688   000F96                     SSP1CON2        equ	3990	;# 
  4689   000F97                     SSP1CON3        equ	3991	;# 
  4690   000F98                     RC1REG          equ	3992	;# 
  4691   000F98                     RCREG           equ	3992	;# 
  4692   000F98                     RCREG1          equ	3992	;# 
  4693   000F99                     TX1REG          equ	3993	;# 
  4694   000F99                     TXREG1          equ	3993	;# 
  4695   000F99                     TXREG           equ	3993	;# 
  4696   000F9A                     SP1BRG          equ	3994	;# 
  4697   000F9A                     SPBRG           equ	3994	;# 
  4698   000F9A                     SP1BRGL         equ	3994	;# 
  4699   000F9A                     SPBRG1          equ	3994	;# 
  4700   000F9A                     SPBRGL          equ	3994	;# 
  4701   000F9B                     SP1BRGH         equ	3995	;# 
  4702   000F9B                     SPBRGH          equ	3995	;# 
  4703   000F9B                     SPBRGH1         equ	3995	;# 
  4704   000F9C                     RC1STA          equ	3996	;# 
  4705   000F9C                     RCSTA1          equ	3996	;# 
  4706   000F9C                     RCSTA           equ	3996	;# 
  4707   000F9D                     TX1STA          equ	3997	;# 
  4708   000F9D                     TXSTA1          equ	3997	;# 
  4709   000F9D                     TXSTA           equ	3997	;# 
  4710   000F9E                     BAUD1CON        equ	3998	;# 
  4711   000F9E                     BAUDCON1        equ	3998	;# 
  4712   000F9E                     BAUDCTL1        equ	3998	;# 
  4713   000F9E                     BAUDCON         equ	3998	;# 
  4714   000F9E                     BAUDCTL         equ	3998	;# 
  4715   000F9F                     PWM4DC          equ	3999	;# 
  4716   000F9F                     PWM4DCL         equ	3999	;# 
  4717   000FA0                     PWM4DCH         equ	4000	;# 
  4718   000FA1                     PWM4CON         equ	4001	;# 
  4719   000FA2                     PWM3DC          equ	4002	;# 
  4720   000FA2                     PWM3DCL         equ	4002	;# 
  4721   000FA3                     PWM3DCH         equ	4003	;# 
  4722   000FA4                     PWM3CON         equ	4004	;# 
  4723   000FA5                     CCPR2           equ	4005	;# 
  4724   000FA5                     CCPR2L          equ	4005	;# 
  4725   000FA6                     CCPR2H          equ	4006	;# 
  4726   000FA7                     CCP2CON         equ	4007	;# 
  4727   000FA8                     CCP2CAP         equ	4008	;# 
  4728   000FA9                     CCPR1           equ	4009	;# 
  4729   000FA9                     CCPR1L          equ	4009	;# 
  4730   000FAA                     CCPR1H          equ	4010	;# 
  4731   000FAB                     CCP1CON         equ	4011	;# 
  4732   000FAC                     CCP1CAP         equ	4012	;# 
  4733   000FAD                     CCPTMRS         equ	4013	;# 
  4734   000FAE                     T6TMR           equ	4014	;# 
  4735   000FAE                     TMR6            equ	4014	;# 
  4736   000FAF                     T6PR            equ	4015	;# 
  4737   000FAF                     PR6             equ	4015	;# 
  4738   000FB0                     T6CON           equ	4016	;# 
  4739   000FB1                     T6HLT           equ	4017	;# 
  4740   000FB2                     T6CLKCON        equ	4018	;# 
  4741   000FB2                     T6CLK           equ	4018	;# 
  4742   000FB3                     T6RST           equ	4019	;# 
  4743   000FB4                     T4TMR           equ	4020	;# 
  4744   000FB4                     TMR4            equ	4020	;# 
  4745   000FB5                     T4PR            equ	4021	;# 
  4746   000FB5                     PR4             equ	4021	;# 
  4747   000FB6                     T4CON           equ	4022	;# 
  4748   000FB7                     T4HLT           equ	4023	;# 
  4749   000FB8                     T4CLKCON        equ	4024	;# 
  4750   000FB8                     T4CLK           equ	4024	;# 
  4751   000FB9                     T4RST           equ	4025	;# 
  4752   000FBA                     T2TMR           equ	4026	;# 
  4753   000FBA                     TMR2            equ	4026	;# 
  4754   000FBB                     T2PR            equ	4027	;# 
  4755   000FBB                     PR2             equ	4027	;# 
  4756   000FBC                     T2CON           equ	4028	;# 
  4757   000FBD                     T2HLT           equ	4029	;# 
  4758   000FBE                     T2CLKCON        equ	4030	;# 
  4759   000FBE                     T2CLK           equ	4030	;# 
  4760   000FBF                     T2RST           equ	4031	;# 
  4761   000FC0                     TMR5            equ	4032	;# 
  4762   000FC0                     TMR5L           equ	4032	;# 
  4763   000FC1                     TMR5H           equ	4033	;# 
  4764   000FC2                     T5CON           equ	4034	;# 
  4765   000FC2                     TMR5CON         equ	4034	;# 
  4766   000FC3                     T5GCON          equ	4035	;# 
  4767   000FC3                     TMR5GCON        equ	4035	;# 
  4768   000FC4                     T5GATE          equ	4036	;# 
  4769   000FC4                     TMR5GATE        equ	4036	;# 
  4770   000FC5                     T5CLK           equ	4037	;# 
  4771   000FC5                     TMR5CLK         equ	4037	;# 
  4772   000FC5                     PR5             equ	4037	;# 
  4773   000FC6                     TMR3            equ	4038	;# 
  4774   000FC6                     TMR3L           equ	4038	;# 
  4775   000FC7                     TMR3H           equ	4039	;# 
  4776   000FC8                     T3CON           equ	4040	;# 
  4777   000FC8                     TMR3CON         equ	4040	;# 
  4778   000FC9                     T3GCON          equ	4041	;# 
  4779   000FC9                     TMR3GCON        equ	4041	;# 
  4780   000FCA                     T3GATE          equ	4042	;# 
  4781   000FCA                     TMR3GATE        equ	4042	;# 
  4782   000FCB                     T3CLK           equ	4043	;# 
  4783   000FCB                     TMR3CLK         equ	4043	;# 
  4784   000FCB                     PR3             equ	4043	;# 
  4785   000FCC                     TMR1            equ	4044	;# 
  4786   000FCC                     TMR1L           equ	4044	;# 
  4787   000FCD                     TMR1H           equ	4045	;# 
  4788   000FCE                     T1CON           equ	4046	;# 
  4789   000FCE                     TMR1CON         equ	4046	;# 
  4790   000FCF                     T1GCON          equ	4047	;# 
  4791   000FCF                     TMR1GCON        equ	4047	;# 
  4792   000FD0                     T1GATE          equ	4048	;# 
  4793   000FD0                     TMR1GATE        equ	4048	;# 
  4794   000FD1                     T1CLK           equ	4049	;# 
  4795   000FD1                     TMR1CLK         equ	4049	;# 
  4796   000FD1                     PR1             equ	4049	;# 
  4797   000FD2                     TMR0L           equ	4050	;# 
  4798   000FD2                     TMR0            equ	4050	;# 
  4799   000FD3                     TMR0H           equ	4051	;# 
  4800   000FD3                     PR0             equ	4051	;# 
  4801   000FD4                     T0CON0          equ	4052	;# 
  4802   000FD5                     T0CON1          equ	4053	;# 
  4803   000FD6                     PCON1           equ	4054	;# 
  4804   000FD7                     PCON0           equ	4055	;# 
  4805   000FD8                     STATUS          equ	4056	;# 
  4806   000FD9                     FSR2            equ	4057	;# 
  4807   000FD9                     FSR2L           equ	4057	;# 
  4808   000FDA                     FSR2H           equ	4058	;# 
  4809   000FDB                     PLUSW2          equ	4059	;# 
  4810   000FDC                     PREINC2         equ	4060	;# 
  4811   000FDD                     POSTDEC2        equ	4061	;# 
  4812   000FDE                     POSTINC2        equ	4062	;# 
  4813   000FDF                     INDF2           equ	4063	;# 
  4814   000FE0                     BSR             equ	4064	;# 
  4815   000FE1                     FSR1            equ	4065	;# 
  4816   000FE1                     FSR1L           equ	4065	;# 
  4817   000FE2                     FSR1H           equ	4066	;# 
  4818   000FE3                     PLUSW1          equ	4067	;# 
  4819   000FE4                     PREINC1         equ	4068	;# 
  4820   000FE5                     POSTDEC1        equ	4069	;# 
  4821   000FE6                     POSTINC1        equ	4070	;# 
  4822   000FE7                     INDF1           equ	4071	;# 
  4823   000FE8                     WREG            equ	4072	;# 
  4824   000FE9                     FSR0            equ	4073	;# 
  4825   000FE9                     FSR0L           equ	4073	;# 
  4826   000FEA                     FSR0H           equ	4074	;# 
  4827   000FEB                     PLUSW0          equ	4075	;# 
  4828   000FEC                     PREINC0         equ	4076	;# 
  4829   000FED                     POSTDEC0        equ	4077	;# 
  4830   000FEE                     POSTINC0        equ	4078	;# 
  4831   000FEF                     INDF0           equ	4079	;# 
  4832   000FF2                     INTCON          equ	4082	;# 
  4833   000FF3                     PROD            equ	4083	;# 
  4834   000FF3                     PRODL           equ	4083	;# 
  4835   000FF4                     PRODH           equ	4084	;# 
  4836   000FF5                     TABLAT          equ	4085	;# 
  4837   000FF6                     TBLPTR          equ	4086	;# 
  4838   000FF6                     TBLPTRL         equ	4086	;# 
  4839   000FF7                     TBLPTRH         equ	4087	;# 
  4840   000FF8                     TBLPTRU         equ	4088	;# 
  4841   000FF9                     PCLAT           equ	4089	;# 
  4842   000FF9                     PC              equ	4089	;# 
  4843   000FF9                     PCL             equ	4089	;# 
  4844   000FFA                     PCLATH          equ	4090	;# 
  4845   000FFB                     PCLATU          equ	4091	;# 
  4846   000FFC                     STKPTR          equ	4092	;# 
  4847   000FFD                     TOS             equ	4093	;# 
  4848   000FFD                     TOSL            equ	4093	;# 
  4849   000FFE                     TOSH            equ	4094	;# 
  4850   000FFF                     TOSU            equ	4095	;# 
  4851   000E9B                     PPSLOCK         equ	3739	;# 
  4852   000E9C                     INT0PPS         equ	3740	;# 
  4853   000E9D                     INT1PPS         equ	3741	;# 
  4854   000E9E                     INT2PPS         equ	3742	;# 
  4855   000E9F                     T0CKIPPS        equ	3743	;# 
  4856   000EA0                     T1CKIPPS        equ	3744	;# 
  4857   000EA1                     T1GPPS          equ	3745	;# 
  4858   000EA2                     T3CKIPPS        equ	3746	;# 
  4859   000EA3                     T3GPPS          equ	3747	;# 
  4860   000EA4                     T5CKIPPS        equ	3748	;# 
  4861   000EA5                     T5GPPS          equ	3749	;# 
  4862   000EA6                     T2INPPS         equ	3750	;# 
  4863   000EA7                     T4INPPS         equ	3751	;# 
  4864   000EA8                     T6INPPS         equ	3752	;# 
  4865   000EA9                     ADACTPPS        equ	3753	;# 
  4866   000EAA                     CCP1PPS         equ	3754	;# 
  4867   000EAB                     CCP2PPS         equ	3755	;# 
  4868   000EAC                     CWG1PPS         equ	3756	;# 
  4869   000EAC                     CWGPPS          equ	3756	;# 
  4870   000EAC                     CWGINPPS        equ	3756	;# 
  4871   000EAC                     CWG1INPPS       equ	3756	;# 
  4872   000EAD                     MDCARLPPS       equ	3757	;# 
  4873   000EAE                     MDCARHPPS       equ	3758	;# 
  4874   000EAF                     MDSRCPPS        equ	3759	;# 
  4875   000EB0                     RX1PPS          equ	3760	;# 
  4876   000EB0                     RXPPS           equ	3760	;# 
  4877   000EB0                     RXDT1PPS        equ	3760	;# 
  4878   000EB1                     CK1PPS          equ	3761	;# 
  4879   000EB1                     TXPPS           equ	3761	;# 
  4880   000EB1                     CKPPS           equ	3761	;# 
  4881   000EB1                     TXCK1PPS        equ	3761	;# 
  4882   000EB1                     TX1PPS          equ	3761	;# 
  4883   000EB2                     SSP1CLKPPS      equ	3762	;# 
  4884   000EB2                     SSPCLKPPS       equ	3762	;# 
  4885   000EB3                     SSP1DATPPS      equ	3763	;# 
  4886   000EB3                     SSPDATPPS       equ	3763	;# 
  4887   000EB4                     SSP1SSPPS       equ	3764	;# 
  4888   000EB4                     SSPSSPPS        equ	3764	;# 
  4889   000EB5                     IPR0            equ	3765	;# 
  4890   000EB6                     IPR1            equ	3766	;# 
  4891   000EB7                     IPR2            equ	3767	;# 
  4892   000EB8                     IPR3            equ	3768	;# 
  4893   000EB9                     IPR4            equ	3769	;# 
  4894   000EBA                     IPR5            equ	3770	;# 
  4895   000EBB                     IPR6            equ	3771	;# 
  4896   000EBC                     IPR7            equ	3772	;# 
  4897   000EBD                     PIE0            equ	3773	;# 
  4898   000EBE                     PIE1            equ	3774	;# 
  4899   000EBF                     PIE2            equ	3775	;# 
  4900   000EC0                     PIE3            equ	3776	;# 
  4901   000EC1                     PIE4            equ	3777	;# 
  4902   000EC2                     PIE5            equ	3778	;# 
  4903   000EC3                     PIE6            equ	3779	;# 
  4904   000EC4                     PIE7            equ	3780	;# 
  4905   000EC5                     PIR0            equ	3781	;# 
  4906   000EC6                     PIR1            equ	3782	;# 
  4907   000EC7                     PIR2            equ	3783	;# 
  4908   000EC8                     PIR3            equ	3784	;# 
  4909   000EC9                     PIR4            equ	3785	;# 
  4910   000ECA                     PIR5            equ	3786	;# 
  4911   000ECB                     PIR6            equ	3787	;# 
  4912   000ECC                     PIR7            equ	3788	;# 
  4913   000ECD                     WDTCON0         equ	3789	;# 
  4914   000ECE                     WDTCON1         equ	3790	;# 
  4915   000ECF                     WDTPSL          equ	3791	;# 
  4916   000ED0                     WDTPSH          equ	3792	;# 
  4917   000ED1                     WDTTMR          equ	3793	;# 
  4918   000ED2                     CPUDOZE         equ	3794	;# 
  4919   000ED3                     OSCCON1         equ	3795	;# 
  4920   000ED4                     OSCCON2         equ	3796	;# 
  4921   000ED5                     OSCCON3         equ	3797	;# 
  4922   000ED6                     OSCSTAT         equ	3798	;# 
  4923   000ED6                     OSCSTAT1        equ	3798	;# 
  4924   000ED7                     OSCEN           equ	3799	;# 
  4925   000ED8                     OSCTUNE         equ	3800	;# 
  4926   000ED9                     OSCFRQ          equ	3801	;# 
  4927   000ED9                     OSCFREQ         equ	3801	;# 
  4928   000EDA                     VREGCON         equ	3802	;# 
  4929   000EDB                     BORCON          equ	3803	;# 
  4930   000EDC                     PMD0            equ	3804	;# 
  4931   000EDD                     PMD1            equ	3805	;# 
  4932   000EDE                     PMD2            equ	3806	;# 
  4933   000EDF                     PMD3            equ	3807	;# 
  4934   000EE0                     PMD4            equ	3808	;# 
  4935   000EE1                     PMD5            equ	3809	;# 
  4936   000EE2                     RA0PPS          equ	3810	;# 
  4937   000EE3                     RA1PPS          equ	3811	;# 
  4938   000EE4                     RA2PPS          equ	3812	;# 
  4939   000EE5                     RA3PPS          equ	3813	;# 
  4940   000EE6                     RA4PPS          equ	3814	;# 
  4941   000EE7                     RA5PPS          equ	3815	;# 
  4942   000EE8                     RA6PPS          equ	3816	;# 
  4943   000EE9                     RA7PPS          equ	3817	;# 
  4944   000EEA                     RB0PPS          equ	3818	;# 
  4945   000EEB                     RB1PPS          equ	3819	;# 
  4946   000EEC                     RB2PPS          equ	3820	;# 
  4947   000EED                     RB3PPS          equ	3821	;# 
  4948   000EEE                     RB4PPS          equ	3822	;# 
  4949   000EEF                     RB5PPS          equ	3823	;# 
  4950   000EF0                     RB6PPS          equ	3824	;# 
  4951   000EF1                     RB7PPS          equ	3825	;# 
  4952   000EF2                     RC0PPS          equ	3826	;# 
  4953   000EF3                     RC1PPS          equ	3827	;# 
  4954   000EF4                     RC2PPS          equ	3828	;# 
  4955   000EF5                     RC3PPS          equ	3829	;# 
  4956   000EF6                     RC4PPS          equ	3830	;# 
  4957   000EF7                     RC5PPS          equ	3831	;# 
  4958   000EF8                     RC6PPS          equ	3832	;# 
  4959   000EF9                     RC7PPS          equ	3833	;# 
  4960   000F05                     IOCAF           equ	3845	;# 
  4961   000F06                     IOCAN           equ	3846	;# 
  4962   000F07                     IOCAP           equ	3847	;# 
  4963   000F08                     INLVLA          equ	3848	;# 
  4964   000F09                     SLRCONA         equ	3849	;# 
  4965   000F0A                     ODCONA          equ	3850	;# 
  4966   000F0B                     WPUA            equ	3851	;# 
  4967   000F0C                     ANSELA          equ	3852	;# 
  4968   000F0D                     IOCBF           equ	3853	;# 
  4969   000F0E                     IOCBN           equ	3854	;# 
  4970   000F0F                     IOCBP           equ	3855	;# 
  4971   000F10                     INLVLB          equ	3856	;# 
  4972   000F11                     SLRCONB         equ	3857	;# 
  4973   000F12                     ODCONB          equ	3858	;# 
  4974   000F13                     WPUB            equ	3859	;# 
  4975   000F14                     ANSELB          equ	3860	;# 
  4976   000F15                     IOCCF           equ	3861	;# 
  4977   000F16                     IOCCN           equ	3862	;# 
  4978   000F17                     IOCCP           equ	3863	;# 
  4979   000F18                     INLVLC          equ	3864	;# 
  4980   000F19                     SLRCONC         equ	3865	;# 
  4981   000F1A                     ODCONC          equ	3866	;# 
  4982   000F1B                     WPUC            equ	3867	;# 
  4983   000F1C                     ANSELC          equ	3868	;# 
  4984   000F22                     IOCEF           equ	3874	;# 
  4985   000F23                     IOCEN           equ	3875	;# 
  4986   000F24                     IOCEP           equ	3876	;# 
  4987   000F25                     INLVLE          equ	3877	;# 
  4988   000F28                     WPUE            equ	3880	;# 
  4989   000F2A                     HLVDCON0        equ	3882	;# 
  4990   000F2B                     HLVDCON1        equ	3883	;# 
  4991   000F2C                     FVRCON          equ	3884	;# 
  4992   000F2D                     ZCDCON          equ	3885	;# 
  4993   000F2E                     DAC1CON0        equ	3886	;# 
  4994   000F2F                     DAC1CON1        equ	3887	;# 
  4995   000F30                     CM2CON0         equ	3888	;# 
  4996   000F31                     CM2CON1         equ	3889	;# 
  4997   000F32                     CM2NCH          equ	3890	;# 
  4998   000F33                     CM2PCH          equ	3891	;# 
  4999   000F34                     CM1CON0         equ	3892	;# 
  5000   000F35                     CM1CON1         equ	3893	;# 
  5001   000F36                     CM1NCH          equ	3894	;# 
  5002   000F37                     CM1PCH          equ	3895	;# 
  5003   000F38                     CMOUT           equ	3896	;# 
  5004   000F39                     CLKRCON         equ	3897	;# 
  5005   000F3A                     CLKRCLK         equ	3898	;# 
  5006   000F3B                     CWG1CLK         equ	3899	;# 
  5007   000F3B                     CWG1CLKCON      equ	3899	;# 
  5008   000F3C                     CWG1ISM         equ	3900	;# 
  5009   000F3D                     CWG1DBR         equ	3901	;# 
  5010   000F3E                     CWG1DBF         equ	3902	;# 
  5011   000F3F                     CWG1CON0        equ	3903	;# 
  5012   000F40                     CWG1CON1        equ	3904	;# 
  5013   000F41                     CWG1AS0         equ	3905	;# 
  5014   000F42                     CWG1AS1         equ	3906	;# 
  5015   000F43                     CWG1STR         equ	3907	;# 
  5016   000F44                     SCANLADR        equ	3908	;# 
  5017   000F44                     SCANLADRL       equ	3908	;# 
  5018   000F45                     SCANLADRH       equ	3909	;# 
  5019   000F46                     SCANLADRU       equ	3910	;# 
  5020   000F47                     SCANHADR        equ	3911	;# 
  5021   000F47                     SCANHADRL       equ	3911	;# 
  5022   000F48                     SCANHADRH       equ	3912	;# 
  5023   000F49                     SCANHADRU       equ	3913	;# 
  5024   000F4A                     SCANCON0        equ	3914	;# 
  5025   000F4B                     SCANTRIG        equ	3915	;# 
  5026   000F4C                     MDCON0          equ	3916	;# 
  5027   000F4D                     MDCON1          equ	3917	;# 
  5028   000F4E                     MDSRC           equ	3918	;# 
  5029   000F4F                     MDCARL          equ	3919	;# 
  5030   000F50                     MDCARH          equ	3920	;# 
  5031   000F51                     ADACT           equ	3921	;# 
  5032   000F52                     ADCLK           equ	3922	;# 
  5033   000F53                     ADREF           equ	3923	;# 
  5034   000F54                     ADCON1          equ	3924	;# 
  5035   000F55                     ADCON2          equ	3925	;# 
  5036   000F56                     ADCON3          equ	3926	;# 
  5037   000F57                     ADACQ           equ	3927	;# 
  5038   000F58                     ADCAP           equ	3928	;# 
  5039   000F59                     ADPRE           equ	3929	;# 
  5040   000F5A                     ADPCH           equ	3930	;# 
  5041   000F5B                     ADCON0          equ	3931	;# 
  5042   000F5C                     ADPREV          equ	3932	;# 
  5043   000F5C                     ADPREVL         equ	3932	;# 
  5044   000F5D                     ADPREVH         equ	3933	;# 
  5045   000F5E                     ADRES           equ	3934	;# 
  5046   000F5E                     ADRESL          equ	3934	;# 
  5047   000F5F                     ADRESH          equ	3935	;# 
  5048   000F60                     ADSTAT          equ	3936	;# 
  5049   000F61                     ADRPT           equ	3937	;# 
  5050   000F62                     ADCNT           equ	3938	;# 
  5051   000F63                     ADSTPT          equ	3939	;# 
  5052   000F63                     ADSTPTL         equ	3939	;# 
  5053   000F64                     ADSTPTH         equ	3940	;# 
  5054   000F65                     ADLTH           equ	3941	;# 
  5055   000F65                     ADLTHL          equ	3941	;# 
  5056   000F66                     ADLTHH          equ	3942	;# 
  5057   000F67                     ADUTH           equ	3943	;# 
  5058   000F67                     ADUTHL          equ	3943	;# 
  5059   000F68                     ADUTHH          equ	3944	;# 
  5060   000F69                     ADERR           equ	3945	;# 
  5061   000F69                     ADERRL          equ	3945	;# 
  5062   000F6A                     ADERRH          equ	3946	;# 
  5063   000F6B                     ADACC           equ	3947	;# 
  5064   000F6B                     ADACCL          equ	3947	;# 
  5065   000F6C                     ADACCH          equ	3948	;# 
  5066   000F6D                     ADFLTR          equ	3949	;# 
  5067   000F6D                     ADFLTRL         equ	3949	;# 
  5068   000F6E                     ADFLTRH         equ	3950	;# 
  5069   000F6F                     CRCDATA         equ	3951	;# 
  5070   000F6F                     CRCDATL         equ	3951	;# 
  5071   000F70                     CRCDATH         equ	3952	;# 
  5072   000F71                     CRCACC          equ	3953	;# 
  5073   000F71                     CRCACCL         equ	3953	;# 
  5074   000F72                     CRCACCH         equ	3954	;# 
  5075   000F73                     CRCSHFT         equ	3955	;# 
  5076   000F73                     CRCSHIFTL       equ	3955	;# 
  5077   000F74                     CRCSHIFTH       equ	3956	;# 
  5078   000F75                     CRCXOR          equ	3957	;# 
  5079   000F75                     CRCXORL         equ	3957	;# 
  5080   000F76                     CRCXORH         equ	3958	;# 
  5081   000F77                     CRCCON0         equ	3959	;# 
  5082   000F78                     CRCCON1         equ	3960	;# 
  5083   000F79                     NVMADR          equ	3961	;# 
  5084   000F79                     NVMADRL         equ	3961	;# 
  5085   000F7A                     NVMADRH         equ	3962	;# 
  5086   000F7B                     NVMADRU         equ	3963	;# 
  5087   000F7C                     NVMDAT          equ	3964	;# 
  5088   000F7C                     NVMDATL         equ	3964	;# 
  5089   000F7D                     NVMDATH         equ	3965	;# 
  5090   000F7F                     NVMCON0         equ	3967	;# 
  5091   000F80                     NVMCON1         equ	3968	;# 
  5092   000F81                     NVMCON2         equ	3969	;# 
  5093   000F82                     LATA            equ	3970	;# 
  5094   000F83                     LATB            equ	3971	;# 
  5095   000F84                     LATC            equ	3972	;# 
  5096   000F87                     TRISA           equ	3975	;# 
  5097   000F87                     DDRA            equ	3975	;# 
  5098   000F88                     TRISB           equ	3976	;# 
  5099   000F88                     DDRB            equ	3976	;# 
  5100   000F89                     TRISC           equ	3977	;# 
  5101   000F89                     DDRC            equ	3977	;# 
  5102   000F8C                     PORTA           equ	3980	;# 
  5103   000F8D                     PORTB           equ	3981	;# 
  5104   000F8E                     PORTC           equ	3982	;# 
  5105   000F90                     PORTE           equ	3984	;# 
  5106   000F91                     SSP1BUF         equ	3985	;# 
  5107   000F92                     SSP1ADD         equ	3986	;# 
  5108   000F93                     SSP1MSK         equ	3987	;# 
  5109   000F94                     SSP1STAT        equ	3988	;# 
  5110   000F95                     SSP1CON1        equ	3989	;# 
  5111   000F96                     SSP1CON2        equ	3990	;# 
  5112   000F97                     SSP1CON3        equ	3991	;# 
  5113   000F98                     RC1REG          equ	3992	;# 
  5114   000F98                     RCREG           equ	3992	;# 
  5115   000F98                     RCREG1          equ	3992	;# 
  5116   000F99                     TX1REG          equ	3993	;# 
  5117   000F99                     TXREG1          equ	3993	;# 
  5118   000F99                     TXREG           equ	3993	;# 
  5119   000F9A                     SP1BRG          equ	3994	;# 
  5120   000F9A                     SPBRG           equ	3994	;# 
  5121   000F9A                     SP1BRGL         equ	3994	;# 
  5122   000F9A                     SPBRG1          equ	3994	;# 
  5123   000F9A                     SPBRGL          equ	3994	;# 
  5124   000F9B                     SP1BRGH         equ	3995	;# 
  5125   000F9B                     SPBRGH          equ	3995	;# 
  5126   000F9B                     SPBRGH1         equ	3995	;# 
  5127   000F9C                     RC1STA          equ	3996	;# 
  5128   000F9C                     RCSTA1          equ	3996	;# 
  5129   000F9C                     RCSTA           equ	3996	;# 
  5130   000F9D                     TX1STA          equ	3997	;# 
  5131   000F9D                     TXSTA1          equ	3997	;# 
  5132   000F9D                     TXSTA           equ	3997	;# 
  5133   000F9E                     BAUD1CON        equ	3998	;# 
  5134   000F9E                     BAUDCON1        equ	3998	;# 
  5135   000F9E                     BAUDCTL1        equ	3998	;# 
  5136   000F9E                     BAUDCON         equ	3998	;# 
  5137   000F9E                     BAUDCTL         equ	3998	;# 
  5138   000F9F                     PWM4DC          equ	3999	;# 
  5139   000F9F                     PWM4DCL         equ	3999	;# 
  5140   000FA0                     PWM4DCH         equ	4000	;# 
  5141   000FA1                     PWM4CON         equ	4001	;# 
  5142   000FA2                     PWM3DC          equ	4002	;# 
  5143   000FA2                     PWM3DCL         equ	4002	;# 
  5144   000FA3                     PWM3DCH         equ	4003	;# 
  5145   000FA4                     PWM3CON         equ	4004	;# 
  5146   000FA5                     CCPR2           equ	4005	;# 
  5147   000FA5                     CCPR2L          equ	4005	;# 
  5148   000FA6                     CCPR2H          equ	4006	;# 
  5149   000FA7                     CCP2CON         equ	4007	;# 
  5150   000FA8                     CCP2CAP         equ	4008	;# 
  5151   000FA9                     CCPR1           equ	4009	;# 
  5152   000FA9                     CCPR1L          equ	4009	;# 
  5153   000FAA                     CCPR1H          equ	4010	;# 
  5154   000FAB                     CCP1CON         equ	4011	;# 
  5155   000FAC                     CCP1CAP         equ	4012	;# 
  5156   000FAD                     CCPTMRS         equ	4013	;# 
  5157   000FAE                     T6TMR           equ	4014	;# 
  5158   000FAE                     TMR6            equ	4014	;# 
  5159   000FAF                     T6PR            equ	4015	;# 
  5160   000FAF                     PR6             equ	4015	;# 
  5161   000FB0                     T6CON           equ	4016	;# 
  5162   000FB1                     T6HLT           equ	4017	;# 
  5163   000FB2                     T6CLKCON        equ	4018	;# 
  5164   000FB2                     T6CLK           equ	4018	;# 
  5165   000FB3                     T6RST           equ	4019	;# 
  5166   000FB4                     T4TMR           equ	4020	;# 
  5167   000FB4                     TMR4            equ	4020	;# 
  5168   000FB5                     T4PR            equ	4021	;# 
  5169   000FB5                     PR4             equ	4021	;# 
  5170   000FB6                     T4CON           equ	4022	;# 
  5171   000FB7                     T4HLT           equ	4023	;# 
  5172   000FB8                     T4CLKCON        equ	4024	;# 
  5173   000FB8                     T4CLK           equ	4024	;# 
  5174   000FB9                     T4RST           equ	4025	;# 
  5175   000FBA                     T2TMR           equ	4026	;# 
  5176   000FBA                     TMR2            equ	4026	;# 
  5177   000FBB                     T2PR            equ	4027	;# 
  5178   000FBB                     PR2             equ	4027	;# 
  5179   000FBC                     T2CON           equ	4028	;# 
  5180   000FBD                     T2HLT           equ	4029	;# 
  5181   000FBE                     T2CLKCON        equ	4030	;# 
  5182   000FBE                     T2CLK           equ	4030	;# 
  5183   000FBF                     T2RST           equ	4031	;# 
  5184   000FC0                     TMR5            equ	4032	;# 
  5185   000FC0                     TMR5L           equ	4032	;# 
  5186   000FC1                     TMR5H           equ	4033	;# 
  5187   000FC2                     T5CON           equ	4034	;# 
  5188   000FC2                     TMR5CON         equ	4034	;# 
  5189   000FC3                     T5GCON          equ	4035	;# 
  5190   000FC3                     TMR5GCON        equ	4035	;# 
  5191   000FC4                     T5GATE          equ	4036	;# 
  5192   000FC4                     TMR5GATE        equ	4036	;# 
  5193   000FC5                     T5CLK           equ	4037	;# 
  5194   000FC5                     TMR5CLK         equ	4037	;# 
  5195   000FC5                     PR5             equ	4037	;# 
  5196   000FC6                     TMR3            equ	4038	;# 
  5197   000FC6                     TMR3L           equ	4038	;# 
  5198   000FC7                     TMR3H           equ	4039	;# 
  5199   000FC8                     T3CON           equ	4040	;# 
  5200   000FC8                     TMR3CON         equ	4040	;# 
  5201   000FC9                     T3GCON          equ	4041	;# 
  5202   000FC9                     TMR3GCON        equ	4041	;# 
  5203   000FCA                     T3GATE          equ	4042	;# 
  5204   000FCA                     TMR3GATE        equ	4042	;# 
  5205   000FCB                     T3CLK           equ	4043	;# 
  5206   000FCB                     TMR3CLK         equ	4043	;# 
  5207   000FCB                     PR3             equ	4043	;# 
  5208   000FCC                     TMR1            equ	4044	;# 
  5209   000FCC                     TMR1L           equ	4044	;# 
  5210   000FCD                     TMR1H           equ	4045	;# 
  5211   000FCE                     T1CON           equ	4046	;# 
  5212   000FCE                     TMR1CON         equ	4046	;# 
  5213   000FCF                     T1GCON          equ	4047	;# 
  5214   000FCF                     TMR1GCON        equ	4047	;# 
  5215   000FD0                     T1GATE          equ	4048	;# 
  5216   000FD0                     TMR1GATE        equ	4048	;# 
  5217   000FD1                     T1CLK           equ	4049	;# 
  5218   000FD1                     TMR1CLK         equ	4049	;# 
  5219   000FD1                     PR1             equ	4049	;# 
  5220   000FD2                     TMR0L           equ	4050	;# 
  5221   000FD2                     TMR0            equ	4050	;# 
  5222   000FD3                     TMR0H           equ	4051	;# 
  5223   000FD3                     PR0             equ	4051	;# 
  5224   000FD4                     T0CON0          equ	4052	;# 
  5225   000FD5                     T0CON1          equ	4053	;# 
  5226   000FD6                     PCON1           equ	4054	;# 
  5227   000FD7                     PCON0           equ	4055	;# 
  5228   000FD8                     STATUS          equ	4056	;# 
  5229   000FD9                     FSR2            equ	4057	;# 
  5230   000FD9                     FSR2L           equ	4057	;# 
  5231   000FDA                     FSR2H           equ	4058	;# 
  5232   000FDB                     PLUSW2          equ	4059	;# 
  5233   000FDC                     PREINC2         equ	4060	;# 
  5234   000FDD                     POSTDEC2        equ	4061	;# 
  5235   000FDE                     POSTINC2        equ	4062	;# 
  5236   000FDF                     INDF2           equ	4063	;# 
  5237   000FE0                     BSR             equ	4064	;# 
  5238   000FE1                     FSR1            equ	4065	;# 
  5239   000FE1                     FSR1L           equ	4065	;# 
  5240   000FE2                     FSR1H           equ	4066	;# 
  5241   000FE3                     PLUSW1          equ	4067	;# 
  5242   000FE4                     PREINC1         equ	4068	;# 
  5243   000FE5                     POSTDEC1        equ	4069	;# 
  5244   000FE6                     POSTINC1        equ	4070	;# 
  5245   000FE7                     INDF1           equ	4071	;# 
  5246   000FE8                     WREG            equ	4072	;# 
  5247   000FE9                     FSR0            equ	4073	;# 
  5248   000FE9                     FSR0L           equ	4073	;# 
  5249   000FEA                     FSR0H           equ	4074	;# 
  5250   000FEB                     PLUSW0          equ	4075	;# 
  5251   000FEC                     PREINC0         equ	4076	;# 
  5252   000FED                     POSTDEC0        equ	4077	;# 
  5253   000FEE                     POSTINC0        equ	4078	;# 
  5254   000FEF                     INDF0           equ	4079	;# 
  5255   000FF2                     INTCON          equ	4082	;# 
  5256   000FF3                     PROD            equ	4083	;# 
  5257   000FF3                     PRODL           equ	4083	;# 
  5258   000FF4                     PRODH           equ	4084	;# 
  5259   000FF5                     TABLAT          equ	4085	;# 
  5260   000FF6                     TBLPTR          equ	4086	;# 
  5261   000FF6                     TBLPTRL         equ	4086	;# 
  5262   000FF7                     TBLPTRH         equ	4087	;# 
  5263   000FF8                     TBLPTRU         equ	4088	;# 
  5264   000FF9                     PCLAT           equ	4089	;# 
  5265   000FF9                     PC              equ	4089	;# 
  5266   000FF9                     PCL             equ	4089	;# 
  5267   000FFA                     PCLATH          equ	4090	;# 
  5268   000FFB                     PCLATU          equ	4091	;# 
  5269   000FFC                     STKPTR          equ	4092	;# 
  5270   000FFD                     TOS             equ	4093	;# 
  5271   000FFD                     TOSL            equ	4093	;# 
  5272   000FFE                     TOSH            equ	4094	;# 
  5273   000FFF                     TOSU            equ	4095	;# 
  5274   000E9B                     PPSLOCK         equ	3739	;# 
  5275   000E9C                     INT0PPS         equ	3740	;# 
  5276   000E9D                     INT1PPS         equ	3741	;# 
  5277   000E9E                     INT2PPS         equ	3742	;# 
  5278   000E9F                     T0CKIPPS        equ	3743	;# 
  5279   000EA0                     T1CKIPPS        equ	3744	;# 
  5280   000EA1                     T1GPPS          equ	3745	;# 
  5281   000EA2                     T3CKIPPS        equ	3746	;# 
  5282   000EA3                     T3GPPS          equ	3747	;# 
  5283   000EA4                     T5CKIPPS        equ	3748	;# 
  5284   000EA5                     T5GPPS          equ	3749	;# 
  5285   000EA6                     T2INPPS         equ	3750	;# 
  5286   000EA7                     T4INPPS         equ	3751	;# 
  5287   000EA8                     T6INPPS         equ	3752	;# 
  5288   000EA9                     ADACTPPS        equ	3753	;# 
  5289   000EAA                     CCP1PPS         equ	3754	;# 
  5290   000EAB                     CCP2PPS         equ	3755	;# 
  5291   000EAC                     CWG1PPS         equ	3756	;# 
  5292   000EAC                     CWGPPS          equ	3756	;# 
  5293   000EAC                     CWGINPPS        equ	3756	;# 
  5294   000EAC                     CWG1INPPS       equ	3756	;# 
  5295   000EAD                     MDCARLPPS       equ	3757	;# 
  5296   000EAE                     MDCARHPPS       equ	3758	;# 
  5297   000EAF                     MDSRCPPS        equ	3759	;# 
  5298   000EB0                     RX1PPS          equ	3760	;# 
  5299   000EB0                     RXPPS           equ	3760	;# 
  5300   000EB0                     RXDT1PPS        equ	3760	;# 
  5301   000EB1                     CK1PPS          equ	3761	;# 
  5302   000EB1                     TXPPS           equ	3761	;# 
  5303   000EB1                     CKPPS           equ	3761	;# 
  5304   000EB1                     TXCK1PPS        equ	3761	;# 
  5305   000EB1                     TX1PPS          equ	3761	;# 
  5306   000EB2                     SSP1CLKPPS      equ	3762	;# 
  5307   000EB2                     SSPCLKPPS       equ	3762	;# 
  5308   000EB3                     SSP1DATPPS      equ	3763	;# 
  5309   000EB3                     SSPDATPPS       equ	3763	;# 
  5310   000EB4                     SSP1SSPPS       equ	3764	;# 
  5311   000EB4                     SSPSSPPS        equ	3764	;# 
  5312   000EB5                     IPR0            equ	3765	;# 
  5313   000EB6                     IPR1            equ	3766	;# 
  5314   000EB7                     IPR2            equ	3767	;# 
  5315   000EB8                     IPR3            equ	3768	;# 
  5316   000EB9                     IPR4            equ	3769	;# 
  5317   000EBA                     IPR5            equ	3770	;# 
  5318   000EBB                     IPR6            equ	3771	;# 
  5319   000EBC                     IPR7            equ	3772	;# 
  5320   000EBD                     PIE0            equ	3773	;# 
  5321   000EBE                     PIE1            equ	3774	;# 
  5322   000EBF                     PIE2            equ	3775	;# 
  5323   000EC0                     PIE3            equ	3776	;# 
  5324   000EC1                     PIE4            equ	3777	;# 
  5325   000EC2                     PIE5            equ	3778	;# 
  5326   000EC3                     PIE6            equ	3779	;# 
  5327   000EC4                     PIE7            equ	3780	;# 
  5328   000EC5                     PIR0            equ	3781	;# 
  5329   000EC6                     PIR1            equ	3782	;# 
  5330   000EC7                     PIR2            equ	3783	;# 
  5331   000EC8                     PIR3            equ	3784	;# 
  5332   000EC9                     PIR4            equ	3785	;# 
  5333   000ECA                     PIR5            equ	3786	;# 
  5334   000ECB                     PIR6            equ	3787	;# 
  5335   000ECC                     PIR7            equ	3788	;# 
  5336   000ECD                     WDTCON0         equ	3789	;# 
  5337   000ECE                     WDTCON1         equ	3790	;# 
  5338   000ECF                     WDTPSL          equ	3791	;# 
  5339   000ED0                     WDTPSH          equ	3792	;# 
  5340   000ED1                     WDTTMR          equ	3793	;# 
  5341   000ED2                     CPUDOZE         equ	3794	;# 
  5342   000ED3                     OSCCON1         equ	3795	;# 
  5343   000ED4                     OSCCON2         equ	3796	;# 
  5344   000ED5                     OSCCON3         equ	3797	;# 
  5345   000ED6                     OSCSTAT         equ	3798	;# 
  5346   000ED6                     OSCSTAT1        equ	3798	;# 
  5347   000ED7                     OSCEN           equ	3799	;# 
  5348   000ED8                     OSCTUNE         equ	3800	;# 
  5349   000ED9                     OSCFRQ          equ	3801	;# 
  5350   000ED9                     OSCFREQ         equ	3801	;# 
  5351   000EDA                     VREGCON         equ	3802	;# 
  5352   000EDB                     BORCON          equ	3803	;# 
  5353   000EDC                     PMD0            equ	3804	;# 
  5354   000EDD                     PMD1            equ	3805	;# 
  5355   000EDE                     PMD2            equ	3806	;# 
  5356   000EDF                     PMD3            equ	3807	;# 
  5357   000EE0                     PMD4            equ	3808	;# 
  5358   000EE1                     PMD5            equ	3809	;# 
  5359   000EE2                     RA0PPS          equ	3810	;# 
  5360   000EE3                     RA1PPS          equ	3811	;# 
  5361   000EE4                     RA2PPS          equ	3812	;# 
  5362   000EE5                     RA3PPS          equ	3813	;# 
  5363   000EE6                     RA4PPS          equ	3814	;# 
  5364   000EE7                     RA5PPS          equ	3815	;# 
  5365   000EE8                     RA6PPS          equ	3816	;# 
  5366   000EE9                     RA7PPS          equ	3817	;# 
  5367   000EEA                     RB0PPS          equ	3818	;# 
  5368   000EEB                     RB1PPS          equ	3819	;# 
  5369   000EEC                     RB2PPS          equ	3820	;# 
  5370   000EED                     RB3PPS          equ	3821	;# 
  5371   000EEE                     RB4PPS          equ	3822	;# 
  5372   000EEF                     RB5PPS          equ	3823	;# 
  5373   000EF0                     RB6PPS          equ	3824	;# 
  5374   000EF1                     RB7PPS          equ	3825	;# 
  5375   000EF2                     RC0PPS          equ	3826	;# 
  5376   000EF3                     RC1PPS          equ	3827	;# 
  5377   000EF4                     RC2PPS          equ	3828	;# 
  5378   000EF5                     RC3PPS          equ	3829	;# 
  5379   000EF6                     RC4PPS          equ	3830	;# 
  5380   000EF7                     RC5PPS          equ	3831	;# 
  5381   000EF8                     RC6PPS          equ	3832	;# 
  5382   000EF9                     RC7PPS          equ	3833	;# 
  5383   000F05                     IOCAF           equ	3845	;# 
  5384   000F06                     IOCAN           equ	3846	;# 
  5385   000F07                     IOCAP           equ	3847	;# 
  5386   000F08                     INLVLA          equ	3848	;# 
  5387   000F09                     SLRCONA         equ	3849	;# 
  5388   000F0A                     ODCONA          equ	3850	;# 
  5389   000F0B                     WPUA            equ	3851	;# 
  5390   000F0C                     ANSELA          equ	3852	;# 
  5391   000F0D                     IOCBF           equ	3853	;# 
  5392   000F0E                     IOCBN           equ	3854	;# 
  5393   000F0F                     IOCBP           equ	3855	;# 
  5394   000F10                     INLVLB          equ	3856	;# 
  5395   000F11                     SLRCONB         equ	3857	;# 
  5396   000F12                     ODCONB          equ	3858	;# 
  5397   000F13                     WPUB            equ	3859	;# 
  5398   000F14                     ANSELB          equ	3860	;# 
  5399   000F15                     IOCCF           equ	3861	;# 
  5400   000F16                     IOCCN           equ	3862	;# 
  5401   000F17                     IOCCP           equ	3863	;# 
  5402   000F18                     INLVLC          equ	3864	;# 
  5403   000F19                     SLRCONC         equ	3865	;# 
  5404   000F1A                     ODCONC          equ	3866	;# 
  5405   000F1B                     WPUC            equ	3867	;# 
  5406   000F1C                     ANSELC          equ	3868	;# 
  5407   000F22                     IOCEF           equ	3874	;# 
  5408   000F23                     IOCEN           equ	3875	;# 
  5409   000F24                     IOCEP           equ	3876	;# 
  5410   000F25                     INLVLE          equ	3877	;# 
  5411   000F28                     WPUE            equ	3880	;# 
  5412   000F2A                     HLVDCON0        equ	3882	;# 
  5413   000F2B                     HLVDCON1        equ	3883	;# 
  5414   000F2C                     FVRCON          equ	3884	;# 
  5415   000F2D                     ZCDCON          equ	3885	;# 
  5416   000F2E                     DAC1CON0        equ	3886	;# 
  5417   000F2F                     DAC1CON1        equ	3887	;# 
  5418   000F30                     CM2CON0         equ	3888	;# 
  5419   000F31                     CM2CON1         equ	3889	;# 
  5420   000F32                     CM2NCH          equ	3890	;# 
  5421   000F33                     CM2PCH          equ	3891	;# 
  5422   000F34                     CM1CON0         equ	3892	;# 
  5423   000F35                     CM1CON1         equ	3893	;# 
  5424   000F36                     CM1NCH          equ	3894	;# 
  5425   000F37                     CM1PCH          equ	3895	;# 
  5426   000F38                     CMOUT           equ	3896	;# 
  5427   000F39                     CLKRCON         equ	3897	;# 
  5428   000F3A                     CLKRCLK         equ	3898	;# 
  5429   000F3B                     CWG1CLK         equ	3899	;# 
  5430   000F3B                     CWG1CLKCON      equ	3899	;# 
  5431   000F3C                     CWG1ISM         equ	3900	;# 
  5432   000F3D                     CWG1DBR         equ	3901	;# 
  5433   000F3E                     CWG1DBF         equ	3902	;# 
  5434   000F3F                     CWG1CON0        equ	3903	;# 
  5435   000F40                     CWG1CON1        equ	3904	;# 
  5436   000F41                     CWG1AS0         equ	3905	;# 
  5437   000F42                     CWG1AS1         equ	3906	;# 
  5438   000F43                     CWG1STR         equ	3907	;# 
  5439   000F44                     SCANLADR        equ	3908	;# 
  5440   000F44                     SCANLADRL       equ	3908	;# 
  5441   000F45                     SCANLADRH       equ	3909	;# 
  5442   000F46                     SCANLADRU       equ	3910	;# 
  5443   000F47                     SCANHADR        equ	3911	;# 
  5444   000F47                     SCANHADRL       equ	3911	;# 
  5445   000F48                     SCANHADRH       equ	3912	;# 
  5446   000F49                     SCANHADRU       equ	3913	;# 
  5447   000F4A                     SCANCON0        equ	3914	;# 
  5448   000F4B                     SCANTRIG        equ	3915	;# 
  5449   000F4C                     MDCON0          equ	3916	;# 
  5450   000F4D                     MDCON1          equ	3917	;# 
  5451   000F4E                     MDSRC           equ	3918	;# 
  5452   000F4F                     MDCARL          equ	3919	;# 
  5453   000F50                     MDCARH          equ	3920	;# 
  5454   000F51                     ADACT           equ	3921	;# 
  5455   000F52                     ADCLK           equ	3922	;# 
  5456   000F53                     ADREF           equ	3923	;# 
  5457   000F54                     ADCON1          equ	3924	;# 
  5458   000F55                     ADCON2          equ	3925	;# 
  5459   000F56                     ADCON3          equ	3926	;# 
  5460   000F57                     ADACQ           equ	3927	;# 
  5461   000F58                     ADCAP           equ	3928	;# 
  5462   000F59                     ADPRE           equ	3929	;# 
  5463   000F5A                     ADPCH           equ	3930	;# 
  5464   000F5B                     ADCON0          equ	3931	;# 
  5465   000F5C                     ADPREV          equ	3932	;# 
  5466   000F5C                     ADPREVL         equ	3932	;# 
  5467   000F5D                     ADPREVH         equ	3933	;# 
  5468   000F5E                     ADRES           equ	3934	;# 
  5469   000F5E                     ADRESL          equ	3934	;# 
  5470   000F5F                     ADRESH          equ	3935	;# 
  5471   000F60                     ADSTAT          equ	3936	;# 
  5472   000F61                     ADRPT           equ	3937	;# 
  5473   000F62                     ADCNT           equ	3938	;# 
  5474   000F63                     ADSTPT          equ	3939	;# 
  5475   000F63                     ADSTPTL         equ	3939	;# 
  5476   000F64                     ADSTPTH         equ	3940	;# 
  5477   000F65                     ADLTH           equ	3941	;# 
  5478   000F65                     ADLTHL          equ	3941	;# 
  5479   000F66                     ADLTHH          equ	3942	;# 
  5480   000F67                     ADUTH           equ	3943	;# 
  5481   000F67                     ADUTHL          equ	3943	;# 
  5482   000F68                     ADUTHH          equ	3944	;# 
  5483   000F69                     ADERR           equ	3945	;# 
  5484   000F69                     ADERRL          equ	3945	;# 
  5485   000F6A                     ADERRH          equ	3946	;# 
  5486   000F6B                     ADACC           equ	3947	;# 
  5487   000F6B                     ADACCL          equ	3947	;# 
  5488   000F6C                     ADACCH          equ	3948	;# 
  5489   000F6D                     ADFLTR          equ	3949	;# 
  5490   000F6D                     ADFLTRL         equ	3949	;# 
  5491   000F6E                     ADFLTRH         equ	3950	;# 
  5492   000F6F                     CRCDATA         equ	3951	;# 
  5493   000F6F                     CRCDATL         equ	3951	;# 
  5494   000F70                     CRCDATH         equ	3952	;# 
  5495   000F71                     CRCACC          equ	3953	;# 
  5496   000F71                     CRCACCL         equ	3953	;# 
  5497   000F72                     CRCACCH         equ	3954	;# 
  5498   000F73                     CRCSHFT         equ	3955	;# 
  5499   000F73                     CRCSHIFTL       equ	3955	;# 
  5500   000F74                     CRCSHIFTH       equ	3956	;# 
  5501   000F75                     CRCXOR          equ	3957	;# 
  5502   000F75                     CRCXORL         equ	3957	;# 
  5503   000F76                     CRCXORH         equ	3958	;# 
  5504   000F77                     CRCCON0         equ	3959	;# 
  5505   000F78                     CRCCON1         equ	3960	;# 
  5506   000F79                     NVMADR          equ	3961	;# 
  5507   000F79                     NVMADRL         equ	3961	;# 
  5508   000F7A                     NVMADRH         equ	3962	;# 
  5509   000F7B                     NVMADRU         equ	3963	;# 
  5510   000F7C                     NVMDAT          equ	3964	;# 
  5511   000F7C                     NVMDATL         equ	3964	;# 
  5512   000F7D                     NVMDATH         equ	3965	;# 
  5513   000F7F                     NVMCON0         equ	3967	;# 
  5514   000F80                     NVMCON1         equ	3968	;# 
  5515   000F81                     NVMCON2         equ	3969	;# 
  5516   000F82                     LATA            equ	3970	;# 
  5517   000F83                     LATB            equ	3971	;# 
  5518   000F84                     LATC            equ	3972	;# 
  5519   000F87                     TRISA           equ	3975	;# 
  5520   000F87                     DDRA            equ	3975	;# 
  5521   000F88                     TRISB           equ	3976	;# 
  5522   000F88                     DDRB            equ	3976	;# 
  5523   000F89                     TRISC           equ	3977	;# 
  5524   000F89                     DDRC            equ	3977	;# 
  5525   000F8C                     PORTA           equ	3980	;# 
  5526   000F8D                     PORTB           equ	3981	;# 
  5527   000F8E                     PORTC           equ	3982	;# 
  5528   000F90                     PORTE           equ	3984	;# 
  5529   000F91                     SSP1BUF         equ	3985	;# 
  5530   000F92                     SSP1ADD         equ	3986	;# 
  5531   000F93                     SSP1MSK         equ	3987	;# 
  5532   000F94                     SSP1STAT        equ	3988	;# 
  5533   000F95                     SSP1CON1        equ	3989	;# 
  5534   000F96                     SSP1CON2        equ	3990	;# 
  5535   000F97                     SSP1CON3        equ	3991	;# 
  5536   000F98                     RC1REG          equ	3992	;# 
  5537   000F98                     RCREG           equ	3992	;# 
  5538   000F98                     RCREG1          equ	3992	;# 
  5539   000F99                     TX1REG          equ	3993	;# 
  5540   000F99                     TXREG1          equ	3993	;# 
  5541   000F99                     TXREG           equ	3993	;# 
  5542   000F9A                     SP1BRG          equ	3994	;# 
  5543   000F9A                     SPBRG           equ	3994	;# 
  5544   000F9A                     SP1BRGL         equ	3994	;# 
  5545   000F9A                     SPBRG1          equ	3994	;# 
  5546   000F9A                     SPBRGL          equ	3994	;# 
  5547   000F9B                     SP1BRGH         equ	3995	;# 
  5548   000F9B                     SPBRGH          equ	3995	;# 
  5549   000F9B                     SPBRGH1         equ	3995	;# 
  5550   000F9C                     RC1STA          equ	3996	;# 
  5551   000F9C                     RCSTA1          equ	3996	;# 
  5552   000F9C                     RCSTA           equ	3996	;# 
  5553   000F9D                     TX1STA          equ	3997	;# 
  5554   000F9D                     TXSTA1          equ	3997	;# 
  5555   000F9D                     TXSTA           equ	3997	;# 
  5556   000F9E                     BAUD1CON        equ	3998	;# 
  5557   000F9E                     BAUDCON1        equ	3998	;# 
  5558   000F9E                     BAUDCTL1        equ	3998	;# 
  5559   000F9E                     BAUDCON         equ	3998	;# 
  5560   000F9E                     BAUDCTL         equ	3998	;# 
  5561   000F9F                     PWM4DC          equ	3999	;# 
  5562   000F9F                     PWM4DCL         equ	3999	;# 
  5563   000FA0                     PWM4DCH         equ	4000	;# 
  5564   000FA1                     PWM4CON         equ	4001	;# 
  5565   000FA2                     PWM3DC          equ	4002	;# 
  5566   000FA2                     PWM3DCL         equ	4002	;# 
  5567   000FA3                     PWM3DCH         equ	4003	;# 
  5568   000FA4                     PWM3CON         equ	4004	;# 
  5569   000FA5                     CCPR2           equ	4005	;# 
  5570   000FA5                     CCPR2L          equ	4005	;# 
  5571   000FA6                     CCPR2H          equ	4006	;# 
  5572   000FA7                     CCP2CON         equ	4007	;# 
  5573   000FA8                     CCP2CAP         equ	4008	;# 
  5574   000FA9                     CCPR1           equ	4009	;# 
  5575   000FA9                     CCPR1L          equ	4009	;# 
  5576   000FAA                     CCPR1H          equ	4010	;# 
  5577   000FAB                     CCP1CON         equ	4011	;# 
  5578   000FAC                     CCP1CAP         equ	4012	;# 
  5579   000FAD                     CCPTMRS         equ	4013	;# 
  5580   000FAE                     T6TMR           equ	4014	;# 
  5581   000FAE                     TMR6            equ	4014	;# 
  5582   000FAF                     T6PR            equ	4015	;# 
  5583   000FAF                     PR6             equ	4015	;# 
  5584   000FB0                     T6CON           equ	4016	;# 
  5585   000FB1                     T6HLT           equ	4017	;# 
  5586   000FB2                     T6CLKCON        equ	4018	;# 
  5587   000FB2                     T6CLK           equ	4018	;# 
  5588   000FB3                     T6RST           equ	4019	;# 
  5589   000FB4                     T4TMR           equ	4020	;# 
  5590   000FB4                     TMR4            equ	4020	;# 
  5591   000FB5                     T4PR            equ	4021	;# 
  5592   000FB5                     PR4             equ	4021	;# 
  5593   000FB6                     T4CON           equ	4022	;# 
  5594   000FB7                     T4HLT           equ	4023	;# 
  5595   000FB8                     T4CLKCON        equ	4024	;# 
  5596   000FB8                     T4CLK           equ	4024	;# 
  5597   000FB9                     T4RST           equ	4025	;# 
  5598   000FBA                     T2TMR           equ	4026	;# 
  5599   000FBA                     TMR2            equ	4026	;# 
  5600   000FBB                     T2PR            equ	4027	;# 
  5601   000FBB                     PR2             equ	4027	;# 
  5602   000FBC                     T2CON           equ	4028	;# 
  5603   000FBD                     T2HLT           equ	4029	;# 
  5604   000FBE                     T2CLKCON        equ	4030	;# 
  5605   000FBE                     T2CLK           equ	4030	;# 
  5606   000FBF                     T2RST           equ	4031	;# 
  5607   000FC0                     TMR5            equ	4032	;# 
  5608   000FC0                     TMR5L           equ	4032	;# 
  5609   000FC1                     TMR5H           equ	4033	;# 
  5610   000FC2                     T5CON           equ	4034	;# 
  5611   000FC2                     TMR5CON         equ	4034	;# 
  5612   000FC3                     T5GCON          equ	4035	;# 
  5613   000FC3                     TMR5GCON        equ	4035	;# 
  5614   000FC4                     T5GATE          equ	4036	;# 
  5615   000FC4                     TMR5GATE        equ	4036	;# 
  5616   000FC5                     T5CLK           equ	4037	;# 
  5617   000FC5                     TMR5CLK         equ	4037	;# 
  5618   000FC5                     PR5             equ	4037	;# 
  5619   000FC6                     TMR3            equ	4038	;# 
  5620   000FC6                     TMR3L           equ	4038	;# 
  5621   000FC7                     TMR3H           equ	4039	;# 
  5622   000FC8                     T3CON           equ	4040	;# 
  5623   000FC8                     TMR3CON         equ	4040	;# 
  5624   000FC9                     T3GCON          equ	4041	;# 
  5625   000FC9                     TMR3GCON        equ	4041	;# 
  5626   000FCA                     T3GATE          equ	4042	;# 
  5627   000FCA                     TMR3GATE        equ	4042	;# 
  5628   000FCB                     T3CLK           equ	4043	;# 
  5629   000FCB                     TMR3CLK         equ	4043	;# 
  5630   000FCB                     PR3             equ	4043	;# 
  5631   000FCC                     TMR1            equ	4044	;# 
  5632   000FCC                     TMR1L           equ	4044	;# 
  5633   000FCD                     TMR1H           equ	4045	;# 
  5634   000FCE                     T1CON           equ	4046	;# 
  5635   000FCE                     TMR1CON         equ	4046	;# 
  5636   000FCF                     T1GCON          equ	4047	;# 
  5637   000FCF                     TMR1GCON        equ	4047	;# 
  5638   000FD0                     T1GATE          equ	4048	;# 
  5639   000FD0                     TMR1GATE        equ	4048	;# 
  5640   000FD1                     T1CLK           equ	4049	;# 
  5641   000FD1                     TMR1CLK         equ	4049	;# 
  5642   000FD1                     PR1             equ	4049	;# 
  5643   000FD2                     TMR0L           equ	4050	;# 
  5644   000FD2                     TMR0            equ	4050	;# 
  5645   000FD3                     TMR0H           equ	4051	;# 
  5646   000FD3                     PR0             equ	4051	;# 
  5647   000FD4                     T0CON0          equ	4052	;# 
  5648   000FD5                     T0CON1          equ	4053	;# 
  5649   000FD6                     PCON1           equ	4054	;# 
  5650   000FD7                     PCON0           equ	4055	;# 
  5651   000FD8                     STATUS          equ	4056	;# 
  5652   000FD9                     FSR2            equ	4057	;# 
  5653   000FD9                     FSR2L           equ	4057	;# 
  5654   000FDA                     FSR2H           equ	4058	;# 
  5655   000FDB                     PLUSW2          equ	4059	;# 
  5656   000FDC                     PREINC2         equ	4060	;# 
  5657   000FDD                     POSTDEC2        equ	4061	;# 
  5658   000FDE                     POSTINC2        equ	4062	;# 
  5659   000FDF                     INDF2           equ	4063	;# 
  5660   000FE0                     BSR             equ	4064	;# 
  5661   000FE1                     FSR1            equ	4065	;# 
  5662   000FE1                     FSR1L           equ	4065	;# 
  5663   000FE2                     FSR1H           equ	4066	;# 
  5664   000FE3                     PLUSW1          equ	4067	;# 
  5665   000FE4                     PREINC1         equ	4068	;# 
  5666   000FE5                     POSTDEC1        equ	4069	;# 
  5667   000FE6                     POSTINC1        equ	4070	;# 
  5668   000FE7                     INDF1           equ	4071	;# 
  5669   000FE8                     WREG            equ	4072	;# 
  5670   000FE9                     FSR0            equ	4073	;# 
  5671   000FE9                     FSR0L           equ	4073	;# 
  5672   000FEA                     FSR0H           equ	4074	;# 
  5673   000FEB                     PLUSW0          equ	4075	;# 
  5674   000FEC                     PREINC0         equ	4076	;# 
  5675   000FED                     POSTDEC0        equ	4077	;# 
  5676   000FEE                     POSTINC0        equ	4078	;# 
  5677   000FEF                     INDF0           equ	4079	;# 
  5678   000FF2                     INTCON          equ	4082	;# 
  5679   000FF3                     PROD            equ	4083	;# 
  5680   000FF3                     PRODL           equ	4083	;# 
  5681   000FF4                     PRODH           equ	4084	;# 
  5682   000FF5                     TABLAT          equ	4085	;# 
  5683   000FF6                     TBLPTR          equ	4086	;# 
  5684   000FF6                     TBLPTRL         equ	4086	;# 
  5685   000FF7                     TBLPTRH         equ	4087	;# 
  5686   000FF8                     TBLPTRU         equ	4088	;# 
  5687   000FF9                     PCLAT           equ	4089	;# 
  5688   000FF9                     PC              equ	4089	;# 
  5689   000FF9                     PCL             equ	4089	;# 
  5690   000FFA                     PCLATH          equ	4090	;# 
  5691   000FFB                     PCLATU          equ	4091	;# 
  5692   000FFC                     STKPTR          equ	4092	;# 
  5693   000FFD                     TOS             equ	4093	;# 
  5694   000FFD                     TOSL            equ	4093	;# 
  5695   000FFE                     TOSH            equ	4094	;# 
  5696   000FFF                     TOSU            equ	4095	;# 
  5697   000E9B                     PPSLOCK         equ	3739	;# 
  5698   000E9C                     INT0PPS         equ	3740	;# 
  5699   000E9D                     INT1PPS         equ	3741	;# 
  5700   000E9E                     INT2PPS         equ	3742	;# 
  5701   000E9F                     T0CKIPPS        equ	3743	;# 
  5702   000EA0                     T1CKIPPS        equ	3744	;# 
  5703   000EA1                     T1GPPS          equ	3745	;# 
  5704   000EA2                     T3CKIPPS        equ	3746	;# 
  5705   000EA3                     T3GPPS          equ	3747	;# 
  5706   000EA4                     T5CKIPPS        equ	3748	;# 
  5707   000EA5                     T5GPPS          equ	3749	;# 
  5708   000EA6                     T2INPPS         equ	3750	;# 
  5709   000EA7                     T4INPPS         equ	3751	;# 
  5710   000EA8                     T6INPPS         equ	3752	;# 
  5711   000EA9                     ADACTPPS        equ	3753	;# 
  5712   000EAA                     CCP1PPS         equ	3754	;# 
  5713   000EAB                     CCP2PPS         equ	3755	;# 
  5714   000EAC                     CWG1PPS         equ	3756	;# 
  5715   000EAC                     CWGPPS          equ	3756	;# 
  5716   000EAC                     CWGINPPS        equ	3756	;# 
  5717   000EAC                     CWG1INPPS       equ	3756	;# 
  5718   000EAD                     MDCARLPPS       equ	3757	;# 
  5719   000EAE                     MDCARHPPS       equ	3758	;# 
  5720   000EAF                     MDSRCPPS        equ	3759	;# 
  5721   000EB0                     RX1PPS          equ	3760	;# 
  5722   000EB0                     RXPPS           equ	3760	;# 
  5723   000EB0                     RXDT1PPS        equ	3760	;# 
  5724   000EB1                     CK1PPS          equ	3761	;# 
  5725   000EB1                     TXPPS           equ	3761	;# 
  5726   000EB1                     CKPPS           equ	3761	;# 
  5727   000EB1                     TXCK1PPS        equ	3761	;# 
  5728   000EB1                     TX1PPS          equ	3761	;# 
  5729   000EB2                     SSP1CLKPPS      equ	3762	;# 
  5730   000EB2                     SSPCLKPPS       equ	3762	;# 
  5731   000EB3                     SSP1DATPPS      equ	3763	;# 
  5732   000EB3                     SSPDATPPS       equ	3763	;# 
  5733   000EB4                     SSP1SSPPS       equ	3764	;# 
  5734   000EB4                     SSPSSPPS        equ	3764	;# 
  5735   000EB5                     IPR0            equ	3765	;# 
  5736   000EB6                     IPR1            equ	3766	;# 
  5737   000EB7                     IPR2            equ	3767	;# 
  5738   000EB8                     IPR3            equ	3768	;# 
  5739   000EB9                     IPR4            equ	3769	;# 
  5740   000EBA                     IPR5            equ	3770	;# 
  5741   000EBB                     IPR6            equ	3771	;# 
  5742   000EBC                     IPR7            equ	3772	;# 
  5743   000EBD                     PIE0            equ	3773	;# 
  5744   000EBE                     PIE1            equ	3774	;# 
  5745   000EBF                     PIE2            equ	3775	;# 
  5746   000EC0                     PIE3            equ	3776	;# 
  5747   000EC1                     PIE4            equ	3777	;# 
  5748   000EC2                     PIE5            equ	3778	;# 
  5749   000EC3                     PIE6            equ	3779	;# 
  5750   000EC4                     PIE7            equ	3780	;# 
  5751   000EC5                     PIR0            equ	3781	;# 
  5752   000EC6                     PIR1            equ	3782	;# 
  5753   000EC7                     PIR2            equ	3783	;# 
  5754   000EC8                     PIR3            equ	3784	;# 
  5755   000EC9                     PIR4            equ	3785	;# 
  5756   000ECA                     PIR5            equ	3786	;# 
  5757   000ECB                     PIR6            equ	3787	;# 
  5758   000ECC                     PIR7            equ	3788	;# 
  5759   000ECD                     WDTCON0         equ	3789	;# 
  5760   000ECE                     WDTCON1         equ	3790	;# 
  5761   000ECF                     WDTPSL          equ	3791	;# 
  5762   000ED0                     WDTPSH          equ	3792	;# 
  5763   000ED1                     WDTTMR          equ	3793	;# 
  5764   000ED2                     CPUDOZE         equ	3794	;# 
  5765   000ED3                     OSCCON1         equ	3795	;# 
  5766   000ED4                     OSCCON2         equ	3796	;# 
  5767   000ED5                     OSCCON3         equ	3797	;# 
  5768   000ED6                     OSCSTAT         equ	3798	;# 
  5769   000ED6                     OSCSTAT1        equ	3798	;# 
  5770   000ED7                     OSCEN           equ	3799	;# 
  5771   000ED8                     OSCTUNE         equ	3800	;# 
  5772   000ED9                     OSCFRQ          equ	3801	;# 
  5773   000ED9                     OSCFREQ         equ	3801	;# 
  5774   000EDA                     VREGCON         equ	3802	;# 
  5775   000EDB                     BORCON          equ	3803	;# 
  5776   000EDC                     PMD0            equ	3804	;# 
  5777   000EDD                     PMD1            equ	3805	;# 
  5778   000EDE                     PMD2            equ	3806	;# 
  5779   000EDF                     PMD3            equ	3807	;# 
  5780   000EE0                     PMD4            equ	3808	;# 
  5781   000EE1                     PMD5            equ	3809	;# 
  5782   000EE2                     RA0PPS          equ	3810	;# 
  5783   000EE3                     RA1PPS          equ	3811	;# 
  5784   000EE4                     RA2PPS          equ	3812	;# 
  5785   000EE5                     RA3PPS          equ	3813	;# 
  5786   000EE6                     RA4PPS          equ	3814	;# 
  5787   000EE7                     RA5PPS          equ	3815	;# 
  5788   000EE8                     RA6PPS          equ	3816	;# 
  5789   000EE9                     RA7PPS          equ	3817	;# 
  5790   000EEA                     RB0PPS          equ	3818	;# 
  5791   000EEB                     RB1PPS          equ	3819	;# 
  5792   000EEC                     RB2PPS          equ	3820	;# 
  5793   000EED                     RB3PPS          equ	3821	;# 
  5794   000EEE                     RB4PPS          equ	3822	;# 
  5795   000EEF                     RB5PPS          equ	3823	;# 
  5796   000EF0                     RB6PPS          equ	3824	;# 
  5797   000EF1                     RB7PPS          equ	3825	;# 
  5798   000EF2                     RC0PPS          equ	3826	;# 
  5799   000EF3                     RC1PPS          equ	3827	;# 
  5800   000EF4                     RC2PPS          equ	3828	;# 
  5801   000EF5                     RC3PPS          equ	3829	;# 
  5802   000EF6                     RC4PPS          equ	3830	;# 
  5803   000EF7                     RC5PPS          equ	3831	;# 
  5804   000EF8                     RC6PPS          equ	3832	;# 
  5805   000EF9                     RC7PPS          equ	3833	;# 
  5806   000F05                     IOCAF           equ	3845	;# 
  5807   000F06                     IOCAN           equ	3846	;# 
  5808   000F07                     IOCAP           equ	3847	;# 
  5809   000F08                     INLVLA          equ	3848	;# 
  5810   000F09                     SLRCONA         equ	3849	;# 
  5811   000F0A                     ODCONA          equ	3850	;# 
  5812   000F0B                     WPUA            equ	3851	;# 
  5813   000F0C                     ANSELA          equ	3852	;# 
  5814   000F0D                     IOCBF           equ	3853	;# 
  5815   000F0E                     IOCBN           equ	3854	;# 
  5816   000F0F                     IOCBP           equ	3855	;# 
  5817   000F10                     INLVLB          equ	3856	;# 
  5818   000F11                     SLRCONB         equ	3857	;# 
  5819   000F12                     ODCONB          equ	3858	;# 
  5820   000F13                     WPUB            equ	3859	;# 
  5821   000F14                     ANSELB          equ	3860	;# 
  5822   000F15                     IOCCF           equ	3861	;# 
  5823   000F16                     IOCCN           equ	3862	;# 
  5824   000F17                     IOCCP           equ	3863	;# 
  5825   000F18                     INLVLC          equ	3864	;# 
  5826   000F19                     SLRCONC         equ	3865	;# 
  5827   000F1A                     ODCONC          equ	3866	;# 
  5828   000F1B                     WPUC            equ	3867	;# 
  5829   000F1C                     ANSELC          equ	3868	;# 
  5830   000F22                     IOCEF           equ	3874	;# 
  5831   000F23                     IOCEN           equ	3875	;# 
  5832   000F24                     IOCEP           equ	3876	;# 
  5833   000F25                     INLVLE          equ	3877	;# 
  5834   000F28                     WPUE            equ	3880	;# 
  5835   000F2A                     HLVDCON0        equ	3882	;# 
  5836   000F2B                     HLVDCON1        equ	3883	;# 
  5837   000F2C                     FVRCON          equ	3884	;# 
  5838   000F2D                     ZCDCON          equ	3885	;# 
  5839   000F2E                     DAC1CON0        equ	3886	;# 
  5840   000F2F                     DAC1CON1        equ	3887	;# 
  5841   000F30                     CM2CON0         equ	3888	;# 
  5842   000F31                     CM2CON1         equ	3889	;# 
  5843   000F32                     CM2NCH          equ	3890	;# 
  5844   000F33                     CM2PCH          equ	3891	;# 
  5845   000F34                     CM1CON0         equ	3892	;# 
  5846   000F35                     CM1CON1         equ	3893	;# 
  5847   000F36                     CM1NCH          equ	3894	;# 
  5848   000F37                     CM1PCH          equ	3895	;# 
  5849   000F38                     CMOUT           equ	3896	;# 
  5850   000F39                     CLKRCON         equ	3897	;# 
  5851   000F3A                     CLKRCLK         equ	3898	;# 
  5852   000F3B                     CWG1CLK         equ	3899	;# 
  5853   000F3B                     CWG1CLKCON      equ	3899	;# 
  5854   000F3C                     CWG1ISM         equ	3900	;# 
  5855   000F3D                     CWG1DBR         equ	3901	;# 
  5856   000F3E                     CWG1DBF         equ	3902	;# 
  5857   000F3F                     CWG1CON0        equ	3903	;# 
  5858   000F40                     CWG1CON1        equ	3904	;# 
  5859   000F41                     CWG1AS0         equ	3905	;# 
  5860   000F42                     CWG1AS1         equ	3906	;# 
  5861   000F43                     CWG1STR         equ	3907	;# 
  5862   000F44                     SCANLADR        equ	3908	;# 
  5863   000F44                     SCANLADRL       equ	3908	;# 
  5864   000F45                     SCANLADRH       equ	3909	;# 
  5865   000F46                     SCANLADRU       equ	3910	;# 
  5866   000F47                     SCANHADR        equ	3911	;# 
  5867   000F47                     SCANHADRL       equ	3911	;# 
  5868   000F48                     SCANHADRH       equ	3912	;# 
  5869   000F49                     SCANHADRU       equ	3913	;# 
  5870   000F4A                     SCANCON0        equ	3914	;# 
  5871   000F4B                     SCANTRIG        equ	3915	;# 
  5872   000F4C                     MDCON0          equ	3916	;# 
  5873   000F4D                     MDCON1          equ	3917	;# 
  5874   000F4E                     MDSRC           equ	3918	;# 
  5875   000F4F                     MDCARL          equ	3919	;# 
  5876   000F50                     MDCARH          equ	3920	;# 
  5877   000F51                     ADACT           equ	3921	;# 
  5878   000F52                     ADCLK           equ	3922	;# 
  5879   000F53                     ADREF           equ	3923	;# 
  5880   000F54                     ADCON1          equ	3924	;# 
  5881   000F55                     ADCON2          equ	3925	;# 
  5882   000F56                     ADCON3          equ	3926	;# 
  5883   000F57                     ADACQ           equ	3927	;# 
  5884   000F58                     ADCAP           equ	3928	;# 
  5885   000F59                     ADPRE           equ	3929	;# 
  5886   000F5A                     ADPCH           equ	3930	;# 
  5887   000F5B                     ADCON0          equ	3931	;# 
  5888   000F5C                     ADPREV          equ	3932	;# 
  5889   000F5C                     ADPREVL         equ	3932	;# 
  5890   000F5D                     ADPREVH         equ	3933	;# 
  5891   000F5E                     ADRES           equ	3934	;# 
  5892   000F5E                     ADRESL          equ	3934	;# 
  5893   000F5F                     ADRESH          equ	3935	;# 
  5894   000F60                     ADSTAT          equ	3936	;# 
  5895   000F61                     ADRPT           equ	3937	;# 
  5896   000F62                     ADCNT           equ	3938	;# 
  5897   000F63                     ADSTPT          equ	3939	;# 
  5898   000F63                     ADSTPTL         equ	3939	;# 
  5899   000F64                     ADSTPTH         equ	3940	;# 
  5900   000F65                     ADLTH           equ	3941	;# 
  5901   000F65                     ADLTHL          equ	3941	;# 
  5902   000F66                     ADLTHH          equ	3942	;# 
  5903   000F67                     ADUTH           equ	3943	;# 
  5904   000F67                     ADUTHL          equ	3943	;# 
  5905   000F68                     ADUTHH          equ	3944	;# 
  5906   000F69                     ADERR           equ	3945	;# 
  5907   000F69                     ADERRL          equ	3945	;# 
  5908   000F6A                     ADERRH          equ	3946	;# 
  5909   000F6B                     ADACC           equ	3947	;# 
  5910   000F6B                     ADACCL          equ	3947	;# 
  5911   000F6C                     ADACCH          equ	3948	;# 
  5912   000F6D                     ADFLTR          equ	3949	;# 
  5913   000F6D                     ADFLTRL         equ	3949	;# 
  5914   000F6E                     ADFLTRH         equ	3950	;# 
  5915   000F6F                     CRCDATA         equ	3951	;# 
  5916   000F6F                     CRCDATL         equ	3951	;# 
  5917   000F70                     CRCDATH         equ	3952	;# 
  5918   000F71                     CRCACC          equ	3953	;# 
  5919   000F71                     CRCACCL         equ	3953	;# 
  5920   000F72                     CRCACCH         equ	3954	;# 
  5921   000F73                     CRCSHFT         equ	3955	;# 
  5922   000F73                     CRCSHIFTL       equ	3955	;# 
  5923   000F74                     CRCSHIFTH       equ	3956	;# 
  5924   000F75                     CRCXOR          equ	3957	;# 
  5925   000F75                     CRCXORL         equ	3957	;# 
  5926   000F76                     CRCXORH         equ	3958	;# 
  5927   000F77                     CRCCON0         equ	3959	;# 
  5928   000F78                     CRCCON1         equ	3960	;# 
  5929   000F79                     NVMADR          equ	3961	;# 
  5930   000F79                     NVMADRL         equ	3961	;# 
  5931   000F7A                     NVMADRH         equ	3962	;# 
  5932   000F7B                     NVMADRU         equ	3963	;# 
  5933   000F7C                     NVMDAT          equ	3964	;# 
  5934   000F7C                     NVMDATL         equ	3964	;# 
  5935   000F7D                     NVMDATH         equ	3965	;# 
  5936   000F7F                     NVMCON0         equ	3967	;# 
  5937   000F80                     NVMCON1         equ	3968	;# 
  5938   000F81                     NVMCON2         equ	3969	;# 
  5939   000F82                     LATA            equ	3970	;# 
  5940   000F83                     LATB            equ	3971	;# 
  5941   000F84                     LATC            equ	3972	;# 
  5942   000F87                     TRISA           equ	3975	;# 
  5943   000F87                     DDRA            equ	3975	;# 
  5944   000F88                     TRISB           equ	3976	;# 
  5945   000F88                     DDRB            equ	3976	;# 
  5946   000F89                     TRISC           equ	3977	;# 
  5947   000F89                     DDRC            equ	3977	;# 
  5948   000F8C                     PORTA           equ	3980	;# 
  5949   000F8D                     PORTB           equ	3981	;# 
  5950   000F8E                     PORTC           equ	3982	;# 
  5951   000F90                     PORTE           equ	3984	;# 
  5952   000F91                     SSP1BUF         equ	3985	;# 
  5953   000F92                     SSP1ADD         equ	3986	;# 
  5954   000F93                     SSP1MSK         equ	3987	;# 
  5955   000F94                     SSP1STAT        equ	3988	;# 
  5956   000F95                     SSP1CON1        equ	3989	;# 
  5957   000F96                     SSP1CON2        equ	3990	;# 
  5958   000F97                     SSP1CON3        equ	3991	;# 
  5959   000F98                     RC1REG          equ	3992	;# 
  5960   000F98                     RCREG           equ	3992	;# 
  5961   000F98                     RCREG1          equ	3992	;# 
  5962   000F99                     TX1REG          equ	3993	;# 
  5963   000F99                     TXREG1          equ	3993	;# 
  5964   000F99                     TXREG           equ	3993	;# 
  5965   000F9A                     SP1BRG          equ	3994	;# 
  5966   000F9A                     SPBRG           equ	3994	;# 
  5967   000F9A                     SP1BRGL         equ	3994	;# 
  5968   000F9A                     SPBRG1          equ	3994	;# 
  5969   000F9A                     SPBRGL          equ	3994	;# 
  5970   000F9B                     SP1BRGH         equ	3995	;# 
  5971   000F9B                     SPBRGH          equ	3995	;# 
  5972   000F9B                     SPBRGH1         equ	3995	;# 
  5973   000F9C                     RC1STA          equ	3996	;# 
  5974   000F9C                     RCSTA1          equ	3996	;# 
  5975   000F9C                     RCSTA           equ	3996	;# 
  5976   000F9D                     TX1STA          equ	3997	;# 
  5977   000F9D                     TXSTA1          equ	3997	;# 
  5978   000F9D                     TXSTA           equ	3997	;# 
  5979   000F9E                     BAUD1CON        equ	3998	;# 
  5980   000F9E                     BAUDCON1        equ	3998	;# 
  5981   000F9E                     BAUDCTL1        equ	3998	;# 
  5982   000F9E                     BAUDCON         equ	3998	;# 
  5983   000F9E                     BAUDCTL         equ	3998	;# 
  5984   000F9F                     PWM4DC          equ	3999	;# 
  5985   000F9F                     PWM4DCL         equ	3999	;# 
  5986   000FA0                     PWM4DCH         equ	4000	;# 
  5987   000FA1                     PWM4CON         equ	4001	;# 
  5988   000FA2                     PWM3DC          equ	4002	;# 
  5989   000FA2                     PWM3DCL         equ	4002	;# 
  5990   000FA3                     PWM3DCH         equ	4003	;# 
  5991   000FA4                     PWM3CON         equ	4004	;# 
  5992   000FA5                     CCPR2           equ	4005	;# 
  5993   000FA5                     CCPR2L          equ	4005	;# 
  5994   000FA6                     CCPR2H          equ	4006	;# 
  5995   000FA7                     CCP2CON         equ	4007	;# 
  5996   000FA8                     CCP2CAP         equ	4008	;# 
  5997   000FA9                     CCPR1           equ	4009	;# 
  5998   000FA9                     CCPR1L          equ	4009	;# 
  5999   000FAA                     CCPR1H          equ	4010	;# 
  6000   000FAB                     CCP1CON         equ	4011	;# 
  6001   000FAC                     CCP1CAP         equ	4012	;# 
  6002   000FAD                     CCPTMRS         equ	4013	;# 
  6003   000FAE                     T6TMR           equ	4014	;# 
  6004   000FAE                     TMR6            equ	4014	;# 
  6005   000FAF                     T6PR            equ	4015	;# 
  6006   000FAF                     PR6             equ	4015	;# 
  6007   000FB0                     T6CON           equ	4016	;# 
  6008   000FB1                     T6HLT           equ	4017	;# 
  6009   000FB2                     T6CLKCON        equ	4018	;# 
  6010   000FB2                     T6CLK           equ	4018	;# 
  6011   000FB3                     T6RST           equ	4019	;# 
  6012   000FB4                     T4TMR           equ	4020	;# 
  6013   000FB4                     TMR4            equ	4020	;# 
  6014   000FB5                     T4PR            equ	4021	;# 
  6015   000FB5                     PR4             equ	4021	;# 
  6016   000FB6                     T4CON           equ	4022	;# 
  6017   000FB7                     T4HLT           equ	4023	;# 
  6018   000FB8                     T4CLKCON        equ	4024	;# 
  6019   000FB8                     T4CLK           equ	4024	;# 
  6020   000FB9                     T4RST           equ	4025	;# 
  6021   000FBA                     T2TMR           equ	4026	;# 
  6022   000FBA                     TMR2            equ	4026	;# 
  6023   000FBB                     T2PR            equ	4027	;# 
  6024   000FBB                     PR2             equ	4027	;# 
  6025   000FBC                     T2CON           equ	4028	;# 
  6026   000FBD                     T2HLT           equ	4029	;# 
  6027   000FBE                     T2CLKCON        equ	4030	;# 
  6028   000FBE                     T2CLK           equ	4030	;# 
  6029   000FBF                     T2RST           equ	4031	;# 
  6030   000FC0                     TMR5            equ	4032	;# 
  6031   000FC0                     TMR5L           equ	4032	;# 
  6032   000FC1                     TMR5H           equ	4033	;# 
  6033   000FC2                     T5CON           equ	4034	;# 
  6034   000FC2                     TMR5CON         equ	4034	;# 
  6035   000FC3                     T5GCON          equ	4035	;# 
  6036   000FC3                     TMR5GCON        equ	4035	;# 
  6037   000FC4                     T5GATE          equ	4036	;# 
  6038   000FC4                     TMR5GATE        equ	4036	;# 
  6039   000FC5                     T5CLK           equ	4037	;# 
  6040   000FC5                     TMR5CLK         equ	4037	;# 
  6041   000FC5                     PR5             equ	4037	;# 
  6042   000FC6                     TMR3            equ	4038	;# 
  6043   000FC6                     TMR3L           equ	4038	;# 
  6044   000FC7                     TMR3H           equ	4039	;# 
  6045   000FC8                     T3CON           equ	4040	;# 
  6046   000FC8                     TMR3CON         equ	4040	;# 
  6047   000FC9                     T3GCON          equ	4041	;# 
  6048   000FC9                     TMR3GCON        equ	4041	;# 
  6049   000FCA                     T3GATE          equ	4042	;# 
  6050   000FCA                     TMR3GATE        equ	4042	;# 
  6051   000FCB                     T3CLK           equ	4043	;# 
  6052   000FCB                     TMR3CLK         equ	4043	;# 
  6053   000FCB                     PR3             equ	4043	;# 
  6054   000FCC                     TMR1            equ	4044	;# 
  6055   000FCC                     TMR1L           equ	4044	;# 
  6056   000FCD                     TMR1H           equ	4045	;# 
  6057   000FCE                     T1CON           equ	4046	;# 
  6058   000FCE                     TMR1CON         equ	4046	;# 
  6059   000FCF                     T1GCON          equ	4047	;# 
  6060   000FCF                     TMR1GCON        equ	4047	;# 
  6061   000FD0                     T1GATE          equ	4048	;# 
  6062   000FD0                     TMR1GATE        equ	4048	;# 
  6063   000FD1                     T1CLK           equ	4049	;# 
  6064   000FD1                     TMR1CLK         equ	4049	;# 
  6065   000FD1                     PR1             equ	4049	;# 
  6066   000FD2                     TMR0L           equ	4050	;# 
  6067   000FD2                     TMR0            equ	4050	;# 
  6068   000FD3                     TMR0H           equ	4051	;# 
  6069   000FD3                     PR0             equ	4051	;# 
  6070   000FD4                     T0CON0          equ	4052	;# 
  6071   000FD5                     T0CON1          equ	4053	;# 
  6072   000FD6                     PCON1           equ	4054	;# 
  6073   000FD7                     PCON0           equ	4055	;# 
  6074   000FD8                     STATUS          equ	4056	;# 
  6075   000FD9                     FSR2            equ	4057	;# 
  6076   000FD9                     FSR2L           equ	4057	;# 
  6077   000FDA                     FSR2H           equ	4058	;# 
  6078   000FDB                     PLUSW2          equ	4059	;# 
  6079   000FDC                     PREINC2         equ	4060	;# 
  6080   000FDD                     POSTDEC2        equ	4061	;# 
  6081   000FDE                     POSTINC2        equ	4062	;# 
  6082   000FDF                     INDF2           equ	4063	;# 
  6083   000FE0                     BSR             equ	4064	;# 
  6084   000FE1                     FSR1            equ	4065	;# 
  6085   000FE1                     FSR1L           equ	4065	;# 
  6086   000FE2                     FSR1H           equ	4066	;# 
  6087   000FE3                     PLUSW1          equ	4067	;# 
  6088   000FE4                     PREINC1         equ	4068	;# 
  6089   000FE5                     POSTDEC1        equ	4069	;# 
  6090   000FE6                     POSTINC1        equ	4070	;# 
  6091   000FE7                     INDF1           equ	4071	;# 
  6092   000FE8                     WREG            equ	4072	;# 
  6093   000FE9                     FSR0            equ	4073	;# 
  6094   000FE9                     FSR0L           equ	4073	;# 
  6095   000FEA                     FSR0H           equ	4074	;# 
  6096   000FEB                     PLUSW0          equ	4075	;# 
  6097   000FEC                     PREINC0         equ	4076	;# 
  6098   000FED                     POSTDEC0        equ	4077	;# 
  6099   000FEE                     POSTINC0        equ	4078	;# 
  6100   000FEF                     INDF0           equ	4079	;# 
  6101   000FF2                     INTCON          equ	4082	;# 
  6102   000FF3                     PROD            equ	4083	;# 
  6103   000FF3                     PRODL           equ	4083	;# 
  6104   000FF4                     PRODH           equ	4084	;# 
  6105   000FF5                     TABLAT          equ	4085	;# 
  6106   000FF6                     TBLPTR          equ	4086	;# 
  6107   000FF6                     TBLPTRL         equ	4086	;# 
  6108   000FF7                     TBLPTRH         equ	4087	;# 
  6109   000FF8                     TBLPTRU         equ	4088	;# 
  6110   000FF9                     PCLAT           equ	4089	;# 
  6111   000FF9                     PC              equ	4089	;# 
  6112   000FF9                     PCL             equ	4089	;# 
  6113   000FFA                     PCLATH          equ	4090	;# 
  6114   000FFB                     PCLATU          equ	4091	;# 
  6115   000FFC                     STKPTR          equ	4092	;# 
  6116   000FFD                     TOS             equ	4093	;# 
  6117   000FFD                     TOSL            equ	4093	;# 
  6118   000FFE                     TOSH            equ	4094	;# 
  6119   000FFF                     TOSU            equ	4095	;# 
  6120   000E9B                     PPSLOCK         equ	3739	;# 
  6121   000E9C                     INT0PPS         equ	3740	;# 
  6122   000E9D                     INT1PPS         equ	3741	;# 
  6123   000E9E                     INT2PPS         equ	3742	;# 
  6124   000E9F                     T0CKIPPS        equ	3743	;# 
  6125   000EA0                     T1CKIPPS        equ	3744	;# 
  6126   000EA1                     T1GPPS          equ	3745	;# 
  6127   000EA2                     T3CKIPPS        equ	3746	;# 
  6128   000EA3                     T3GPPS          equ	3747	;# 
  6129   000EA4                     T5CKIPPS        equ	3748	;# 
  6130   000EA5                     T5GPPS          equ	3749	;# 
  6131   000EA6                     T2INPPS         equ	3750	;# 
  6132   000EA7                     T4INPPS         equ	3751	;# 
  6133   000EA8                     T6INPPS         equ	3752	;# 
  6134   000EA9                     ADACTPPS        equ	3753	;# 
  6135   000EAA                     CCP1PPS         equ	3754	;# 
  6136   000EAB                     CCP2PPS         equ	3755	;# 
  6137   000EAC                     CWG1PPS         equ	3756	;# 
  6138   000EAC                     CWGPPS          equ	3756	;# 
  6139   000EAC                     CWGINPPS        equ	3756	;# 
  6140   000EAC                     CWG1INPPS       equ	3756	;# 
  6141   000EAD                     MDCARLPPS       equ	3757	;# 
  6142   000EAE                     MDCARHPPS       equ	3758	;# 
  6143   000EAF                     MDSRCPPS        equ	3759	;# 
  6144   000EB0                     RX1PPS          equ	3760	;# 
  6145   000EB0                     RXPPS           equ	3760	;# 
  6146   000EB0                     RXDT1PPS        equ	3760	;# 
  6147   000EB1                     CK1PPS          equ	3761	;# 
  6148   000EB1                     TXPPS           equ	3761	;# 
  6149   000EB1                     CKPPS           equ	3761	;# 
  6150   000EB1                     TXCK1PPS        equ	3761	;# 
  6151   000EB1                     TX1PPS          equ	3761	;# 
  6152   000EB2                     SSP1CLKPPS      equ	3762	;# 
  6153   000EB2                     SSPCLKPPS       equ	3762	;# 
  6154   000EB3                     SSP1DATPPS      equ	3763	;# 
  6155   000EB3                     SSPDATPPS       equ	3763	;# 
  6156   000EB4                     SSP1SSPPS       equ	3764	;# 
  6157   000EB4                     SSPSSPPS        equ	3764	;# 
  6158   000EB5                     IPR0            equ	3765	;# 
  6159   000EB6                     IPR1            equ	3766	;# 
  6160   000EB7                     IPR2            equ	3767	;# 
  6161   000EB8                     IPR3            equ	3768	;# 
  6162   000EB9                     IPR4            equ	3769	;# 
  6163   000EBA                     IPR5            equ	3770	;# 
  6164   000EBB                     IPR6            equ	3771	;# 
  6165   000EBC                     IPR7            equ	3772	;# 
  6166   000EBD                     PIE0            equ	3773	;# 
  6167   000EBE                     PIE1            equ	3774	;# 
  6168   000EBF                     PIE2            equ	3775	;# 
  6169   000EC0                     PIE3            equ	3776	;# 
  6170   000EC1                     PIE4            equ	3777	;# 
  6171   000EC2                     PIE5            equ	3778	;# 
  6172   000EC3                     PIE6            equ	3779	;# 
  6173   000EC4                     PIE7            equ	3780	;# 
  6174   000EC5                     PIR0            equ	3781	;# 
  6175   000EC6                     PIR1            equ	3782	;# 
  6176   000EC7                     PIR2            equ	3783	;# 
  6177   000EC8                     PIR3            equ	3784	;# 
  6178   000EC9                     PIR4            equ	3785	;# 
  6179   000ECA                     PIR5            equ	3786	;# 
  6180   000ECB                     PIR6            equ	3787	;# 
  6181   000ECC                     PIR7            equ	3788	;# 
  6182   000ECD                     WDTCON0         equ	3789	;# 
  6183   000ECE                     WDTCON1         equ	3790	;# 
  6184   000ECF                     WDTPSL          equ	3791	;# 
  6185   000ED0                     WDTPSH          equ	3792	;# 
  6186   000ED1                     WDTTMR          equ	3793	;# 
  6187   000ED2                     CPUDOZE         equ	3794	;# 
  6188   000ED3                     OSCCON1         equ	3795	;# 
  6189   000ED4                     OSCCON2         equ	3796	;# 
  6190   000ED5                     OSCCON3         equ	3797	;# 
  6191   000ED6                     OSCSTAT         equ	3798	;# 
  6192   000ED6                     OSCSTAT1        equ	3798	;# 
  6193   000ED7                     OSCEN           equ	3799	;# 
  6194   000ED8                     OSCTUNE         equ	3800	;# 
  6195   000ED9                     OSCFRQ          equ	3801	;# 
  6196   000ED9                     OSCFREQ         equ	3801	;# 
  6197   000EDA                     VREGCON         equ	3802	;# 
  6198   000EDB                     BORCON          equ	3803	;# 
  6199   000EDC                     PMD0            equ	3804	;# 
  6200   000EDD                     PMD1            equ	3805	;# 
  6201   000EDE                     PMD2            equ	3806	;# 
  6202   000EDF                     PMD3            equ	3807	;# 
  6203   000EE0                     PMD4            equ	3808	;# 
  6204   000EE1                     PMD5            equ	3809	;# 
  6205   000EE2                     RA0PPS          equ	3810	;# 
  6206   000EE3                     RA1PPS          equ	3811	;# 
  6207   000EE4                     RA2PPS          equ	3812	;# 
  6208   000EE5                     RA3PPS          equ	3813	;# 
  6209   000EE6                     RA4PPS          equ	3814	;# 
  6210   000EE7                     RA5PPS          equ	3815	;# 
  6211   000EE8                     RA6PPS          equ	3816	;# 
  6212   000EE9                     RA7PPS          equ	3817	;# 
  6213   000EEA                     RB0PPS          equ	3818	;# 
  6214   000EEB                     RB1PPS          equ	3819	;# 
  6215   000EEC                     RB2PPS          equ	3820	;# 
  6216   000EED                     RB3PPS          equ	3821	;# 
  6217   000EEE                     RB4PPS          equ	3822	;# 
  6218   000EEF                     RB5PPS          equ	3823	;# 
  6219   000EF0                     RB6PPS          equ	3824	;# 
  6220   000EF1                     RB7PPS          equ	3825	;# 
  6221   000EF2                     RC0PPS          equ	3826	;# 
  6222   000EF3                     RC1PPS          equ	3827	;# 
  6223   000EF4                     RC2PPS          equ	3828	;# 
  6224   000EF5                     RC3PPS          equ	3829	;# 
  6225   000EF6                     RC4PPS          equ	3830	;# 
  6226   000EF7                     RC5PPS          equ	3831	;# 
  6227   000EF8                     RC6PPS          equ	3832	;# 
  6228   000EF9                     RC7PPS          equ	3833	;# 
  6229   000F05                     IOCAF           equ	3845	;# 
  6230   000F06                     IOCAN           equ	3846	;# 
  6231   000F07                     IOCAP           equ	3847	;# 
  6232   000F08                     INLVLA          equ	3848	;# 
  6233   000F09                     SLRCONA         equ	3849	;# 
  6234   000F0A                     ODCONA          equ	3850	;# 
  6235   000F0B                     WPUA            equ	3851	;# 
  6236   000F0C                     ANSELA          equ	3852	;# 
  6237   000F0D                     IOCBF           equ	3853	;# 
  6238   000F0E                     IOCBN           equ	3854	;# 
  6239   000F0F                     IOCBP           equ	3855	;# 
  6240   000F10                     INLVLB          equ	3856	;# 
  6241   000F11                     SLRCONB         equ	3857	;# 
  6242   000F12                     ODCONB          equ	3858	;# 
  6243   000F13                     WPUB            equ	3859	;# 
  6244   000F14                     ANSELB          equ	3860	;# 
  6245   000F15                     IOCCF           equ	3861	;# 
  6246   000F16                     IOCCN           equ	3862	;# 
  6247   000F17                     IOCCP           equ	3863	;# 
  6248   000F18                     INLVLC          equ	3864	;# 
  6249   000F19                     SLRCONC         equ	3865	;# 
  6250   000F1A                     ODCONC          equ	3866	;# 
  6251   000F1B                     WPUC            equ	3867	;# 
  6252   000F1C                     ANSELC          equ	3868	;# 
  6253   000F22                     IOCEF           equ	3874	;# 
  6254   000F23                     IOCEN           equ	3875	;# 
  6255   000F24                     IOCEP           equ	3876	;# 
  6256   000F25                     INLVLE          equ	3877	;# 
  6257   000F28                     WPUE            equ	3880	;# 
  6258   000F2A                     HLVDCON0        equ	3882	;# 
  6259   000F2B                     HLVDCON1        equ	3883	;# 
  6260   000F2C                     FVRCON          equ	3884	;# 
  6261   000F2D                     ZCDCON          equ	3885	;# 
  6262   000F2E                     DAC1CON0        equ	3886	;# 
  6263   000F2F                     DAC1CON1        equ	3887	;# 
  6264   000F30                     CM2CON0         equ	3888	;# 
  6265   000F31                     CM2CON1         equ	3889	;# 
  6266   000F32                     CM2NCH          equ	3890	;# 
  6267   000F33                     CM2PCH          equ	3891	;# 
  6268   000F34                     CM1CON0         equ	3892	;# 
  6269   000F35                     CM1CON1         equ	3893	;# 
  6270   000F36                     CM1NCH          equ	3894	;# 
  6271   000F37                     CM1PCH          equ	3895	;# 
  6272   000F38                     CMOUT           equ	3896	;# 
  6273   000F39                     CLKRCON         equ	3897	;# 
  6274   000F3A                     CLKRCLK         equ	3898	;# 
  6275   000F3B                     CWG1CLK         equ	3899	;# 
  6276   000F3B                     CWG1CLKCON      equ	3899	;# 
  6277   000F3C                     CWG1ISM         equ	3900	;# 
  6278   000F3D                     CWG1DBR         equ	3901	;# 
  6279   000F3E                     CWG1DBF         equ	3902	;# 
  6280   000F3F                     CWG1CON0        equ	3903	;# 
  6281   000F40                     CWG1CON1        equ	3904	;# 
  6282   000F41                     CWG1AS0         equ	3905	;# 
  6283   000F42                     CWG1AS1         equ	3906	;# 
  6284   000F43                     CWG1STR         equ	3907	;# 
  6285   000F44                     SCANLADR        equ	3908	;# 
  6286   000F44                     SCANLADRL       equ	3908	;# 
  6287   000F45                     SCANLADRH       equ	3909	;# 
  6288   000F46                     SCANLADRU       equ	3910	;# 
  6289   000F47                     SCANHADR        equ	3911	;# 
  6290   000F47                     SCANHADRL       equ	3911	;# 
  6291   000F48                     SCANHADRH       equ	3912	;# 
  6292   000F49                     SCANHADRU       equ	3913	;# 
  6293   000F4A                     SCANCON0        equ	3914	;# 
  6294   000F4B                     SCANTRIG        equ	3915	;# 
  6295   000F4C                     MDCON0          equ	3916	;# 
  6296   000F4D                     MDCON1          equ	3917	;# 
  6297   000F4E                     MDSRC           equ	3918	;# 
  6298   000F4F                     MDCARL          equ	3919	;# 
  6299   000F50                     MDCARH          equ	3920	;# 
  6300   000F51                     ADACT           equ	3921	;# 
  6301   000F52                     ADCLK           equ	3922	;# 
  6302   000F53                     ADREF           equ	3923	;# 
  6303   000F54                     ADCON1          equ	3924	;# 
  6304   000F55                     ADCON2          equ	3925	;# 
  6305   000F56                     ADCON3          equ	3926	;# 
  6306   000F57                     ADACQ           equ	3927	;# 
  6307   000F58                     ADCAP           equ	3928	;# 
  6308   000F59                     ADPRE           equ	3929	;# 
  6309   000F5A                     ADPCH           equ	3930	;# 
  6310   000F5B                     ADCON0          equ	3931	;# 
  6311   000F5C                     ADPREV          equ	3932	;# 
  6312   000F5C                     ADPREVL         equ	3932	;# 
  6313   000F5D                     ADPREVH         equ	3933	;# 
  6314   000F5E                     ADRES           equ	3934	;# 
  6315   000F5E                     ADRESL          equ	3934	;# 
  6316   000F5F                     ADRESH          equ	3935	;# 
  6317   000F60                     ADSTAT          equ	3936	;# 
  6318   000F61                     ADRPT           equ	3937	;# 
  6319   000F62                     ADCNT           equ	3938	;# 
  6320   000F63                     ADSTPT          equ	3939	;# 
  6321   000F63                     ADSTPTL         equ	3939	;# 
  6322   000F64                     ADSTPTH         equ	3940	;# 
  6323   000F65                     ADLTH           equ	3941	;# 
  6324   000F65                     ADLTHL          equ	3941	;# 
  6325   000F66                     ADLTHH          equ	3942	;# 
  6326   000F67                     ADUTH           equ	3943	;# 
  6327   000F67                     ADUTHL          equ	3943	;# 
  6328   000F68                     ADUTHH          equ	3944	;# 
  6329   000F69                     ADERR           equ	3945	;# 
  6330   000F69                     ADERRL          equ	3945	;# 
  6331   000F6A                     ADERRH          equ	3946	;# 
  6332   000F6B                     ADACC           equ	3947	;# 
  6333   000F6B                     ADACCL          equ	3947	;# 
  6334   000F6C                     ADACCH          equ	3948	;# 
  6335   000F6D                     ADFLTR          equ	3949	;# 
  6336   000F6D                     ADFLTRL         equ	3949	;# 
  6337   000F6E                     ADFLTRH         equ	3950	;# 
  6338   000F6F                     CRCDATA         equ	3951	;# 
  6339   000F6F                     CRCDATL         equ	3951	;# 
  6340   000F70                     CRCDATH         equ	3952	;# 
  6341   000F71                     CRCACC          equ	3953	;# 
  6342   000F71                     CRCACCL         equ	3953	;# 
  6343   000F72                     CRCACCH         equ	3954	;# 
  6344   000F73                     CRCSHFT         equ	3955	;# 
  6345   000F73                     CRCSHIFTL       equ	3955	;# 
  6346   000F74                     CRCSHIFTH       equ	3956	;# 
  6347   000F75                     CRCXOR          equ	3957	;# 
  6348   000F75                     CRCXORL         equ	3957	;# 
  6349   000F76                     CRCXORH         equ	3958	;# 
  6350   000F77                     CRCCON0         equ	3959	;# 
  6351   000F78                     CRCCON1         equ	3960	;# 
  6352   000F79                     NVMADR          equ	3961	;# 
  6353   000F79                     NVMADRL         equ	3961	;# 
  6354   000F7A                     NVMADRH         equ	3962	;# 
  6355   000F7B                     NVMADRU         equ	3963	;# 
  6356   000F7C                     NVMDAT          equ	3964	;# 
  6357   000F7C                     NVMDATL         equ	3964	;# 
  6358   000F7D                     NVMDATH         equ	3965	;# 
  6359   000F7F                     NVMCON0         equ	3967	;# 
  6360   000F80                     NVMCON1         equ	3968	;# 
  6361   000F81                     NVMCON2         equ	3969	;# 
  6362   000F82                     LATA            equ	3970	;# 
  6363   000F83                     LATB            equ	3971	;# 
  6364   000F84                     LATC            equ	3972	;# 
  6365   000F87                     TRISA           equ	3975	;# 
  6366   000F87                     DDRA            equ	3975	;# 
  6367   000F88                     TRISB           equ	3976	;# 
  6368   000F88                     DDRB            equ	3976	;# 
  6369   000F89                     TRISC           equ	3977	;# 
  6370   000F89                     DDRC            equ	3977	;# 
  6371   000F8C                     PORTA           equ	3980	;# 
  6372   000F8D                     PORTB           equ	3981	;# 
  6373   000F8E                     PORTC           equ	3982	;# 
  6374   000F90                     PORTE           equ	3984	;# 
  6375   000F91                     SSP1BUF         equ	3985	;# 
  6376   000F92                     SSP1ADD         equ	3986	;# 
  6377   000F93                     SSP1MSK         equ	3987	;# 
  6378   000F94                     SSP1STAT        equ	3988	;# 
  6379   000F95                     SSP1CON1        equ	3989	;# 
  6380   000F96                     SSP1CON2        equ	3990	;# 
  6381   000F97                     SSP1CON3        equ	3991	;# 
  6382   000F98                     RC1REG          equ	3992	;# 
  6383   000F98                     RCREG           equ	3992	;# 
  6384   000F98                     RCREG1          equ	3992	;# 
  6385   000F99                     TX1REG          equ	3993	;# 
  6386   000F99                     TXREG1          equ	3993	;# 
  6387   000F99                     TXREG           equ	3993	;# 
  6388   000F9A                     SP1BRG          equ	3994	;# 
  6389   000F9A                     SPBRG           equ	3994	;# 
  6390   000F9A                     SP1BRGL         equ	3994	;# 
  6391   000F9A                     SPBRG1          equ	3994	;# 
  6392   000F9A                     SPBRGL          equ	3994	;# 
  6393   000F9B                     SP1BRGH         equ	3995	;# 
  6394   000F9B                     SPBRGH          equ	3995	;# 
  6395   000F9B                     SPBRGH1         equ	3995	;# 
  6396   000F9C                     RC1STA          equ	3996	;# 
  6397   000F9C                     RCSTA1          equ	3996	;# 
  6398   000F9C                     RCSTA           equ	3996	;# 
  6399   000F9D                     TX1STA          equ	3997	;# 
  6400   000F9D                     TXSTA1          equ	3997	;# 
  6401   000F9D                     TXSTA           equ	3997	;# 
  6402   000F9E                     BAUD1CON        equ	3998	;# 
  6403   000F9E                     BAUDCON1        equ	3998	;# 
  6404   000F9E                     BAUDCTL1        equ	3998	;# 
  6405   000F9E                     BAUDCON         equ	3998	;# 
  6406   000F9E                     BAUDCTL         equ	3998	;# 
  6407   000F9F                     PWM4DC          equ	3999	;# 
  6408   000F9F                     PWM4DCL         equ	3999	;# 
  6409   000FA0                     PWM4DCH         equ	4000	;# 
  6410   000FA1                     PWM4CON         equ	4001	;# 
  6411   000FA2                     PWM3DC          equ	4002	;# 
  6412   000FA2                     PWM3DCL         equ	4002	;# 
  6413   000FA3                     PWM3DCH         equ	4003	;# 
  6414   000FA4                     PWM3CON         equ	4004	;# 
  6415   000FA5                     CCPR2           equ	4005	;# 
  6416   000FA5                     CCPR2L          equ	4005	;# 
  6417   000FA6                     CCPR2H          equ	4006	;# 
  6418   000FA7                     CCP2CON         equ	4007	;# 
  6419   000FA8                     CCP2CAP         equ	4008	;# 
  6420   000FA9                     CCPR1           equ	4009	;# 
  6421   000FA9                     CCPR1L          equ	4009	;# 
  6422   000FAA                     CCPR1H          equ	4010	;# 
  6423   000FAB                     CCP1CON         equ	4011	;# 
  6424   000FAC                     CCP1CAP         equ	4012	;# 
  6425   000FAD                     CCPTMRS         equ	4013	;# 
  6426   000FAE                     T6TMR           equ	4014	;# 
  6427   000FAE                     TMR6            equ	4014	;# 
  6428   000FAF                     T6PR            equ	4015	;# 
  6429   000FAF                     PR6             equ	4015	;# 
  6430   000FB0                     T6CON           equ	4016	;# 
  6431   000FB1                     T6HLT           equ	4017	;# 
  6432   000FB2                     T6CLKCON        equ	4018	;# 
  6433   000FB2                     T6CLK           equ	4018	;# 
  6434   000FB3                     T6RST           equ	4019	;# 
  6435   000FB4                     T4TMR           equ	4020	;# 
  6436   000FB4                     TMR4            equ	4020	;# 
  6437   000FB5                     T4PR            equ	4021	;# 
  6438   000FB5                     PR4             equ	4021	;# 
  6439   000FB6                     T4CON           equ	4022	;# 
  6440   000FB7                     T4HLT           equ	4023	;# 
  6441   000FB8                     T4CLKCON        equ	4024	;# 
  6442   000FB8                     T4CLK           equ	4024	;# 
  6443   000FB9                     T4RST           equ	4025	;# 
  6444   000FBA                     T2TMR           equ	4026	;# 
  6445   000FBA                     TMR2            equ	4026	;# 
  6446   000FBB                     T2PR            equ	4027	;# 
  6447   000FBB                     PR2             equ	4027	;# 
  6448   000FBC                     T2CON           equ	4028	;# 
  6449   000FBD                     T2HLT           equ	4029	;# 
  6450   000FBE                     T2CLKCON        equ	4030	;# 
  6451   000FBE                     T2CLK           equ	4030	;# 
  6452   000FBF                     T2RST           equ	4031	;# 
  6453   000FC0                     TMR5            equ	4032	;# 
  6454   000FC0                     TMR5L           equ	4032	;# 
  6455   000FC1                     TMR5H           equ	4033	;# 
  6456   000FC2                     T5CON           equ	4034	;# 
  6457   000FC2                     TMR5CON         equ	4034	;# 
  6458   000FC3                     T5GCON          equ	4035	;# 
  6459   000FC3                     TMR5GCON        equ	4035	;# 
  6460   000FC4                     T5GATE          equ	4036	;# 
  6461   000FC4                     TMR5GATE        equ	4036	;# 
  6462   000FC5                     T5CLK           equ	4037	;# 
  6463   000FC5                     TMR5CLK         equ	4037	;# 
  6464   000FC5                     PR5             equ	4037	;# 
  6465   000FC6                     TMR3            equ	4038	;# 
  6466   000FC6                     TMR3L           equ	4038	;# 
  6467   000FC7                     TMR3H           equ	4039	;# 
  6468   000FC8                     T3CON           equ	4040	;# 
  6469   000FC8                     TMR3CON         equ	4040	;# 
  6470   000FC9                     T3GCON          equ	4041	;# 
  6471   000FC9                     TMR3GCON        equ	4041	;# 
  6472   000FCA                     T3GATE          equ	4042	;# 
  6473   000FCA                     TMR3GATE        equ	4042	;# 
  6474   000FCB                     T3CLK           equ	4043	;# 
  6475   000FCB                     TMR3CLK         equ	4043	;# 
  6476   000FCB                     PR3             equ	4043	;# 
  6477   000FCC                     TMR1            equ	4044	;# 
  6478   000FCC                     TMR1L           equ	4044	;# 
  6479   000FCD                     TMR1H           equ	4045	;# 
  6480   000FCE                     T1CON           equ	4046	;# 
  6481   000FCE                     TMR1CON         equ	4046	;# 
  6482   000FCF                     T1GCON          equ	4047	;# 
  6483   000FCF                     TMR1GCON        equ	4047	;# 
  6484   000FD0                     T1GATE          equ	4048	;# 
  6485   000FD0                     TMR1GATE        equ	4048	;# 
  6486   000FD1                     T1CLK           equ	4049	;# 
  6487   000FD1                     TMR1CLK         equ	4049	;# 
  6488   000FD1                     PR1             equ	4049	;# 
  6489   000FD2                     TMR0L           equ	4050	;# 
  6490   000FD2                     TMR0            equ	4050	;# 
  6491   000FD3                     TMR0H           equ	4051	;# 
  6492   000FD3                     PR0             equ	4051	;# 
  6493   000FD4                     T0CON0          equ	4052	;# 
  6494   000FD5                     T0CON1          equ	4053	;# 
  6495   000FD6                     PCON1           equ	4054	;# 
  6496   000FD7                     PCON0           equ	4055	;# 
  6497   000FD8                     STATUS          equ	4056	;# 
  6498   000FD9                     FSR2            equ	4057	;# 
  6499   000FD9                     FSR2L           equ	4057	;# 
  6500   000FDA                     FSR2H           equ	4058	;# 
  6501   000FDB                     PLUSW2          equ	4059	;# 
  6502   000FDC                     PREINC2         equ	4060	;# 
  6503   000FDD                     POSTDEC2        equ	4061	;# 
  6504   000FDE                     POSTINC2        equ	4062	;# 
  6505   000FDF                     INDF2           equ	4063	;# 
  6506   000FE0                     BSR             equ	4064	;# 
  6507   000FE1                     FSR1            equ	4065	;# 
  6508   000FE1                     FSR1L           equ	4065	;# 
  6509   000FE2                     FSR1H           equ	4066	;# 
  6510   000FE3                     PLUSW1          equ	4067	;# 
  6511   000FE4                     PREINC1         equ	4068	;# 
  6512   000FE5                     POSTDEC1        equ	4069	;# 
  6513   000FE6                     POSTINC1        equ	4070	;# 
  6514   000FE7                     INDF1           equ	4071	;# 
  6515   000FE8                     WREG            equ	4072	;# 
  6516   000FE9                     FSR0            equ	4073	;# 
  6517   000FE9                     FSR0L           equ	4073	;# 
  6518   000FEA                     FSR0H           equ	4074	;# 
  6519   000FEB                     PLUSW0          equ	4075	;# 
  6520   000FEC                     PREINC0         equ	4076	;# 
  6521   000FED                     POSTDEC0        equ	4077	;# 
  6522   000FEE                     POSTINC0        equ	4078	;# 
  6523   000FEF                     INDF0           equ	4079	;# 
  6524   000FF2                     INTCON          equ	4082	;# 
  6525   000FF3                     PROD            equ	4083	;# 
  6526   000FF3                     PRODL           equ	4083	;# 
  6527   000FF4                     PRODH           equ	4084	;# 
  6528   000FF5                     TABLAT          equ	4085	;# 
  6529   000FF6                     TBLPTR          equ	4086	;# 
  6530   000FF6                     TBLPTRL         equ	4086	;# 
  6531   000FF7                     TBLPTRH         equ	4087	;# 
  6532   000FF8                     TBLPTRU         equ	4088	;# 
  6533   000FF9                     PCLAT           equ	4089	;# 
  6534   000FF9                     PC              equ	4089	;# 
  6535   000FF9                     PCL             equ	4089	;# 
  6536   000FFA                     PCLATH          equ	4090	;# 
  6537   000FFB                     PCLATU          equ	4091	;# 
  6538   000FFC                     STKPTR          equ	4092	;# 
  6539   000FFD                     TOS             equ	4093	;# 
  6540   000FFD                     TOSL            equ	4093	;# 
  6541   000FFE                     TOSH            equ	4094	;# 
  6542   000FFF                     TOSU            equ	4095	;# 
  6543   000E9B                     PPSLOCK         equ	3739	;# 
  6544   000E9C                     INT0PPS         equ	3740	;# 
  6545   000E9D                     INT1PPS         equ	3741	;# 
  6546   000E9E                     INT2PPS         equ	3742	;# 
  6547   000E9F                     T0CKIPPS        equ	3743	;# 
  6548   000EA0                     T1CKIPPS        equ	3744	;# 
  6549   000EA1                     T1GPPS          equ	3745	;# 
  6550   000EA2                     T3CKIPPS        equ	3746	;# 
  6551   000EA3                     T3GPPS          equ	3747	;# 
  6552   000EA4                     T5CKIPPS        equ	3748	;# 
  6553   000EA5                     T5GPPS          equ	3749	;# 
  6554   000EA6                     T2INPPS         equ	3750	;# 
  6555   000EA7                     T4INPPS         equ	3751	;# 
  6556   000EA8                     T6INPPS         equ	3752	;# 
  6557   000EA9                     ADACTPPS        equ	3753	;# 
  6558   000EAA                     CCP1PPS         equ	3754	;# 
  6559   000EAB                     CCP2PPS         equ	3755	;# 
  6560   000EAC                     CWG1PPS         equ	3756	;# 
  6561   000EAC                     CWGPPS          equ	3756	;# 
  6562   000EAC                     CWGINPPS        equ	3756	;# 
  6563   000EAC                     CWG1INPPS       equ	3756	;# 
  6564   000EAD                     MDCARLPPS       equ	3757	;# 
  6565   000EAE                     MDCARHPPS       equ	3758	;# 
  6566   000EAF                     MDSRCPPS        equ	3759	;# 
  6567   000EB0                     RX1PPS          equ	3760	;# 
  6568   000EB0                     RXPPS           equ	3760	;# 
  6569   000EB0                     RXDT1PPS        equ	3760	;# 
  6570   000EB1                     CK1PPS          equ	3761	;# 
  6571   000EB1                     TXPPS           equ	3761	;# 
  6572   000EB1                     CKPPS           equ	3761	;# 
  6573   000EB1                     TXCK1PPS        equ	3761	;# 
  6574   000EB1                     TX1PPS          equ	3761	;# 
  6575   000EB2                     SSP1CLKPPS      equ	3762	;# 
  6576   000EB2                     SSPCLKPPS       equ	3762	;# 
  6577   000EB3                     SSP1DATPPS      equ	3763	;# 
  6578   000EB3                     SSPDATPPS       equ	3763	;# 
  6579   000EB4                     SSP1SSPPS       equ	3764	;# 
  6580   000EB4                     SSPSSPPS        equ	3764	;# 
  6581   000EB5                     IPR0            equ	3765	;# 
  6582   000EB6                     IPR1            equ	3766	;# 
  6583   000EB7                     IPR2            equ	3767	;# 
  6584   000EB8                     IPR3            equ	3768	;# 
  6585   000EB9                     IPR4            equ	3769	;# 
  6586   000EBA                     IPR5            equ	3770	;# 
  6587   000EBB                     IPR6            equ	3771	;# 
  6588   000EBC                     IPR7            equ	3772	;# 
  6589   000EBD                     PIE0            equ	3773	;# 
  6590   000EBE                     PIE1            equ	3774	;# 
  6591   000EBF                     PIE2            equ	3775	;# 
  6592   000EC0                     PIE3            equ	3776	;# 
  6593   000EC1                     PIE4            equ	3777	;# 
  6594   000EC2                     PIE5            equ	3778	;# 
  6595   000EC3                     PIE6            equ	3779	;# 
  6596   000EC4                     PIE7            equ	3780	;# 
  6597   000EC5                     PIR0            equ	3781	;# 
  6598   000EC6                     PIR1            equ	3782	;# 
  6599   000EC7                     PIR2            equ	3783	;# 
  6600   000EC8                     PIR3            equ	3784	;# 
  6601   000EC9                     PIR4            equ	3785	;# 
  6602   000ECA                     PIR5            equ	3786	;# 
  6603   000ECB                     PIR6            equ	3787	;# 
  6604   000ECC                     PIR7            equ	3788	;# 
  6605   000ECD                     WDTCON0         equ	3789	;# 
  6606   000ECE                     WDTCON1         equ	3790	;# 
  6607   000ECF                     WDTPSL          equ	3791	;# 
  6608   000ED0                     WDTPSH          equ	3792	;# 
  6609   000ED1                     WDTTMR          equ	3793	;# 
  6610   000ED2                     CPUDOZE         equ	3794	;# 
  6611   000ED3                     OSCCON1         equ	3795	;# 
  6612   000ED4                     OSCCON2         equ	3796	;# 
  6613   000ED5                     OSCCON3         equ	3797	;# 
  6614   000ED6                     OSCSTAT         equ	3798	;# 
  6615   000ED6                     OSCSTAT1        equ	3798	;# 
  6616   000ED7                     OSCEN           equ	3799	;# 
  6617   000ED8                     OSCTUNE         equ	3800	;# 
  6618   000ED9                     OSCFRQ          equ	3801	;# 
  6619   000ED9                     OSCFREQ         equ	3801	;# 
  6620   000EDA                     VREGCON         equ	3802	;# 
  6621   000EDB                     BORCON          equ	3803	;# 
  6622   000EDC                     PMD0            equ	3804	;# 
  6623   000EDD                     PMD1            equ	3805	;# 
  6624   000EDE                     PMD2            equ	3806	;# 
  6625   000EDF                     PMD3            equ	3807	;# 
  6626   000EE0                     PMD4            equ	3808	;# 
  6627   000EE1                     PMD5            equ	3809	;# 
  6628   000EE2                     RA0PPS          equ	3810	;# 
  6629   000EE3                     RA1PPS          equ	3811	;# 
  6630   000EE4                     RA2PPS          equ	3812	;# 
  6631   000EE5                     RA3PPS          equ	3813	;# 
  6632   000EE6                     RA4PPS          equ	3814	;# 
  6633   000EE7                     RA5PPS          equ	3815	;# 
  6634   000EE8                     RA6PPS          equ	3816	;# 
  6635   000EE9                     RA7PPS          equ	3817	;# 
  6636   000EEA                     RB0PPS          equ	3818	;# 
  6637   000EEB                     RB1PPS          equ	3819	;# 
  6638   000EEC                     RB2PPS          equ	3820	;# 
  6639   000EED                     RB3PPS          equ	3821	;# 
  6640   000EEE                     RB4PPS          equ	3822	;# 
  6641   000EEF                     RB5PPS          equ	3823	;# 
  6642   000EF0                     RB6PPS          equ	3824	;# 
  6643   000EF1                     RB7PPS          equ	3825	;# 
  6644   000EF2                     RC0PPS          equ	3826	;# 
  6645   000EF3                     RC1PPS          equ	3827	;# 
  6646   000EF4                     RC2PPS          equ	3828	;# 
  6647   000EF5                     RC3PPS          equ	3829	;# 
  6648   000EF6                     RC4PPS          equ	3830	;# 
  6649   000EF7                     RC5PPS          equ	3831	;# 
  6650   000EF8                     RC6PPS          equ	3832	;# 
  6651   000EF9                     RC7PPS          equ	3833	;# 
  6652   000F05                     IOCAF           equ	3845	;# 
  6653   000F06                     IOCAN           equ	3846	;# 
  6654   000F07                     IOCAP           equ	3847	;# 
  6655   000F08                     INLVLA          equ	3848	;# 
  6656   000F09                     SLRCONA         equ	3849	;# 
  6657   000F0A                     ODCONA          equ	3850	;# 
  6658   000F0B                     WPUA            equ	3851	;# 
  6659   000F0C                     ANSELA          equ	3852	;# 
  6660   000F0D                     IOCBF           equ	3853	;# 
  6661   000F0E                     IOCBN           equ	3854	;# 
  6662   000F0F                     IOCBP           equ	3855	;# 
  6663   000F10                     INLVLB          equ	3856	;# 
  6664   000F11                     SLRCONB         equ	3857	;# 
  6665   000F12                     ODCONB          equ	3858	;# 
  6666   000F13                     WPUB            equ	3859	;# 
  6667   000F14                     ANSELB          equ	3860	;# 
  6668   000F15                     IOCCF           equ	3861	;# 
  6669   000F16                     IOCCN           equ	3862	;# 
  6670   000F17                     IOCCP           equ	3863	;# 
  6671   000F18                     INLVLC          equ	3864	;# 
  6672   000F19                     SLRCONC         equ	3865	;# 
  6673   000F1A                     ODCONC          equ	3866	;# 
  6674   000F1B                     WPUC            equ	3867	;# 
  6675   000F1C                     ANSELC          equ	3868	;# 
  6676   000F22                     IOCEF           equ	3874	;# 
  6677   000F23                     IOCEN           equ	3875	;# 
  6678   000F24                     IOCEP           equ	3876	;# 
  6679   000F25                     INLVLE          equ	3877	;# 
  6680   000F28                     WPUE            equ	3880	;# 
  6681   000F2A                     HLVDCON0        equ	3882	;# 
  6682   000F2B                     HLVDCON1        equ	3883	;# 
  6683   000F2C                     FVRCON          equ	3884	;# 
  6684   000F2D                     ZCDCON          equ	3885	;# 
  6685   000F2E                     DAC1CON0        equ	3886	;# 
  6686   000F2F                     DAC1CON1        equ	3887	;# 
  6687   000F30                     CM2CON0         equ	3888	;# 
  6688   000F31                     CM2CON1         equ	3889	;# 
  6689   000F32                     CM2NCH          equ	3890	;# 
  6690   000F33                     CM2PCH          equ	3891	;# 
  6691   000F34                     CM1CON0         equ	3892	;# 
  6692   000F35                     CM1CON1         equ	3893	;# 
  6693   000F36                     CM1NCH          equ	3894	;# 
  6694   000F37                     CM1PCH          equ	3895	;# 
  6695   000F38                     CMOUT           equ	3896	;# 
  6696   000F39                     CLKRCON         equ	3897	;# 
  6697   000F3A                     CLKRCLK         equ	3898	;# 
  6698   000F3B                     CWG1CLK         equ	3899	;# 
  6699   000F3B                     CWG1CLKCON      equ	3899	;# 
  6700   000F3C                     CWG1ISM         equ	3900	;# 
  6701   000F3D                     CWG1DBR         equ	3901	;# 
  6702   000F3E                     CWG1DBF         equ	3902	;# 
  6703   000F3F                     CWG1CON0        equ	3903	;# 
  6704   000F40                     CWG1CON1        equ	3904	;# 
  6705   000F41                     CWG1AS0         equ	3905	;# 
  6706   000F42                     CWG1AS1         equ	3906	;# 
  6707   000F43                     CWG1STR         equ	3907	;# 
  6708   000F44                     SCANLADR        equ	3908	;# 
  6709   000F44                     SCANLADRL       equ	3908	;# 
  6710   000F45                     SCANLADRH       equ	3909	;# 
  6711   000F46                     SCANLADRU       equ	3910	;# 
  6712   000F47                     SCANHADR        equ	3911	;# 
  6713   000F47                     SCANHADRL       equ	3911	;# 
  6714   000F48                     SCANHADRH       equ	3912	;# 
  6715   000F49                     SCANHADRU       equ	3913	;# 
  6716   000F4A                     SCANCON0        equ	3914	;# 
  6717   000F4B                     SCANTRIG        equ	3915	;# 
  6718   000F4C                     MDCON0          equ	3916	;# 
  6719   000F4D                     MDCON1          equ	3917	;# 
  6720   000F4E                     MDSRC           equ	3918	;# 
  6721   000F4F                     MDCARL          equ	3919	;# 
  6722   000F50                     MDCARH          equ	3920	;# 
  6723   000F51                     ADACT           equ	3921	;# 
  6724   000F52                     ADCLK           equ	3922	;# 
  6725   000F53                     ADREF           equ	3923	;# 
  6726   000F54                     ADCON1          equ	3924	;# 
  6727   000F55                     ADCON2          equ	3925	;# 
  6728   000F56                     ADCON3          equ	3926	;# 
  6729   000F57                     ADACQ           equ	3927	;# 
  6730   000F58                     ADCAP           equ	3928	;# 
  6731   000F59                     ADPRE           equ	3929	;# 
  6732   000F5A                     ADPCH           equ	3930	;# 
  6733   000F5B                     ADCON0          equ	3931	;# 
  6734   000F5C                     ADPREV          equ	3932	;# 
  6735   000F5C                     ADPREVL         equ	3932	;# 
  6736   000F5D                     ADPREVH         equ	3933	;# 
  6737   000F5E                     ADRES           equ	3934	;# 
  6738   000F5E                     ADRESL          equ	3934	;# 
  6739   000F5F                     ADRESH          equ	3935	;# 
  6740   000F60                     ADSTAT          equ	3936	;# 
  6741   000F61                     ADRPT           equ	3937	;# 
  6742   000F62                     ADCNT           equ	3938	;# 
  6743   000F63                     ADSTPT          equ	3939	;# 
  6744   000F63                     ADSTPTL         equ	3939	;# 
  6745   000F64                     ADSTPTH         equ	3940	;# 
  6746   000F65                     ADLTH           equ	3941	;# 
  6747   000F65                     ADLTHL          equ	3941	;# 
  6748   000F66                     ADLTHH          equ	3942	;# 
  6749   000F67                     ADUTH           equ	3943	;# 
  6750   000F67                     ADUTHL          equ	3943	;# 
  6751   000F68                     ADUTHH          equ	3944	;# 
  6752   000F69                     ADERR           equ	3945	;# 
  6753   000F69                     ADERRL          equ	3945	;# 
  6754   000F6A                     ADERRH          equ	3946	;# 
  6755   000F6B                     ADACC           equ	3947	;# 
  6756   000F6B                     ADACCL          equ	3947	;# 
  6757   000F6C                     ADACCH          equ	3948	;# 
  6758   000F6D                     ADFLTR          equ	3949	;# 
  6759   000F6D                     ADFLTRL         equ	3949	;# 
  6760   000F6E                     ADFLTRH         equ	3950	;# 
  6761   000F6F                     CRCDATA         equ	3951	;# 
  6762   000F6F                     CRCDATL         equ	3951	;# 
  6763   000F70                     CRCDATH         equ	3952	;# 
  6764   000F71                     CRCACC          equ	3953	;# 
  6765   000F71                     CRCACCL         equ	3953	;# 
  6766   000F72                     CRCACCH         equ	3954	;# 
  6767   000F73                     CRCSHFT         equ	3955	;# 
  6768   000F73                     CRCSHIFTL       equ	3955	;# 
  6769   000F74                     CRCSHIFTH       equ	3956	;# 
  6770   000F75                     CRCXOR          equ	3957	;# 
  6771   000F75                     CRCXORL         equ	3957	;# 
  6772   000F76                     CRCXORH         equ	3958	;# 
  6773   000F77                     CRCCON0         equ	3959	;# 
  6774   000F78                     CRCCON1         equ	3960	;# 
  6775   000F79                     NVMADR          equ	3961	;# 
  6776   000F79                     NVMADRL         equ	3961	;# 
  6777   000F7A                     NVMADRH         equ	3962	;# 
  6778   000F7B                     NVMADRU         equ	3963	;# 
  6779   000F7C                     NVMDAT          equ	3964	;# 
  6780   000F7C                     NVMDATL         equ	3964	;# 
  6781   000F7D                     NVMDATH         equ	3965	;# 
  6782   000F7F                     NVMCON0         equ	3967	;# 
  6783   000F80                     NVMCON1         equ	3968	;# 
  6784   000F81                     NVMCON2         equ	3969	;# 
  6785   000F82                     LATA            equ	3970	;# 
  6786   000F83                     LATB            equ	3971	;# 
  6787   000F84                     LATC            equ	3972	;# 
  6788   000F87                     TRISA           equ	3975	;# 
  6789   000F87                     DDRA            equ	3975	;# 
  6790   000F88                     TRISB           equ	3976	;# 
  6791   000F88                     DDRB            equ	3976	;# 
  6792   000F89                     TRISC           equ	3977	;# 
  6793   000F89                     DDRC            equ	3977	;# 
  6794   000F8C                     PORTA           equ	3980	;# 
  6795   000F8D                     PORTB           equ	3981	;# 
  6796   000F8E                     PORTC           equ	3982	;# 
  6797   000F90                     PORTE           equ	3984	;# 
  6798   000F91                     SSP1BUF         equ	3985	;# 
  6799   000F92                     SSP1ADD         equ	3986	;# 
  6800   000F93                     SSP1MSK         equ	3987	;# 
  6801   000F94                     SSP1STAT        equ	3988	;# 
  6802   000F95                     SSP1CON1        equ	3989	;# 
  6803   000F96                     SSP1CON2        equ	3990	;# 
  6804   000F97                     SSP1CON3        equ	3991	;# 
  6805   000F98                     RC1REG          equ	3992	;# 
  6806   000F98                     RCREG           equ	3992	;# 
  6807   000F98                     RCREG1          equ	3992	;# 
  6808   000F99                     TX1REG          equ	3993	;# 
  6809   000F99                     TXREG1          equ	3993	;# 
  6810   000F99                     TXREG           equ	3993	;# 
  6811   000F9A                     SP1BRG          equ	3994	;# 
  6812   000F9A                     SPBRG           equ	3994	;# 
  6813   000F9A                     SP1BRGL         equ	3994	;# 
  6814   000F9A                     SPBRG1          equ	3994	;# 
  6815   000F9A                     SPBRGL          equ	3994	;# 
  6816   000F9B                     SP1BRGH         equ	3995	;# 
  6817   000F9B                     SPBRGH          equ	3995	;# 
  6818   000F9B                     SPBRGH1         equ	3995	;# 
  6819   000F9C                     RC1STA          equ	3996	;# 
  6820   000F9C                     RCSTA1          equ	3996	;# 
  6821   000F9C                     RCSTA           equ	3996	;# 
  6822   000F9D                     TX1STA          equ	3997	;# 
  6823   000F9D                     TXSTA1          equ	3997	;# 
  6824   000F9D                     TXSTA           equ	3997	;# 
  6825   000F9E                     BAUD1CON        equ	3998	;# 
  6826   000F9E                     BAUDCON1        equ	3998	;# 
  6827   000F9E                     BAUDCTL1        equ	3998	;# 
  6828   000F9E                     BAUDCON         equ	3998	;# 
  6829   000F9E                     BAUDCTL         equ	3998	;# 
  6830   000F9F                     PWM4DC          equ	3999	;# 
  6831   000F9F                     PWM4DCL         equ	3999	;# 
  6832   000FA0                     PWM4DCH         equ	4000	;# 
  6833   000FA1                     PWM4CON         equ	4001	;# 
  6834   000FA2                     PWM3DC          equ	4002	;# 
  6835   000FA2                     PWM3DCL         equ	4002	;# 
  6836   000FA3                     PWM3DCH         equ	4003	;# 
  6837   000FA4                     PWM3CON         equ	4004	;# 
  6838   000FA5                     CCPR2           equ	4005	;# 
  6839   000FA5                     CCPR2L          equ	4005	;# 
  6840   000FA6                     CCPR2H          equ	4006	;# 
  6841   000FA7                     CCP2CON         equ	4007	;# 
  6842   000FA8                     CCP2CAP         equ	4008	;# 
  6843   000FA9                     CCPR1           equ	4009	;# 
  6844   000FA9                     CCPR1L          equ	4009	;# 
  6845   000FAA                     CCPR1H          equ	4010	;# 
  6846   000FAB                     CCP1CON         equ	4011	;# 
  6847   000FAC                     CCP1CAP         equ	4012	;# 
  6848   000FAD                     CCPTMRS         equ	4013	;# 
  6849   000FAE                     T6TMR           equ	4014	;# 
  6850   000FAE                     TMR6            equ	4014	;# 
  6851   000FAF                     T6PR            equ	4015	;# 
  6852   000FAF                     PR6             equ	4015	;# 
  6853   000FB0                     T6CON           equ	4016	;# 
  6854   000FB1                     T6HLT           equ	4017	;# 
  6855   000FB2                     T6CLKCON        equ	4018	;# 
  6856   000FB2                     T6CLK           equ	4018	;# 
  6857   000FB3                     T6RST           equ	4019	;# 
  6858   000FB4                     T4TMR           equ	4020	;# 
  6859   000FB4                     TMR4            equ	4020	;# 
  6860   000FB5                     T4PR            equ	4021	;# 
  6861   000FB5                     PR4             equ	4021	;# 
  6862   000FB6                     T4CON           equ	4022	;# 
  6863   000FB7                     T4HLT           equ	4023	;# 
  6864   000FB8                     T4CLKCON        equ	4024	;# 
  6865   000FB8                     T4CLK           equ	4024	;# 
  6866   000FB9                     T4RST           equ	4025	;# 
  6867   000FBA                     T2TMR           equ	4026	;# 
  6868   000FBA                     TMR2            equ	4026	;# 
  6869   000FBB                     T2PR            equ	4027	;# 
  6870   000FBB                     PR2             equ	4027	;# 
  6871   000FBC                     T2CON           equ	4028	;# 
  6872   000FBD                     T2HLT           equ	4029	;# 
  6873   000FBE                     T2CLKCON        equ	4030	;# 
  6874   000FBE                     T2CLK           equ	4030	;# 
  6875   000FBF                     T2RST           equ	4031	;# 
  6876   000FC0                     TMR5            equ	4032	;# 
  6877   000FC0                     TMR5L           equ	4032	;# 
  6878   000FC1                     TMR5H           equ	4033	;# 
  6879   000FC2                     T5CON           equ	4034	;# 
  6880   000FC2                     TMR5CON         equ	4034	;# 
  6881   000FC3                     T5GCON          equ	4035	;# 
  6882   000FC3                     TMR5GCON        equ	4035	;# 
  6883   000FC4                     T5GATE          equ	4036	;# 
  6884   000FC4                     TMR5GATE        equ	4036	;# 
  6885   000FC5                     T5CLK           equ	4037	;# 
  6886   000FC5                     TMR5CLK         equ	4037	;# 
  6887   000FC5                     PR5             equ	4037	;# 
  6888   000FC6                     TMR3            equ	4038	;# 
  6889   000FC6                     TMR3L           equ	4038	;# 
  6890   000FC7                     TMR3H           equ	4039	;# 
  6891   000FC8                     T3CON           equ	4040	;# 
  6892   000FC8                     TMR3CON         equ	4040	;# 
  6893   000FC9                     T3GCON          equ	4041	;# 
  6894   000FC9                     TMR3GCON        equ	4041	;# 
  6895   000FCA                     T3GATE          equ	4042	;# 
  6896   000FCA                     TMR3GATE        equ	4042	;# 
  6897   000FCB                     T3CLK           equ	4043	;# 
  6898   000FCB                     TMR3CLK         equ	4043	;# 
  6899   000FCB                     PR3             equ	4043	;# 
  6900   000FCC                     TMR1            equ	4044	;# 
  6901   000FCC                     TMR1L           equ	4044	;# 
  6902   000FCD                     TMR1H           equ	4045	;# 
  6903   000FCE                     T1CON           equ	4046	;# 
  6904   000FCE                     TMR1CON         equ	4046	;# 
  6905   000FCF                     T1GCON          equ	4047	;# 
  6906   000FCF                     TMR1GCON        equ	4047	;# 
  6907   000FD0                     T1GATE          equ	4048	;# 
  6908   000FD0                     TMR1GATE        equ	4048	;# 
  6909   000FD1                     T1CLK           equ	4049	;# 
  6910   000FD1                     TMR1CLK         equ	4049	;# 
  6911   000FD1                     PR1             equ	4049	;# 
  6912   000FD2                     TMR0L           equ	4050	;# 
  6913   000FD2                     TMR0            equ	4050	;# 
  6914   000FD3                     TMR0H           equ	4051	;# 
  6915   000FD3                     PR0             equ	4051	;# 
  6916   000FD4                     T0CON0          equ	4052	;# 
  6917   000FD5                     T0CON1          equ	4053	;# 
  6918   000FD6                     PCON1           equ	4054	;# 
  6919   000FD7                     PCON0           equ	4055	;# 
  6920   000FD8                     STATUS          equ	4056	;# 
  6921   000FD9                     FSR2            equ	4057	;# 
  6922   000FD9                     FSR2L           equ	4057	;# 
  6923   000FDA                     FSR2H           equ	4058	;# 
  6924   000FDB                     PLUSW2          equ	4059	;# 
  6925   000FDC                     PREINC2         equ	4060	;# 
  6926   000FDD                     POSTDEC2        equ	4061	;# 
  6927   000FDE                     POSTINC2        equ	4062	;# 
  6928   000FDF                     INDF2           equ	4063	;# 
  6929   000FE0                     BSR             equ	4064	;# 
  6930   000FE1                     FSR1            equ	4065	;# 
  6931   000FE1                     FSR1L           equ	4065	;# 
  6932   000FE2                     FSR1H           equ	4066	;# 
  6933   000FE3                     PLUSW1          equ	4067	;# 
  6934   000FE4                     PREINC1         equ	4068	;# 
  6935   000FE5                     POSTDEC1        equ	4069	;# 
  6936   000FE6                     POSTINC1        equ	4070	;# 
  6937   000FE7                     INDF1           equ	4071	;# 
  6938   000FE8                     WREG            equ	4072	;# 
  6939   000FE9                     FSR0            equ	4073	;# 
  6940   000FE9                     FSR0L           equ	4073	;# 
  6941   000FEA                     FSR0H           equ	4074	;# 
  6942   000FEB                     PLUSW0          equ	4075	;# 
  6943   000FEC                     PREINC0         equ	4076	;# 
  6944   000FED                     POSTDEC0        equ	4077	;# 
  6945   000FEE                     POSTINC0        equ	4078	;# 
  6946   000FEF                     INDF0           equ	4079	;# 
  6947   000FF2                     INTCON          equ	4082	;# 
  6948   000FF3                     PROD            equ	4083	;# 
  6949   000FF3                     PRODL           equ	4083	;# 
  6950   000FF4                     PRODH           equ	4084	;# 
  6951   000FF5                     TABLAT          equ	4085	;# 
  6952   000FF6                     TBLPTR          equ	4086	;# 
  6953   000FF6                     TBLPTRL         equ	4086	;# 
  6954   000FF7                     TBLPTRH         equ	4087	;# 
  6955   000FF8                     TBLPTRU         equ	4088	;# 
  6956   000FF9                     PCLAT           equ	4089	;# 
  6957   000FF9                     PC              equ	4089	;# 
  6958   000FF9                     PCL             equ	4089	;# 
  6959   000FFA                     PCLATH          equ	4090	;# 
  6960   000FFB                     PCLATU          equ	4091	;# 
  6961   000FFC                     STKPTR          equ	4092	;# 
  6962   000FFD                     TOS             equ	4093	;# 
  6963   000FFD                     TOSL            equ	4093	;# 
  6964   000FFE                     TOSH            equ	4094	;# 
  6965   000FFF                     TOSU            equ	4095	;# 
  6966   000E9B                     PPSLOCK         equ	3739	;# 
  6967   000E9C                     INT0PPS         equ	3740	;# 
  6968   000E9D                     INT1PPS         equ	3741	;# 
  6969   000E9E                     INT2PPS         equ	3742	;# 
  6970   000E9F                     T0CKIPPS        equ	3743	;# 
  6971   000EA0                     T1CKIPPS        equ	3744	;# 
  6972   000EA1                     T1GPPS          equ	3745	;# 
  6973   000EA2                     T3CKIPPS        equ	3746	;# 
  6974   000EA3                     T3GPPS          equ	3747	;# 
  6975   000EA4                     T5CKIPPS        equ	3748	;# 
  6976   000EA5                     T5GPPS          equ	3749	;# 
  6977   000EA6                     T2INPPS         equ	3750	;# 
  6978   000EA7                     T4INPPS         equ	3751	;# 
  6979   000EA8                     T6INPPS         equ	3752	;# 
  6980   000EA9                     ADACTPPS        equ	3753	;# 
  6981   000EAA                     CCP1PPS         equ	3754	;# 
  6982   000EAB                     CCP2PPS         equ	3755	;# 
  6983   000EAC                     CWG1PPS         equ	3756	;# 
  6984   000EAC                     CWGPPS          equ	3756	;# 
  6985   000EAC                     CWGINPPS        equ	3756	;# 
  6986   000EAC                     CWG1INPPS       equ	3756	;# 
  6987   000EAD                     MDCARLPPS       equ	3757	;# 
  6988   000EAE                     MDCARHPPS       equ	3758	;# 
  6989   000EAF                     MDSRCPPS        equ	3759	;# 
  6990   000EB0                     RX1PPS          equ	3760	;# 
  6991   000EB0                     RXPPS           equ	3760	;# 
  6992   000EB0                     RXDT1PPS        equ	3760	;# 
  6993   000EB1                     CK1PPS          equ	3761	;# 
  6994   000EB1                     TXPPS           equ	3761	;# 
  6995   000EB1                     CKPPS           equ	3761	;# 
  6996   000EB1                     TXCK1PPS        equ	3761	;# 
  6997   000EB1                     TX1PPS          equ	3761	;# 
  6998   000EB2                     SSP1CLKPPS      equ	3762	;# 
  6999   000EB2                     SSPCLKPPS       equ	3762	;# 
  7000   000EB3                     SSP1DATPPS      equ	3763	;# 
  7001   000EB3                     SSPDATPPS       equ	3763	;# 
  7002   000EB4                     SSP1SSPPS       equ	3764	;# 
  7003   000EB4                     SSPSSPPS        equ	3764	;# 
  7004   000EB5                     IPR0            equ	3765	;# 
  7005   000EB6                     IPR1            equ	3766	;# 
  7006   000EB7                     IPR2            equ	3767	;# 
  7007   000EB8                     IPR3            equ	3768	;# 
  7008   000EB9                     IPR4            equ	3769	;# 
  7009   000EBA                     IPR5            equ	3770	;# 
  7010   000EBB                     IPR6            equ	3771	;# 
  7011   000EBC                     IPR7            equ	3772	;# 
  7012   000EBD                     PIE0            equ	3773	;# 
  7013   000EBE                     PIE1            equ	3774	;# 
  7014   000EBF                     PIE2            equ	3775	;# 
  7015   000EC0                     PIE3            equ	3776	;# 
  7016   000EC1                     PIE4            equ	3777	;# 
  7017   000EC2                     PIE5            equ	3778	;# 
  7018   000EC3                     PIE6            equ	3779	;# 
  7019   000EC4                     PIE7            equ	3780	;# 
  7020   000EC5                     PIR0            equ	3781	;# 
  7021   000EC6                     PIR1            equ	3782	;# 
  7022   000EC7                     PIR2            equ	3783	;# 
  7023   000EC8                     PIR3            equ	3784	;# 
  7024   000EC9                     PIR4            equ	3785	;# 
  7025   000ECA                     PIR5            equ	3786	;# 
  7026   000ECB                     PIR6            equ	3787	;# 
  7027   000ECC                     PIR7            equ	3788	;# 
  7028   000ECD                     WDTCON0         equ	3789	;# 
  7029   000ECE                     WDTCON1         equ	3790	;# 
  7030   000ECF                     WDTPSL          equ	3791	;# 
  7031   000ED0                     WDTPSH          equ	3792	;# 
  7032   000ED1                     WDTTMR          equ	3793	;# 
  7033   000ED2                     CPUDOZE         equ	3794	;# 
  7034   000ED3                     OSCCON1         equ	3795	;# 
  7035   000ED4                     OSCCON2         equ	3796	;# 
  7036   000ED5                     OSCCON3         equ	3797	;# 
  7037   000ED6                     OSCSTAT         equ	3798	;# 
  7038   000ED6                     OSCSTAT1        equ	3798	;# 
  7039   000ED7                     OSCEN           equ	3799	;# 
  7040   000ED8                     OSCTUNE         equ	3800	;# 
  7041   000ED9                     OSCFRQ          equ	3801	;# 
  7042   000ED9                     OSCFREQ         equ	3801	;# 
  7043   000EDA                     VREGCON         equ	3802	;# 
  7044   000EDB                     BORCON          equ	3803	;# 
  7045   000EDC                     PMD0            equ	3804	;# 
  7046   000EDD                     PMD1            equ	3805	;# 
  7047   000EDE                     PMD2            equ	3806	;# 
  7048   000EDF                     PMD3            equ	3807	;# 
  7049   000EE0                     PMD4            equ	3808	;# 
  7050   000EE1                     PMD5            equ	3809	;# 
  7051   000EE2                     RA0PPS          equ	3810	;# 
  7052   000EE3                     RA1PPS          equ	3811	;# 
  7053   000EE4                     RA2PPS          equ	3812	;# 
  7054   000EE5                     RA3PPS          equ	3813	;# 
  7055   000EE6                     RA4PPS          equ	3814	;# 
  7056   000EE7                     RA5PPS          equ	3815	;# 
  7057   000EE8                     RA6PPS          equ	3816	;# 
  7058   000EE9                     RA7PPS          equ	3817	;# 
  7059   000EEA                     RB0PPS          equ	3818	;# 
  7060   000EEB                     RB1PPS          equ	3819	;# 
  7061   000EEC                     RB2PPS          equ	3820	;# 
  7062   000EED                     RB3PPS          equ	3821	;# 
  7063   000EEE                     RB4PPS          equ	3822	;# 
  7064   000EEF                     RB5PPS          equ	3823	;# 
  7065   000EF0                     RB6PPS          equ	3824	;# 
  7066   000EF1                     RB7PPS          equ	3825	;# 
  7067   000EF2                     RC0PPS          equ	3826	;# 
  7068   000EF3                     RC1PPS          equ	3827	;# 
  7069   000EF4                     RC2PPS          equ	3828	;# 
  7070   000EF5                     RC3PPS          equ	3829	;# 
  7071   000EF6                     RC4PPS          equ	3830	;# 
  7072   000EF7                     RC5PPS          equ	3831	;# 
  7073   000EF8                     RC6PPS          equ	3832	;# 
  7074   000EF9                     RC7PPS          equ	3833	;# 
  7075   000F05                     IOCAF           equ	3845	;# 
  7076   000F06                     IOCAN           equ	3846	;# 
  7077   000F07                     IOCAP           equ	3847	;# 
  7078   000F08                     INLVLA          equ	3848	;# 
  7079   000F09                     SLRCONA         equ	3849	;# 
  7080   000F0A                     ODCONA          equ	3850	;# 
  7081   000F0B                     WPUA            equ	3851	;# 
  7082   000F0C                     ANSELA          equ	3852	;# 
  7083   000F0D                     IOCBF           equ	3853	;# 
  7084   000F0E                     IOCBN           equ	3854	;# 
  7085   000F0F                     IOCBP           equ	3855	;# 
  7086   000F10                     INLVLB          equ	3856	;# 
  7087   000F11                     SLRCONB         equ	3857	;# 
  7088   000F12                     ODCONB          equ	3858	;# 
  7089   000F13                     WPUB            equ	3859	;# 
  7090   000F14                     ANSELB          equ	3860	;# 
  7091   000F15                     IOCCF           equ	3861	;# 
  7092   000F16                     IOCCN           equ	3862	;# 
  7093   000F17                     IOCCP           equ	3863	;# 
  7094   000F18                     INLVLC          equ	3864	;# 
  7095   000F19                     SLRCONC         equ	3865	;# 
  7096   000F1A                     ODCONC          equ	3866	;# 
  7097   000F1B                     WPUC            equ	3867	;# 
  7098   000F1C                     ANSELC          equ	3868	;# 
  7099   000F22                     IOCEF           equ	3874	;# 
  7100   000F23                     IOCEN           equ	3875	;# 
  7101   000F24                     IOCEP           equ	3876	;# 
  7102   000F25                     INLVLE          equ	3877	;# 
  7103   000F28                     WPUE            equ	3880	;# 
  7104   000F2A                     HLVDCON0        equ	3882	;# 
  7105   000F2B                     HLVDCON1        equ	3883	;# 
  7106   000F2C                     FVRCON          equ	3884	;# 
  7107   000F2D                     ZCDCON          equ	3885	;# 
  7108   000F2E                     DAC1CON0        equ	3886	;# 
  7109   000F2F                     DAC1CON1        equ	3887	;# 
  7110   000F30                     CM2CON0         equ	3888	;# 
  7111   000F31                     CM2CON1         equ	3889	;# 
  7112   000F32                     CM2NCH          equ	3890	;# 
  7113   000F33                     CM2PCH          equ	3891	;# 
  7114   000F34                     CM1CON0         equ	3892	;# 
  7115   000F35                     CM1CON1         equ	3893	;# 
  7116   000F36                     CM1NCH          equ	3894	;# 
  7117   000F37                     CM1PCH          equ	3895	;# 
  7118   000F38                     CMOUT           equ	3896	;# 
  7119   000F39                     CLKRCON         equ	3897	;# 
  7120   000F3A                     CLKRCLK         equ	3898	;# 
  7121   000F3B                     CWG1CLK         equ	3899	;# 
  7122   000F3B                     CWG1CLKCON      equ	3899	;# 
  7123   000F3C                     CWG1ISM         equ	3900	;# 
  7124   000F3D                     CWG1DBR         equ	3901	;# 
  7125   000F3E                     CWG1DBF         equ	3902	;# 
  7126   000F3F                     CWG1CON0        equ	3903	;# 
  7127   000F40                     CWG1CON1        equ	3904	;# 
  7128   000F41                     CWG1AS0         equ	3905	;# 
  7129   000F42                     CWG1AS1         equ	3906	;# 
  7130   000F43                     CWG1STR         equ	3907	;# 
  7131   000F44                     SCANLADR        equ	3908	;# 
  7132   000F44                     SCANLADRL       equ	3908	;# 
  7133   000F45                     SCANLADRH       equ	3909	;# 
  7134   000F46                     SCANLADRU       equ	3910	;# 
  7135   000F47                     SCANHADR        equ	3911	;# 
  7136   000F47                     SCANHADRL       equ	3911	;# 
  7137   000F48                     SCANHADRH       equ	3912	;# 
  7138   000F49                     SCANHADRU       equ	3913	;# 
  7139   000F4A                     SCANCON0        equ	3914	;# 
  7140   000F4B                     SCANTRIG        equ	3915	;# 
  7141   000F4C                     MDCON0          equ	3916	;# 
  7142   000F4D                     MDCON1          equ	3917	;# 
  7143   000F4E                     MDSRC           equ	3918	;# 
  7144   000F4F                     MDCARL          equ	3919	;# 
  7145   000F50                     MDCARH          equ	3920	;# 
  7146   000F51                     ADACT           equ	3921	;# 
  7147   000F52                     ADCLK           equ	3922	;# 
  7148   000F53                     ADREF           equ	3923	;# 
  7149   000F54                     ADCON1          equ	3924	;# 
  7150   000F55                     ADCON2          equ	3925	;# 
  7151   000F56                     ADCON3          equ	3926	;# 
  7152   000F57                     ADACQ           equ	3927	;# 
  7153   000F58                     ADCAP           equ	3928	;# 
  7154   000F59                     ADPRE           equ	3929	;# 
  7155   000F5A                     ADPCH           equ	3930	;# 
  7156   000F5B                     ADCON0          equ	3931	;# 
  7157   000F5C                     ADPREV          equ	3932	;# 
  7158   000F5C                     ADPREVL         equ	3932	;# 
  7159   000F5D                     ADPREVH         equ	3933	;# 
  7160   000F5E                     ADRES           equ	3934	;# 
  7161   000F5E                     ADRESL          equ	3934	;# 
  7162   000F5F                     ADRESH          equ	3935	;# 
  7163   000F60                     ADSTAT          equ	3936	;# 
  7164   000F61                     ADRPT           equ	3937	;# 
  7165   000F62                     ADCNT           equ	3938	;# 
  7166   000F63                     ADSTPT          equ	3939	;# 
  7167   000F63                     ADSTPTL         equ	3939	;# 
  7168   000F64                     ADSTPTH         equ	3940	;# 
  7169   000F65                     ADLTH           equ	3941	;# 
  7170   000F65                     ADLTHL          equ	3941	;# 
  7171   000F66                     ADLTHH          equ	3942	;# 
  7172   000F67                     ADUTH           equ	3943	;# 
  7173   000F67                     ADUTHL          equ	3943	;# 
  7174   000F68                     ADUTHH          equ	3944	;# 
  7175   000F69                     ADERR           equ	3945	;# 
  7176   000F69                     ADERRL          equ	3945	;# 
  7177   000F6A                     ADERRH          equ	3946	;# 
  7178   000F6B                     ADACC           equ	3947	;# 
  7179   000F6B                     ADACCL          equ	3947	;# 
  7180   000F6C                     ADACCH          equ	3948	;# 
  7181   000F6D                     ADFLTR          equ	3949	;# 
  7182   000F6D                     ADFLTRL         equ	3949	;# 
  7183   000F6E                     ADFLTRH         equ	3950	;# 
  7184   000F6F                     CRCDATA         equ	3951	;# 
  7185   000F6F                     CRCDATL         equ	3951	;# 
  7186   000F70                     CRCDATH         equ	3952	;# 
  7187   000F71                     CRCACC          equ	3953	;# 
  7188   000F71                     CRCACCL         equ	3953	;# 
  7189   000F72                     CRCACCH         equ	3954	;# 
  7190   000F73                     CRCSHFT         equ	3955	;# 
  7191   000F73                     CRCSHIFTL       equ	3955	;# 
  7192   000F74                     CRCSHIFTH       equ	3956	;# 
  7193   000F75                     CRCXOR          equ	3957	;# 
  7194   000F75                     CRCXORL         equ	3957	;# 
  7195   000F76                     CRCXORH         equ	3958	;# 
  7196   000F77                     CRCCON0         equ	3959	;# 
  7197   000F78                     CRCCON1         equ	3960	;# 
  7198   000F79                     NVMADR          equ	3961	;# 
  7199   000F79                     NVMADRL         equ	3961	;# 
  7200   000F7A                     NVMADRH         equ	3962	;# 
  7201   000F7B                     NVMADRU         equ	3963	;# 
  7202   000F7C                     NVMDAT          equ	3964	;# 
  7203   000F7C                     NVMDATL         equ	3964	;# 
  7204   000F7D                     NVMDATH         equ	3965	;# 
  7205   000F7F                     NVMCON0         equ	3967	;# 
  7206   000F80                     NVMCON1         equ	3968	;# 
  7207   000F81                     NVMCON2         equ	3969	;# 
  7208   000F82                     LATA            equ	3970	;# 
  7209   000F83                     LATB            equ	3971	;# 
  7210   000F84                     LATC            equ	3972	;# 
  7211   000F87                     TRISA           equ	3975	;# 
  7212   000F87                     DDRA            equ	3975	;# 
  7213   000F88                     TRISB           equ	3976	;# 
  7214   000F88                     DDRB            equ	3976	;# 
  7215   000F89                     TRISC           equ	3977	;# 
  7216   000F89                     DDRC            equ	3977	;# 
  7217   000F8C                     PORTA           equ	3980	;# 
  7218   000F8D                     PORTB           equ	3981	;# 
  7219   000F8E                     PORTC           equ	3982	;# 
  7220   000F90                     PORTE           equ	3984	;# 
  7221   000F91                     SSP1BUF         equ	3985	;# 
  7222   000F92                     SSP1ADD         equ	3986	;# 
  7223   000F93                     SSP1MSK         equ	3987	;# 
  7224   000F94                     SSP1STAT        equ	3988	;# 
  7225   000F95                     SSP1CON1        equ	3989	;# 
  7226   000F96                     SSP1CON2        equ	3990	;# 
  7227   000F97                     SSP1CON3        equ	3991	;# 
  7228   000F98                     RC1REG          equ	3992	;# 
  7229   000F98                     RCREG           equ	3992	;# 
  7230   000F98                     RCREG1          equ	3992	;# 
  7231   000F99                     TX1REG          equ	3993	;# 
  7232   000F99                     TXREG1          equ	3993	;# 
  7233   000F99                     TXREG           equ	3993	;# 
  7234   000F9A                     SP1BRG          equ	3994	;# 
  7235   000F9A                     SPBRG           equ	3994	;# 
  7236   000F9A                     SP1BRGL         equ	3994	;# 
  7237   000F9A                     SPBRG1          equ	3994	;# 
  7238   000F9A                     SPBRGL          equ	3994	;# 
  7239   000F9B                     SP1BRGH         equ	3995	;# 
  7240   000F9B                     SPBRGH          equ	3995	;# 
  7241   000F9B                     SPBRGH1         equ	3995	;# 
  7242   000F9C                     RC1STA          equ	3996	;# 
  7243   000F9C                     RCSTA1          equ	3996	;# 
  7244   000F9C                     RCSTA           equ	3996	;# 
  7245   000F9D                     TX1STA          equ	3997	;# 
  7246   000F9D                     TXSTA1          equ	3997	;# 
  7247   000F9D                     TXSTA           equ	3997	;# 
  7248   000F9E                     BAUD1CON        equ	3998	;# 
  7249   000F9E                     BAUDCON1        equ	3998	;# 
  7250   000F9E                     BAUDCTL1        equ	3998	;# 
  7251   000F9E                     BAUDCON         equ	3998	;# 
  7252   000F9E                     BAUDCTL         equ	3998	;# 
  7253   000F9F                     PWM4DC          equ	3999	;# 
  7254   000F9F                     PWM4DCL         equ	3999	;# 
  7255   000FA0                     PWM4DCH         equ	4000	;# 
  7256   000FA1                     PWM4CON         equ	4001	;# 
  7257   000FA2                     PWM3DC          equ	4002	;# 
  7258   000FA2                     PWM3DCL         equ	4002	;# 
  7259   000FA3                     PWM3DCH         equ	4003	;# 
  7260   000FA4                     PWM3CON         equ	4004	;# 
  7261   000FA5                     CCPR2           equ	4005	;# 
  7262   000FA5                     CCPR2L          equ	4005	;# 
  7263   000FA6                     CCPR2H          equ	4006	;# 
  7264   000FA7                     CCP2CON         equ	4007	;# 
  7265   000FA8                     CCP2CAP         equ	4008	;# 
  7266   000FA9                     CCPR1           equ	4009	;# 
  7267   000FA9                     CCPR1L          equ	4009	;# 
  7268   000FAA                     CCPR1H          equ	4010	;# 
  7269   000FAB                     CCP1CON         equ	4011	;# 
  7270   000FAC                     CCP1CAP         equ	4012	;# 
  7271   000FAD                     CCPTMRS         equ	4013	;# 
  7272   000FAE                     T6TMR           equ	4014	;# 
  7273   000FAE                     TMR6            equ	4014	;# 
  7274   000FAF                     T6PR            equ	4015	;# 
  7275   000FAF                     PR6             equ	4015	;# 
  7276   000FB0                     T6CON           equ	4016	;# 
  7277   000FB1                     T6HLT           equ	4017	;# 
  7278   000FB2                     T6CLKCON        equ	4018	;# 
  7279   000FB2                     T6CLK           equ	4018	;# 
  7280   000FB3                     T6RST           equ	4019	;# 
  7281   000FB4                     T4TMR           equ	4020	;# 
  7282   000FB4                     TMR4            equ	4020	;# 
  7283   000FB5                     T4PR            equ	4021	;# 
  7284   000FB5                     PR4             equ	4021	;# 
  7285   000FB6                     T4CON           equ	4022	;# 
  7286   000FB7                     T4HLT           equ	4023	;# 
  7287   000FB8                     T4CLKCON        equ	4024	;# 
  7288   000FB8                     T4CLK           equ	4024	;# 
  7289   000FB9                     T4RST           equ	4025	;# 
  7290   000FBA                     T2TMR           equ	4026	;# 
  7291   000FBA                     TMR2            equ	4026	;# 
  7292   000FBB                     T2PR            equ	4027	;# 
  7293   000FBB                     PR2             equ	4027	;# 
  7294   000FBC                     T2CON           equ	4028	;# 
  7295   000FBD                     T2HLT           equ	4029	;# 
  7296   000FBE                     T2CLKCON        equ	4030	;# 
  7297   000FBE                     T2CLK           equ	4030	;# 
  7298   000FBF                     T2RST           equ	4031	;# 
  7299   000FC0                     TMR5            equ	4032	;# 
  7300   000FC0                     TMR5L           equ	4032	;# 
  7301   000FC1                     TMR5H           equ	4033	;# 
  7302   000FC2                     T5CON           equ	4034	;# 
  7303   000FC2                     TMR5CON         equ	4034	;# 
  7304   000FC3                     T5GCON          equ	4035	;# 
  7305   000FC3                     TMR5GCON        equ	4035	;# 
  7306   000FC4                     T5GATE          equ	4036	;# 
  7307   000FC4                     TMR5GATE        equ	4036	;# 
  7308   000FC5                     T5CLK           equ	4037	;# 
  7309   000FC5                     TMR5CLK         equ	4037	;# 
  7310   000FC5                     PR5             equ	4037	;# 
  7311   000FC6                     TMR3            equ	4038	;# 
  7312   000FC6                     TMR3L           equ	4038	;# 
  7313   000FC7                     TMR3H           equ	4039	;# 
  7314   000FC8                     T3CON           equ	4040	;# 
  7315   000FC8                     TMR3CON         equ	4040	;# 
  7316   000FC9                     T3GCON          equ	4041	;# 
  7317   000FC9                     TMR3GCON        equ	4041	;# 
  7318   000FCA                     T3GATE          equ	4042	;# 
  7319   000FCA                     TMR3GATE        equ	4042	;# 
  7320   000FCB                     T3CLK           equ	4043	;# 
  7321   000FCB                     TMR3CLK         equ	4043	;# 
  7322   000FCB                     PR3             equ	4043	;# 
  7323   000FCC                     TMR1            equ	4044	;# 
  7324   000FCC                     TMR1L           equ	4044	;# 
  7325   000FCD                     TMR1H           equ	4045	;# 
  7326   000FCE                     T1CON           equ	4046	;# 
  7327   000FCE                     TMR1CON         equ	4046	;# 
  7328   000FCF                     T1GCON          equ	4047	;# 
  7329   000FCF                     TMR1GCON        equ	4047	;# 
  7330   000FD0                     T1GATE          equ	4048	;# 
  7331   000FD0                     TMR1GATE        equ	4048	;# 
  7332   000FD1                     T1CLK           equ	4049	;# 
  7333   000FD1                     TMR1CLK         equ	4049	;# 
  7334   000FD1                     PR1             equ	4049	;# 
  7335   000FD2                     TMR0L           equ	4050	;# 
  7336   000FD2                     TMR0            equ	4050	;# 
  7337   000FD3                     TMR0H           equ	4051	;# 
  7338   000FD3                     PR0             equ	4051	;# 
  7339   000FD4                     T0CON0          equ	4052	;# 
  7340   000FD5                     T0CON1          equ	4053	;# 
  7341   000FD6                     PCON1           equ	4054	;# 
  7342   000FD7                     PCON0           equ	4055	;# 
  7343   000FD8                     STATUS          equ	4056	;# 
  7344   000FD9                     FSR2            equ	4057	;# 
  7345   000FD9                     FSR2L           equ	4057	;# 
  7346   000FDA                     FSR2H           equ	4058	;# 
  7347   000FDB                     PLUSW2          equ	4059	;# 
  7348   000FDC                     PREINC2         equ	4060	;# 
  7349   000FDD                     POSTDEC2        equ	4061	;# 
  7350   000FDE                     POSTINC2        equ	4062	;# 
  7351   000FDF                     INDF2           equ	4063	;# 
  7352   000FE0                     BSR             equ	4064	;# 
  7353   000FE1                     FSR1            equ	4065	;# 
  7354   000FE1                     FSR1L           equ	4065	;# 
  7355   000FE2                     FSR1H           equ	4066	;# 
  7356   000FE3                     PLUSW1          equ	4067	;# 
  7357   000FE4                     PREINC1         equ	4068	;# 
  7358   000FE5                     POSTDEC1        equ	4069	;# 
  7359   000FE6                     POSTINC1        equ	4070	;# 
  7360   000FE7                     INDF1           equ	4071	;# 
  7361   000FE8                     WREG            equ	4072	;# 
  7362   000FE9                     FSR0            equ	4073	;# 
  7363   000FE9                     FSR0L           equ	4073	;# 
  7364   000FEA                     FSR0H           equ	4074	;# 
  7365   000FEB                     PLUSW0          equ	4075	;# 
  7366   000FEC                     PREINC0         equ	4076	;# 
  7367   000FED                     POSTDEC0        equ	4077	;# 
  7368   000FEE                     POSTINC0        equ	4078	;# 
  7369   000FEF                     INDF0           equ	4079	;# 
  7370   000FF2                     INTCON          equ	4082	;# 
  7371   000FF3                     PROD            equ	4083	;# 
  7372   000FF3                     PRODL           equ	4083	;# 
  7373   000FF4                     PRODH           equ	4084	;# 
  7374   000FF5                     TABLAT          equ	4085	;# 
  7375   000FF6                     TBLPTR          equ	4086	;# 
  7376   000FF6                     TBLPTRL         equ	4086	;# 
  7377   000FF7                     TBLPTRH         equ	4087	;# 
  7378   000FF8                     TBLPTRU         equ	4088	;# 
  7379   000FF9                     PCLAT           equ	4089	;# 
  7380   000FF9                     PC              equ	4089	;# 
  7381   000FF9                     PCL             equ	4089	;# 
  7382   000FFA                     PCLATH          equ	4090	;# 
  7383   000FFB                     PCLATU          equ	4091	;# 
  7384   000FFC                     STKPTR          equ	4092	;# 
  7385   000FFD                     TOS             equ	4093	;# 
  7386   000FFD                     TOSL            equ	4093	;# 
  7387   000FFE                     TOSH            equ	4094	;# 
  7388   000FFF                     TOSU            equ	4095	;# 
  7389                           
  7390 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  7391   000000                     _I2C1_SlaveDefWrColInterruptHandler equ	0
  7392                           
  7393 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  7394   000000                     _I2C1_SlaveDefBusColInterruptHandler equ	0
  7395                           
  7396 ;;___assert_fail@expr	offset=-2 (param)
  7397 ;;___assert_fail@file	offset=-4 (param)
  7398 ;;___assert_fail@line	offset=-6 (param)
  7399 ;;___assert_fail@func	offset=-8 (param)
  7400 ;;printf@ap	offset	0
  7401 ;;printf@fmt	offset=-3 (param)
  7402 ;;vfprintf@cfmt	offset	0
  7403 ;;vfprintf@fp	offset=-2 (param)
  7404 ;;vfprintf@fmt	offset=-4 (param)
  7405 ;;vfprintf@ap	offset=-6 (param)
  7406 ;;vfpfcnvrt@cp_3624	offset	0
  7407 ;;vfpfcnvrt@convarg	offset	2
  7408 ;;vfpfcnvrt@cp	offset	6
  7409 ;;vfpfcnvrt@c	offset	8
  7410 ;;vfpfcnvrt@done	offset	9
  7411 ;;vfpfcnvrt@fp	offset=-2 (param)
  7412 ;;vfpfcnvrt@fmt	offset=-4 (param)
  7413 ;;vfpfcnvrt@ap	offset=-6 (param)
  7414 ;;fputc@c	offset=-2 (param)
  7415 ;;fputc@fp	offset=-4 (param)
  7416 ;;putch@txData	offset=-1 (param)
  7417 ;;EUSART1_Write@txData	offset=-1 (param)
  7418 ;;abs@a	offset=-2 (param)
  7419 ;;___awmod@sign	offset	0
  7420 ;;___awmod@counter	offset	1
  7421 ;;___awmod@dividend	offset=-2 (param)
  7422 ;;___awmod@divisor	offset=-4 (param)
  7423 ;;exit@code	offset=-2 (param)
  7424 ;;__Exit@ec	offset=-2 (param)
  7425 ;;___awdiv@quotient	offset	0
  7426 ;;___awdiv@sign	offset	2
  7427 ;;___awdiv@counter	offset	3
  7428 ;;___awdiv@dividend	offset=-2 (param)
  7429 ;;___awdiv@divisor	offset=-4 (param)
  7430 ;;___assert_fail@expr	offset=-2 (param)
  7431 ;;___assert_fail@file	offset=-4 (param)
  7432 ;;___assert_fail@line	offset=-6 (param)
  7433 ;;___assert_fail@func	offset=-8 (param)
  7434 ;;printf@ap	offset	0
  7435 ;;printf@fmt	offset=-3 (param)
  7436 ;;vfprintf@cfmt	offset	0
  7437 ;;vfprintf@fp	offset=-2 (param)
  7438 ;;vfprintf@fmt	offset=-4 (param)
  7439 ;;vfprintf@ap	offset=-6 (param)
  7440 ;;vfpfcnvrt@cp_3624	offset	0
  7441 ;;vfpfcnvrt@convarg	offset	2
  7442 ;;vfpfcnvrt@cp	offset	6
  7443 ;;vfpfcnvrt@c	offset	8
  7444 ;;vfpfcnvrt@done	offset	9
  7445 ;;vfpfcnvrt@fp	offset=-2 (param)
  7446 ;;vfpfcnvrt@fmt	offset=-4 (param)
  7447 ;;vfpfcnvrt@ap	offset=-6 (param)
  7448 ;;fputc@c	offset=-2 (param)
  7449 ;;fputc@fp	offset=-4 (param)
  7450 ;;putch@txData	offset=-1 (param)
  7451 ;;EUSART1_Write@txData	offset=-1 (param)
  7452 ;;abs@a	offset=-2 (param)
  7453 ;;___awmod@sign	offset	0
  7454 ;;___awmod@counter	offset	1
  7455 ;;___awmod@dividend	offset=-2 (param)
  7456 ;;___awmod@divisor	offset=-4 (param)
  7457 ;;___awdiv@quotient	offset	0
  7458 ;;___awdiv@sign	offset	2
  7459 ;;___awdiv@counter	offset	3
  7460 ;;___awdiv@dividend	offset=-2 (param)
  7461 ;;___awdiv@divisor	offset=-4 (param)
  7462 ;;exit@code	offset=-2 (param)
  7463 ;;__Exit@ec	offset=-2 (param)
  7464                           
  7465                           	psect	mediumconst
  7466   003EAE                     __pmediumconst:
  7467                           	callstack 0
  7468   003EAE  00                 	db	0
  7469   003EAF                     _Registers:
  7470                           	callstack 0
  7471   003EAF  82                 	db	130
  7472   003EB0  0F                 	db	15
  7473   003EB1  61                 	db	97
  7474   003EB2  8C                 	db	140
  7475   003EB3  0F                 	db	15
  7476   003EB4  61                 	db	97
  7477   003EB5  87                 	db	135
  7478   003EB6  0F                 	db	15
  7479   003EB7  61                 	db	97
  7480   003EB8  08                 	db	8
  7481   003EB9  0F                 	db	15
  7482   003EBA  68                 	db	104
  7483   003EBB  09                 	db	9
  7484   003EBC  0F                 	db	15
  7485   003EBD  68                 	db	104
  7486   003EBE  0A                 	db	10
  7487   003EBF  0F                 	db	15
  7488   003EC0  68                 	db	104
  7489   003EC1  0B                 	db	11
  7490   003EC2  0F                 	db	15
  7491   003EC3  68                 	db	104
  7492   003EC4  0C                 	db	12
  7493   003EC5  0F                 	db	15
  7494   003EC6  68                 	db	104
  7495   003EC7  05                 	db	5
  7496   003EC8  0F                 	db	15
  7497   003EC9  68                 	db	104
  7498   003ECA  06                 	db	6
  7499   003ECB  0F                 	db	15
  7500   003ECC  68                 	db	104
  7501   003ECD  07                 	db	7
  7502   003ECE  0F                 	db	15
  7503   003ECF  68                 	db	104
  7504   003ED0                     __end_of_Registers:
  7505                           	callstack 0
  7506   003ED0                     _PINS:
  7507                           	callstack 0
  7508   003ED0  30                 	db	48
  7509   003ED1  18                 	db	24
  7510   003ED2  40                 	db	64
  7511   003ED3  20                 	db	32
  7512   003ED4  50                 	db	80
  7513   003ED5  28                 	db	40
  7514   003ED6  70                 	db	112
  7515   003ED7  38                 	db	56
  7516   003ED8  60                 	db	96
  7517   003ED9  30                 	db	48
  7518   003EDA  02                 	db	2
  7519   003EDB  80                 	db	128
  7520   003EDC  12                 	db	18
  7521   003EDD  88                 	db	136
  7522   003EDE  22                 	db	34
  7523   003EDF  90                 	db	144
  7524   003EE0  41                 	db	65
  7525   003EE1  60                 	db	96
  7526   003EE2  31                 	db	49
  7527   003EE3  58                 	db	88
  7528   003EE4  21                 	db	33
  7529   003EE5  50                 	db	80
  7530   003EE6  11                 	db	17
  7531   003EE7  48                 	db	72
  7532   003EE8  01                 	db	1
  7533   003EE9  40                 	db	64
  7534   003EEA  72                 	db	114
  7535   003EEB  B8                 	db	184
  7536   003EEC  62                 	db	98
  7537   003EED  B0                 	db	176
  7538   003EEE  52                 	db	82
  7539   003EEF  A8                 	db	168
  7540   003EF0                     __end_of_PINS:
  7541                           	callstack 0
  7542   003EF0                     STR_74:
  7543   003EF0  41                 	db	65	;'A'
  7544   003EF1  73                 	db	115	;'s'
  7545   003EF2  73                 	db	115	;'s'
  7546   003EF3  65                 	db	101	;'e'
  7547   003EF4  72                 	db	114	;'r'
  7548   003EF5  74                 	db	116	;'t'
  7549   003EF6  69                 	db	105	;'i'
  7550   003EF7  6F                 	db	111	;'o'
  7551   003EF8  6E                 	db	110	;'n'
  7552   003EF9  20                 	db	32
  7553   003EFA  66                 	db	102	;'f'
  7554   003EFB  61                 	db	97	;'a'
  7555   003EFC  69                 	db	105	;'i'
  7556   003EFD  6C                 	db	108	;'l'
  7557   003EFE  65                 	db	101	;'e'
  7558   003EFF  64                 	db	100	;'d'
  7559   003F00  3A                 	db	58	;':'
  7560   003F01  20                 	db	32
  7561   003F02  25                 	db	37
  7562   003F03  73                 	db	115	;'s'
  7563   003F04  20                 	db	32
  7564   003F05  28                 	db	40
  7565   003F06  25                 	db	37
  7566   003F07  73                 	db	115	;'s'
  7567   003F08  3A                 	db	58	;':'
  7568   003F09  20                 	db	32
  7569   003F0A  25                 	db	37
  7570   003F0B  73                 	db	115	;'s'
  7571   003F0C  3A                 	db	58	;':'
  7572   003F0D  20                 	db	32
  7573   003F0E  25                 	db	37
  7574   003F0F  64                 	db	100	;'d'
  7575   003F10  29                 	db	41
  7576   003F11  0A                 	db	10
  7577   003F12  00                 	db	0
  7578   003F13                     STR_64:
  7579   003F13  61                 	db	97	;'a'
  7580   003F14  6E                 	db	110	;'n'
  7581   003F15  61                 	db	97	;'a'
  7582   003F16  6C                 	db	108	;'l'
  7583   003F17  6F                 	db	111	;'o'
  7584   003F18  67                 	db	103	;'g'
  7585   003F19  5F                 	db	95	;'_'
  7586   003F1A  73                 	db	115	;'s'
  7587   003F1B  65                 	db	101	;'e'
  7588   003F1C  6C                 	db	108	;'l'
  7589   003F1D  65                 	db	101	;'e'
  7590   003F1E  63                 	db	99	;'c'
  7591   003F1F  74                 	db	116	;'t'
  7592   003F20  5F                 	db	95	;'_'
  7593   003F21  70                 	db	112	;'p'
  7594   003F22  6F                 	db	111	;'o'
  7595   003F23  73                 	db	115	;'s'
  7596   003F24  5F                 	db	95	;'_'
  7597   003F25  72                 	db	114	;'r'
  7598   003F26  65                 	db	101	;'e'
  7599   003F27  66                 	db	102	;'f'
  7600   003F28  5F                 	db	95	;'_'
  7601   003F29  69                 	db	105	;'i'
  7602   003F2A  64                 	db	100	;'d'
  7603   003F2B  78                 	db	120	;'x'
  7604   003F2C  00                 	db	0
  7605   003F2D                     STR_70:
  7606   003F2D  61                 	db	97	;'a'
  7607   003F2E  6E                 	db	110	;'n'
  7608   003F2F  61                 	db	97	;'a'
  7609   003F30  6C                 	db	108	;'l'
  7610   003F31  6F                 	db	111	;'o'
  7611   003F32  67                 	db	103	;'g'
  7612   003F33  5F                 	db	95	;'_'
  7613   003F34  67                 	db	103	;'g'
  7614   003F35  65                 	db	101	;'e'
  7615   003F36  74                 	db	116	;'t'
  7616   003F37  5F                 	db	95	;'_'
  7617   003F38  61                 	db	97	;'a'
  7618   003F39  64                 	db	100	;'d'
  7619   003F3A  63                 	db	99	;'c'
  7620   003F3B  5F                 	db	95	;'_'
  7621   003F3C  76                 	db	118	;'v'
  7622   003F3D  61                 	db	97	;'a'
  7623   003F3E  6C                 	db	108	;'l'
  7624   003F3F  5F                 	db	95	;'_'
  7625   003F40  69                 	db	105	;'i'
  7626   003F41  64                 	db	100	;'d'
  7627   003F42  78                 	db	120	;'x'
  7628   003F43  00                 	db	0
  7629   003F44                     STR_26:
  7630   003F44  70                 	db	112	;'p'
  7631   003F45  6F                 	db	111	;'o'
  7632   003F46  72                 	db	114	;'r'
  7633   003F47  74                 	db	116	;'t'
  7634   003F48  4E                 	db	78	;'N'
  7635   003F49  6F                 	db	111	;'o'
  7636   003F4A  20                 	db	32
  7637   003F4B  3C                 	db	60	;'<'
  7638   003F4C  20                 	db	32
  7639   003F4D  45                 	db	69	;'E'
  7640   003F4E  58                 	db	88	;'X'
  7641   003F4F  50                 	db	80	;'P'
  7642   003F50  5F                 	db	95	;'_'
  7643   003F51  50                 	db	80	;'P'
  7644   003F52  4F                 	db	79	;'O'
  7645   003F53  52                 	db	82	;'R'
  7646   003F54  54                 	db	84	;'T'
  7647   003F55  53                 	db	83	;'S'
  7648   003F56  5F                 	db	95	;'_'
  7649   003F57  43                 	db	67	;'C'
  7650   003F58  4E                 	db	78	;'N'
  7651   003F59  54                 	db	84	;'T'
  7652   003F5A  00                 	db	0
  7653   003F5B                     STR_8:
  7654   003F5B  70                 	db	112	;'p'
  7655   003F5C  6F                 	db	111	;'o'
  7656   003F5D  72                 	db	114	;'r'
  7657   003F5E  74                 	db	116	;'t'
  7658   003F5F  4E                 	db	78	;'N'
  7659   003F60  6F                 	db	111	;'o'
  7660   003F61  20                 	db	32
  7661   003F62  3C                 	db	60	;'<'
  7662   003F63  20                 	db	32
  7663   003F64  65                 	db	101	;'e'
  7664   003F65  45                 	db	69	;'E'
  7665   003F66  58                 	db	88	;'X'
  7666   003F67  50                 	db	80	;'P'
  7667   003F68  5F                 	db	95	;'_'
  7668   003F69  50                 	db	80	;'P'
  7669   003F6A  4F                 	db	79	;'O'
  7670   003F6B  52                 	db	82	;'R'
  7671   003F6C  54                 	db	84	;'T'
  7672   003F6D  5F                 	db	95	;'_'
  7673   003F6E  43                 	db	67	;'C'
  7674   003F6F  4E                 	db	78	;'N'
  7675   003F70  54                 	db	84	;'T'
  7676   003F71  00                 	db	0
  7677   003F72                     STR_2:
  7678   003F72  72                 	db	114	;'r'
  7679   003F73  65                 	db	101	;'e'
  7680   003F74  67                 	db	103	;'g'
  7681   003F75  4E                 	db	78	;'N'
  7682   003F76  6F                 	db	111	;'o'
  7683   003F77  20                 	db	32
  7684   003F78  3C                 	db	60	;'<'
  7685   003F79  20                 	db	32
  7686   003F7A  65                 	db	101	;'e'
  7687   003F7B  52                 	db	82	;'R'
  7688   003F7C  65                 	db	101	;'e'
  7689   003F7D  67                 	db	103	;'g'
  7690   003F7E  69                 	db	105	;'i'
  7691   003F7F  73                 	db	115	;'s'
  7692   003F80  74                 	db	116	;'t'
  7693   003F81  65                 	db	101	;'e'
  7694   003F82  72                 	db	114	;'r'
  7695   003F83  73                 	db	115	;'s'
  7696   003F84  43                 	db	67	;'C'
  7697   003F85  4E                 	db	78	;'N'
  7698   003F86  54                 	db	84	;'T'
  7699   003F87  00                 	db	0
  7700   003F88                     STR_62:
  7701   003F88  69                 	db	105	;'i'
  7702   003F89  64                 	db	100	;'d'
  7703   003F8A  78                 	db	120	;'x'
  7704   003F8B  20                 	db	32
  7705   003F8C  3C                 	db	60	;'<'
  7706   003F8D  20                 	db	32
  7707   003F8E  45                 	db	69	;'E'
  7708   003F8F  58                 	db	88	;'X'
  7709   003F90  50                 	db	80	;'P'
  7710   003F91  5F                 	db	95	;'_'
  7711   003F92  50                 	db	80	;'P'
  7712   003F93  49                 	db	73	;'I'
  7713   003F94  4E                 	db	78	;'N'
  7714   003F95  53                 	db	83	;'S'
  7715   003F96  5F                 	db	95	;'_'
  7716   003F97  43                 	db	67	;'C'
  7717   003F98  4F                 	db	79	;'O'
  7718   003F99  55                 	db	85	;'U'
  7719   003F9A  4E                 	db	78	;'N'
  7720   003F9B  54                 	db	84	;'T'
  7721   003F9C  00                 	db	0
  7722   003F9D                     STR_14:
  7723   003F9D  70                 	db	112	;'p'
  7724   003F9E  69                 	db	105	;'i'
  7725   003F9F  6E                 	db	110	;'n'
  7726   003FA0  4E                 	db	78	;'N'
  7727   003FA1  6F                 	db	111	;'o'
  7728   003FA2  20                 	db	32
  7729   003FA3  3C                 	db	60	;'<'
  7730   003FA4  20                 	db	32
  7731   003FA5  65                 	db	101	;'e'
  7732   003FA6  45                 	db	69	;'E'
  7733   003FA7  58                 	db	88	;'X'
  7734   003FA8  50                 	db	80	;'P'
  7735   003FA9  5F                 	db	95	;'_'
  7736   003FAA  50                 	db	80	;'P'
  7737   003FAB  49                 	db	73	;'I'
  7738   003FAC  4E                 	db	78	;'N'
  7739   003FAD  5F                 	db	95	;'_'
  7740   003FAE  43                 	db	67	;'C'
  7741   003FAF  4E                 	db	78	;'N'
  7742   003FB0  54                 	db	84	;'T'
  7743   003FB1  00                 	db	0
  7744   003FB2                     STR_1:
  7745   003FB2  46                 	db	70	;'F'
  7746   003FB3  61                 	db	97	;'a'
  7747   003FB4  6E                 	db	110	;'n'
  7748   003FB5  63                 	db	99	;'c'
  7749   003FB6  79                 	db	121	;'y'
  7750   003FB7  20                 	db	32
  7751   003FB8  49                 	db	73	;'I'
  7752   003FB9  32                 	db	50	;'2'
  7753   003FBA  43                 	db	67	;'C'
  7754   003FBB  20                 	db	32
  7755   003FBC  45                 	db	69	;'E'
  7756   003FBD  78                 	db	120	;'x'
  7757   003FBE  74                 	db	116	;'t'
  7758   003FBF  65                 	db	101	;'e'
  7759   003FC0  6E                 	db	110	;'n'
  7760   003FC1  64                 	db	100	;'d'
  7761   003FC2  65                 	db	101	;'e'
  7762   003FC3  72                 	db	114	;'r'
  7763   003FC4  0D                 	db	13
  7764   003FC5  0A                 	db	10
  7765   003FC6  00                 	db	0
  7766   003FC7                     STR_3:
  7767   003FC7  72                 	db	114	;'r'
  7768   003FC8  65                 	db	101	;'e'
  7769   003FC9  67                 	db	103	;'g'
  7770   003FCA  69                 	db	105	;'i'
  7771   003FCB  73                 	db	115	;'s'
  7772   003FCC  74                 	db	116	;'t'
  7773   003FCD  65                 	db	101	;'e'
  7774   003FCE  72                 	db	114	;'r'
  7775   003FCF  73                 	db	115	;'s'
  7776   003FD0  2E                 	db	46
  7777   003FD1  63                 	db	99	;'c'
  7778   003FD2  00                 	db	0
  7779   003FD3                     STR_63:
  7780   003FD3  61                 	db	97	;'a'
  7781   003FD4  6E                 	db	110	;'n'
  7782   003FD5  61                 	db	97	;'a'
  7783   003FD6  6C                 	db	108	;'l'
  7784   003FD7  6F                 	db	111	;'o'
  7785   003FD8  67                 	db	103	;'g'
  7786   003FD9  2E                 	db	46
  7787   003FDA  63                 	db	99	;'c'
  7788   003FDB  00                 	db	0
  7789   003FDC                     STR_52:
  7790   003FDC  57                 	db	87	;'W'
  7791   003FDD  72                 	db	114	;'r'
  7792   003FDE  69                 	db	105	;'i'
  7793   003FDF  74                 	db	116	;'t'
  7794   003FE0  65                 	db	101	;'e'
  7795   003FE1  52                 	db	82	;'R'
  7796   003FE2  65                 	db	101	;'e'
  7797   003FE3  67                 	db	103	;'g'
  7798   003FE4  00                 	db	0
  7799   003FE5                     STR_34:
  7800   003FE5  57                 	db	87	;'W'
  7801   003FE6  72                 	db	114	;'r'
  7802   003FE7  69                 	db	105	;'i'
  7803   003FE8  74                 	db	116	;'t'
  7804   003FE9  65                 	db	101	;'e'
  7805   003FEA  42                 	db	66	;'B'
  7806   003FEB  69                 	db	105	;'i'
  7807   003FEC  74                 	db	116	;'t'
  7808   003FED  00                 	db	0
  7809   003FEE                     STR_22:
  7810   003FEE  52                 	db	82	;'R'
  7811   003FEF  65                 	db	101	;'e'
  7812   003FF0  61                 	db	97	;'a'
  7813   003FF1  64                 	db	100	;'d'
  7814   003FF2  52                 	db	82	;'R'
  7815   003FF3  65                 	db	101	;'e'
  7816   003FF4  67                 	db	103	;'g'
  7817   003FF5  00                 	db	0
  7818   003FF6                     STR_4:
  7819   003FF6  52                 	db	82	;'R'
  7820   003FF7  65                 	db	101	;'e'
  7821   003FF8  61                 	db	97	;'a'
  7822   003FF9  64                 	db	100	;'d'
  7823   003FFA  42                 	db	66	;'B'
  7824   003FFB  69                 	db	105	;'i'
  7825   003FFC  74                 	db	116	;'t'
  7826   003FFD  00                 	db	0
  7827   003F2D                     STR_73          equ	STR_70
  7828   003F13                     STR_67          equ	STR_64
  7829   003FE5                     STR_37          equ	STR_34
  7830   003FE5                     STR_40          equ	STR_34
  7831   003FE5                     STR_43          equ	STR_34
  7832   003FE5                     STR_46          equ	STR_34
  7833   003FE5                     STR_49          equ	STR_34
  7834   003FF6                     STR_7           equ	STR_4
  7835   003FF6                     STR_10          equ	STR_4
  7836   003FF6                     STR_13          equ	STR_4
  7837   003FF6                     STR_16          equ	STR_4
  7838   003FF6                     STR_19          equ	STR_4
  7839   003FDC                     STR_55          equ	STR_52
  7840   003FDC                     STR_58          equ	STR_52
  7841   003FDC                     STR_61          equ	STR_52
  7842   003FEE                     STR_25          equ	STR_22
  7843   003FEE                     STR_28          equ	STR_22
  7844   003FEE                     STR_31          equ	STR_22
  7845   003FC7                     STR_6           equ	STR_3
  7846   003FC7                     STR_9           equ	STR_3
  7847   003FC7                     STR_12          equ	STR_3
  7848   003FC7                     STR_15          equ	STR_3
  7849   003FC7                     STR_18          equ	STR_3
  7850   003FC7                     STR_21          equ	STR_3
  7851   003FC7                     STR_24          equ	STR_3
  7852   003FC7                     STR_27          equ	STR_3
  7853   003FC7                     STR_30          equ	STR_3
  7854   003FC7                     STR_33          equ	STR_3
  7855   003FC7                     STR_36          equ	STR_3
  7856   003FC7                     STR_39          equ	STR_3
  7857   003FC7                     STR_42          equ	STR_3
  7858   003FC7                     STR_45          equ	STR_3
  7859   003FC7                     STR_48          equ	STR_3
  7860   003FC7                     STR_51          equ	STR_3
  7861   003FC7                     STR_54          equ	STR_3
  7862   003FC7                     STR_57          equ	STR_3
  7863   003FC7                     STR_60          equ	STR_3
  7864   003FD3                     STR_66          equ	STR_63
  7865   003FD3                     STR_69          equ	STR_63
  7866   003FD3                     STR_72          equ	STR_63
  7867   003F88                     STR_65          equ	STR_62
  7868   003F88                     STR_68          equ	STR_62
  7869   003F88                     STR_71          equ	STR_62
  7870   003F72                     STR_5           equ	STR_2
  7871   003F72                     STR_20          equ	STR_2
  7872   003F72                     STR_23          equ	STR_2
  7873   003F72                     STR_32          equ	STR_2
  7874   003F72                     STR_35          equ	STR_2
  7875   003F72                     STR_50          equ	STR_2
  7876   003F72                     STR_53          equ	STR_2
  7877   003F5B                     STR_11          equ	STR_8
  7878   003F5B                     STR_38          equ	STR_8
  7879   003F5B                     STR_41          equ	STR_8
  7880   003F44                     STR_29          equ	STR_26
  7881   003F44                     STR_56          equ	STR_26
  7882   003F44                     STR_59          equ	STR_26
  7883   003F9D                     STR_17          equ	STR_14
  7884   003F9D                     STR_44          equ	STR_14
  7885   003F9D                     STR_47          equ	STR_14
  7886   003FFE  00                 	db	0	; dummy byte at the end
  7887   000002                     __activetblptr  equ	2
  7888                           
  7889                           	psect	nvBANK0
  7890   0000E9                     __pnvBANK0:
  7891                           	callstack 0
  7892   0000E9                     _EUSART1_ErrorHandler:
  7893                           	callstack 0
  7894   0000E9                     	ds	2
  7895   0000EB                     _EUSART1_OverrunErrorHandler:
  7896                           	callstack 0
  7897   0000EB                     	ds	2
  7898   0000ED                     _EUSART1_FramingErrorHandler:
  7899                           	callstack 0
  7900   0000ED                     	ds	2
  7901   0000EF                     _EUSART1_RxDefaultInterruptHandler:
  7902                           	callstack 0
  7903   0000EF                     	ds	2
  7904   0000F1                     _EUSART1_TxDefaultInterruptHandler:
  7905                           	callstack 0
  7906   0000F1                     	ds	2
  7907   000ECC                     _PIR7bits       set	3788
  7908   000EC9                     _PIR4bits       set	3785
  7909   000EC8                     _PIR3bits       set	3784
  7910   000EB2                     _SSPCLKPPS      set	3762
  7911   000EF6                     _RC4PPS         set	3830
  7912   000EEF                     _RB5PPS         set	3823
  7913   000EF5                     _RC3PPS         set	3829
  7914   000EB3                     _SSPDATPPS      set	3763
  7915   000EB0                     _RX1PPS         set	3760
  7916   000EE1                     _PMD5           set	3809
  7917   000EE0                     _PMD4           set	3808
  7918   000EDF                     _PMD3           set	3807
  7919   000EDE                     _PMD2           set	3806
  7920   000EDD                     _PMD1           set	3805
  7921   000EDC                     _PMD0           set	3804
  7922   000ED8                     _OSCTUNE        set	3800
  7923   000ED9                     _OSCFRQ         set	3801
  7924   000ED7                     _OSCEN          set	3799
  7925   000ED5                     _OSCCON3        set	3797
  7926   000ED3                     _OSCCON1        set	3795
  7927   000EC0                     _PIE3bits       set	3776
  7928   000F2C                     _FVRCONbits     set	3884
  7929   000F2C                     _FVRCON         set	3884
  7930   000F54                     _ADCON1bits     set	3924
  7931   000F5C                     _ADPREVL        set	3932
  7932   000F5D                     _ADPREVH        set	3933
  7933   000F55                     _ADCON2bits     set	3925
  7934   000F56                     _ADCON3bits     set	3926
  7935   000F5E                     _ADRESL         set	3934
  7936   000F5F                     _ADRESH         set	3935
  7937   000F5B                     _ADCON0bits     set	3931
  7938   000F57                     _ADACQ          set	3927
  7939   000F5B                     _ADCON0         set	3931
  7940   000F52                     _ADCLK          set	3922
  7941   000F51                     _ADACT          set	3921
  7942   000F53                     _ADREF          set	3923
  7943   000F56                     _ADCON3         set	3926
  7944   000F55                     _ADCON2         set	3925
  7945   000F54                     _ADCON1         set	3924
  7946   000F59                     _ADPRE          set	3929
  7947   000F58                     _ADCAP          set	3928
  7948   000F5A                     _ADPCH          set	3930
  7949   000F2F                     _DAC1CON1       set	3887
  7950   000F2E                     _DAC1CON0       set	3886
  7951   000F25                     _INLVLE         set	3877
  7952   000F18                     _INLVLC         set	3864
  7953   000F10                     _INLVLB         set	3856
  7954   000F19                     _SLRCONC        set	3865
  7955   000F11                     _SLRCONB        set	3857
  7956   000F1A                     _ODCONC         set	3866
  7957   000F12                     _ODCONB         set	3858
  7958   000F1B                     _WPUC           set	3867
  7959   000F13                     _WPUB           set	3859
  7960   000F28                     _WPUE           set	3880
  7961   000F14                     _ANSELB         set	3860
  7962   000F1C                     _ANSELC         set	3868
  7963   000F07                     _IOCAP          set	3847
  7964   000F06                     _IOCAN          set	3846
  7965   000F05                     _IOCAF          set	3845
  7966   000F08                     _INLVLA         set	3848
  7967   000F09                     _SLRCONA        set	3849
  7968   000F0A                     _ODCONA         set	3850
  7969   000F0B                     _WPUA           set	3851
  7970   000F0C                     _ANSELA         set	3852
  7971   000F97                     _SSP1CON3bits   set	3991
  7972   000F91                     _SSP1BUF        set	3985
  7973   000F96                     _SSP1CON2bits   set	3990
  7974   000F94                     _SSP1STATbits   set	3988
  7975   000F93                     _SSP1MSK        set	3987
  7976   000F92                     _SSP1ADD        set	3986
  7977   000F95                     _SSP1CON1bits   set	3989
  7978   000F96                     _SSP1CON2       set	3990
  7979   000F95                     _SSP1CON1       set	3989
  7980   000F94                     _SSP1STAT       set	3988
  7981   000F81                     _NVMCON2        set	3969
  7982   000F7F                     _NVMCON0bits    set	3967
  7983   000F7C                     _NVMDATL        set	3964
  7984   000F7D                     _NVMDATH        set	3965
  7985   000F80                     _NVMCON1bits    set	3968
  7986   000F79                     _NVMADRL        set	3961
  7987   000F7A                     _NVMADRH        set	3962
  7988   000F7B                     _NVMADRU        set	3963
  7989   000FF5                     _TABLAT         set	4085
  7990   000FF6                     _TBLPTRL        set	4086
  7991   000FF7                     _TBLPTRH        set	4087
  7992   000FF8                     _TBLPTRU        set	4088
  7993   000FA2                     _PWM3DCL        set	4002
  7994   000FA3                     _PWM3DCH        set	4003
  7995   000FA4                     _PWM3CON        set	4004
  7996   000FAD                     _CCPTMRSbits    set	4013
  7997   000F9F                     _PWM4DCL        set	3999
  7998   000FA0                     _PWM4DCH        set	4000
  7999   000FA1                     _PWM4CON        set	4001
  8000   000F69                     _ADERRL         set	3945
  8001   000F6A                     _ADERRH         set	3946
  8002   000F6D                     _ADFLTRL        set	3949
  8003   000F6E                     _ADFLTRH        set	3950
  8004   000F60                     _ADSTATbits     set	3936
  8005   000F6B                     _ADACCL         set	3947
  8006   000F6C                     _ADACCH         set	3948
  8007   000F62                     _ADCNT          set	3938
  8008   000F60                     _ADSTAT         set	3936
  8009   000F61                     _ADRPT          set	3937
  8010   000F64                     _ADSTPTH        set	3940
  8011   000F63                     _ADSTPTL        set	3939
  8012   000F68                     _ADUTHH         set	3944
  8013   000F67                     _ADUTHL         set	3943
  8014   000F66                     _ADLTHH         set	3942
  8015   000F65                     _ADLTHL         set	3941
  8016   000FBB                     _PR2            set	4027
  8017   000FBA                     _TMR2           set	4026
  8018   000FBC                     _T2CONbits      set	4028
  8019   000FBF                     _T2RSTbits      set	4031
  8020   000FBD                     _T2HLTbits      set	4029
  8021   000FBC                     _T2CON          set	4028
  8022   000FBA                     _T2TMR          set	4026
  8023   000FBB                     _T2PR           set	4027
  8024   000FBF                     _T2RST          set	4031
  8025   000FBD                     _T2HLT          set	4029
  8026   000FBE                     _T2CLKCON       set	4030
  8027   000FF2                     _INTCONbits     set	4082
  8028   000F89                     _TRISC          set	3977
  8029   000F88                     _TRISB          set	3976
  8030   000F84                     _LATC           set	3972
  8031   000F83                     _LATB           set	3971
  8032   000F98                     _RC1REG         set	3992
  8033   000F9C                     _RC1STAbits     set	3996
  8034   000F99                     _TX1REG         set	3993
  8035   000F9D                     _TX1STAbits     set	3997
  8036   000F9B                     _SP1BRGH        set	3995
  8037   000F9A                     _SP1BRGL        set	3994
  8038   000F9D                     _TX1STA         set	3997
  8039   000F9C                     _RC1STA         set	3996
  8040   000F9E                     _BAUD1CON       set	3998
  8041   000F8C                     _PORTA          set	3980
  8042   000F87                     _TRISA          set	3975
  8043   000F82                     _LATA           set	3970
  8044   000400                     _sectorRAM      equ	1024
  8045                           
  8046                           ; #config settings
  8047                           
  8048                           	psect	cinit
  8049   001564                     __pcinit:
  8050                           	callstack 0
  8051   001564                     start_initialization:
  8052                           	callstack 0
  8053   001564                     __initialization:
  8054                           	callstack 0
  8055                           
  8056                           ; Clear objects allocated to BANK2 (256 bytes)
  8057   001564  EE02  F000         	lfsr	0,__pbssBANK2
  8058   001568  EE21 F000          	lfsr	2,256
  8059   00156C                     clear_0:
  8060   00156C  6AEE               	clrf	postinc0,c
  8061   00156E  50DD               	movf	postdec2,w,c
  8062   001570  50D9               	movf	fsr2l,w,c
  8063   001572  E1FC               	bnz	clear_0
  8064   001574  50DA               	movf	fsr2h,w,c
  8065   001576  E1FA               	bnz	clear_0
  8066                           
  8067                           ; Clear objects allocated to BANK1 (224 bytes)
  8068   001578  EE01  F000         	lfsr	0,__pbssBANK1
  8069   00157C  0EE0               	movlw	224
  8070   00157E                     clear_1:
  8071   00157E  6AEE               	clrf	postinc0,c
  8072   001580  06E8               	decf	wreg,f,c
  8073   001582  E1FD               	bnz	clear_1
  8074                           
  8075                           ; Clear objects allocated to BANK0 (122 bytes)
  8076   001584  EE00  F060         	lfsr	0,__pbssBANK0
  8077   001588  0E7A               	movlw	122
  8078   00158A                     clear_2:
  8079   00158A  6AEE               	clrf	postinc0,c
  8080   00158C  06E8               	decf	wreg,f,c
  8081   00158E  E1FD               	bnz	clear_2
  8082                           
  8083                           ; Clear objects allocated to COMRAM (9 bytes)
  8084   001590  EE00  F057         	lfsr	0,__pbssCOMRAM
  8085   001594  0E09               	movlw	9
  8086   001596                     clear_3:
  8087   001596  6AEE               	clrf	postinc0,c
  8088   001598  06E8               	decf	wreg,f,c
  8089   00159A  E1FD               	bnz	clear_3
  8090   00159C                     end_of_initialization:
  8091                           	callstack 0
  8092   00159C                     __end_of__initialization:
  8093                           	callstack 0
  8094   00159C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  8095   00159E  6EF8               	movwf	tblptru,c
  8096   0015A0  0100               	movlb	0
  8097   0015A2  EF9D  F009         	goto	_main	;jump to C main() function
  8098                           
  8099                           	psect	bssCOMRAM
  8100   000057                     __pbssCOMRAM:
  8101                           	callstack 0
  8102   000057                     _count:
  8103                           	callstack 0
  8104   000057                     	ds	1
  8105   000058                     _i2c1SlaveState:
  8106                           	callstack 0
  8107   000058                     	ds	1
  8108   000059                     _i2c1WrData:
  8109                           	callstack 0
  8110   000059                     	ds	1
  8111   00005A                     _eusart1RxCount:
  8112                           	callstack 0
  8113   00005A                     	ds	1
  8114   00005B                     _eusart1RxTail:
  8115                           	callstack 0
  8116   00005B                     	ds	1
  8117   00005C                     _eusart1RxHead:
  8118                           	callstack 0
  8119   00005C                     	ds	1
  8120   00005D                     _eusart1TxBufferRemaining:
  8121                           	callstack 0
  8122   00005D                     	ds	1
  8123   00005E                     _eusart1TxTail:
  8124                           	callstack 0
  8125   00005E                     	ds	1
  8126   00005F                     _eusart1TxHead:
  8127                           	callstack 0
  8128   00005F                     	ds	1
  8129                           
  8130                           	psect	bssBANK0
  8131   000060                     __pbssBANK0:
  8132                           	callstack 0
  8133   000060                     _analog:
  8134                           	callstack 0
  8135   000060                     	ds	49
  8136   000091                     _E2_Changes:
  8137                           	callstack 0
  8138   000091                     	ds	32
  8139   0000B1                     	ds	6
  8140   0000B7                     _width:
  8141                           	callstack 0
  8142   0000B7                     	ds	2
  8143   0000B9                     _prec:
  8144                           	callstack 0
  8145   0000B9                     	ds	2
  8146   0000BB                     _i2c1EEPMemAddr:
  8147                           	callstack 0
  8148   0000BB                     	ds	2
  8149   0000BD                     handle_read_cmd@a:
  8150                           	callstack 0
  8151   0000BD                     	ds	2
  8152   0000BF                     handle_read_cmd@adc_tmp:
  8153                           	callstack 0
  8154   0000BF                     	ds	2
  8155   0000C1                     _I2C1_SlaveWrColInterruptHandler:
  8156                           	callstack 0
  8157   0000C1                     	ds	2
  8158   0000C3                     _I2C1_SlaveBusColInterruptHandler:
  8159                           	callstack 0
  8160   0000C3                     	ds	2
  8161   0000C5                     _I2C1_SlaveAddrInterruptHandler:
  8162                           	callstack 0
  8163   0000C5                     	ds	2
  8164   0000C7                     _I2C1_SlaveWrInterruptHandler:
  8165                           	callstack 0
  8166   0000C7                     	ds	2
  8167   0000C9                     _I2C1_SlaveRdInterruptHandler:
  8168                           	callstack 0
  8169   0000C9                     	ds	2
  8170   0000CB                     _MSSP1_InterruptHandler:
  8171                           	callstack 0
  8172   0000CB                     	ds	2
  8173   0000CD                     _flags:
  8174                           	callstack 0
  8175   0000CD                     	ds	1
  8176   0000CE                     _i2c1SlaveAddr:
  8177                           	callstack 0
  8178   0000CE                     	ds	1
  8179   0000CF                     _i2c1RdData:
  8180                           	callstack 0
  8181   0000CF                     	ds	1
  8182   0000D0                     _eusart1RxLastError:
  8183                           	callstack 0
  8184   0000D0                     	ds	1
  8185   0000D1                     _i2c:
  8186                           	callstack 0
  8187   0000D1                     	ds	9
  8188                           
  8189                           	psect	bssBANK1
  8190   000100                     __pbssBANK1:
  8191                           	callstack 0
  8192   000100                     _eusart1RxStatusBuffer:
  8193                           	callstack 0
  8194   000100                     	ds	64
  8195   000140                     _eusart1RxBuffer:
  8196                           	callstack 0
  8197   000140                     	ds	64
  8198   000180                     _eusart1TxBuffer:
  8199                           	callstack 0
  8200   000180                     	ds	64
  8201   0001C0                     _dbuf:
  8202                           	callstack 0
  8203   0001C0                     	ds	32
  8204                           
  8205                           	psect	bssBANK2
  8206   000200                     __pbssBANK2:
  8207                           	callstack 0
  8208   000200                     _E2_DATA:
  8209                           	callstack 0
  8210   000200                     	ds	256
  8211                           
  8212                           	psect	cstackBANK0
  8213   0000DA                     __pcstackBANK0:
  8214                           	callstack 0
  8215   0000DA                     ?_ADCC_GetConversionResult:
  8216                           	callstack 0
  8217   0000DA                     ADCC_StartConversion@channel:
  8218                           	callstack 0
  8219   0000DA                     DATAEE_WriteByte@bData:
  8220                           	callstack 0
  8221   0000DA                     DATAEE_ReadByte@bAdd:
  8222                           	callstack 0
  8223   0000DA                     I2C1_SlaveSetSlaveAddr@slaveAddr:
  8224                           	callstack 0
  8225   0000DA                     I2C1_SlaveSetSlaveMask@maskAddr:
  8226                           	callstack 0
  8227   0000DA                     analog_select_pos_ref_idx@ref:
  8228                           	callstack 0
  8229   0000DA                     EUSART1_SetFramingErrorHandler@interruptHandler:
  8230                           	callstack 0
  8231   0000DA                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  8232                           	callstack 0
  8233   0000DA                     EUSART1_SetErrorHandler@interruptHandler:
  8234                           	callstack 0
  8235   0000DA                     EUSART1_SetTxInterruptHandler@interruptHandler:
  8236                           	callstack 0
  8237   0000DA                     EUSART1_SetRxInterruptHandler@interruptHandler:
  8238                           	callstack 0
  8239   0000DA                     I2C1_SlaveSetIsrHandler@handler:
  8240                           	callstack 0
  8241   0000DA                     I2C1_SlaveSetReadIntHandler@handler:
  8242                           	callstack 0
  8243   0000DA                     I2C1_SlaveSetWriteIntHandler@handler:
  8244                           	callstack 0
  8245   0000DA                     I2C1_SlaveSetAddrIntHandler@handler:
  8246                           	callstack 0
  8247   0000DA                     I2C1_SlaveSetWrColIntHandler@handler:
  8248                           	callstack 0
  8249   0000DA                     I2C1_SlaveSetBusColIntHandler@handler:
  8250                           	callstack 0
  8251   0000DA                     ??_analog_set_pos_ref:
  8252                           
  8253                           ; 1 bytes @ 0x0
  8254   0000DA                     	ds	1
  8255   0000DB                     DATAEE_WriteByte@bAdd:
  8256                           	callstack 0
  8257   0000DB                     eeprom_read_byte@addr:
  8258                           	callstack 0
  8259   0000DB                     analog_select_pos_ref_idx@idx:
  8260                           	callstack 0
  8261   0000DB                     _analog_set_pos_ref$3052:
  8262                           	callstack 0
  8263   0000DB                     
  8264                           ; 1 bytes @ 0x1
  8265   0000DB                     	ds	1
  8266   0000DC                     DATAEE_WriteByte@GIEBitValue:
  8267                           	callstack 0
  8268   0000DC                     i2c_slave_init@maskAddr:
  8269                           	callstack 0
  8270   0000DC                     analog_init@i:
  8271                           	callstack 0
  8272   0000DC                     eeprom_buffer_whole@b:
  8273                           	callstack 0
  8274   0000DC                     ??_ADCC_GetConversionResult:
  8275   0000DC                     
  8276                           ; 1 bytes @ 0x2
  8277   0000DC                     	ds	1
  8278   0000DD                     eeprom_write_byte@data:
  8279                           	callstack 0
  8280   0000DD                     analog_set_pos_ref@current:
  8281                           	callstack 0
  8282   0000DD                     i2c_slave_init@to_slave_func:
  8283                           	callstack 0
  8284                           
  8285                           ; 2 bytes @ 0x3
  8286   0000DD                     	ds	1
  8287   0000DE                     analog_set_pos_ref@ref:
  8288                           	callstack 0
  8289   0000DE                     ??_eeprom_write_byte:
  8290                           
  8291                           ; 1 bytes @ 0x4
  8292   0000DE                     	ds	1
  8293   0000DF                     i2c_slave_init@from_slave_func:
  8294                           	callstack 0
  8295   0000DF                     ??_analog_handler:
  8296                           
  8297                           ; 1 bytes @ 0x5
  8298   0000DF                     	ds	2
  8299   0000E1                     i2c_slave_init@slaveAddr:
  8300                           	callstack 0
  8301   0000E1                     
  8302                           ; 1 bytes @ 0x7
  8303   0000E1                     	ds	1
  8304   0000E2                     eeprom_write_byte@addr:
  8305                           	callstack 0
  8306                           
  8307                           ; 1 bytes @ 0x8
  8308   0000E2                     	ds	1
  8309   0000E3                     ??_eeprom_handle_writing:
  8310                           
  8311                           ; 1 bytes @ 0x9
  8312   0000E3                     	ds	2
  8313   0000E5                     eeprom_handle_writing@bitval:
  8314                           	callstack 0
  8315                           
  8316                           ; 1 bytes @ 0xB
  8317   0000E5                     	ds	1
  8318   0000E6                     eeprom_handle_writing@eeAddr:
  8319                           	callstack 0
  8320   0000E6                     analog_handler@port:
  8321                           	callstack 0
  8322                           
  8323                           ; 1 bytes @ 0xC
  8324   0000E6                     	ds	1
  8325   0000E7                     eeprom_handle_writing@bi:
  8326                           	callstack 0
  8327   0000E7                     analog_handler@pin:
  8328                           	callstack 0
  8329                           
  8330                           ; 1 bytes @ 0xD
  8331   0000E7                     	ds	1
  8332   0000E8                     eeprom_handle_writing@by:
  8333                           	callstack 0
  8334                           
  8335                           ; 1 bytes @ 0xE
  8336   0000E8                     	ds	1
  8337   0000E9                     
  8338                           ; 1 bytes @ 0xF
  8339                           
  8340                           	psect	cstackCOMRAM
  8341   000001                     __pcstackCOMRAM:
  8342                           	callstack 0
  8343   000001                     ?_analog_get_adc_val_idx:
  8344                           	callstack 0
  8345   000001                     I2C1_SlaveSendTxData@data:
  8346                           	callstack 0
  8347   000001                     ReadBit@portNo:
  8348                           	callstack 0
  8349   000001                     WriteBit@portNo:
  8350                           	callstack 0
  8351   000001                     eeprom_read_buffer@addr:
  8352                           	callstack 0
  8353   000001                     eeprom_write_buffer@data:
  8354                           	callstack 0
  8355   000001                     
  8356                           ; 1 bytes @ 0x0
  8357   000001                     	ds	1
  8358   000002                     I2C1_Write@data:
  8359                           	callstack 0
  8360   000002                     ReadBit@pinNo:
  8361                           	callstack 0
  8362   000002                     WriteBit@pinNo:
  8363                           	callstack 0
  8364   000002                     ??_eeprom_write_buffer:
  8365   000002                     
  8366                           ; 1 bytes @ 0x1
  8367   000002                     	ds	1
  8368   000003                     WriteBit@value:
  8369                           	callstack 0
  8370   000003                     analog_get_adc_val_idx@idx:
  8371                           	callstack 0
  8372   000003                     ??_ReadBit:
  8373   000003                     
  8374                           ; 1 bytes @ 0x2
  8375   000003                     	ds	1
  8376   000004                     ?_analog_get_adc_val:
  8377                           	callstack 0
  8378   000004                     analog_get_adc_val@pin:
  8379                           	callstack 0
  8380   000004                     ??_WriteBit:
  8381                           
  8382                           ; 1 bytes @ 0x3
  8383   000004                     	ds	1
  8384   000005                     eeprom_write_buffer@addr:
  8385                           	callstack 0
  8386                           
  8387                           ; 1 bytes @ 0x4
  8388   000005                     	ds	1
  8389   000006                     analog_get_adc_val@port:
  8390                           	callstack 0
  8391   000006                     
  8392                           ; 1 bytes @ 0x5
  8393   000006                     	ds	1
  8394   000007                     ReadBit@reg:
  8395                           	callstack 0
  8396                           
  8397                           ; 2 bytes @ 0x6
  8398   000007                     	ds	1
  8399   000008                     WriteBit@portData:
  8400                           	callstack 0
  8401                           
  8402                           ; 1 bytes @ 0x7
  8403   000008                     	ds	1
  8404   000009                     ReadBit@portData:
  8405                           	callstack 0
  8406   000009                     WriteBit@pin:
  8407                           	callstack 0
  8408                           
  8409                           ; 2 bytes @ 0x8
  8410   000009                     	ds	1
  8411   00000A                     ReadBit@portMask:
  8412                           	callstack 0
  8413                           
  8414                           ; 1 bytes @ 0x9
  8415   00000A                     	ds	1
  8416   00000B                     ReadBit@pin:
  8417                           	callstack 0
  8418   00000B                     WriteBit@reg:
  8419                           	callstack 0
  8420                           
  8421                           ; 2 bytes @ 0xA
  8422   00000B                     	ds	2
  8423   00000D                     ReadBit@regNo:
  8424                           	callstack 0
  8425   00000D                     WriteBit@portMask:
  8426                           	callstack 0
  8427                           
  8428                           ; 1 bytes @ 0xC
  8429   00000D                     	ds	1
  8430   00000E                     ReadReg@portNo:
  8431                           	callstack 0
  8432   00000E                     WriteBit@regNo:
  8433                           	callstack 0
  8434                           
  8435                           ; 1 bytes @ 0xD
  8436   00000E                     	ds	1
  8437   00000F                     ReadReg@dst:
  8438                           	callstack 0
  8439   00000F                     WriteReg@portNo:
  8440                           	callstack 0
  8441                           
  8442                           ; 1 bytes @ 0xE
  8443   00000F                     	ds	1
  8444   000010                     ReadReg@tmp:
  8445                           	callstack 0
  8446   000010                     WriteReg@value:
  8447                           	callstack 0
  8448   000010                     
  8449                           ; 1 bytes @ 0xF
  8450   000010                     	ds	1
  8451   000011                     ReadReg@regNo:
  8452                           	callstack 0
  8453   000011                     WriteReg@regNo:
  8454                           	callstack 0
  8455   000011                     
  8456                           ; 1 bytes @ 0x10
  8457   000011                     	ds	1
  8458   000012                     ReadReg@p:
  8459                           	callstack 0
  8460   000012                     WriteReg@p:
  8461                           	callstack 0
  8462                           
  8463                           ; 1 bytes @ 0x11
  8464   000012                     	ds	1
  8465   000013                     handle_write_cmd@c:
  8466                           	callstack 0
  8467   000013                     handle_read_cmd@c:
  8468                           	callstack 0
  8469                           
  8470                           ; 2 bytes @ 0x12
  8471   000013                     	ds	2
  8472   000015                     handle_write_cmd@rb:
  8473                           	callstack 0
  8474   000015                     handle_read_cmd@wb:
  8475                           	callstack 0
  8476                           
  8477                           ; 1 bytes @ 0x14
  8478   000015                     	ds	1
  8479   000016                     i2c_write_to_slave_cb@addr:
  8480                           	callstack 0
  8481   000016                     ??_handle_read_cmd:
  8482                           
  8483                           ; 1 bytes @ 0x15
  8484   000016                     	ds	1
  8485   000017                     i2c_write_to_slave_cb@rb:
  8486                           	callstack 0
  8487                           
  8488                           ; 1 bytes @ 0x16
  8489   000017                     	ds	1
  8490   000018                     
  8491                           ; 1 bytes @ 0x17
  8492   000018                     	ds	1
  8493   000019                     i2c_read_from_slave_cb@addr:
  8494                           	callstack 0
  8495                           
  8496                           ; 1 bytes @ 0x18
  8497   000019                     	ds	1
  8498   00001A                     i2c_read_from_slave_cb@wb:
  8499                           	callstack 0
  8500   00001A                     i2c_write_to_slave_cb@c:
  8501                           	callstack 0
  8502                           
  8503                           ; 2 bytes @ 0x19
  8504   00001A                     	ds	1
  8505   00001B                     ??_i2c_read_from_slave_cb:
  8506                           
  8507                           ; 1 bytes @ 0x1A
  8508   00001B                     	ds	1
  8509   00001C                     MasterW_SlaveR@res:
  8510                           	callstack 0
  8511   00001C                     
  8512                           ; 1 bytes @ 0x1B
  8513   00001C                     	ds	1
  8514   00001D                     MasterW_SlaveR@rb:
  8515                           	callstack 0
  8516   00001D                     i2c_read_from_slave_cb@c:
  8517                           	callstack 0
  8518                           
  8519                           ; 2 bytes @ 0x1C
  8520   00001D                     	ds	1
  8521   00001E                     
  8522                           ; 1 bytes @ 0x1D
  8523   00001E                     	ds	1
  8524   00001F                     MasterR_SlaveW@res:
  8525                           	callstack 0
  8526   00001F                     
  8527                           ; 1 bytes @ 0x1E
  8528   00001F                     	ds	1
  8529   000020                     MasterR_SlaveW@tmp:
  8530                           	callstack 0
  8531                           
  8532                           ; 1 bytes @ 0x1F
  8533   000020                     	ds	1
  8534   000021                     ??_I2C1_Isr:
  8535   000021                     
  8536                           ; 1 bytes @ 0x20
  8537   000021                     	ds	2
  8538   000023                     ??_INTERRUPT_InterruptManager:
  8539                           
  8540                           ; 1 bytes @ 0x22
  8541   000023                     	ds	20
  8542                           
  8543 ;;
  8544 ;;Main: autosize = 0, tempsize = 0, incstack = 2, save=0
  8545 ;;
  8546 ;; *************** function _main *****************
  8547 ;; Defined at:
  8548 ;;		line 165 in file "main.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8562 ;;      Params:         0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels required when called: 24
  8568 ;; This function calls:
  8569 ;;		_SYSTEM_Initialize
  8570 ;;		_analog_handler
  8571 ;;		_analog_init
  8572 ;;		_eeprom_buffer_whole
  8573 ;;		_eeprom_handle_writing
  8574 ;;		_i2c_slave_init
  8575 ;;		_printf
  8576 ;; This function is called by:
  8577 ;;		Startup code after reset
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text0
  8582   00133A                     __ptext0:
  8583                           	callstack 0
  8584   00133A                     _main:
  8585                           	callstack 7
  8586                           
  8587                           ;main.c: 168:     SYSTEM_Initialize();
  8588                           
  8589                           ;incstack = 0
  8590   00133A  EC6A  F00B         	call	_SYSTEM_Initialize	;wreg free
  8591                           
  8592                           ;main.c: 171:     (INTCONbits.GIE = 1);
  8593   00133E  8EF2               	bsf	242,7,c	;volatile
  8594                           
  8595                           ;main.c: 174:     (INTCONbits.PEIE = 1);
  8596   001340  8CF2               	bsf	242,6,c	;volatile
  8597   001342  010F               	movlb	15	; () banked
  8598   001344  6B2F               	clrf	47,b	;volatile
  8599                           
  8600                           ; BSR set to: 15
  8601                           ;main.c: 177:     eeprom_buffer_whole();
  8602   001346  ECC9  F00B         	call	_eeprom_buffer_whole	;wreg free
  8603                           
  8604                           ;main.c: 178:     analog_init();
  8605   00134A  EC46  F00C         	call	_analog_init	;wreg free
  8606   00134E  0E20               	movlw	32
  8607   001350  010F               	movlb	15	; () banked
  8608   001352  6F2F               	movwf	47,b	;volatile
  8609                           
  8610                           ; BSR set to: 15
  8611   001354  0EB2               	movlw	low STR_1
  8612   001356  6EE6               	movwf	postinc1,c
  8613   001358  0E3F               	movlw	high STR_1
  8614   00135A  6EE6               	movwf	postinc1,c
  8615   00135C  0E02               	movlw	2
  8616   00135E  6EE6               	movwf	postinc1,c
  8617   001360  EC72  F009         	call	_printf	;wreg free
  8618                           
  8619                           ;main.c: 183:     i2c_slave_init(42, 127, &i2c_write_to_slave_cb, &i2c_read_from_slave_c
      +                          b);
  8620   001364  0E7F               	movlw	127
  8621   001366  0100               	movlb	0	; () banked
  8622   001368  6FDC               	movwf	i2c_slave_init@maskAddr& (0+255),b
  8623   00136A  0E0E               	movlw	low _i2c_write_to_slave_cb
  8624   00136C  6FDD               	movwf	i2c_slave_init@to_slave_func& (0+255),b
  8625   00136E  0E10               	movlw	high _i2c_write_to_slave_cb
  8626   001370  6FDE               	movwf	(i2c_slave_init@to_slave_func+1)& (0+255),b
  8627   001372  0E9A               	movlw	low _i2c_read_from_slave_cb
  8628   001374  6FDF               	movwf	i2c_slave_init@from_slave_func& (0+255),b
  8629   001376  0E10               	movlw	high _i2c_read_from_slave_cb
  8630   001378  6FE0               	movwf	(i2c_slave_init@from_slave_func+1)& (0+255),b
  8631   00137A  0E2A               	movlw	42
  8632   00137C  ECF1  F009         	call	_i2c_slave_init
  8633   001380  010F               	movlb	15	; () banked
  8634   001382  6B2F               	clrf	47,b	;volatile
  8635   001384                     l4800:
  8636                           
  8637                           ;main.c: 187:     {;main.c: 188:         eeprom_handle_writing();
  8638   001384  EC3D  F006         	call	_eeprom_handle_writing	;wreg free
  8639                           
  8640                           ;main.c: 189:         analog_handler();
  8641   001388  ECDA  F005         	call	_analog_handler	;wreg free
  8642   00138C  D7FB               	goto	l4800
  8643   00138E                     __end_of_main:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function _i2c_slave_init *****************
  8647 ;; Defined at:
  8648 ;;		line 122 in file "i2c_slave.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  slaveAddr       1    wreg     unsigned char 
  8651 ;;  maskAddr        1    2[BANK0 ] unsigned char 
  8652 ;;  to_slave_fun    2    3[BANK0 ] PTR FTN(PTR volatile uns
  8653 ;;		 -> i2c_write_to_slave_cb(1), 
  8654 ;;  from_slave_f    2    5[BANK0 ] PTR FTN(PTR volatile uns
  8655 ;;		 -> i2c_read_from_slave_cb(1), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  slaveAddr       1    7[BANK0 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      void 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8667 ;;      Params:         0       5       0       0       0
  8668 ;;      Locals:         0       1       0       0       0
  8669 ;;      Temps:          0       0       0       0       0
  8670 ;;      Totals:         0       6       0       0       0
  8671 ;;Total ram usage:        6 bytes
  8672 ;; Hardware stack levels used: 1
  8673 ;; Hardware stack levels required when called: 17
  8674 ;; This function calls:
  8675 ;;		_I2C1_Open
  8676 ;;		_I2C1_SlaveSetAddrIntHandler
  8677 ;;		_I2C1_SlaveSetReadIntHandler
  8678 ;;		_I2C1_SlaveSetWriteIntHandler
  8679 ;; This function is called by:
  8680 ;;		_main
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text1
  8685   0013E2                     __ptext1:
  8686                           	callstack 0
  8687   0013E2                     _i2c_slave_init:
  8688                           	callstack 13
  8689                           
  8690                           ;incstack = 0
  8691                           ;i2c_slave_init@slaveAddr stored from wreg
  8692   0013E2  0100               	movlb	0	; () banked
  8693   0013E4  6FE1               	movwf	i2c_slave_init@slaveAddr& (0+255),b
  8694                           
  8695                           ;i2c_slave.c: 122: void i2c_slave_init(uint8_t slaveAddr, uint8_t maskAddr, i2c_write_to
      +                          _slave_t to_slave_func, i2c_read_from_slave_t from_slave_func);i2c_slave.c: 123: {;i2c_s
      +                          lave.c: 124:     i2c.to_slave_ptr = to_slave_func;
  8696   0013E6  C0DD  F0D5         	movff	i2c_slave_init@to_slave_func,_i2c+4	;volatile
  8697   0013EA  C0DE  F0D6         	movff	i2c_slave_init@to_slave_func+1,_i2c+5	;volatile
  8698                           
  8699                           ;i2c_slave.c: 125:     i2c.from_slave_ptr = from_slave_func;
  8700   0013EE  C0DF  F0D7         	movff	i2c_slave_init@from_slave_func,_i2c+6	;volatile
  8701   0013F2  C0E0  F0D8         	movff	i2c_slave_init@from_slave_func+1,_i2c+7	;volatile
  8702                           
  8703                           ;i2c_slave.c: 127:     I2C1_Open();
  8704   0013F6  EC09  F009         	call	_I2C1_Open	;wreg free
  8705                           
  8706                           ;i2c_slave.c: 128:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  8707   0013FA  0100               	movlb	0	; () banked
  8708   0013FC  51E1               	movf	i2c_slave_init@slaveAddr& (0+255),w,b
  8709   0013FE  25E1               	addwf	i2c_slave_init@slaveAddr& (0+255),w,b
  8710   001400  6E92               	movwf	146,c	;volatile
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;i2c_slave.c: 129:     SSP1MSK = (uint8_t) (maskAddr << 1);
  8714   001402  51DC               	movf	i2c_slave_init@maskAddr& (0+255),w,b
  8715   001404  25DC               	addwf	i2c_slave_init@maskAddr& (0+255),w,b
  8716   001406  6E93               	movwf	147,c	;volatile
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;i2c_slave.c: 130:     SSP1CON3bits.PCIE = 1;
  8720   001408  8C97               	bsf	151,6,c	;volatile
  8721                           
  8722                           ;i2c_slave.c: 132:     I2C1_SlaveSetAddrIntHandler(SlaveRdDevAddrFromBus);
  8723   00140A  0E64               	movlw	low _SlaveRdDevAddrFromBus
  8724   00140C  6FDA               	movwf	I2C1_SlaveSetAddrIntHandler@handler& (0+255),b
  8725   00140E  0E17               	movlw	high _SlaveRdDevAddrFromBus
  8726   001410  6FDB               	movwf	(I2C1_SlaveSetAddrIntHandler@handler+1)& (0+255),b
  8727   001412  EC45  F00D         	call	_I2C1_SlaveSetAddrIntHandler	;wreg free
  8728                           
  8729                           ;i2c_slave.c: 133:     I2C1_SlaveSetWriteIntHandler(MasterR_SlaveW);
  8730   001416  0E34               	movlw	low _MasterR_SlaveW
  8731   001418  0100               	movlb	0	; () banked
  8732   00141A  6FDA               	movwf	I2C1_SlaveSetWriteIntHandler@handler& (0+255),b
  8733   00141C  0E14               	movlw	high _MasterR_SlaveW
  8734   00141E  6FDB               	movwf	(I2C1_SlaveSetWriteIntHandler@handler+1)& (0+255),b
  8735   001420  EC2C  F00D         	call	_I2C1_SlaveSetWriteIntHandler	;wreg free
  8736                           
  8737                           ;i2c_slave.c: 134:     I2C1_SlaveSetReadIntHandler(MasterW_SlaveR);
  8738   001424  0E80               	movlw	low _MasterW_SlaveR
  8739   001426  0100               	movlb	0	; () banked
  8740   001428  6FDA               	movwf	I2C1_SlaveSetReadIntHandler@handler& (0+255),b
  8741   00142A  0E0F               	movlw	high _MasterW_SlaveR
  8742   00142C  6FDB               	movwf	(I2C1_SlaveSetReadIntHandler@handler+1)& (0+255),b
  8743   00142E  EC36  F00D         	call	_I2C1_SlaveSetReadIntHandler	;wreg free
  8744   001432  0012               	return		;funcret
  8745   001434                     __end_of_i2c_slave_init:
  8746                           	callstack 0
  8747                           
  8748 ;; *************** function _I2C1_Open *****************
  8749 ;; Defined at:
  8750 ;;		line 116 in file "mcc_generated_files/i2c1_slave.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;		None
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8764 ;;      Params:         0       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0
  8767 ;;      Totals:         0       0       0       0       0
  8768 ;;Total ram usage:        0 bytes
  8769 ;; Hardware stack levels used: 1
  8770 ;; Hardware stack levels required when called: 16
  8771 ;; This function calls:
  8772 ;;		_I2C1_SlaveEnableIrq
  8773 ;;		_I2C1_SlaveOpen
  8774 ;;		_I2C1_SlaveSetAddrIntHandler
  8775 ;;		_I2C1_SlaveSetBusColIntHandler
  8776 ;;		_I2C1_SlaveSetIsrHandler
  8777 ;;		_I2C1_SlaveSetReadIntHandler
  8778 ;;		_I2C1_SlaveSetSlaveAddr
  8779 ;;		_I2C1_SlaveSetSlaveMask
  8780 ;;		_I2C1_SlaveSetWrColIntHandler
  8781 ;;		_I2C1_SlaveSetWriteIntHandler
  8782 ;; This function is called by:
  8783 ;;		_i2c_slave_init
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text2
  8788   001212                     __ptext2:
  8789                           	callstack 0
  8790   001212                     _I2C1_Open:
  8791                           	callstack 13
  8792                           
  8793                           ;mcc_generated_files/i2c1_slave.c: 118:     I2C1_SlaveOpen();
  8794                           
  8795                           ;incstack = 0
  8796   001212  ECA3  F00C         	call	_I2C1_SlaveOpen	;wreg free
  8797                           
  8798                           ;mcc_generated_files/i2c1_slave.c: 119:     I2C1_SlaveSetSlaveAddr(42);
  8799   001216  0E2A               	movlw	42
  8800   001218  ECDD  F00C         	call	_I2C1_SlaveSetSlaveAddr
  8801                           
  8802                           ;mcc_generated_files/i2c1_slave.c: 120:     I2C1_SlaveSetSlaveMask(127);
  8803   00121C  0E7F               	movlw	127
  8804   00121E  ECD6  F00C         	call	_I2C1_SlaveSetSlaveMask
  8805                           
  8806                           ;mcc_generated_files/i2c1_slave.c: 121:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
  8807   001222  0EBC               	movlw	low _I2C1_Isr
  8808   001224  0100               	movlb	0	; () banked
  8809   001226  6FDA               	movwf	I2C1_SlaveSetIsrHandler@handler& (0+255),b
  8810   001228  0E0D               	movlw	high _I2C1_Isr
  8811   00122A  6FDB               	movwf	(I2C1_SlaveSetIsrHandler@handler+1)& (0+255),b
  8812   00122C  EC3B  F00D         	call	_I2C1_SlaveSetIsrHandler	;wreg free
  8813                           
  8814                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
  8815   001230  0E00               	movlw	0
  8816   001232  0100               	movlb	0	; () banked
  8817   001234  6FDA               	movwf	I2C1_SlaveSetBusColIntHandler@handler& (0+255),b
  8818   001236  0E00               	movlw	0
  8819   001238  6FDB               	movwf	(I2C1_SlaveSetBusColIntHandler@handler+1)& (0+255),b
  8820   00123A  EC40  F00D         	call	_I2C1_SlaveSetBusColIntHandler	;wreg free
  8821                           
  8822                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
  8823   00123E  0EEC               	movlw	low _I2C1_SlaveDefWrInterruptHandler
  8824   001240  0100               	movlb	0	; () banked
  8825   001242  6FDA               	movwf	I2C1_SlaveSetWriteIntHandler@handler& (0+255),b
  8826   001244  0E1A               	movlw	high _I2C1_SlaveDefWrInterruptHandler
  8827   001246  6FDB               	movwf	(I2C1_SlaveSetWriteIntHandler@handler+1)& (0+255),b
  8828   001248  EC2C  F00D         	call	_I2C1_SlaveSetWriteIntHandler	;wreg free
  8829                           
  8830                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
  8831   00124C  0ED0               	movlw	low _I2C1_SlaveDefRdInterruptHandler
  8832   00124E  0100               	movlb	0	; () banked
  8833   001250  6FDA               	movwf	I2C1_SlaveSetReadIntHandler@handler& (0+255),b
  8834   001252  0E1A               	movlw	high _I2C1_SlaveDefRdInterruptHandler
  8835   001254  6FDB               	movwf	(I2C1_SlaveSetReadIntHandler@handler+1)& (0+255),b
  8836   001256  EC36  F00D         	call	_I2C1_SlaveSetReadIntHandler	;wreg free
  8837                           
  8838                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
  8839   00125A  0EDA               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
  8840   00125C  0100               	movlb	0	; () banked
  8841   00125E  6FDA               	movwf	I2C1_SlaveSetAddrIntHandler@handler& (0+255),b
  8842   001260  0E1A               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
  8843   001262  6FDB               	movwf	(I2C1_SlaveSetAddrIntHandler@handler+1)& (0+255),b
  8844   001264  EC45  F00D         	call	_I2C1_SlaveSetAddrIntHandler	;wreg free
  8845                           
  8846                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
  8847   001268  0E00               	movlw	0
  8848   00126A  0100               	movlb	0	; () banked
  8849   00126C  6FDA               	movwf	I2C1_SlaveSetWrColIntHandler@handler& (0+255),b
  8850   00126E  0E00               	movlw	0
  8851   001270  6FDB               	movwf	(I2C1_SlaveSetWrColIntHandler@handler+1)& (0+255),b
  8852   001272  EC31  F00D         	call	_I2C1_SlaveSetWrColIntHandler	;wreg free
  8853                           
  8854                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveEnableIrq();
  8855   001276  EC7E  F00D         	call	_I2C1_SlaveEnableIrq	;wreg free
  8856   00127A  0012               	return		;funcret
  8857   00127C                     __end_of_I2C1_Open:
  8858                           	callstack 0
  8859                           
  8860 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
  8861 ;; Defined at:
  8862 ;;		line 246 in file "mcc_generated_files/i2c1_slave.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  8865 ;;		 -> MasterR_SlaveW(1), I2C1_SlaveDefWrInterruptHandler(1), 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8877 ;;      Params:         0       2       0       0       0
  8878 ;;      Locals:         0       0       0       0       0
  8879 ;;      Temps:          0       0       0       0       0
  8880 ;;      Totals:         0       2       0       0       0
  8881 ;;Total ram usage:        2 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 15
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_I2C1_Open
  8888 ;;		_i2c_slave_init
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text3
  8893   001A58                     __ptext3:
  8894                           	callstack 0
  8895   001A58                     _I2C1_SlaveSetWriteIntHandler:
  8896                           	callstack 14
  8897                           
  8898                           ;mcc_generated_files/i2c1_slave.c: 247:     I2C1_SlaveWrInterruptHandler = handler;
  8899                           
  8900                           ;incstack = 0
  8901   001A58  C0DA  F0C7         	movff	I2C1_SlaveSetWriteIntHandler@handler,_I2C1_SlaveWrInterruptHandler
  8902   001A5C  C0DB  F0C8         	movff	I2C1_SlaveSetWriteIntHandler@handler+1,_I2C1_SlaveWrInterruptHandler+1
  8903   001A60  0012               	return		;funcret
  8904   001A62                     __end_of_I2C1_SlaveSetWriteIntHandler:
  8905                           	callstack 0
  8906                           
  8907 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
  8908 ;; Defined at:
  8909 ;;		line 279 in file "mcc_generated_files/i2c1_slave.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  8912 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8924 ;;      Params:         0       2       0       0       0
  8925 ;;      Locals:         0       0       0       0       0
  8926 ;;      Temps:          0       0       0       0       0
  8927 ;;      Totals:         0       2       0       0       0
  8928 ;;Total ram usage:        2 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; Hardware stack levels required when called: 15
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_I2C1_Open
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text4
  8939   001A62                     __ptext4:
  8940                           	callstack 0
  8941   001A62                     _I2C1_SlaveSetWrColIntHandler:
  8942                           	callstack 13
  8943                           
  8944                           ;mcc_generated_files/i2c1_slave.c: 280:     I2C1_SlaveWrColInterruptHandler = handler;
  8945                           
  8946                           ;incstack = 0
  8947   001A62  C0DA  F0C1         	movff	I2C1_SlaveSetWrColIntHandler@handler,_I2C1_SlaveWrColInterruptHandler
  8948   001A66  C0DB  F0C2         	movff	I2C1_SlaveSetWrColIntHandler@handler+1,_I2C1_SlaveWrColInterruptHandler+1
  8949   001A6A  0012               	return		;funcret
  8950   001A6C                     __end_of_I2C1_SlaveSetWrColIntHandler:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
  8954 ;; Defined at:
  8955 ;;		line 336 in file "mcc_generated_files/i2c1_slave.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  maskAddr        1    wreg     unsigned char 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  maskAddr        1    0[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8969 ;;      Params:         0       0       0       0       0
  8970 ;;      Locals:         0       1       0       0       0
  8971 ;;      Temps:          0       0       0       0       0
  8972 ;;      Totals:         0       1       0       0       0
  8973 ;;Total ram usage:        1 bytes
  8974 ;; Hardware stack levels used: 1
  8975 ;; Hardware stack levels required when called: 15
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_I2C1_Open
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text5
  8984   0019AC                     __ptext5:
  8985                           	callstack 0
  8986   0019AC                     _I2C1_SlaveSetSlaveMask:
  8987                           	callstack 13
  8988                           
  8989                           ;incstack = 0
  8990                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
  8991   0019AC  0100               	movlb	0	; () banked
  8992   0019AE  6FDA               	movwf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),b
  8993                           
  8994                           ;mcc_generated_files/i2c1_slave.c: 336: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 337: {;mcc_generated_file
      +                          s/i2c1_slave.c: 338:     SSP1MSK = (uint8_t) (maskAddr << 1);
  8995   0019B0  0100               	movlb	0	; () banked
  8996   0019B2  51DA               	movf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),w,b
  8997   0019B4  25DA               	addwf	I2C1_SlaveSetSlaveMask@maskAddr& (0+255),w,b
  8998   0019B6  6E93               	movwf	147,c	;volatile
  8999                           
  9000                           ; BSR set to: 0
  9001   0019B8  0012               	return		;funcret
  9002   0019BA                     __end_of_I2C1_SlaveSetSlaveMask:
  9003                           	callstack 0
  9004                           
  9005 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
  9006 ;; Defined at:
  9007 ;;		line 331 in file "mcc_generated_files/i2c1_slave.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  slaveAddr       1    wreg     unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  slaveAddr       1    0[BANK0 ] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9021 ;;      Params:         0       0       0       0       0
  9022 ;;      Locals:         0       1       0       0       0
  9023 ;;      Temps:          0       0       0       0       0
  9024 ;;      Totals:         0       1       0       0       0
  9025 ;;Total ram usage:        1 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 15
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_I2C1_Open
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text6
  9036   0019BA                     __ptext6:
  9037                           	callstack 0
  9038   0019BA                     _I2C1_SlaveSetSlaveAddr:
  9039                           	callstack 13
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;incstack = 0
  9043                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
  9044   0019BA  0100               	movlb	0	; () banked
  9045   0019BC  6FDA               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),b
  9046                           
  9047                           ;mcc_generated_files/i2c1_slave.c: 331: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 332: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 333:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  9048   0019BE  0100               	movlb	0	; () banked
  9049   0019C0  51DA               	movf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),w,b
  9050   0019C2  25DA               	addwf	I2C1_SlaveSetSlaveAddr@slaveAddr& (0+255),w,b
  9051   0019C4  6E92               	movwf	146,c	;volatile
  9052                           
  9053                           ; BSR set to: 0
  9054   0019C6  0012               	return		;funcret
  9055   0019C8                     __end_of_I2C1_SlaveSetSlaveAddr:
  9056                           	callstack 0
  9057                           
  9058 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
  9059 ;; Defined at:
  9060 ;;		line 229 in file "mcc_generated_files/i2c1_slave.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  9063 ;;		 -> MasterW_SlaveR(1), I2C1_SlaveDefRdInterruptHandler(1), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9075 ;;      Params:         0       2       0       0       0
  9076 ;;      Locals:         0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0
  9078 ;;      Totals:         0       2       0       0       0
  9079 ;;Total ram usage:        2 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 15
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_I2C1_Open
  9086 ;;		_i2c_slave_init
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text7
  9091   001A6C                     __ptext7:
  9092                           	callstack 0
  9093   001A6C                     _I2C1_SlaveSetReadIntHandler:
  9094                           	callstack 14
  9095                           
  9096                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveRdInterruptHandler = handler;
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;incstack = 0
  9100   001A6C  C0DA  F0C9         	movff	I2C1_SlaveSetReadIntHandler@handler,_I2C1_SlaveRdInterruptHandler
  9101   001A70  C0DB  F0CA         	movff	I2C1_SlaveSetReadIntHandler@handler+1,_I2C1_SlaveRdInterruptHandler+1
  9102   001A74  0012               	return		;funcret
  9103   001A76                     __end_of_I2C1_SlaveSetReadIntHandler:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
  9107 ;; Defined at:
  9108 ;;		line 223 in file "mcc_generated_files/i2c1_slave.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  9111 ;;		 -> I2C1_Isr(1), 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9123 ;;      Params:         0       2       0       0       0
  9124 ;;      Locals:         0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0
  9126 ;;      Totals:         0       2       0       0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 15
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_I2C1_Open
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text8
  9138   001A76                     __ptext8:
  9139                           	callstack 0
  9140   001A76                     _I2C1_SlaveSetIsrHandler:
  9141                           	callstack 13
  9142                           
  9143                           ;mcc_generated_files/i2c1_slave.c: 223: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 224: {;mcc_generated_files/i2c1_slave.c: 22
      +                          5:     MSSP1_InterruptHandler = handler;
  9144                           
  9145                           ;incstack = 0
  9146   001A76  C0DA  F0CB         	movff	I2C1_SlaveSetIsrHandler@handler,_MSSP1_InterruptHandler
  9147   001A7A  C0DB  F0CC         	movff	I2C1_SlaveSetIsrHandler@handler+1,_MSSP1_InterruptHandler+1
  9148   001A7E  0012               	return		;funcret
  9149   001A80                     __end_of_I2C1_SlaveSetIsrHandler:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
  9153 ;; Defined at:
  9154 ;;		line 295 in file "mcc_generated_files/i2c1_slave.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  9157 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9169 ;;      Params:         0       2       0       0       0
  9170 ;;      Locals:         0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0
  9172 ;;      Totals:         0       2       0       0       0
  9173 ;;Total ram usage:        2 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 15
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_I2C1_Open
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text9
  9184   001A80                     __ptext9:
  9185                           	callstack 0
  9186   001A80                     _I2C1_SlaveSetBusColIntHandler:
  9187                           	callstack 13
  9188                           
  9189                           ;mcc_generated_files/i2c1_slave.c: 296:     I2C1_SlaveBusColInterruptHandler = handler;
  9190                           
  9191                           ;incstack = 0
  9192   001A80  C0DA  F0C3         	movff	I2C1_SlaveSetBusColIntHandler@handler,_I2C1_SlaveBusColInterruptHandler
  9193   001A84  C0DB  F0C4         	movff	I2C1_SlaveSetBusColIntHandler@handler+1,_I2C1_SlaveBusColInterruptHandler+1
  9194   001A88  0012               	return		;funcret
  9195   001A8A                     __end_of_I2C1_SlaveSetBusColIntHandler:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
  9199 ;; Defined at:
  9200 ;;		line 263 in file "mcc_generated_files/i2c1_slave.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  9203 ;;		 -> SlaveRdDevAddrFromBus(1), I2C1_SlaveDefAddrInterruptHandler(1), 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;		None
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      void 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9215 ;;      Params:         0       2       0       0       0
  9216 ;;      Locals:         0       0       0       0       0
  9217 ;;      Temps:          0       0       0       0       0
  9218 ;;      Totals:         0       2       0       0       0
  9219 ;;Total ram usage:        2 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; Hardware stack levels required when called: 15
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_I2C1_Open
  9226 ;;		_i2c_slave_init
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text10
  9231   001A8A                     __ptext10:
  9232                           	callstack 0
  9233   001A8A                     _I2C1_SlaveSetAddrIntHandler:
  9234                           	callstack 14
  9235                           
  9236                           ;mcc_generated_files/i2c1_slave.c: 264:     I2C1_SlaveAddrInterruptHandler = handler;
  9237                           
  9238                           ;incstack = 0
  9239   001A8A  C0DA  F0C5         	movff	I2C1_SlaveSetAddrIntHandler@handler,_I2C1_SlaveAddrInterruptHandler
  9240   001A8E  C0DB  F0C6         	movff	I2C1_SlaveSetAddrIntHandler@handler+1,_I2C1_SlaveAddrInterruptHandler+1
  9241   001A92  0012               	return		;funcret
  9242   001A94                     __end_of_I2C1_SlaveSetAddrIntHandler:
  9243                           	callstack 0
  9244                           
  9245 ;; *************** function _I2C1_SlaveOpen *****************
  9246 ;; Defined at:
  9247 ;;		line 310 in file "mcc_generated_files/i2c1_slave.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      _Bool 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9261 ;;      Params:         0       0       0       0       0
  9262 ;;      Locals:         0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0
  9264 ;;      Totals:         0       0       0       0       0
  9265 ;;Total ram usage:        0 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 15
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_I2C1_Open
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text11
  9276   001946                     __ptext11:
  9277                           	callstack 0
  9278   001946                     _I2C1_SlaveOpen:
  9279                           	callstack 13
  9280                           
  9281                           ;mcc_generated_files/i2c1_slave.c: 312:     if(!SSP1CON1bits.SSPEN)
  9282                           
  9283                           ;incstack = 0
  9284   001946  BA95               	btfsc	149,5,c	;volatile
  9285   001948  0012               	return	
  9286                           
  9287                           ;mcc_generated_files/i2c1_slave.c: 313:     {;mcc_generated_files/i2c1_slave.c: 314:    
      +                               SSP1STAT = 0x00;
  9288   00194A  6A94               	clrf	148,c	;volatile
  9289                           
  9290                           ;mcc_generated_files/i2c1_slave.c: 315:         SSP1CON1 |= 0x06;
  9291   00194C  0E06               	movlw	6
  9292   00194E  1295               	iorwf	149,f,c	;volatile
  9293                           
  9294                           ;mcc_generated_files/i2c1_slave.c: 316:         SSP1CON2 = 0x81;
  9295   001950  0E81               	movlw	129
  9296   001952  6E96               	movwf	150,c	;volatile
  9297                           
  9298                           ;mcc_generated_files/i2c1_slave.c: 317:         SSP1CON1bits.SSPEN = 1;
  9299   001954  8A95               	bsf	149,5,c	;volatile
  9300   001956  0012               	return		;funcret
  9301   001958                     __end_of_I2C1_SlaveOpen:
  9302                           	callstack 0
  9303                           
  9304 ;; *************** function _I2C1_SlaveEnableIrq *****************
  9305 ;; Defined at:
  9306 ;;		line 341 in file "mcc_generated_files/i2c1_slave.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		None
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9320 ;;      Params:         0       0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0
  9323 ;;      Totals:         0       0       0       0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; Hardware stack levels required when called: 15
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_I2C1_Open
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text12
  9335   001AFC                     __ptext12:
  9336                           	callstack 0
  9337   001AFC                     _I2C1_SlaveEnableIrq:
  9338                           	callstack 13
  9339                           
  9340                           ;mcc_generated_files/i2c1_slave.c: 343:     PIE3bits.SSP1IE = 1;
  9341                           
  9342                           ;incstack = 0
  9343   001AFC  010E               	movlb	14	; () banked
  9344   001AFE  81C0               	bsf	192,0,b	;volatile
  9345                           
  9346                           ; BSR set to: 14
  9347   001B00  0012               	return		;funcret
  9348   001B02                     __end_of_I2C1_SlaveEnableIrq:
  9349                           	callstack 0
  9350                           
  9351 ;; *************** function _eeprom_handle_writing *****************
  9352 ;; Defined at:
  9353 ;;		line 43 in file "eeprom.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  eeAddr          1   12[BANK0 ] unsigned char 
  9358 ;;  bitval          1   11[BANK0 ] unsigned char 
  9359 ;;  bi              1   13[BANK0 ] unsigned char 
  9360 ;;  by              1   14[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9370 ;;      Params:         0       0       0       0       0
  9371 ;;      Locals:         0       4       0       0       0
  9372 ;;      Temps:          0       2       0       0       0
  9373 ;;      Totals:         0       6       0       0       0
  9374 ;;Total ram usage:        6 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; Hardware stack levels required when called: 17
  9377 ;; This function calls:
  9378 ;;		_eeprom_write_byte
  9379 ;;		_i2c_slave_get_state
  9380 ;; This function is called by:
  9381 ;;		_main
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text13
  9386   000C7A                     __ptext13:
  9387                           	callstack 0
  9388   000C7A                     _eeprom_handle_writing:
  9389                           	callstack 13
  9390                           
  9391                           ;eeprom.c: 47:     if(i2c_slave_get_state() != eIdle)
  9392                           
  9393                           ; BSR set to: 14
  9394                           ;incstack = 0
  9395   000C7A  EC81  F00D         	call	_i2c_slave_get_state	;wreg free
  9396   000C7E  0900               	iorlw	0
  9397   000C80  A4D8               	btfss	status,2,c
  9398   000C82  0012               	return	
  9399                           
  9400                           ;eeprom.c: 51:     for(uint8_t by = 0;by < (256 / 8); by++)
  9401   000C84  0100               	movlb	0	; () banked
  9402   000C86  6BE8               	clrf	eeprom_handle_writing@by& (0+255),b
  9403   000C88                     l4694:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;eeprom.c: 52:     {;eeprom.c: 55:         if(!E2_Changes[by])
  9407   000C88  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
  9408   000C8A  0F91               	addlw	low _E2_Changes
  9409   000C8C  6ED9               	movwf	fsr2l,c
  9410   000C8E  6ADA               	clrf	fsr2h,c
  9411   000C90  50DF               	movf	indf2,w,c
  9412   000C92  B4D8               	btfsc	status,2,c
  9413   000C94  D040               	goto	u3280
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;eeprom.c: 59:         for(uint8_t bi = 0; E2_Changes[by] && bi < 8; bi++)
  9417   000C96  6BE7               	clrf	eeprom_handle_writing@bi& (0+255),b
  9418   000C98  D034               	goto	l4716
  9419   000C9A                     l4698:
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;eeprom.c: 60:         {;eeprom.c: 63:             if(i2c_slave_get_state() != eIdle)
  9423   000C9A  EC81  F00D         	call	_i2c_slave_get_state	;wreg free
  9424   000C9E  0900               	iorlw	0
  9425   000CA0  A4D8               	btfss	status,2,c
  9426   000CA2  0012               	return	
  9427                           
  9428                           ;eeprom.c: 67:             uint8_t bitval = (uint8_t)(1 << bi);
  9429   000CA4  C0E7  F0E3         	movff	eeprom_handle_writing@bi,??_eeprom_handle_writing
  9430   000CA8  0E01               	movlw	1
  9431   000CAA  0100               	movlb	0	; () banked
  9432   000CAC  6FE4               	movwf	(??_eeprom_handle_writing+1)& (0+255),b
  9433   000CAE  2BE3               	incf	??_eeprom_handle_writing& (0+255),f,b
  9434   000CB0  D002               	goto	u3254
  9435   000CB2                     u3255:
  9436   000CB2  90D8               	bcf	status,0,c
  9437   000CB4  37E4               	rlcf	(??_eeprom_handle_writing+1)& (0+255),f,b
  9438   000CB6                     u3254:
  9439   000CB6  2FE3               	decfsz	??_eeprom_handle_writing& (0+255),f,b
  9440   000CB8  D7FC               	goto	u3255
  9441   000CBA  0100               	movlb	0	; () banked
  9442   000CBC  51E4               	movf	(??_eeprom_handle_writing+1)& (0+255),w,b
  9443   000CBE  6FE5               	movwf	eeprom_handle_writing@bitval& (0+255),b
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;eeprom.c: 70:             if(E2_Changes[by] & bitval)
  9447   000CC0  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
  9448   000CC2  0F91               	addlw	low _E2_Changes
  9449   000CC4  6ED9               	movwf	fsr2l,c
  9450   000CC6  6ADA               	clrf	fsr2h,c
  9451   000CC8  50DF               	movf	indf2,w,c
  9452   000CCA  15E5               	andwf	eeprom_handle_writing@bitval& (0+255),w,b
  9453   000CCC  0900               	iorlw	0
  9454   000CCE  B4D8               	btfsc	status,2,c
  9455   000CD0  D016               	goto	l4714
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;eeprom.c: 71:             {;eeprom.c: 73:                 eeAddr_t eeAddr = (eeAddr_t)(
      +                          ((uint16_t)by << 3) + bi);
  9459   000CD2  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
  9460   000CD4  0D08               	mullw	8
  9461   000CD6  50F3               	movf	243,w,c
  9462   000CD8  25E7               	addwf	eeprom_handle_writing@bi& (0+255),w,b
  9463   000CDA  6FE6               	movwf	eeprom_handle_writing@eeAddr& (0+255),b
  9464                           
  9465                           ; BSR set to: 0
  9466   000CDC  0E1F               	movlw	31
  9467   000CDE  010F               	movlb	15	; () banked
  9468   000CE0  6F2F               	movwf	47,b	;volatile
  9469                           
  9470                           ; BSR set to: 15
  9471                           ;eeprom.c: 76:                 eeprom_write_byte((eeAddr_t)eeAddr, E2_DATA[eeAddr]);
  9472   000CE2  0E00               	movlw	low _E2_DATA
  9473   000CE4  0100               	movlb	0	; () banked
  9474   000CE6  25E6               	addwf	eeprom_handle_writing@eeAddr& (0+255),w,b
  9475   000CE8  6ED9               	movwf	fsr2l,c
  9476   000CEA  6ADA               	clrf	fsr2h,c
  9477   000CEC  0E02               	movlw	high _E2_DATA
  9478   000CEE  22DA               	addwfc	fsr2h,f,c
  9479   000CF0  50DF               	movf	indf2,w,c
  9480   000CF2  6FDD               	movwf	eeprom_write_byte@data& (0+255),b
  9481   000CF4  51E6               	movf	eeprom_handle_writing@eeAddr& (0+255),w,b
  9482   000CF6  EC43  F00A         	call	_eeprom_write_byte
  9483   000CFA  010F               	movlb	15	; () banked
  9484   000CFC  6B2F               	clrf	47,b	;volatile
  9485   000CFE                     l4714:
  9486                           
  9487                           ;eeprom.c: 79:         }
  9488   000CFE  0100               	movlb	0	; () banked
  9489   000D00  2BE7               	incf	eeprom_handle_writing@bi& (0+255),f,b
  9490   000D02                     l4716:
  9491                           
  9492                           ; BSR set to: 0
  9493   000D02  51E8               	movf	eeprom_handle_writing@by& (0+255),w,b
  9494   000D04  0F91               	addlw	low _E2_Changes
  9495   000D06  6ED9               	movwf	fsr2l,c
  9496   000D08  6ADA               	clrf	fsr2h,c
  9497   000D0A  50DF               	movf	indf2,w,c
  9498   000D0C  B4D8               	btfsc	status,2,c
  9499   000D0E  D003               	goto	u3280
  9500                           
  9501                           ; BSR set to: 0
  9502   000D10  0E07               	movlw	7
  9503   000D12  65E7               	cpfsgt	eeprom_handle_writing@bi& (0+255),b
  9504   000D14  D7C2               	goto	l4698
  9505   000D16                     u3280:
  9506                           
  9507                           ; BSR set to: 0
  9508   000D16  2BE8               	incf	eeprom_handle_writing@by& (0+255),f,b
  9509                           
  9510                           ; BSR set to: 0
  9511   000D18  0E1F               	movlw	31
  9512   000D1A  65E8               	cpfsgt	eeprom_handle_writing@by& (0+255),b
  9513   000D1C  D7B5               	goto	l4694
  9514   000D1E  0012               	return	
  9515   000D20                     __end_of_eeprom_handle_writing:
  9516                           	callstack 0
  9517                           
  9518 ;; *************** function _i2c_slave_get_state *****************
  9519 ;; Defined at:
  9520 ;;		line 18 in file "i2c_slave.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;		None
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;		None
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      enum E10126
  9527 ;; Registers used:
  9528 ;;		wreg, status,2
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9534 ;;      Params:         0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0
  9537 ;;      Totals:         0       0       0       0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used: 1
  9540 ;; Hardware stack levels required when called: 15
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_eeprom_handle_writing
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text14
  9549   001B02                     __ptext14:
  9550                           	callstack 0
  9551   001B02                     _i2c_slave_get_state:
  9552                           	callstack 14
  9553                           
  9554                           ;i2c_slave.c: 20:     return i2c.state;
  9555                           
  9556                           ;incstack = 0
  9557   001B02  0100               	movlb	0	; () banked
  9558   001B04  51D4               	movf	(_i2c+3)& (0+255),w,b	;volatile
  9559                           
  9560                           ; BSR set to: 0
  9561   001B06  0012               	return		;funcret
  9562   001B08                     __end_of_i2c_slave_get_state:
  9563                           	callstack 0
  9564                           
  9565 ;; *************** function _eeprom_write_byte *****************
  9566 ;; Defined at:
  9567 ;;		line 17 in file "eeprom.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;  addr            1    wreg     unsigned char 
  9570 ;;  data            1    3[BANK0 ] unsigned char 
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;  addr            1    8[BANK0 ] unsigned char 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9582 ;;      Params:         0       1       0       0       0
  9583 ;;      Locals:         0       1       0       0       0
  9584 ;;      Temps:          0       4       0       0       0
  9585 ;;      Totals:         0       6       0       0       0
  9586 ;;Total ram usage:        6 bytes
  9587 ;; Hardware stack levels used: 1
  9588 ;; Hardware stack levels required when called: 16
  9589 ;; This function calls:
  9590 ;;		_DATAEE_WriteByte
  9591 ;; This function is called by:
  9592 ;;		_eeprom_handle_writing
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text15
  9597   001486                     __ptext15:
  9598                           	callstack 0
  9599   001486                     _eeprom_write_byte:
  9600                           	callstack 13
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;incstack = 0
  9604                           ;eeprom_write_byte@addr stored from wreg
  9605   001486  0100               	movlb	0	; () banked
  9606   001488  6FE2               	movwf	eeprom_write_byte@addr& (0+255),b
  9607                           
  9608                           ;eeprom.c: 17: static void eeprom_write_byte(eeAddr_t addr, uint8_t data);eeprom.c: 18: 
      +                          {;eeprom.c: 20:     DATAEE_WriteByte(addr, data);
  9609   00148A  C0DD  F0DA         	movff	eeprom_write_byte@data,DATAEE_WriteByte@bData
  9610   00148E  0100               	movlb	0	; () banked
  9611   001490  51E2               	movf	eeprom_write_byte@addr& (0+255),w,b
  9612   001492  EC14  F00B         	call	_DATAEE_WriteByte
  9613                           
  9614                           ;eeprom.c: 21:     E2_Changes[addr >> 3] &= ~(1 << (addr & 0x7));
  9615   001496  C0E2  F0DE         	movff	eeprom_write_byte@addr,??_eeprom_write_byte
  9616   00149A  0E07               	movlw	7
  9617   00149C  0100               	movlb	0	; () banked
  9618   00149E  17DE               	andwf	??_eeprom_write_byte& (0+255),f,b
  9619   0014A0  0E01               	movlw	1
  9620   0014A2  6FDF               	movwf	(??_eeprom_write_byte+1)& (0+255),b
  9621   0014A4  2BDE               	incf	??_eeprom_write_byte& (0+255),f,b
  9622   0014A6  D002               	goto	u2984
  9623   0014A8                     u2985:
  9624   0014A8  90D8               	bcf	status,0,c
  9625   0014AA  37DF               	rlcf	(??_eeprom_write_byte+1)& (0+255),f,b
  9626   0014AC                     u2984:
  9627   0014AC  2FDE               	decfsz	??_eeprom_write_byte& (0+255),f,b
  9628   0014AE  D7FC               	goto	u2985
  9629   0014B0  0100               	movlb	0	; () banked
  9630   0014B2  51DF               	movf	(??_eeprom_write_byte+1)& (0+255),w,b
  9631   0014B4  0AFF               	xorlw	255
  9632   0014B6  6FE0               	movwf	(??_eeprom_write_byte+2)& (0+255),b
  9633   0014B8  C0E2  F0E1         	movff	eeprom_write_byte@addr,??_eeprom_write_byte+3
  9634   0014BC  90D8               	bcf	status,0,c
  9635   0014BE  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
  9636   0014C0  90D8               	bcf	status,0,c
  9637   0014C2  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
  9638   0014C4  90D8               	bcf	status,0,c
  9639   0014C6  33E1               	rrcf	(??_eeprom_write_byte+3)& (0+255),f,b
  9640   0014C8  51E1               	movf	(??_eeprom_write_byte+3)& (0+255),w,b
  9641   0014CA  0F91               	addlw	low _E2_Changes
  9642   0014CC  6ED9               	movwf	fsr2l,c
  9643   0014CE  6ADA               	clrf	fsr2h,c
  9644   0014D0  51E0               	movf	(??_eeprom_write_byte+2)& (0+255),w,b
  9645   0014D2  16DF               	andwf	indf2,f,c
  9646                           
  9647                           ; BSR set to: 0
  9648   0014D4  0012               	return		;funcret
  9649   0014D6                     __end_of_eeprom_write_byte:
  9650                           	callstack 0
  9651                           
  9652 ;; *************** function _DATAEE_WriteByte *****************
  9653 ;; Defined at:
  9654 ;;		line 226 in file "mcc_generated_files/memory.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  bAdd            1    wreg     unsigned char 
  9657 ;;  bData           1    0[BANK0 ] unsigned char 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  bAdd            1    1[BANK0 ] unsigned char 
  9660 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9670 ;;      Params:         0       1       0       0       0
  9671 ;;      Locals:         0       2       0       0       0
  9672 ;;      Temps:          0       0       0       0       0
  9673 ;;      Totals:         0       3       0       0       0
  9674 ;;Total ram usage:        3 bytes
  9675 ;; Hardware stack levels used: 1
  9676 ;; Hardware stack levels required when called: 15
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_eeprom_write_byte
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text16
  9685   001628                     __ptext16:
  9686                           	callstack 0
  9687   001628                     _DATAEE_WriteByte:
  9688                           	callstack 13
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;incstack = 0
  9692                           ;DATAEE_WriteByte@bAdd stored from wreg
  9693   001628  0100               	movlb	0	; () banked
  9694   00162A  6FDB               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  9695                           
  9696                           ;mcc_generated_files/memory.c: 226: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);m
      +                          cc_generated_files/memory.c: 227: {;mcc_generated_files/memory.c: 228:     uint8_t GIEBi
      +                          tValue = INTCONbits.GIE;
  9697   00162C  0E00               	movlw	0
  9698   00162E  BEF2               	btfsc	242,7,c	;volatile
  9699   001630  0E01               	movlw	1
  9700   001632  0100               	movlb	0	; () banked
  9701   001634  6FDC               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;mcc_generated_files/memory.c: 231:     NVMADRU = 0x31;
  9705   001636  0E31               	movlw	49
  9706   001638  6E7B               	movwf	123,c	;volatile
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;mcc_generated_files/memory.c: 232:     NVMADRH = 0x00;
  9710   00163A  6A7A               	clrf	122,c	;volatile
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;mcc_generated_files/memory.c: 233:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9714   00163C  C0DB  FF79         	movff	DATAEE_WriteByte@bAdd,3961	;volatile
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;mcc_generated_files/memory.c: 236:     NVMDATL = (uint8_t)(bData & 0xFF);
  9718   001640  C0DA  FF7C         	movff	DATAEE_WriteByte@bData,3964	;volatile
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;mcc_generated_files/memory.c: 239:     NVMCON0bits.NVMEN = 1;
  9722   001644  8E7F               	bsf	127,7,c	;volatile
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;mcc_generated_files/memory.c: 242:     INTCONbits.GIE = 0;
  9726   001646  9EF2               	bcf	242,7,c	;volatile
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;mcc_generated_files/memory.c: 245:     NVMCON2 = 0x55;
  9730   001648  0E55               	movlw	85
  9731   00164A  6E81               	movwf	129,c	;volsfr
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;mcc_generated_files/memory.c: 246:     NVMCON2 = 0xAA;
  9735   00164C  0EAA               	movlw	170
  9736   00164E  6E81               	movwf	129,c	;volsfr
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;mcc_generated_files/memory.c: 249:     NVMCON1bits.WR = 1;
  9740   001650  8880               	bsf	128,4,c	;volsfr
  9741   001652                     l656:
  9742   001652  B880               	btfsc	128,4,c	;volsfr
  9743   001654  D7FE               	goto	l656
  9744                           
  9745                           ;mcc_generated_files/memory.c: 253:     INTCONbits.GIE = GIEBitValue;
  9746   001656  0100               	movlb	0	; () banked
  9747   001658  B1DC               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
  9748   00165A  D002               	bra	u2685
  9749   00165C  9EF2               	bcf	242,7,c	;volatile
  9750   00165E  D001               	bra	u2686
  9751   001660                     u2685:
  9752   001660  8EF2               	bsf	242,7,c	;volatile
  9753   001662                     u2686:
  9754                           
  9755                           ;mcc_generated_files/memory.c: 256:     NVMCON0bits.NVMEN = 0;
  9756   001662  9E7F               	bcf	127,7,c	;volatile
  9757   001664  0012               	return		;funcret
  9758   001666                     __end_of_DATAEE_WriteByte:
  9759                           	callstack 0
  9760                           
  9761 ;; *************** function _eeprom_buffer_whole *****************
  9762 ;; Defined at:
  9763 ;;		line 36 in file "eeprom.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  b               2    2[BANK0 ] unsigned short 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9777 ;;      Params:         0       0       0       0       0
  9778 ;;      Locals:         0       2       0       0       0
  9779 ;;      Temps:          0       0       0       0       0
  9780 ;;      Totals:         0       2       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 17
  9784 ;; This function calls:
  9785 ;;		_eeprom_read_byte
  9786 ;; This function is called by:
  9787 ;;		_main
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text17
  9792   001792                     __ptext17:
  9793                           	callstack 0
  9794   001792                     _eeprom_buffer_whole:
  9795                           	callstack 13
  9796                           
  9797                           ;eeprom.c: 39:     for(uint16_t b = 0; b < 256; b++)
  9798                           
  9799                           ;incstack = 0
  9800   001792  0E00               	movlw	0
  9801   001794  0100               	movlb	0	; () banked
  9802   001796  6FDD               	movwf	(eeprom_buffer_whole@b+1)& (0+255),b
  9803   001798  0E00               	movlw	0
  9804   00179A  6FDC               	movwf	eeprom_buffer_whole@b& (0+255),b
  9805   00179C                     l4658:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;eeprom.c: 40:         E2_DATA[b] = eeprom_read_byte((eeAddr_t)b);
  9809   00179C  0E00               	movlw	low _E2_DATA
  9810   00179E  25DC               	addwf	eeprom_buffer_whole@b& (0+255),w,b
  9811   0017A0  6ED9               	movwf	fsr2l,c
  9812   0017A2  0E02               	movlw	high _E2_DATA
  9813   0017A4  21DD               	addwfc	(eeprom_buffer_whole@b+1)& (0+255),w,b
  9814   0017A6  6EDA               	movwf	fsr2h,c
  9815   0017A8  51DC               	movf	eeprom_buffer_whole@b& (0+255),w,b
  9816   0017AA  ECE4  F00C         	call	_eeprom_read_byte
  9817   0017AE  6EDF               	movwf	indf2,c
  9818   0017B0  0100               	movlb	0	; () banked
  9819   0017B2  4BDC               	infsnz	eeprom_buffer_whole@b& (0+255),f,b
  9820   0017B4  2BDD               	incf	(eeprom_buffer_whole@b+1)& (0+255),f,b
  9821                           
  9822                           ; BSR set to: 0
  9823   0017B6  05DD               	decf	(eeprom_buffer_whole@b+1)& (0+255),w,b
  9824   0017B8  B0D8               	btfsc	status,0,c
  9825   0017BA  0012               	return	
  9826   0017BC  D7EF               	goto	l4658
  9827   0017BE                     __end_of_eeprom_buffer_whole:
  9828                           	callstack 0
  9829                           
  9830 ;; *************** function _eeprom_read_byte *****************
  9831 ;; Defined at:
  9832 ;;		line 12 in file "eeprom.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  addr            1    wreg     unsigned char 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  addr            1    1[BANK0 ] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      unsigned char 
  9839 ;; Registers used:
  9840 ;;		wreg, status,2, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9846 ;;      Params:         0       0       0       0       0
  9847 ;;      Locals:         0       1       0       0       0
  9848 ;;      Temps:          0       0       0       0       0
  9849 ;;      Totals:         0       1       0       0       0
  9850 ;;Total ram usage:        1 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 16
  9853 ;; This function calls:
  9854 ;;		_DATAEE_ReadByte
  9855 ;; This function is called by:
  9856 ;;		_eeprom_buffer_whole
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text18
  9861   0019C8                     __ptext18:
  9862                           	callstack 0
  9863   0019C8                     _eeprom_read_byte:
  9864                           	callstack 13
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;incstack = 0
  9868                           ;eeprom_read_byte@addr stored from wreg
  9869   0019C8  0100               	movlb	0	; () banked
  9870   0019CA  6FDB               	movwf	eeprom_read_byte@addr& (0+255),b
  9871                           
  9872                           ;eeprom.c: 12: static uint8_t eeprom_read_byte(eeAddr_t addr);eeprom.c: 13: {;eeprom.c: 
      +                          14:     return DATAEE_ReadByte(addr);
  9873   0019CC  0100               	movlb	0	; () banked
  9874   0019CE  51DB               	movf	eeprom_read_byte@addr& (0+255),w,b
  9875   0019D0  EC54  F00C         	call	_DATAEE_ReadByte
  9876   0019D4  0012               	return		;funcret
  9877   0019D6                     __end_of_eeprom_read_byte:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function _DATAEE_ReadByte *****************
  9881 ;; Defined at:
  9882 ;;		line 259 in file "mcc_generated_files/memory.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  bAdd            1    wreg     unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  bAdd            1    0[BANK0 ] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      unsigned char 
  9889 ;; Registers used:
  9890 ;;		wreg, status,2
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9896 ;;      Params:         0       0       0       0       0
  9897 ;;      Locals:         0       1       0       0       0
  9898 ;;      Temps:          0       0       0       0       0
  9899 ;;      Totals:         0       1       0       0       0
  9900 ;;Total ram usage:        1 bytes
  9901 ;; Hardware stack levels used: 1
  9902 ;; Hardware stack levels required when called: 15
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_eeprom_read_byte
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text19
  9911   0018A8                     __ptext19:
  9912                           	callstack 0
  9913   0018A8                     _DATAEE_ReadByte:
  9914                           	callstack 13
  9915                           
  9916                           ;incstack = 0
  9917                           ;DATAEE_ReadByte@bAdd stored from wreg
  9918   0018A8  0100               	movlb	0	; () banked
  9919   0018AA  6FDA               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  9920                           
  9921                           ;mcc_generated_files/memory.c: 259: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 260: {;mcc_generated_files/memory.c: 262:     NVMADRU = 0x31;
  9922   0018AC  0E31               	movlw	49
  9923   0018AE  6E7B               	movwf	123,c	;volatile
  9924                           
  9925                           ;mcc_generated_files/memory.c: 263:     NVMADRH = 0x00;
  9926   0018B0  6A7A               	clrf	122,c	;volatile
  9927                           
  9928                           ;mcc_generated_files/memory.c: 264:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9929   0018B2  C0DA  FF79         	movff	DATAEE_ReadByte@bAdd,3961	;volatile
  9930                           
  9931                           ;mcc_generated_files/memory.c: 268:     NVMCON1bits.RD = 1;
  9932   0018B6  8080               	bsf	128,0,c	;volsfr
  9933                           
  9934                           ;mcc_generated_files/memory.c: 269:     __nop();
  9935   0018B8  0000               	nop	
  9936                           
  9937                           ;mcc_generated_files/memory.c: 270:     __nop();
  9938   0018BA  0000               	nop	
  9939                           
  9940                           ;mcc_generated_files/memory.c: 272:     return (NVMDATL);
  9941   0018BC  507C               	movf	124,w,c	;volatile
  9942   0018BE  0012               	return		;funcret
  9943   0018C0                     __end_of_DATAEE_ReadByte:
  9944                           	callstack 0
  9945                           
  9946 ;; *************** function _analog_init *****************
  9947 ;; Defined at:
  9948 ;;		line 56 in file "analog.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;		None
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;  i               1    2[BANK0 ] unsigned char 
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      void 
  9955 ;; Registers used:
  9956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, cstack
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9962 ;;      Params:         0       0       0       0       0
  9963 ;;      Locals:         0       1       0       0       0
  9964 ;;      Temps:          0       0       0       0       0
  9965 ;;      Totals:         0       1       0       0       0
  9966 ;;Total ram usage:        1 bytes
  9967 ;; Hardware stack levels used: 1
  9968 ;; Hardware stack levels required when called: 23
  9969 ;; This function calls:
  9970 ;;		_analog_select_pos_ref_idx
  9971 ;; This function is called by:
  9972 ;;		_main
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text20
  9977   00188C                     __ptext20:
  9978                           	callstack 0
  9979   00188C                     _analog_init:
  9980                           	callstack 7
  9981                           
  9982                           ;analog.c: 59:     for(uint8_t i=0; i < ( eEXP_PORT_CNT * 8 ); i++)
  9983                           
  9984                           ;incstack = 0
  9985   00188C  0100               	movlb	0	; () banked
  9986   00188E  6BDC               	clrf	analog_init@i& (0+255),b
  9987   001890                     l4670:
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;analog.c: 60:         analog_select_pos_ref_idx(i, eARef_2048mV);
  9991   001890  0E02               	movlw	2
  9992   001892  6FDA               	movwf	analog_select_pos_ref_idx@ref& (0+255),b
  9993   001894  51DC               	movf	analog_init@i& (0+255),w,b
  9994   001896  ECF4  F00A         	call	_analog_select_pos_ref_idx
  9995   00189A  0100               	movlb	0	; () banked
  9996   00189C  2BDC               	incf	analog_init@i& (0+255),f,b
  9997                           
  9998                           ; BSR set to: 0
  9999   00189E  0E0F               	movlw	15
 10000   0018A0  65DC               	cpfsgt	analog_init@i& (0+255),b
 10001   0018A2  D7F6               	goto	l4670
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;analog.c: 63:     analog.ch_sampled = 255;
 10005   0018A4  6990               	setf	(_analog+48)& (0+255),b
 10006                           
 10007                           ; BSR set to: 0
 10008   0018A6  0012               	return		;funcret
 10009   0018A8                     __end_of_analog_init:
 10010                           	callstack 0
 10011                           
 10012 ;; *************** function _analog_select_pos_ref_idx *****************
 10013 ;; Defined at:
 10014 ;;		line 13 in file "analog.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  idx             1    wreg     unsigned char 
 10017 ;;  ref             1    0[BANK0 ] enum E10118
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  idx             1    1[BANK0 ] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10029 ;;      Params:         0       1       0       0       0
 10030 ;;      Locals:         0       1       0       0       0
 10031 ;;      Temps:          0       0       0       0       0
 10032 ;;      Totals:         0       2       0       0       0
 10033 ;;Total ram usage:        2 bytes
 10034 ;; Hardware stack levels used: 1
 10035 ;; Hardware stack levels required when called: 22
 10036 ;; This function calls:
 10037 ;;		___assert_fail
 10038 ;; This function is called by:
 10039 ;;		_analog_init
 10040 ;;		_analog_select_pos_ref
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text21
 10045   0015E8                     __ptext21:
 10046                           	callstack 0
 10047   0015E8                     _analog_select_pos_ref_idx:
 10048                           	callstack 7
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;incstack = 0
 10052                           ;analog_select_pos_ref_idx@idx stored from wreg
 10053   0015E8  0100               	movlb	0	; () banked
 10054   0015EA  6FDB               	movwf	analog_select_pos_ref_idx@idx& (0+255),b
 10055                           
 10056                           ;analog.c: 13: void analog_select_pos_ref_idx(uint8_t idx, eAnalogPosRef_t ref);analog.c
      +                          : 14: {;analog.c: 15:     ((void)((idx < ( eEXP_PORT_CNT * 8 )) || (__assert_fail("idx <
      +                           EXP_PINS_COUNT", "analog.c", 15, __func__),0)));
 10057   0015EC  0E0F               	movlw	15
 10058   0015EE  0100               	movlb	0	; () banked
 10059   0015F0  65DB               	cpfsgt	analog_select_pos_ref_idx@idx& (0+255),b
 10060   0015F2  D012               	goto	l4520
 10061                           
 10062                           ; BSR set to: 0
 10063   0015F4  0E13               	movlw	low STR_64
 10064   0015F6  6EE6               	movwf	postinc1,c
 10065   0015F8  0E3F               	movlw	high STR_64
 10066   0015FA  6EE6               	movwf	postinc1,c
 10067   0015FC  0E0F               	movlw	15
 10068   0015FE  6EE6               	movwf	postinc1,c
 10069   001600  0E00               	movlw	0
 10070   001602  6EE6               	movwf	postinc1,c
 10071   001604  0ED3               	movlw	low STR_63
 10072   001606  6EE6               	movwf	postinc1,c
 10073   001608  0E3F               	movlw	high STR_63
 10074   00160A  6EE6               	movwf	postinc1,c
 10075   00160C  0E88               	movlw	low STR_62
 10076   00160E  6EE6               	movwf	postinc1,c
 10077   001610  0E3F               	movlw	high STR_62
 10078   001612  6EE6               	movwf	postinc1,c
 10079   001614  EC8F  F00A         	call	___assert_fail	;wreg free
 10080   001618                     l4520:
 10081                           
 10082                           ;analog.c: 16:     analog.ref[idx] = ref;
 10083   001618  0100               	movlb	0	; () banked
 10084   00161A  51DB               	movf	analog_select_pos_ref_idx@idx& (0+255),w,b
 10085   00161C  0F60               	addlw	low _analog
 10086   00161E  6ED9               	movwf	fsr2l,c
 10087   001620  6ADA               	clrf	fsr2h,c
 10088   001622  C0DA  FFDF         	movff	analog_select_pos_ref_idx@ref,indf2
 10089                           
 10090                           ; BSR set to: 0
 10091   001626  0012               	return		;funcret
 10092   001628                     __end_of_analog_select_pos_ref_idx:
 10093                           	callstack 0
 10094                           
 10095 ;; *************** function ___assert_fail *****************
 10096 ;; Defined at:
 10097 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\assert.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  expr            2  [STACK] PTR const unsigned char 
 10100 ;;		 -> STR_71(21), STR_65(21), STR_59(23), STR_53(22), 
 10101 ;;		 -> STR_47(21), STR_41(23), STR_35(22), STR_29(23), 
 10102 ;;		 -> STR_23(22), STR_17(21), STR_11(23), STR_5(22), 
 10103 ;;  file            2  [STACK] PTR const unsigned char 
 10104 ;;		 -> STR_72(9), STR_66(9), STR_60(12), STR_54(12), 
 10105 ;;		 -> STR_48(12), STR_42(12), STR_36(12), STR_30(12), 
 10106 ;;		 -> STR_24(12), STR_18(12), STR_12(12), STR_6(12), 
 10107 ;;  line            2  [STACK] int 
 10108 ;;  func            2  [STACK] PTR const unsigned char 
 10109 ;;		 -> STR_73(23), STR_67(26), STR_61(9), STR_55(9), 
 10110 ;;		 -> STR_49(9), STR_43(9), STR_37(9), STR_31(8), 
 10111 ;;		 -> STR_25(8), STR_19(8), STR_13(8), STR_7(8), 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1  [STACK] void 
 10116 ;; Registers used:
 10117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10123 ;;      Params:         0       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0
 10126 ;;      Totals:         0       0       0       0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; Hardware stack levels required when called: 21
 10130 ;; This function calls:
 10131 ;;		_abort
 10132 ;;		_printf
 10133 ;; This function is called by:
 10134 ;;		_ReadBit
 10135 ;;		_ReadReg
 10136 ;;		_WriteBit
 10137 ;;		_WriteReg
 10138 ;;		_analog_select_pos_ref_idx
 10139 ;;		_analog_get_adc_val_idx
 10140 ;; This function uses a reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text22
 10144   00151E                     __ptext22:
 10145                           	callstack 0
 10146   00151E                     ___assert_fail:
 10147                           	callstack 0
 10148                           
 10149                           ;stkvar	___assert_fail@line @ sp[(0)+-6]
 10150                           
 10151                           ; BSR set to: 0
 10152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10153                           ;incstack = 0
 10154 ;; hardware stack exceeded
 10155   00151E  0EFA               	movlw	-6
 10156   001520  CFE3 FFE6          	movff	plusw1,postinc1
 10157   001524  CFE3 FFE6          	movff	plusw1,postinc1
 10158                           
 10159                           ;stkvar	___assert_fail@func @ sp[(-2)+-8]
 10160   001528  0EF6               	movlw	-10
 10161   00152A  CFE3 FFE6          	movff	plusw1,postinc1
 10162   00152E  CFE3 FFE6          	movff	plusw1,postinc1
 10163                           
 10164                           ;stkvar	___assert_fail@file @ sp[(-4)+-4]
 10165   001532  0EF8               	movlw	-8
 10166   001534  CFE3 FFE6          	movff	plusw1,postinc1
 10167   001538  CFE3 FFE6          	movff	plusw1,postinc1
 10168                           
 10169                           ;stkvar	___assert_fail@expr @ sp[(-6)+-2]
 10170   00153C  0EF8               	movlw	-8
 10171   00153E  CFE3 FFE6          	movff	plusw1,postinc1
 10172   001542  CFE3 FFE6          	movff	plusw1,postinc1
 10173   001546  0EF0               	movlw	low STR_74
 10174   001548  6EE6               	movwf	postinc1,c
 10175   00154A  0E3E               	movlw	high STR_74
 10176   00154C  6EE6               	movwf	postinc1,c
 10177   00154E  0E0A               	movlw	10
 10178   001550  6EE6               	movwf	postinc1,c
 10179   001552  EC72  F009         	call	_printf	;wreg free
 10180   001556  ECF2  F00C         	call	_abort	;wreg free
 10181                           
 10182                           ; ___assert_fail: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 10183   00155A  0EF8               	movlw	248
 10184   00155C  26E1               	addwf	fsr1l,f,c
 10185   00155E  0EFF               	movlw	255
 10186   001560  22E2               	addwfc	fsr1h,f,c
 10187   001562  0012               	return		;funcret
 10188   001564                     __end_of___assert_fail:
 10189                           	callstack 0
 10190                           
 10191 ;; *************** function _printf *****************
 10192 ;; Defined at:
 10193 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  fmt             2  [STACK] PTR const unsigned char 
 10196 ;;		 -> STR_74(35), STR_1(21), 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  ap              2  [STACK] PTR void [1]
 10199 ;;		 -> ?_printf(2), 
 10200 ;;  ret             2    0        int 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  2  [STACK] int 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/F
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10210 ;;      Params:         0       0       0       0       0
 10211 ;;      Locals:         0       0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0
 10213 ;;      Totals:         0       0       0       0       0
 10214 ;;Total ram usage:        0 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; Hardware stack levels required when called: 20
 10217 ;; This function calls:
 10218 ;;		_vfprintf
 10219 ;; This function is called by:
 10220 ;;		_main
 10221 ;;		___assert_fail
 10222 ;; This function uses a reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text23
 10226   0012E4                     __ptext23:
 10227                           	callstack 0
 10228   0012E4                     _printf:
 10229                           	callstack 0
 10230                           
 10231                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10232   0012E4  52E6               	movf	postinc1,f,c
 10233   0012E6  52E6               	movf	postinc1,f,c
 10234                           
 10235                           ;stkvar	?_printf @ sp[(-2)+-3]
 10236                           
 10237                           ;incstack = 0
 10238 ;; hardware stack exceeded
 10239   0012E8  0EFB               	movlw	251
 10240   0012EA  24E1               	addwf	fsr1l,w,c
 10241   0012EC  6E41               	movwf	(btemp+10)^0,c
 10242   0012EE  0EFF               	movlw	255
 10243   0012F0  20E2               	addwfc	fsr1h,w,c
 10244   0012F2  6E42               	movwf	(btemp+11)^0,c
 10245                           
 10246                           ;stkvar	printf@ap @ sp[(-2)+0]
 10247   0012F4  0EFF               	movlw	-1
 10248   0012F6  C042  FFE3         	movff	btemp+11,plusw1
 10249   0012FA  0EFE               	movlw	-2
 10250   0012FC  C041  FFE3         	movff	btemp+10,plusw1
 10251                           
 10252                           ;stkvar	printf@ap @ sp[(-2)+0]
 10253   001300  0EFE               	movlw	254
 10254   001302  24E1               	addwf	fsr1l,w,c
 10255   001304  6E37               	movwf	btemp^0,c
 10256   001306  0EFF               	movlw	255
 10257   001308  20E2               	addwfc	fsr1h,w,c
 10258   00130A  6E38               	movwf	(btemp+1)^0,c
 10259   00130C  C037  FFE6         	movff	btemp,postinc1
 10260   001310  C038  FFE6         	movff	btemp+1,postinc1
 10261                           
 10262                           ;stkvar	printf@fmt @ sp[(-4)+-3]
 10263   001314  0EF9               	movlw	-7
 10264   001316  CFE3 FFE6          	movff	plusw1,postinc1
 10265   00131A  CFE3 FFE6          	movff	plusw1,postinc1
 10266   00131E  0E00               	movlw	0
 10267   001320  6EE6               	movwf	postinc1,c
 10268   001322  0E00               	movlw	0
 10269   001324  6EE6               	movwf	postinc1,c
 10270   001326  EC8F  F008         	call	_vfprintf	;wreg free
 10271                           
 10272                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsi
      +                          ze = 2, vargsize = 0
 10273   00132A  52E5               	movf	postdec1,f,c
 10274   00132C  52E5               	movf	postdec1,f,c
 10275   00132E  52E5               	movf	postdec1,f,c
 10276   001330  50E7               	movf	indf1,w,c
 10277   001332  5EE1               	subwf	fsr1l,f,c
 10278   001334  0E00               	movlw	0
 10279   001336  5AE2               	subwfb	fsr1h,f,c
 10280   001338  0012               	return		;funcret
 10281   00133A                     __end_of_printf:
 10282                           	callstack 0
 10283                           
 10284 ;; *************** function _vfprintf *****************
 10285 ;; Defined at:
 10286 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10289 ;;		 -> NULL(0), 
 10290 ;;  fmt             2  [STACK] PTR const unsigned char 
 10291 ;;		 -> STR_74(35), STR_1(21), 
 10292 ;;  ap              2  [STACK] PTR PTR void 
 10293 ;;		 -> printf@ap(2), 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  cfmt            2  [STACK] PTR unsigned char 
 10296 ;;		 -> STR_74(35), STR_1(21), 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  2  [STACK] int 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/F
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10306 ;;      Params:         0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used: 1
 10312 ;; Hardware stack levels required when called: 19
 10313 ;; This function calls:
 10314 ;;		_vfpfcnvrt
 10315 ;; This function is called by:
 10316 ;;		_printf
 10317 ;; This function uses a reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text24
 10321   00111E                     __ptext24:
 10322                           	callstack 0
 10323   00111E                     _vfprintf:
 10324                           	callstack 0
 10325                           
 10326                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10327   00111E  52E6               	movf	postinc1,f,c
 10328   001120  52E6               	movf	postinc1,f,c
 10329                           
 10330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10331                           ;stkvar	vfprintf@fmt @ sp[(-2)+-4]
 10332                           
 10333                           ;incstack = 0
 10334 ;; hardware stack exceeded
 10335   001122  0EFA               	movlw	-6
 10336   001124  CFE3 F041          	movff	plusw1,btemp+10
 10337   001128  0EFB               	movlw	-5
 10338   00112A  CFE3 F042          	movff	plusw1,btemp+11
 10339                           
 10340                           ;stkvar	vfprintf@cfmt @ sp[(-2)+0]
 10341   00112E  0EFF               	movlw	-1
 10342   001130  C042  FFE3         	movff	btemp+11,plusw1
 10343   001134  0EFE               	movlw	-2
 10344   001136  C041  FFE3         	movff	btemp+10,plusw1
 10345                           
 10346                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10347   00113A  D016               	goto	l3838
 10348   00113C                     l3836:
 10349                           
 10350                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10351                           ;stkvar	vfprintf@ap @ sp[(-2)+-6]
 10352   00113C  0EF8               	movlw	-8
 10353   00113E  CFE3 FFE6          	movff	plusw1,postinc1
 10354   001142  CFE3 FFE6          	movff	plusw1,postinc1
 10355                           
 10356                           ;stkvar	vfprintf@cfmt @ sp[(-4)+0]
 10357   001146  0EFC               	movlw	252
 10358   001148  24E1               	addwf	fsr1l,w,c
 10359   00114A  6E37               	movwf	btemp^0,c
 10360   00114C  0EFF               	movlw	255
 10361   00114E  20E2               	addwfc	fsr1h,w,c
 10362   001150  6E38               	movwf	(btemp+1)^0,c
 10363   001152  C037  FFE6         	movff	btemp,postinc1
 10364   001156  C038  FFE6         	movff	btemp+1,postinc1
 10365                           
 10366                           ;stkvar	vfprintf@fp @ sp[(-6)+-2]
 10367   00115A  0EF8               	movlw	-8
 10368   00115C  CFE3 FFE6          	movff	plusw1,postinc1
 10369   001160  CFE3 FFE6          	movff	plusw1,postinc1
 10370   001164  EC8A  F000         	call	_vfpfcnvrt	;wreg free
 10371   001168                     l3838:
 10372                           
 10373                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10374                           ;stkvar	vfprintf@cfmt @ sp[(-2)+0]
 10375   001168  50E1               	movf	fsr1l,w,c
 10376   00116A  0FFE               	addlw	-2
 10377   00116C  6ED9               	movwf	fsr2l,c
 10378   00116E  50E2               	movf	fsr1h,w,c
 10379   001170  6EDA               	movwf	fsr2h,c
 10380   001172  0EFF               	movlw	255
 10381   001174  22DA               	addwfc	fsr2h,f,c
 10382   001176  CFDE FFF6          	movff	postinc2,tblptrl
 10383   00117A  CFDD FFF7          	movff	postdec2,tblptrh
 10384   00117E                     	if	0	;tblptru may be non-zero
 10385   00117E                     	endif
 10386   00117E                     	if	0	;tblptru may be non-zero
 10387   00117E                     	endif
 10388   00117E  0008               	tblrd		*
 10389   001180  50F5               	movf	tablat,w,c
 10390   001182  0900               	iorlw	0
 10391   001184  A4D8               	btfss	status,2,c
 10392   001186  D7DA               	goto	l3836
 10393                           
 10394                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10395   001188  0E00               	movlw	0
 10396   00118A  6E37               	movwf	btemp^0,c
 10397   00118C  0E00               	movlw	0
 10398   00118E  6E38               	movwf	(btemp+1)^0,c
 10399                           
 10400                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10401   001190  0EF8               	movlw	248
 10402   001192  26E1               	addwf	fsr1l,f,c
 10403   001194  0EFF               	movlw	255
 10404   001196  22E2               	addwfc	fsr1h,f,c
 10405   001198  0012               	return		;funcret
 10406   00119A                     __end_of_vfprintf:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _vfpfcnvrt *****************
 10410 ;; Defined at:
 10411 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10414 ;;		 -> NULL(0), 
 10415 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10416 ;;		 -> vfprintf@cfmt(2), 
 10417 ;;  ap              2  [STACK] PTR PTR void 
 10418 ;;		 -> printf@ap(2), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  cp              2  [STACK] PTR unsigned char 
 10421 ;;		 -> ?_printf(2), STR_73(23), STR_72(9), STR_71(21), 
 10422 ;;		 -> STR_67(26), STR_66(9), STR_65(21), STR_61(9), 
 10423 ;;		 -> STR_60(12), STR_59(23), STR_55(9), STR_54(12), 
 10424 ;;		 -> STR_53(22), STR_49(9), STR_48(12), STR_47(21), 
 10425 ;;		 -> STR_43(9), STR_42(12), STR_41(23), STR_37(9), 
 10426 ;;		 -> STR_36(12), STR_35(22), STR_31(8), STR_30(12), 
 10427 ;;		 -> STR_29(23), STR_25(8), STR_24(12), STR_23(22), 
 10428 ;;		 -> STR_19(8), STR_18(12), STR_17(21), STR_13(8), 
 10429 ;;		 -> STR_12(12), STR_11(23), STR_7(8), STR_6(12), 
 10430 ;;		 -> STR_5(22), 
 10431 ;;  convarg         4  [STACK] struct .
 10432 ;;  cp              2  [STACK] PTR unsigned char 
 10433 ;;		 -> STR_74(35), STR_1(21), 
 10434 ;;  c               1  [STACK] unsigned char 
 10435 ;;  done            1  [STACK] _Bool 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1  [STACK] void 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/F
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10445 ;;      Params:         0       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0
 10448 ;;      Totals:         0       0       0       0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used: 1
 10451 ;; Hardware stack levels required when called: 18
 10452 ;; This function calls:
 10453 ;;		___awdiv
 10454 ;;		___awmod
 10455 ;;		_abs
 10456 ;;		_fputc
 10457 ;; This function is called by:
 10458 ;;		_vfprintf
 10459 ;; This function uses a reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text25
 10463   000114                     __ptext25:
 10464                           	callstack 0
 10465   000114                     _vfpfcnvrt:
 10466                           	callstack 0
 10467                           
 10468                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10469   000114  0E0A               	movlw	10
 10470   000116  26E1               	addwf	fsr1l,f,c
 10471   000118  0E00               	movlw	0
 10472   00011A  22E2               	addwfc	fsr1h,f,c
 10473                           
 10474                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10475                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10476                           
 10477                           ;incstack = 0
 10478 ;; hardware stack exceeded
 10479   00011C  0EF2               	movlw	-14
 10480   00011E  CFE3 FFD9          	movff	plusw1,fsr2l
 10481   000122  0EF3               	movlw	-13
 10482   000124  CFE3 FFDA          	movff	plusw1,fsr2h
 10483   000128  CFDE FFF6          	movff	postinc2,tblptrl
 10484   00012C  CFDD FFF7          	movff	postdec2,tblptrh
 10485   000130                     	if	0	;tblptru may be non-zero
 10486   000130                     	endif
 10487   000130                     	if	0	;tblptru may be non-zero
 10488   000130                     	endif
 10489   000130  0008               	tblrd		*
 10490   000132  50F5               	movf	tablat,w,c
 10491   000134  0A25               	xorlw	37
 10492   000136  A4D8               	btfss	status,2,c
 10493   000138  D1BE               	goto	l3824
 10494                           
 10495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10496                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10497   00013A  0EF2               	movlw	-14
 10498   00013C  CFE3 FFD9          	movff	plusw1,fsr2l
 10499   000140  0EF3               	movlw	-13
 10500   000142  CFE3 FFDA          	movff	plusw1,fsr2h
 10501   000146  2ADE               	incf	postinc2,f,c
 10502   000148  0E00               	movlw	0
 10503   00014A  22DD               	addwfc	postdec2,f,c
 10504                           
 10505                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10506   00014C  0E00               	movlw	0
 10507   00014E  0100               	movlb	0	; () banked
 10508   000150  6FB8               	movwf	(_width+1)& (0+255),b
 10509   000152  0E00               	movlw	0
 10510   000154  6FB7               	movwf	_width& (0+255),b
 10511   000156  C0B7  F0CD         	movff	_width,_flags
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10515   00015A  69B9               	setf	_prec& (0+255),b
 10516   00015C  69BA               	setf	(_prec+1)& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10520                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10521   00015E  0EF2               	movlw	-14
 10522   000160  CFE3 FFD9          	movff	plusw1,fsr2l
 10523   000164  0EF3               	movlw	-13
 10524   000166  CFE3 FFDA          	movff	plusw1,fsr2h
 10525   00016A  CFDE F041          	movff	postinc2,btemp+10
 10526   00016E  CFDD F042          	movff	postdec2,btemp+11
 10527                           
 10528                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 10529   000172  0EFD               	movlw	-3
 10530   000174  C042  FFE3         	movff	btemp+11,plusw1
 10531   000178  0EFC               	movlw	-4
 10532   00017A  C041  FFE3         	movff	btemp+10,plusw1
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10536                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 10537   00017E  50E1               	movf	fsr1l,w,c
 10538   000180  0FFC               	addlw	-4
 10539   000182  6ED9               	movwf	fsr2l,c
 10540   000184  50E2               	movf	fsr1h,w,c
 10541   000186  6EDA               	movwf	fsr2h,c
 10542   000188  0EFF               	movlw	255
 10543   00018A  22DA               	addwfc	fsr2h,f,c
 10544   00018C  CFDE FFF6          	movff	postinc2,tblptrl
 10545   000190  CFDD FFF7          	movff	postdec2,tblptrh
 10546   000194                     	if	0	;tblptru may be non-zero
 10547   000194                     	endif
 10548   000194                     	if	0	;tblptru may be non-zero
 10549   000194                     	endif
 10550   000194  0008               	tblrd		*
 10551   000196  50F5               	movf	tablat,w,c
 10552   000198  0A64               	xorlw	100
 10553   00019A  B4D8               	btfsc	status,2,c
 10554   00019C  D010               	goto	u2080
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 10558   00019E  50E1               	movf	fsr1l,w,c
 10559   0001A0  0FFC               	addlw	-4
 10560   0001A2  6ED9               	movwf	fsr2l,c
 10561   0001A4  50E2               	movf	fsr1h,w,c
 10562   0001A6  6EDA               	movwf	fsr2h,c
 10563   0001A8  0EFF               	movlw	255
 10564   0001AA  22DA               	addwfc	fsr2h,f,c
 10565   0001AC  CFDE FFF6          	movff	postinc2,tblptrl
 10566   0001B0  CFDD FFF7          	movff	postdec2,tblptrh
 10567   0001B4                     	if	0	;tblptru may be non-zero
 10568   0001B4                     	endif
 10569   0001B4                     	if	0	;tblptru may be non-zero
 10570   0001B4                     	endif
 10571   0001B4  0008               	tblrd		*
 10572   0001B6  50F5               	movf	tablat,w,c
 10573   0001B8  0A69               	xorlw	105
 10574   0001BA  A4D8               	btfss	status,2,c
 10575   0001BC  D0AE               	goto	l3792
 10576   0001BE                     u2080:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10580                           ;stkvar	vfpfcnvrt@ap @ sp[(-10)+-6]
 10581   0001BE  0EF0               	movlw	-16
 10582   0001C0  CFE3 FFD9          	movff	plusw1,fsr2l
 10583   0001C4  0EF1               	movlw	-15
 10584   0001C6  CFE3 FFDA          	movff	plusw1,fsr2h
 10585   0001CA  0E02               	movlw	2
 10586   0001CC  5EDE               	subwf	postinc2,f,c
 10587   0001CE  0E00               	movlw	0
 10588   0001D0  5ADD               	subwfb	postdec2,f,c
 10589   0001D2  CFDE F041          	movff	postinc2,btemp+10
 10590   0001D6  CFDD F042          	movff	postdec2,btemp+11
 10591   0001DA  C041  FFD9         	movff	btemp+10,fsr2l
 10592   0001DE  C042  FFDA         	movff	btemp+11,fsr2h
 10593   0001E2  CFDE F041          	movff	postinc2,btemp+10
 10594   0001E6  CFDD F042          	movff	postdec2,btemp+11
 10595                           
 10596                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 10597   0001EA  0EF8               	movlw	-8
 10598   0001EC  C041  FFE3         	movff	btemp+10,plusw1
 10599   0001F0  0EF9               	movlw	-7
 10600   0001F2  C042  FFE3         	movff	btemp+11,plusw1
 10601                           
 10602                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10603                           ;stkvar	vfpfcnvrt@cp @ sp[(-10)+6]
 10604   0001F6  0EFC               	movlw	-4
 10605   0001F8  50E3               	movf	plusw1,w,c
 10606   0001FA  0F01               	addlw	1
 10607   0001FC  6E41               	movwf	(btemp+10)^0,c
 10608   0001FE  0EFD               	movlw	-3
 10609   000200  CFE3 F042          	movff	plusw1,btemp+11
 10610   000204  0E00               	movlw	0
 10611   000206  2242               	addwfc	(btemp+11)^0,f,c
 10612                           
 10613                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10614   000208  0EF2               	movlw	-14
 10615   00020A  CFE3 FFD9          	movff	plusw1,fsr2l
 10616   00020E  0EF3               	movlw	-13
 10617   000210  CFE3 FFDA          	movff	plusw1,fsr2h
 10618   000214  C041  FFDE         	movff	btemp+10,postinc2
 10619   000218  C042  FFDD         	movff	btemp+11,postdec2
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
 10623                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10624   00021C  0EFE               	movlw	-2
 10625   00021E  6AE3               	clrf	plusw1,c
 10626   000220  8AE3               	bsf	plusw1,5,c
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
 10630                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 10631   000222  0EF9               	movlw	-7
 10632   000224  AEE3               	btfss	plusw1,7,c
 10633   000226  D003               	goto	u2090
 10634   000228  6A42               	clrf	(btemp+11)^0,c
 10635   00022A  2A42               	incf	(btemp+11)^0,f,c
 10636   00022C  D001               	goto	u2108
 10637   00022E                     u2090:
 10638   00022E  6A42               	clrf	(btemp+11)^0,c
 10639   000230                     u2108:
 10640                           
 10641                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 10642   000230  0EFF               	movlw	-1
 10643   000232  C042  FFE3         	movff	btemp+11,plusw1
 10644   000236                     l3774:
 10645                           
 10646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
 10647                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10648   000236  0EFE               	movlw	-2
 10649   000238  06E3               	decf	plusw1,f,c
 10650   00023A  0EFE               	movlw	-2
 10651   00023C  50E3               	movf	plusw1,w,c
 10652   00023E  6E41               	movwf	(btemp+10)^0,c
 10653   000240  6A42               	clrf	(btemp+11)^0,c
 10654   000242  0EC0               	movlw	low _dbuf
 10655   000244  2441               	addwf	(btemp+10)^0,w,c
 10656   000246  6ED9               	movwf	fsr2l,c
 10657   000248  0E01               	movlw	high _dbuf
 10658   00024A  2042               	addwfc	(btemp+11)^0,w,c
 10659   00024C  6EDA               	movwf	fsr2h,c
 10660   00024E  0E0A               	movlw	10
 10661   000250  6EE6               	movwf	postinc1,c
 10662   000252  0E00               	movlw	0
 10663   000254  6EE6               	movwf	postinc1,c
 10664                           
 10665                           ;stkvar	vfpfcnvrt@convarg @ sp[(-12)+2]
 10666   000256  0EF6               	movlw	-10
 10667   000258  CFE3 FFE6          	movff	plusw1,postinc1
 10668   00025C  CFE3 FFE6          	movff	plusw1,postinc1
 10669   000260  EC63  F004         	call	___awmod	;wreg free
 10670   000264  C037  FFE6         	movff	btemp,postinc1
 10671   000268  C038  FFE6         	movff	btemp+1,postinc1
 10672   00026C  EC83  F00B         	call	_abs	;wreg free
 10673   000270  5037               	movf	btemp^0,w,c
 10674   000272  0F30               	addlw	48
 10675   000274  6EDF               	movwf	indf2,c
 10676                           
 10677                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
 10678   000276  0E0A               	movlw	10
 10679   000278  6EE6               	movwf	postinc1,c
 10680   00027A  0E00               	movlw	0
 10681   00027C  6EE6               	movwf	postinc1,c
 10682                           
 10683                           ;stkvar	vfpfcnvrt@convarg @ sp[(-12)+2]
 10684   00027E  0EF6               	movlw	-10
 10685   000280  CFE3 FFE6          	movff	plusw1,postinc1
 10686   000284  CFE3 FFE6          	movff	plusw1,postinc1
 10687   000288  ECCA  F003         	call	___awdiv	;wreg free
 10688                           
 10689                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 10690   00028C  0EF8               	movlw	-8
 10691   00028E  C037  FFE3         	movff	btemp,plusw1
 10692   000292  0EF9               	movlw	-7
 10693   000294  C038  FFE3         	movff	btemp+1,plusw1
 10694                           
 10695                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
 10696                           ;stkvar	vfpfcnvrt@convarg @ sp[(-10)+2]
 10697   000298  0EF8               	movlw	-8
 10698   00029A  CFE3 F037          	movff	plusw1,btemp
 10699   00029E  0EF9               	movlw	-7
 10700   0002A0  50E3               	movf	plusw1,w,c
 10701   0002A2  1037               	iorwf	btemp^0,w,c
 10702   0002A4  B4D8               	btfsc	status,2,c
 10703   0002A6  D004               	goto	u2120
 10704                           
 10705                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10706   0002A8  0EFE               	movlw	-2
 10707   0002AA  50E3               	movf	plusw1,w,c
 10708   0002AC  A4D8               	btfss	status,2,c
 10709   0002AE  D7C3               	goto	l3774
 10710   0002B0                     u2120:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
 10713                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10714   0002B0  0EFE               	movlw	-2
 10715   0002B2  50E3               	movf	plusw1,w,c
 10716   0002B4  B4D8               	btfsc	status,2,c
 10717   0002B6  D029               	goto	l3790
 10718                           
 10719                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 10720   0002B8  0EFF               	movlw	-1
 10721   0002BA  50E3               	movf	plusw1,w,c
 10722   0002BC  B4D8               	btfsc	status,2,c
 10723   0002BE  D025               	goto	l3790
 10724                           
 10725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
 10726                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10727   0002C0  0EFE               	movlw	-2
 10728   0002C2  06E3               	decf	plusw1,f,c
 10729   0002C4  0EFE               	movlw	-2
 10730   0002C6  50E3               	movf	plusw1,w,c
 10731   0002C8  6E41               	movwf	(btemp+10)^0,c
 10732   0002CA  6A42               	clrf	(btemp+11)^0,c
 10733   0002CC  0EC0               	movlw	low _dbuf
 10734   0002CE  2441               	addwf	(btemp+10)^0,w,c
 10735   0002D0  6ED9               	movwf	fsr2l,c
 10736   0002D2  0E01               	movlw	high _dbuf
 10737   0002D4  2042               	addwfc	(btemp+11)^0,w,c
 10738   0002D6  6EDA               	movwf	fsr2h,c
 10739   0002D8  0E2D               	movlw	45
 10740   0002DA  6EDF               	movwf	indf2,c
 10741   0002DC  D016               	goto	l3790
 10742   0002DE                     l3788:
 10743                           
 10744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
 10745                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 10746   0002DE  0EF4               	movlw	-12
 10747   0002E0  CFE3 FFE6          	movff	plusw1,postinc1
 10748   0002E4  CFE3 FFE6          	movff	plusw1,postinc1
 10749                           
 10750                           ;stkvar	vfpfcnvrt@c @ sp[(-12)+8]
 10751   0002E8  0EFC               	movlw	-4
 10752   0002EA  2AE3               	incf	plusw1,f,c
 10753   0002EC  04E3               	decf	plusw1,w,c
 10754   0002EE  6E41               	movwf	(btemp+10)^0,c
 10755   0002F0  6A42               	clrf	(btemp+11)^0,c
 10756   0002F2  0EC0               	movlw	low _dbuf
 10757   0002F4  2441               	addwf	(btemp+10)^0,w,c
 10758   0002F6  6ED9               	movwf	fsr2l,c
 10759   0002F8  0E01               	movlw	high _dbuf
 10760   0002FA  2042               	addwfc	(btemp+11)^0,w,c
 10761   0002FC  6EDA               	movwf	fsr2h,c
 10762   0002FE  50DF               	movf	indf2,w,c
 10763   000300  6EE6               	movwf	postinc1,c
 10764   000302  0E00               	movlw	0
 10765   000304  6EE6               	movwf	postinc1,c
 10766   000306  ECE3  F004         	call	_fputc	;wreg free
 10767   00030A                     l3790:
 10768                           
 10769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
 10770                           ;stkvar	vfpfcnvrt@c @ sp[(-10)+8]
 10771   00030A  0EFE               	movlw	-2
 10772   00030C  CFE3 F037          	movff	plusw1,btemp
 10773   000310  0E20               	movlw	32
 10774   000312  1837               	xorwf	btemp^0,w,c
 10775   000314  B4D8               	btfsc	status,2,c
 10776   000316  D0E6               	goto	l2108
 10777   000318  D7E2               	goto	l3788
 10778   00031A                     l3792:
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10782                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 10783   00031A  0EFF               	movlw	-1
 10784   00031C  6AE3               	clrf	plusw1,c
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10788                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10789   00031E  0EF2               	movlw	-14
 10790   000320  CFE3 FFD9          	movff	plusw1,fsr2l
 10791   000324  0EF3               	movlw	-13
 10792   000326  CFE3 FFDA          	movff	plusw1,fsr2h
 10793   00032A  CFDE FFF6          	movff	postinc2,tblptrl
 10794   00032E  CFDD FFF7          	movff	postdec2,tblptrh
 10795   000332                     	if	0	;tblptru may be non-zero
 10796   000332                     	endif
 10797   000332                     	if	0	;tblptru may be non-zero
 10798   000332                     	endif
 10799   000332  0008               	tblrd		*
 10800   000334  50F5               	movf	tablat,w,c
 10801   000336  0A73               	xorlw	115
 10802   000338  A4D8               	btfss	status,2,c
 10803   00033A  D00D               	goto	l3800
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10807                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10808   00033C  0EF2               	movlw	-14
 10809   00033E  CFE3 FFD9          	movff	plusw1,fsr2l
 10810   000342  0EF3               	movlw	-13
 10811   000344  CFE3 FFDA          	movff	plusw1,fsr2h
 10812   000348  2ADE               	incf	postinc2,f,c
 10813   00034A  0E00               	movlw	0
 10814   00034C  22DD               	addwfc	postdec2,f,c
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10818                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 10819   00034E  0EFF               	movlw	-1
 10820   000350  6AE3               	clrf	plusw1,c
 10821   000352  2AE3               	incf	plusw1,f,c
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 10824   000354  D046               	goto	l3810
 10825   000356                     l3800:
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10829   000356  0EF2               	movlw	-14
 10830   000358  CFE3 FFD9          	movff	plusw1,fsr2l
 10831   00035C  0EF3               	movlw	-13
 10832   00035E  CFE3 FFDA          	movff	plusw1,fsr2h
 10833   000362  CFDE FFF6          	movff	postinc2,tblptrl
 10834   000366  CFDD FFF7          	movff	postdec2,tblptrh
 10835   00036A                     	if	0	;tblptru may be non-zero
 10836   00036A                     	endif
 10837   00036A                     	if	0	;tblptru may be non-zero
 10838   00036A                     	endif
 10839   00036A  0008               	tblrd		*
 10840   00036C  50F5               	movf	tablat,w,c
 10841   00036E  0A6C               	xorlw	108
 10842   000370  A4D8               	btfss	status,2,c
 10843   000372  D037               	goto	l3810
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10847   000374  0EF2               	movlw	-14
 10848   000376  CFE3 FFD9          	movff	plusw1,fsr2l
 10849   00037A  0EF3               	movlw	-13
 10850   00037C  CFE3 FFDA          	movff	plusw1,fsr2h
 10851   000380  CFDE F041          	movff	postinc2,btemp+10
 10852   000384  CFDD F042          	movff	postdec2,btemp+11
 10853   000388  0E01               	movlw	1
 10854   00038A  2641               	addwf	(btemp+10)^0,f,c
 10855   00038C  0E00               	movlw	0
 10856   00038E  2242               	addwfc	(btemp+11)^0,f,c
 10857   000390  C041  FFF6         	movff	btemp+10,tblptrl
 10858   000394  C042  FFF7         	movff	btemp+11,tblptrh
 10859   000398                     	if	0	;tblptru may be non-zero
 10860   000398                     	endif
 10861   000398                     	if	0	;tblptru may be non-zero
 10862   000398                     	endif
 10863   000398  0008               	tblrd		*
 10864   00039A  50F5               	movf	tablat,w,c
 10865   00039C  0A6C               	xorlw	108
 10866   00039E  A4D8               	btfss	status,2,c
 10867   0003A0  D020               	goto	l3810
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10871   0003A2  0EF2               	movlw	-14
 10872   0003A4  CFE3 FFD9          	movff	plusw1,fsr2l
 10873   0003A8  0EF3               	movlw	-13
 10874   0003AA  CFE3 FFDA          	movff	plusw1,fsr2h
 10875   0003AE  CFDE F041          	movff	postinc2,btemp+10
 10876   0003B2  CFDD F042          	movff	postdec2,btemp+11
 10877   0003B6  0E02               	movlw	2
 10878   0003B8  2641               	addwf	(btemp+10)^0,f,c
 10879   0003BA  0E00               	movlw	0
 10880   0003BC  2242               	addwfc	(btemp+11)^0,f,c
 10881   0003BE  C041  FFF6         	movff	btemp+10,tblptrl
 10882   0003C2  C042  FFF7         	movff	btemp+11,tblptrh
 10883   0003C6                     	if	0	;tblptru may be non-zero
 10884   0003C6                     	endif
 10885   0003C6                     	if	0	;tblptru may be non-zero
 10886   0003C6                     	endif
 10887   0003C6  0008               	tblrd		*
 10888   0003C8  50F5               	movf	tablat,w,c
 10889   0003CA  0A73               	xorlw	115
 10890   0003CC  A4D8               	btfss	status,2,c
 10891   0003CE  D009               	goto	l3810
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 10895                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 10896   0003D0  0EF2               	movlw	-14
 10897   0003D2  CFE3 FFD9          	movff	plusw1,fsr2l
 10898   0003D6  0EF3               	movlw	-13
 10899   0003D8  CFE3 FFDA          	movff	plusw1,fsr2h
 10900   0003DC  0E03               	movlw	3
 10901   0003DE  26DE               	addwf	postinc2,f,c
 10902   0003E0  D7B4               	goto	L1
 10903   0003E2                     l3810:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 10907                           ;stkvar	vfpfcnvrt@done @ sp[(-10)+9]
 10908   0003E2  0EFF               	movlw	-1
 10909   0003E4  50E3               	movf	plusw1,w,c
 10910   0003E6  B4D8               	btfsc	status,2,c
 10911   0003E8  D05C               	goto	l3820
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
 10915                           ;stkvar	vfpfcnvrt@ap @ sp[(-10)+-6]
 10916   0003EA  0EF0               	movlw	-16
 10917   0003EC  CFE3 FFD9          	movff	plusw1,fsr2l
 10918   0003F0  0EF1               	movlw	-15
 10919   0003F2  CFE3 FFDA          	movff	plusw1,fsr2h
 10920   0003F6  0E02               	movlw	2
 10921   0003F8  5EDE               	subwf	postinc2,f,c
 10922   0003FA  0E00               	movlw	0
 10923   0003FC  5ADD               	subwfb	postdec2,f,c
 10924   0003FE  CFDE F041          	movff	postinc2,btemp+10
 10925   000402  CFDD F042          	movff	postdec2,btemp+11
 10926   000406  C041  FFD9         	movff	btemp+10,fsr2l
 10927   00040A  C042  FFDA         	movff	btemp+11,fsr2h
 10928   00040E  CFDE F041          	movff	postinc2,btemp+10
 10929   000412  CFDD F042          	movff	postdec2,btemp+11
 10930                           
 10931                           ;stkvar	vfpfcnvrt@cp_3624 @ sp[(-10)+0]
 10932   000416  0EF7               	movlw	-9
 10933   000418  C042  FFE3         	movff	btemp+11,plusw1
 10934   00041C  0EF6               	movlw	-10
 10935   00041E  C041  FFE3         	movff	btemp+10,plusw1
 10936   000422  D02A               	goto	l3818
 10937   000424                     l3814:
 10938                           
 10939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
 10940                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 10941   000424  0EF4               	movlw	-12
 10942   000426  CFE3 FFE6          	movff	plusw1,postinc1
 10943   00042A  CFE3 FFE6          	movff	plusw1,postinc1
 10944                           
 10945                           ;stkvar	vfpfcnvrt@cp_3624 @ sp[(-12)+0]
 10946   00042E  0EF4               	movlw	-12
 10947   000430  CFE3 FFF6          	movff	plusw1,tblptrl
 10948   000434  0EF5               	movlw	-11
 10949   000436  CFE3 FFF7          	movff	plusw1,tblptrh
 10950   00043A  0E04               	movlw	(high __ramtop+-1)
 10951   00043C  64F7               	cpfsgt	tblptrh,c
 10952   00043E  D003               	bra	u2217
 10953   000440  0008               	tblrd		*
 10954   000442  50F5               	movf	tablat,w,c
 10955   000444  D005               	bra	u2210
 10956   000446                     u2217:
 10957   000446  CFF6 FFE9          	movff	tblptrl,fsr0l
 10958   00044A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10959   00044E  50EF               	movf	indf0,w,c
 10960   000450                     u2210:
 10961   000450  6EE6               	movwf	postinc1,c
 10962   000452  0E00               	movlw	0
 10963   000454  6EE6               	movwf	postinc1,c
 10964   000456  ECE3  F004         	call	_fputc	;wreg free
 10965                           
 10966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1674:    }
 10967                           ;stkvar	vfpfcnvrt@cp_3624 @ sp[(-10)+0]
 10968   00045A  0EF6               	movlw	-10
 10969   00045C  50E3               	movf	plusw1,w,c
 10970   00045E  0F01               	addlw	1
 10971   000460  6E37               	movwf	btemp^0,c
 10972   000462  0EF6               	movlw	-10
 10973   000464  C037  FFE3         	movff	btemp,plusw1
 10974   000468  6A37               	clrf	btemp^0,c
 10975   00046A  0EF7               	movlw	-9
 10976   00046C  50E3               	movf	plusw1,w,c
 10977   00046E  2037               	addwfc	btemp^0,w,c
 10978   000470  6E37               	movwf	btemp^0,c
 10979   000472  0EF7               	movlw	-9
 10980   000474  C037  FFE3         	movff	btemp,plusw1
 10981   000478                     l3818:
 10982                           
 10983                           ;stkvar	vfpfcnvrt@cp_3624 @ sp[(-10)+0]
 10984   000478  0EF6               	movlw	-10
 10985   00047A  CFE3 FFF6          	movff	plusw1,tblptrl
 10986   00047E  0EF7               	movlw	-9
 10987   000480  CFE3 FFF7          	movff	plusw1,tblptrh
 10988   000484  0E04               	movlw	(high __ramtop+-1)
 10989   000486  64F7               	cpfsgt	tblptrh,c
 10990   000488  D003               	bra	u2227
 10991   00048A  0008               	tblrd		*
 10992   00048C  50F5               	movf	tablat,w,c
 10993   00048E  D005               	bra	u2220
 10994   000490                     u2227:
 10995   000490  CFF6 FFE9          	movff	tblptrl,fsr0l
 10996   000494  CFF7 FFEA          	movff	tblptrh,fsr0h
 10997   000498  50EF               	movf	indf0,w,c
 10998   00049A                     u2220:
 10999   00049A  0900               	iorlw	0
 11000   00049C  B4D8               	btfsc	status,2,c
 11001   00049E  D022               	goto	l2108
 11002   0004A0  D7C1               	goto	l3814
 11003   0004A2                     l3820:
 11004                           
 11005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11006                           ;stkvar	vfpfcnvrt@fmt @ sp[(-10)+-4]
 11007   0004A2  0EF2               	movlw	-14
 11008   0004A4  CFE3 FFD9          	movff	plusw1,fsr2l
 11009   0004A8  0EF3               	movlw	-13
 11010   0004AA  CFE3 FFDA          	movff	plusw1,fsr2h
 11011   0004AE  2ADE               	incf	postinc2,f,c
 11012   0004B0  0E00               	movlw	0
 11013   0004B2  22DD               	addwfc	postdec2,f,c
 11014   0004B4  D017               	goto	l2108
 11015   0004B6                     l3824:
 11016                           
 11017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11018                           ;stkvar	vfpfcnvrt@fp @ sp[(-10)+-2]
 11019   0004B6  0EF4               	movlw	-12
 11020   0004B8  CFE3 FFE6          	movff	plusw1,postinc1
 11021   0004BC  CFE3 FFE6          	movff	plusw1,postinc1
 11022                           
 11023                           ;stkvar	vfpfcnvrt@fmt @ sp[(-12)+-4]
 11024   0004C0  0EF0               	movlw	-16
 11025   0004C2  CFE3 FFD9          	movff	plusw1,fsr2l
 11026   0004C6  0EF1               	movlw	-15
 11027   0004C8  CFE3 FFDA          	movff	plusw1,fsr2h
 11028   0004CC  CFDE FFF6          	movff	postinc2,tblptrl
 11029   0004D0  CFDD FFF7          	movff	postdec2,tblptrh
 11030   0004D4                     	if	0	;tblptru may be non-zero
 11031   0004D4                     	endif
 11032   0004D4                     	if	0	;tblptru may be non-zero
 11033   0004D4                     	endif
 11034   0004D4  0008               	tblrd		*
 11035   0004D6  50F5               	movf	tablat,w,c
 11036   0004D8  6EE6               	movwf	postinc1,c
 11037   0004DA  0E00               	movlw	0
 11038   0004DC  6EE6               	movwf	postinc1,c
 11039   0004DE  ECE3  F004         	call	_fputc	;wreg free
 11040   0004E2  D7DF               	goto	l3820
 11041   0004E4                     l2108:
 11042                           
 11043                           ; _vfpfcnvrt: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11044   0004E4  0EF0               	movlw	240
 11045   0004E6  26E1               	addwf	fsr1l,f,c
 11046   0004E8  0EFF               	movlw	255
 11047   0004EA  22E2               	addwfc	fsr1h,f,c
 11048   0004EC  0012               	return		;funcret
 11049   0004EE                     __end_of_vfpfcnvrt:
 11050                           	callstack 0
 11051                           
 11052 ;; *************** function _fputc *****************
 11053 ;; Defined at:
 11054 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  c               2  [STACK] int 
 11057 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11058 ;;		 -> NULL(0), 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  2  [STACK] int 
 11063 ;; Registers used:
 11064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11070 ;;      Params:         0       0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0
 11073 ;;      Totals:         0       0       0       0       0
 11074 ;;Total ram usage:        0 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 17
 11077 ;; This function calls:
 11078 ;;		_putch
 11079 ;; This function is called by:
 11080 ;;		_vfpfcnvrt
 11081 ;; This function uses a reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text26
 11085   0009C6                     __ptext26:
 11086                           	callstack 0
 11087   0009C6                     _fputc:
 11088                           	callstack 0
 11089                           
 11090                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11091                           
 11092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11093                           ;incstack = 0
 11094 ;; hardware stack exceeded
 11095   0009C6  0EFC               	movlw	-4
 11096   0009C8  CFE3 F037          	movff	plusw1,btemp
 11097   0009CC  0EFD               	movlw	-3
 11098   0009CE  50E3               	movf	plusw1,w,c
 11099   0009D0  1037               	iorwf	btemp^0,w,c
 11100   0009D2  B4D8               	btfsc	status,2,c
 11101   0009D4  D008               	goto	u2010
 11102                           
 11103                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11104   0009D6  0EFC               	movlw	-4
 11105   0009D8  CFE3 F037          	movff	plusw1,btemp
 11106   0009DC  0EFD               	movlw	-3
 11107   0009DE  50E3               	movf	plusw1,w,c
 11108   0009E0  1037               	iorwf	btemp^0,w,c
 11109   0009E2  A4D8               	btfss	status,2,c
 11110   0009E4  D006               	goto	l3730
 11111   0009E6                     u2010:
 11112                           
 11113                           ;stkvar	fputc@c @ sp[(0)+-2]
 11114   0009E6  0EFE               	movlw	-2
 11115   0009E8  50E3               	movf	plusw1,w,c
 11116   0009EA  6EE6               	movwf	postinc1,c
 11117   0009EC  ECEB  F00C         	call	_putch	;wreg free
 11118   0009F0  D064               	goto	l2140
 11119   0009F2                     l3730:
 11120                           
 11121                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11122   0009F2  0EFC               	movlw	-4
 11123   0009F4  CFE3 F041          	movff	plusw1,btemp+10
 11124   0009F8  0EFD               	movlw	-3
 11125   0009FA  CFE3 F042          	movff	plusw1,btemp+11
 11126   0009FE  0E09               	movlw	9
 11127   000A00  2441               	addwf	(btemp+10)^0,w,c
 11128   000A02  6ED9               	movwf	fsr2l,c
 11129   000A04  0E00               	movlw	0
 11130   000A06  2042               	addwfc	(btemp+11)^0,w,c
 11131   000A08  6EDA               	movwf	fsr2h,c
 11132   000A0A  50DE               	movf	postinc2,w,c
 11133   000A0C  10DE               	iorwf	postinc2,w,c
 11134   000A0E  B4D8               	btfsc	status,2,c
 11135   000A10  D022               	goto	u2030
 11136                           
 11137                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11138   000A12  0EFC               	movlw	-4
 11139   000A14  CFE3 F041          	movff	plusw1,btemp+10
 11140   000A18  0EFD               	movlw	-3
 11141   000A1A  CFE3 F042          	movff	plusw1,btemp+11
 11142   000A1E  0E09               	movlw	9
 11143   000A20  2441               	addwf	(btemp+10)^0,w,c
 11144   000A22  6ED9               	movwf	fsr2l,c
 11145   000A24  0E00               	movlw	0
 11146   000A26  2042               	addwfc	(btemp+11)^0,w,c
 11147   000A28  6EDA               	movwf	fsr2h,c
 11148                           
 11149                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11150   000A2A  0EFC               	movlw	-4
 11151   000A2C  CFE3 F041          	movff	plusw1,btemp+10
 11152   000A30  0EFD               	movlw	-3
 11153   000A32  CFE3 F042          	movff	plusw1,btemp+11
 11154   000A36  0E02               	movlw	2
 11155   000A38  2441               	addwf	(btemp+10)^0,w,c
 11156   000A3A  6EE9               	movwf	fsr0l,c
 11157   000A3C  0E00               	movlw	0
 11158   000A3E  2042               	addwfc	(btemp+11)^0,w,c
 11159   000A40  6EEA               	movwf	fsr0h,c
 11160   000A42  50DE               	movf	postinc2,w,c
 11161   000A44  5CEE               	subwf	postinc0,w,c
 11162   000A46  50EE               	movf	postinc0,w,c
 11163   000A48  0A80               	xorlw	128
 11164   000A4A  6E37               	movwf	btemp^0,c
 11165   000A4C  50DE               	movf	postinc2,w,c
 11166   000A4E  0A80               	xorlw	128
 11167   000A50  5837               	subwfb	btemp^0,w,c
 11168   000A52  B0D8               	btfsc	status,0,c
 11169   000A54  D032               	goto	l2140
 11170   000A56                     u2030:
 11171                           
 11172                           ;stkvar	fputc@c @ sp[(0)+-2]
 11173                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11174   000A56  0EFC               	movlw	-4
 11175   000A58  CFE3 F041          	movff	plusw1,btemp+10
 11176   000A5C  0EFD               	movlw	-3
 11177   000A5E  CFE3 F042          	movff	plusw1,btemp+11
 11178   000A62  0E02               	movlw	2
 11179   000A64  2441               	addwf	(btemp+10)^0,w,c
 11180   000A66  6ED9               	movwf	fsr2l,c
 11181   000A68  0E00               	movlw	0
 11182   000A6A  2042               	addwfc	(btemp+11)^0,w,c
 11183   000A6C  6EDA               	movwf	fsr2h,c
 11184   000A6E  CFDE F041          	movff	postinc2,btemp+10
 11185   000A72  CFDD F042          	movff	postdec2,btemp+11
 11186                           
 11187                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11188   000A76  0EFC               	movlw	-4
 11189   000A78  CFE3 FFD9          	movff	plusw1,fsr2l
 11190   000A7C  0EFD               	movlw	-3
 11191   000A7E  CFE3 FFDA          	movff	plusw1,fsr2h
 11192   000A82  CFDE F03F          	movff	postinc2,btemp+8
 11193   000A86  CFDD F040          	movff	postdec2,btemp+9
 11194   000A8A  5041               	movf	(btemp+10)^0,w,c
 11195   000A8C  243F               	addwf	(btemp+8)^0,w,c
 11196   000A8E  6ED9               	movwf	fsr2l,c
 11197   000A90  5042               	movf	(btemp+11)^0,w,c
 11198   000A92  2040               	addwfc	(btemp+9)^0,w,c
 11199   000A94  6EDA               	movwf	fsr2h,c
 11200   000A96  0EFE               	movlw	-2
 11201   000A98  CFE3 FFDF          	movff	plusw1,indf2
 11202                           
 11203                           ;stkvar	fputc@fp @ sp[(0)+-4]
 11204   000A9C  0EFC               	movlw	-4
 11205   000A9E  CFE3 F041          	movff	plusw1,btemp+10
 11206   000AA2  0EFD               	movlw	-3
 11207   000AA4  CFE3 F042          	movff	plusw1,btemp+11
 11208   000AA8  0E02               	movlw	2
 11209   000AAA  2441               	addwf	(btemp+10)^0,w,c
 11210   000AAC  6ED9               	movwf	fsr2l,c
 11211   000AAE  0E00               	movlw	0
 11212   000AB0  2042               	addwfc	(btemp+11)^0,w,c
 11213   000AB2  6EDA               	movwf	fsr2h,c
 11214   000AB4  2ADE               	incf	postinc2,f,c
 11215   000AB6  0E00               	movlw	0
 11216   000AB8  22DD               	addwfc	postdec2,f,c
 11217   000ABA                     l2140:
 11218                           
 11219                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11220   000ABA  52E5               	movf	postdec1,f,c
 11221   000ABC  52E5               	movf	postdec1,f,c
 11222   000ABE  52E5               	movf	postdec1,f,c
 11223   000AC0  52E5               	movf	postdec1,f,c
 11224   000AC2  0012               	return		;funcret
 11225   000AC4                     __end_of_fputc:
 11226                           	callstack 0
 11227                           
 11228 ;; *************** function _putch *****************
 11229 ;; Defined at:
 11230 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;  txData          1  [STACK] unsigned char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1  [STACK] void 
 11237 ;; Registers used:
 11238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 3F/E
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11244 ;;      Params:         0       0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0
 11247 ;;      Totals:         0       0       0       0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; Hardware stack levels required when called: 16
 11251 ;; This function calls:
 11252 ;;		_EUSART1_Write
 11253 ;; This function is called by:
 11254 ;;		_fputc
 11255 ;; This function uses a reentrant model
 11256 ;;
 11257                           
 11258                           	psect	text27
 11259   0019D6                     __ptext27:
 11260                           	callstack 0
 11261   0019D6                     _putch:
 11262                           	callstack 0
 11263                           
 11264                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 11265                           ;stkvar	putch@txData @ sp[(0)+-1]
 11266                           
 11267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11268                           ;incstack = 0
 11269 ;; hardware stack exceeded
 11270   0019D6  0EFF               	movlw	-1
 11271   0019D8  50E3               	movf	plusw1,w,c
 11272   0019DA  6EE6               	movwf	postinc1,c
 11273   0019DC  EC33  F00B         	call	_EUSART1_Write	;wreg free
 11274                           
 11275                           ; BSR set to: 14
 11276                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 11277   0019E0  52E5               	movf	postdec1,f,c
 11278   0019E2  0012               	return		;funcret
 11279   0019E4                     __end_of_putch:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function _EUSART1_Write *****************
 11283 ;; Defined at:
 11284 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  txData          1  [STACK] unsigned char 
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1  [STACK] void 
 11291 ;; Registers used:
 11292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 3F/E
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11298 ;;      Params:         0       0       0       0       0
 11299 ;;      Locals:         0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0
 11301 ;;      Totals:         0       0       0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used: 1
 11304 ;; Hardware stack levels required when called: 15
 11305 ;; This function calls:
 11306 ;;		Nothing
 11307 ;; This function is called by:
 11308 ;;		_putch
 11309 ;; This function uses a reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text28
 11313   001666                     __ptext28:
 11314                           	callstack 0
 11315   001666                     _EUSART1_Write:
 11316                           	callstack 0
 11317                           
 11318                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11319                           
 11320                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11321                           
 11322                           ; BSR set to: 14
 11323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11324                           ;incstack = 0
 11325 ;; hardware stack exceeded
 11326   001666  505D               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
 11327   001668  B4D8               	btfsc	status,2,c
 11328   00166A  D7FD               	goto	__ptext28
 11329                           
 11330                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11331   00166C  010E               	movlb	14	; () banked
 11332   00166E  B9C0               	btfsc	192,4,b	;volatile
 11333   001670  D004               	goto	l100
 11334                           
 11335                           ; BSR set to: 14
 11336                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 11337                           ;stkvar	EUSART1_Write@txData @ sp[(0)+-1]
 11338   001672  0EFF               	movlw	-1
 11339   001674  CFE3 FF99          	movff	plusw1,3993	;volatile
 11340                           
 11341                           ;mcc_generated_files/eusart1.c: 182:     }
 11342   001678  D010               	goto	l3636
 11343   00167A                     l100:
 11344                           
 11345                           ; BSR set to: 14
 11346                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 11347   00167A  99C0               	bcf	192,4,b	;volatile
 11348                           
 11349                           ; BSR set to: 14
 11350                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 11351                           ;stkvar	EUSART1_Write@txData @ sp[(0)+-1]
 11352   00167C  0E80               	movlw	low _eusart1TxBuffer
 11353   00167E  245F               	addwf	_eusart1TxHead^0,w,c	;volatile
 11354   001680  6ED9               	movwf	fsr2l,c
 11355   001682  6ADA               	clrf	fsr2h,c
 11356   001684  0E01               	movlw	high _eusart1TxBuffer
 11357   001686  22DA               	addwfc	fsr2h,f,c
 11358   001688  0EFF               	movlw	-1
 11359   00168A  CFE3 FFDF          	movff	plusw1,indf2
 11360                           
 11361                           ; BSR set to: 14
 11362   00168E  2A5F               	incf	_eusart1TxHead^0,f,c	;volatile
 11363                           
 11364                           ; BSR set to: 14
 11365                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 11366   001690  0E3F               	movlw	63
 11367   001692  645F               	cpfsgt	_eusart1TxHead^0,c	;volatile
 11368   001694  D001               	goto	l3634
 11369                           
 11370                           ; BSR set to: 14
 11371                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 11372   001696  6A5F               	clrf	_eusart1TxHead^0,c	;volatile
 11373   001698                     l3634:
 11374                           
 11375                           ; BSR set to: 14
 11376                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 11377   001698  065D               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
 11378   00169A                     l3636:
 11379                           
 11380                           ; BSR set to: 14
 11381                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 11382   00169A  89C0               	bsf	192,4,b	;volatile
 11383                           
 11384                           ; BSR set to: 14
 11385                           ; _EUSART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 11386   00169C  52E5               	movf	postdec1,f,c
 11387   00169E  0012               	return		;funcret
 11388   0016A0                     __end_of_EUSART1_Write:
 11389                           	callstack 0
 11390                           
 11391 ;; *************** function _abs *****************
 11392 ;; Defined at:
 11393 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  a               2  [STACK] int 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;		None
 11398 ;; Return value:  Size  Location     Type
 11399 ;;                  2  [STACK] int 
 11400 ;; Registers used:
 11401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11402 ;; Tracked objects:
 11403 ;;		On entry : 0/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11407 ;;      Params:         0       0       0       0       0
 11408 ;;      Locals:         0       0       0       0       0
 11409 ;;      Temps:          0       0       0       0       0
 11410 ;;      Totals:         0       0       0       0       0
 11411 ;;Total ram usage:        0 bytes
 11412 ;; Hardware stack levels used: 1
 11413 ;; Hardware stack levels required when called: 15
 11414 ;; This function calls:
 11415 ;;		Nothing
 11416 ;; This function is called by:
 11417 ;;		_vfpfcnvrt
 11418 ;; This function uses a reentrant model
 11419 ;;
 11420                           
 11421                           	psect	text29
 11422   001706                     __ptext29:
 11423                           	callstack 0
 11424   001706                     _abs:
 11425                           	callstack 0
 11426                           
 11427                           ;stkvar	abs@a @ sp[(0)+-2]
 11428                           
 11429                           ; BSR set to: 14
 11430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11431                           ;incstack = 0
 11432 ;; hardware stack exceeded
 11433   001706  0EFF               	movlw	-1
 11434   001708  BEE3               	btfsc	plusw1,7,c
 11435   00170A  D007               	goto	l3744
 11436                           
 11437                           ;stkvar	abs@a @ sp[(0)+-2]
 11438   00170C  0EFE               	movlw	-2
 11439   00170E  CFE3 F037          	movff	plusw1,btemp
 11440   001712  0EFF               	movlw	-1
 11441   001714  CFE3 F038          	movff	plusw1,btemp+1
 11442   001718  D00B               	goto	l2128
 11443   00171A                     l3744:
 11444                           
 11445                           ;stkvar	abs@a @ sp[(0)+-2]
 11446   00171A  0EFE               	movlw	-2
 11447   00171C  CFE3 F037          	movff	plusw1,btemp
 11448   001720  1E37               	comf	btemp^0,f,c
 11449   001722  0EFF               	movlw	-1
 11450   001724  CFE3 F038          	movff	plusw1,btemp+1
 11451   001728  1E38               	comf	(btemp+1)^0,f,c
 11452   00172A  2A37               	incf	btemp^0,f,c
 11453   00172C  B4D8               	btfsc	status,2,c
 11454   00172E  2A38               	incf	(btemp+1)^0,f,c
 11455   001730                     l2128:
 11456                           
 11457                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11458   001730  52E5               	movf	postdec1,f,c
 11459   001732  52E5               	movf	postdec1,f,c
 11460   001734  0012               	return		;funcret
 11461   001736                     __end_of_abs:
 11462                           	callstack 0
 11463                           
 11464 ;; *************** function ___awmod *****************
 11465 ;; Defined at:
 11466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  dividend        2  [STACK] int 
 11469 ;;  divisor         2  [STACK] int 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  sign            1  [STACK] unsigned char 
 11472 ;;  counter         1  [STACK] unsigned char 
 11473 ;; Return value:  Size  Location     Type
 11474 ;;                  2  [STACK] int 
 11475 ;; Registers used:
 11476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11482 ;;      Params:         0       0       0       0       0
 11483 ;;      Locals:         0       0       0       0       0
 11484 ;;      Temps:          0       0       0       0       0
 11485 ;;      Totals:         0       0       0       0       0
 11486 ;;Total ram usage:        0 bytes
 11487 ;; Hardware stack levels used: 1
 11488 ;; Hardware stack levels required when called: 15
 11489 ;; This function calls:
 11490 ;;		Nothing
 11491 ;; This function is called by:
 11492 ;;		_vfpfcnvrt
 11493 ;; This function uses a reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text30
 11497   0008C6                     __ptext30:
 11498                           	callstack 0
 11499   0008C6                     ___awmod:
 11500                           	callstack 0
 11501                           
 11502                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11503   0008C6  52E6               	movf	postinc1,f,c
 11504   0008C8  52E6               	movf	postinc1,f,c
 11505                           
 11506                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 11507                           
 11508                           ;incstack = 0
 11509 ;; hardware stack exceeded
 11510   0008CA  0EFE               	movlw	-2
 11511   0008CC  6AE3               	clrf	plusw1,c
 11512                           
 11513                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11514   0008CE  0EFD               	movlw	-3
 11515   0008D0  AEE3               	btfss	plusw1,7,c
 11516   0008D2  D009               	goto	l3694
 11517                           
 11518                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11519                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11520   0008D4  0EFC               	movlw	-4
 11521   0008D6  6CE3               	negf	plusw1,c
 11522   0008D8  0EFD               	movlw	-3
 11523   0008DA  1EE3               	comf	plusw1,f,c
 11524   0008DC  B0D8               	btfsc	status,0,c
 11525   0008DE  2AE3               	incf	plusw1,f,c
 11526                           
 11527                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 11528   0008E0  0EFE               	movlw	-2
 11529   0008E2  6AE3               	clrf	plusw1,c
 11530   0008E4  2AE3               	incf	plusw1,f,c
 11531   0008E6                     l3694:
 11532                           
 11533                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11534   0008E6  0EFB               	movlw	-5
 11535   0008E8  AEE3               	btfss	plusw1,7,c
 11536   0008EA  D006               	goto	l3698
 11537                           
 11538                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11539                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11540   0008EC  0EFA               	movlw	-6
 11541   0008EE  6CE3               	negf	plusw1,c
 11542   0008F0  0EFB               	movlw	-5
 11543   0008F2  1EE3               	comf	plusw1,f,c
 11544   0008F4  B0D8               	btfsc	status,0,c
 11545   0008F6  2AE3               	incf	plusw1,f,c
 11546   0008F8                     l3698:
 11547                           
 11548                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11549   0008F8  0EFA               	movlw	-6
 11550   0008FA  CFE3 F037          	movff	plusw1,btemp
 11551   0008FE  0EFB               	movlw	-5
 11552   000900  50E3               	movf	plusw1,w,c
 11553   000902  1037               	iorwf	btemp^0,w,c
 11554   000904  B4D8               	btfsc	status,2,c
 11555   000906  D04A               	goto	u1980
 11556                           
 11557                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 11558   000908  0EFF               	movlw	-1
 11559   00090A  6AE3               	clrf	plusw1,c
 11560   00090C  D010               	goto	L2
 11561   00090E                     l3702:
 11562                           
 11563                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11564   00090E  0EFA               	movlw	-6
 11565   000910  50E3               	movf	plusw1,w,c
 11566   000912  90D8               	bcf	status,0,c
 11567   000914  34E8               	rlcf	wreg,w,c
 11568   000916  6E37               	movwf	btemp^0,c
 11569   000918  0EFA               	movlw	-6
 11570   00091A  C037  FFE3         	movff	btemp,plusw1
 11571   00091E  0EFB               	movlw	-5
 11572   000920  50E3               	movf	plusw1,w,c
 11573   000922  34E8               	rlcf	wreg,w,c
 11574   000924  6E37               	movwf	btemp^0,c
 11575   000926  0EFB               	movlw	-5
 11576   000928  C037  FFE3         	movff	btemp,plusw1
 11577                           
 11578                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 11579   00092C  0EFF               	movlw	-1
 11580   00092E                     L2:
 11581   00092E  2AE3               	incf	plusw1,f,c
 11582                           
 11583                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11584   000930  0EFB               	movlw	-5
 11585   000932  AEE3               	btfss	plusw1,7,c
 11586   000934  D7EC               	goto	l3702
 11587   000936                     u1960:
 11588                           
 11589                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11590   000936  0EFA               	movlw	-6
 11591   000938  CFE3 F041          	movff	plusw1,btemp+10
 11592   00093C  0EFB               	movlw	-5
 11593   00093E  CFE3 F042          	movff	plusw1,btemp+11
 11594                           
 11595                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11596   000942  0EFC               	movlw	-4
 11597   000944  CFE3 F03F          	movff	plusw1,btemp+8
 11598   000948  0EFD               	movlw	-3
 11599   00094A  CFE3 F040          	movff	plusw1,btemp+9
 11600   00094E  5041               	movf	(btemp+10)^0,w,c
 11601   000950  5C3F               	subwf	(btemp+8)^0,w,c
 11602   000952  5042               	movf	(btemp+11)^0,w,c
 11603   000954  5840               	subwfb	(btemp+9)^0,w,c
 11604   000956  A0D8               	btfss	status,0,c
 11605   000958  D012               	goto	l3712
 11606                           
 11607                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11608                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11609   00095A  0EFC               	movlw	-4
 11610   00095C  50E3               	movf	plusw1,w,c
 11611   00095E  6E37               	movwf	btemp^0,c
 11612   000960  0EFA               	movlw	-6
 11613   000962  50E3               	movf	plusw1,w,c
 11614   000964  5E37               	subwf	btemp^0,f,c
 11615   000966  0EFC               	movlw	-4
 11616   000968  C037  FFE3         	movff	btemp,plusw1
 11617   00096C  0EFD               	movlw	-3
 11618   00096E  50E3               	movf	plusw1,w,c
 11619   000970  6E37               	movwf	btemp^0,c
 11620   000972  0EFB               	movlw	-5
 11621   000974  50E3               	movf	plusw1,w,c
 11622   000976  5A37               	subwfb	btemp^0,f,c
 11623   000978  0EFD               	movlw	-3
 11624   00097A  C037  FFE3         	movff	btemp,plusw1
 11625   00097E                     l3712:
 11626                           
 11627                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 11628   00097E  90D8               	bcf	status,0,c
 11629   000980  0EFB               	movlw	-5
 11630   000982  32E3               	rrcf	plusw1,f,c
 11631   000984  0EFA               	movlw	-6
 11632   000986  32E3               	rrcf	plusw1,f,c
 11633                           
 11634                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 11635   000988  0EFF               	movlw	-1
 11636   00098A  50E3               	movf	plusw1,w,c
 11637   00098C  6E37               	movwf	btemp^0,c
 11638   00098E  0E01               	movlw	1
 11639   000990  5E37               	subwf	btemp^0,f,c
 11640   000992  0EFF               	movlw	-1
 11641   000994  C037  FFE3         	movff	btemp,plusw1
 11642   000998  A4D8               	btfss	status,2,c
 11643   00099A  D7CD               	goto	u1960
 11644   00099C                     u1980:
 11645                           
 11646                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 11647   00099C  0EFE               	movlw	-2
 11648   00099E  50E3               	movf	plusw1,w,c
 11649   0009A0  B4D8               	btfsc	status,2,c
 11650   0009A2  D006               	goto	l3720
 11651                           
 11652                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11653                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11654   0009A4  0EFC               	movlw	-4
 11655   0009A6  6CE3               	negf	plusw1,c
 11656   0009A8  0EFD               	movlw	-3
 11657   0009AA  1EE3               	comf	plusw1,f,c
 11658   0009AC  B0D8               	btfsc	status,0,c
 11659   0009AE  2AE3               	incf	plusw1,f,c
 11660   0009B0                     l3720:
 11661                           
 11662                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 11663   0009B0  0EFC               	movlw	-4
 11664   0009B2  CFE3 F037          	movff	plusw1,btemp
 11665   0009B6  0EFD               	movlw	-3
 11666   0009B8  CFE3 F038          	movff	plusw1,btemp+1
 11667                           
 11668                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11669   0009BC  0EFA               	movlw	250
 11670   0009BE  26E1               	addwf	fsr1l,f,c
 11671   0009C0  0EFF               	movlw	255
 11672   0009C2  22E2               	addwfc	fsr1h,f,c
 11673   0009C4  0012               	return		;funcret
 11674   0009C6                     __end_of___awmod:
 11675                           	callstack 0
 11676                           
 11677 ;; *************** function _abort *****************
 11678 ;; Defined at:
 11679 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abort.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1  [STACK] void 
 11686 ;; Registers used:
 11687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11693 ;;      Params:         0       0       0       0       0
 11694 ;;      Locals:         0       0       0       0       0
 11695 ;;      Temps:          0       0       0       0       0
 11696 ;;      Totals:         0       0       0       0       0
 11697 ;;Total ram usage:        0 bytes
 11698 ;; Hardware stack levels used: 1
 11699 ;; Hardware stack levels required when called: 17
 11700 ;; This function calls:
 11701 ;;		_exit
 11702 ;; This function is called by:
 11703 ;;		___assert_fail
 11704 ;; This function uses a reentrant model
 11705 ;;
 11706                           
 11707                           	psect	text31
 11708   0019E4                     __ptext31:
 11709                           	callstack 0
 11710   0019E4                     _abort:
 11711                           	callstack 0
 11712                           
 11713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11714                           ;incstack = 0
 11715 ;; hardware stack exceeded
 11716   0019E4  0EFF               	movlw	255
 11717   0019E6  6EE6               	movwf	postinc1,c
 11718   0019E8  0EFF               	movlw	255
 11719   0019EA  6EE6               	movwf	postinc1,c
 11720   0019EC  EC60  F00C         	call	_exit	;wreg free
 11721                           
 11722                           ; _abort: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize
      +                           = 0, vargsize = 0
 11723   0019F0  0012               	return		;funcret
 11724   0019F2                     __end_of_abort:
 11725                           	callstack 0
 11726                           
 11727 ;; *************** function _exit *****************
 11728 ;; Defined at:
 11729 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\exit.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  code            2  [STACK] int 
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;		None
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1  [STACK] void 
 11736 ;; Registers used:
 11737 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11743 ;;      Params:         0       0       0       0       0
 11744 ;;      Locals:         0       0       0       0       0
 11745 ;;      Temps:          0       0       0       0       0
 11746 ;;      Totals:         0       0       0       0       0
 11747 ;;Total ram usage:        0 bytes
 11748 ;; Hardware stack levels used: 1
 11749 ;; Hardware stack levels required when called: 16
 11750 ;; This function calls:
 11751 ;;		__Exit
 11752 ;;		___funcs_on_exit
 11753 ;; This function is called by:
 11754 ;;		_abort
 11755 ;; This function uses a reentrant model
 11756 ;;
 11757                           
 11758                           	psect	text32
 11759   0018C0                     __ptext32:
 11760                           	callstack 0
 11761   0018C0                     _exit:
 11762                           	callstack 0
 11763                           
 11764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11765                           ;incstack = 0
 11766 ;; hardware stack exceeded
 11767   0018C0  ECBE  F00C         	call	___funcs_on_exit	;wreg free
 11768                           
 11769                           ;stkvar	exit@code @ sp[(0)+-2]
 11770   0018C4  0EFE               	movlw	-2
 11771   0018C6  CFE3 FFE6          	movff	plusw1,postinc1
 11772   0018CA  CFE3 FFE6          	movff	plusw1,postinc1
 11773   0018CE  ECA2  F00D         	call	__Exit	;wreg free
 11774                           
 11775                           ; _exit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 11776   0018D2  52E5               	movf	postdec1,f,c
 11777   0018D4  52E5               	movf	postdec1,f,c
 11778   0018D6  0012               	return		;funcret
 11779   0018D8                     __end_of_exit:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function ___funcs_on_exit *****************
 11783 ;; Defined at:
 11784 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atexit.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  func            2    0        PTR FTN()void 
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1  [STACK] void 
 11791 ;; Registers used:
 11792 ;;		wreg, status,2, status,0
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11798 ;;      Params:         0       0       0       0       0
 11799 ;;      Locals:         0       0       0       0       0
 11800 ;;      Temps:          0       0       0       0       0
 11801 ;;      Totals:         0       0       0       0       0
 11802 ;;Total ram usage:        0 bytes
 11803 ;; Hardware stack levels used: 1
 11804 ;; Hardware stack levels required when called: 15
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_exit
 11809 ;; This function uses a reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text33
 11813   00197C                     __ptext33:
 11814                           	callstack 0
 11815   00197C                     ___funcs_on_exit:
 11816                           	callstack 0
 11817                           
 11818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11819                           ;incstack = 0
 11820 ;; hardware stack exceeded
 11821   00197C  D001               	goto	l3752
 11822   00197E                     l3750:
 11823   00197E  0657               	decf	_count^0,f,c
 11824   001980                     l3752:
 11825   001980  5057               	movf	_count^0,w,c
 11826   001982  0A80               	xorlw	128
 11827   001984  0F7F               	addlw	-129
 11828   001986  A0D8               	btfss	status,0,c
 11829   001988  0012               	return	
 11830   00198A  D7F9               	goto	l3750
 11831   00198C                     __end_of___funcs_on_exit:
 11832                           	callstack 0
 11833                           
 11834 ;; *************** function __Exit *****************
 11835 ;; Defined at:
 11836 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\_Exit.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  ec              2  [STACK] int 
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;		None
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1  [STACK] void 
 11843 ;; Registers used:
 11844 ;;		None
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11850 ;;      Params:         0       0       0       0       0
 11851 ;;      Locals:         0       0       0       0       0
 11852 ;;      Temps:          0       0       0       0       0
 11853 ;;      Totals:         0       0       0       0       0
 11854 ;;Total ram usage:        0 bytes
 11855 ;; Hardware stack levels used: 1
 11856 ;; Hardware stack levels required when called: 15
 11857 ;; This function calls:
 11858 ;;		Nothing
 11859 ;; This function is called by:
 11860 ;;		_exit
 11861 ;; This function uses a reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text34
 11865   001B44                     __ptext34:
 11866                           	callstack 0
 11867   001B44                     __Exit:
 11868                           	callstack 0
 11869                           
 11870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11871                           ;incstack = 0
 11872 ;; hardware stack exceeded
 11873   001B44  D7FF               	goto	__ptext34
 11874   001B46                     __end_of__Exit:
 11875                           	callstack 0
 11876                           
 11877 ;; *************** function _analog_handler *****************
 11878 ;; Defined at:
 11879 ;;		line 67 in file "analog.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  pin             1   13[BANK0 ] unsigned char 
 11884 ;;  port            1   12[BANK0 ] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      void 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11894 ;;      Params:         0       0       0       0       0
 11895 ;;      Locals:         0       2       0       0       0
 11896 ;;      Temps:          0       7       0       0       0
 11897 ;;      Totals:         0       9       0       0       0
 11898 ;;Total ram usage:        9 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; Hardware stack levels required when called: 17
 11901 ;; This function calls:
 11902 ;;		_ADCC_GetConversionResult
 11903 ;;		_ADCC_IsConversionDone
 11904 ;;		_ADCC_StartConversion
 11905 ;;		___awdiv
 11906 ;;		_analog_set_pos_ref
 11907 ;; This function is called by:
 11908 ;;		_main
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text35
 11913   000BB4                     __ptext35:
 11914                           	callstack 0
 11915   000BB4                     _analog_handler:
 11916                           	callstack 13
 11917                           
 11918                           ;analog.c: 69:     if(analog.ch_sampled > ( eEXP_PORT_CNT * 8 ) || ADCC_IsConversionDone
      +                          ())
 11919                           
 11920                           ;incstack = 0
 11921   000BB4  0E11               	movlw	17
 11922   000BB6  0100               	movlb	0	; () banked
 11923   000BB8  6190               	cpfslt	(_analog+48)& (0+255),b
 11924   000BBA  D005               	goto	u3310
 11925                           
 11926                           ; BSR set to: 0
 11927   000BBC  EC00  F00D         	call	_ADCC_IsConversionDone	;wreg free
 11928   000BC0  0900               	iorlw	0
 11929   000BC2  B4D8               	btfsc	status,2,c
 11930   000BC4  0012               	return	
 11931   000BC6                     u3310:
 11932                           
 11933                           ;analog.c: 70:     {;analog.c: 72:         if(analog.ch_sampled < ( eEXP_PORT_CNT * 8 ) 
      +                          && ADCC_IsConversionDone())
 11934   000BC6  0E10               	movlw	16
 11935   000BC8  0100               	movlb	0	; () banked
 11936   000BCA  6190               	cpfslt	(_analog+48)& (0+255),b
 11937   000BCC  D012               	goto	l4734
 11938                           
 11939                           ; BSR set to: 0
 11940   000BCE  EC00  F00D         	call	_ADCC_IsConversionDone	;wreg free
 11941   000BD2  0900               	iorlw	0
 11942   000BD4  B4D8               	btfsc	status,2,c
 11943   000BD6  D00D               	goto	l4734
 11944                           
 11945                           ;analog.c: 73:             analog.adc_val[(uint8_t)analog.ch_sampled] = ADCC_GetConversi
      +                          onResult();
 11946   000BD8  EC27  F00C         	call	_ADCC_GetConversionResult	;wreg free
 11947   000BDC  0100               	movlb	0	; () banked
 11948   000BDE  5190               	movf	(_analog+48)& (0+255),w,b
 11949   000BE0  0D02               	mullw	2
 11950   000BE2  50F3               	movf	243,w,c
 11951   000BE4  0F70               	addlw	low (_analog+16)
 11952   000BE6  6ED9               	movwf	fsr2l,c
 11953   000BE8  6ADA               	clrf	fsr2h,c
 11954   000BEA  C0DA  FFDE         	movff	?_ADCC_GetConversionResult,postinc2
 11955   000BEE  C0DB  FFDD         	movff	?_ADCC_GetConversionResult+1,postdec2
 11956   000BF2                     l4734:
 11957                           
 11958                           ;analog.c: 76:         if(++analog.ch_sampled >= ( eEXP_PORT_CNT * 8 ))
 11959   000BF2  0100               	movlb	0	; () banked
 11960   000BF4  2B90               	incf	(_analog+48)& (0+255),f,b
 11961   000BF6  0E0F               	movlw	15
 11962   000BF8  6590               	cpfsgt	(_analog+48)& (0+255),b
 11963   000BFA  D001               	goto	l4738
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;analog.c: 77:             analog.ch_sampled = 0;
 11967   000BFC  6B90               	clrf	(_analog+48)& (0+255),b
 11968   000BFE                     l4738:
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;analog.c: 80:         analog_set_pos_ref(analog.ref[analog.ch_sampled]);
 11972   000BFE  5190               	movf	(_analog+48)& (0+255),w,b
 11973   000C00  0F60               	addlw	low _analog
 11974   000C02  6ED9               	movwf	fsr2l,c
 11975   000C04  6ADA               	clrf	fsr2h,c
 11976   000C06  50DF               	movf	indf2,w,c
 11977   000C08  EC3E  F009         	call	_analog_set_pos_ref
 11978                           
 11979                           ;analog.c: 83:         uint8_t port = ( analog.ch_sampled / 8 );
 11980   000C0C  0E08               	movlw	8
 11981   000C0E  6EE6               	movwf	postinc1,c
 11982   000C10  0E00               	movlw	0
 11983   000C12  6EE6               	movwf	postinc1,c
 11984   000C14  0100               	movlb	0	; () banked
 11985   000C16  5190               	movf	(_analog+48)& (0+255),w,b
 11986   000C18  6EE6               	movwf	postinc1,c
 11987   000C1A  0E00               	movlw	0
 11988   000C1C  6EE6               	movwf	postinc1,c
 11989   000C1E  ECCA  F003         	call	___awdiv	;wreg free
 11990   000C22  5037               	movf	btemp^0,w,c
 11991   000C24  0100               	movlb	0	; () banked
 11992   000C26  6FE6               	movwf	analog_handler@port& (0+255),b
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;analog.c: 84:         uint8_t pin = ( analog.ch_sampled & (8 - 1) );
 11996   000C28  5190               	movf	(_analog+48)& (0+255),w,b
 11997   000C2A  0B07               	andlw	7
 11998   000C2C  6FE7               	movwf	analog_handler@pin& (0+255),b
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;analog.c: 87:         ADCC_StartConversion( PINS[port][pin].AnalogCh );
 12002   000C2E  51E7               	movf	analog_handler@pin& (0+255),w,b
 12003   000C30  0D02               	mullw	2
 12004   000C32  CFF3 F0DF          	movff	prodl,??_analog_handler
 12005   000C36  CFF4 F0E0          	movff	prodh,??_analog_handler+1
 12006   000C3A  51E6               	movf	analog_handler@port& (0+255),w,b
 12007   000C3C  0D10               	mullw	16
 12008   000C3E  0ED0               	movlw	low _PINS
 12009   000C40  24F3               	addwf	243,w,c
 12010   000C42  6FE1               	movwf	(??_analog_handler+2)& (0+255),b
 12011   000C44  0E3E               	movlw	high _PINS
 12012   000C46  20F4               	addwfc	prodh,w,c
 12013   000C48  6FE2               	movwf	(??_analog_handler+3)& (0+255),b
 12014   000C4A  51DF               	movf	??_analog_handler& (0+255),w,b
 12015   000C4C  25E1               	addwf	(??_analog_handler+2)& (0+255),w,b
 12016   000C4E  6FE3               	movwf	(??_analog_handler+4)& (0+255),b
 12017   000C50  51E0               	movf	(??_analog_handler+1)& (0+255),w,b
 12018   000C52  21E2               	addwfc	(??_analog_handler+3)& (0+255),w,b
 12019   000C54  6FE4               	movwf	(??_analog_handler+5)& (0+255),b
 12020   000C56  0E01               	movlw	1
 12021   000C58  27E3               	addwf	(??_analog_handler+4)& (0+255),f,b
 12022   000C5A  0E00               	movlw	0
 12023   000C5C  23E4               	addwfc	(??_analog_handler+5)& (0+255),f,b
 12024   000C5E  C0E3  FFF6         	movff	??_analog_handler+4,tblptrl
 12025   000C62  C0E4  FFF7         	movff	??_analog_handler+5,tblptrh
 12026   000C66                     	if	0	;tblptru may be non-zero
 12027   000C66                     	endif
 12028   000C66                     	if	0	;tblptru may be non-zero
 12029   000C66                     	endif
 12030   000C66  0008               	tblrd		*
 12031   000C68  CFF5 F0E5          	movff	tablat,??_analog_handler+6
 12032   000C6C  31E5               	rrcf	(??_analog_handler+6)& (0+255),w,b
 12033   000C6E  32E8               	rrcf	wreg,f,c
 12034   000C70  32E8               	rrcf	wreg,f,c
 12035   000C72  0B1F               	andlw	31
 12036   000C74  ECC6  F00C         	call	_ADCC_StartConversion
 12037   000C78  0012               	return		;funcret
 12038   000C7A                     __end_of_analog_handler:
 12039                           	callstack 0
 12040                           
 12041 ;; *************** function _analog_set_pos_ref *****************
 12042 ;; Defined at:
 12043 ;;		line 36 in file "analog.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  ref             1    wreg     enum E10118
 12046 ;; Auto vars:     Size  Location     Type
 12047 ;;  ref             1    4[BANK0 ] enum E10118
 12048 ;;  current         1    3[BANK0 ] enum E10118
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      void 
 12051 ;; Registers used:
 12052 ;;		wreg, status,2, status,0, cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12058 ;;      Params:         0       0       0       0       0
 12059 ;;      Locals:         0       4       0       0       0
 12060 ;;      Temps:          0       1       0       0       0
 12061 ;;      Totals:         0       5       0       0       0
 12062 ;;Total ram usage:        5 bytes
 12063 ;; Hardware stack levels used: 1
 12064 ;; Hardware stack levels required when called: 16
 12065 ;; This function calls:
 12066 ;;		_FVR_IsOutputReady
 12067 ;; This function is called by:
 12068 ;;		_analog_handler
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text36
 12073   00127C                     __ptext36:
 12074                           	callstack 0
 12075   00127C                     _analog_set_pos_ref:
 12076                           	callstack 13
 12077                           
 12078                           ;incstack = 0
 12079                           ;analog_set_pos_ref@ref stored from wreg
 12080   00127C  0100               	movlb	0	; () banked
 12081   00127E  6FDE               	movwf	analog_set_pos_ref@ref& (0+255),b
 12082                           
 12083                           ;analog.c: 36: void analog_set_pos_ref(eAnalogPosRef_t ref);analog.c: 37: {;analog.c: 39
      +                          :     eAnalogPosRef_t current = (eAnalogPosRef_t)(FVRCON & 3);
 12084   001280  010F               	movlb	15	; () banked
 12085   001282  512C               	movf	44,w,b	;volatile
 12086   001284  0B03               	andlw	3
 12087   001286  0100               	movlb	0	; () banked
 12088   001288  6FDD               	movwf	analog_set_pos_ref@current& (0+255),b
 12089                           
 12090                           ;analog.c: 42:     if(ref != current)
 12091   00128A  51DD               	movf	analog_set_pos_ref@current& (0+255),w,b
 12092   00128C  19DE               	xorwf	analog_set_pos_ref@ref& (0+255),w,b
 12093   00128E  B4D8               	btfsc	status,2,c
 12094   001290  0012               	return	
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;analog.c: 43:     {;analog.c: 45:         FVRCON = (FVRCON & 0xFC) | ref;
 12098   001292  010F               	movlb	15	; () banked
 12099   001294  512C               	movf	44,w,b	;volatile
 12100   001296  0BFC               	andlw	252
 12101   001298  0100               	movlb	0	; () banked
 12102   00129A  11DE               	iorwf	analog_set_pos_ref@ref& (0+255),w,b
 12103   00129C  010F               	movlb	15	; () banked
 12104   00129E  6F2C               	movwf	44,b	;volatile
 12105                           
 12106                           ;analog.c: 48:         if((ref & 1) != (current & 1))
 12107   0012A0  C0DD  F0DA         	movff	analog_set_pos_ref@current,??_analog_set_pos_ref
 12108   0012A4  0E01               	movlw	1
 12109   0012A6  0100               	movlb	0	; () banked
 12110   0012A8  17DA               	andwf	??_analog_set_pos_ref& (0+255),f,b
 12111   0012AA  51DE               	movf	analog_set_pos_ref@ref& (0+255),w,b
 12112   0012AC  0B01               	andlw	1
 12113   0012AE  19DA               	xorwf	??_analog_set_pos_ref& (0+255),w,b
 12114   0012B0  B4D8               	btfsc	status,2,c
 12115   0012B2  D012               	goto	l4534
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;analog.c: 49:             ADREF = (ADREF & 0xFC) | ((ref==eARef_VDD) ? 0 : 3);
 12119   0012B4  51DE               	movf	analog_set_pos_ref@ref& (0+255),w,b
 12120   0012B6  B4D8               	btfsc	status,2,c
 12121   0012B8  D004               	goto	l4530
 12122                           
 12123                           ; BSR set to: 0
 12124   0012BA  0E00               	movlw	0
 12125   0012BC  6FDC               	movwf	(_analog_set_pos_ref$3052+1)& (0+255),b
 12126   0012BE  0E03               	movlw	3
 12127   0012C0  D003               	goto	L3
 12128   0012C2                     l4530:
 12129                           
 12130                           ; BSR set to: 0
 12131   0012C2  0E00               	movlw	0
 12132   0012C4  6FDC               	movwf	(_analog_set_pos_ref$3052+1)& (0+255),b
 12133   0012C6  0E00               	movlw	0
 12134   0012C8                     L3:
 12135   0012C8  6FDB               	movwf	_analog_set_pos_ref$3052& (0+255),b
 12136                           
 12137                           ; BSR set to: 0
 12138   0012CA  010F               	movlb	15	; () banked
 12139   0012CC  5153               	movf	83,w,b	;volatile
 12140   0012CE  0BFC               	andlw	252
 12141   0012D0  0100               	movlb	0	; () banked
 12142   0012D2  11DB               	iorwf	_analog_set_pos_ref$3052& (0+255),w,b
 12143   0012D4  010F               	movlb	15	; () banked
 12144   0012D6  6F53               	movwf	83,b	;volatile
 12145   0012D8                     l4534:
 12146   0012D8  ECF9  F00C         	call	_FVR_IsOutputReady	;wreg free
 12147   0012DC  0900               	iorlw	0
 12148   0012DE  A4D8               	btfss	status,2,c
 12149   0012E0  0012               	return	
 12150   0012E2  D7FA               	goto	l4534
 12151   0012E4                     __end_of_analog_set_pos_ref:
 12152                           	callstack 0
 12153                           
 12154 ;; *************** function _FVR_IsOutputReady *****************
 12155 ;; Defined at:
 12156 ;;		line 64 in file "mcc_generated_files/fvr.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;		None
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      _Bool 
 12163 ;; Registers used:
 12164 ;;		wreg
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12170 ;;      Params:         0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0
 12173 ;;      Totals:         0       0       0       0       0
 12174 ;;Total ram usage:        0 bytes
 12175 ;; Hardware stack levels used: 1
 12176 ;; Hardware stack levels required when called: 15
 12177 ;; This function calls:
 12178 ;;		Nothing
 12179 ;; This function is called by:
 12180 ;;		_analog_set_pos_ref
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text37
 12185   0019F2                     __ptext37:
 12186                           	callstack 0
 12187   0019F2                     _FVR_IsOutputReady:
 12188                           	callstack 13
 12189                           
 12190                           ;mcc_generated_files/fvr.c: 66:     return (FVRCONbits.FVRRDY);
 12191                           
 12192                           ;incstack = 0
 12193   0019F2  010F               	movlb	15	; () banked
 12194   0019F4  AD2C               	btfss	44,6,b	;volatile
 12195   0019F6  D002               	goto	u2700
 12196   0019F8  0E01               	movlw	1
 12197   0019FA  0012               	return	
 12198   0019FC                     u2700:
 12199   0019FC  0E00               	movlw	0
 12200                           
 12201                           ; BSR set to: 15
 12202   0019FE  0012               	return		;funcret
 12203   001A00                     __end_of_FVR_IsOutputReady:
 12204                           	callstack 0
 12205                           
 12206 ;; *************** function ___awdiv *****************
 12207 ;; Defined at:
 12208 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;  dividend        2  [STACK] int 
 12211 ;;  divisor         2  [STACK] int 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  quotient        2  [STACK] int 
 12214 ;;  sign            1  [STACK] unsigned char 
 12215 ;;  counter         1  [STACK] unsigned char 
 12216 ;; Return value:  Size  Location     Type
 12217 ;;                  2  [STACK] int 
 12218 ;; Registers used:
 12219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12220 ;; Tracked objects:
 12221 ;;		On entry : 0/0
 12222 ;;		On exit  : 0/0
 12223 ;;		Unchanged: 0/0
 12224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12225 ;;      Params:         0       0       0       0       0
 12226 ;;      Locals:         0       0       0       0       0
 12227 ;;      Temps:          0       0       0       0       0
 12228 ;;      Totals:         0       0       0       0       0
 12229 ;;Total ram usage:        0 bytes
 12230 ;; Hardware stack levels used: 1
 12231 ;; Hardware stack levels required when called: 15
 12232 ;; This function calls:
 12233 ;;		Nothing
 12234 ;; This function is called by:
 12235 ;;		_analog_handler
 12236 ;;		_vfpfcnvrt
 12237 ;; This function uses a reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text38
 12241   000794                     __ptext38:
 12242                           	callstack 0
 12243   000794                     ___awdiv:
 12244                           	callstack 0
 12245                           
 12246                           ; BSR set to: 15
 12247                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12248   000794  52E6               	movf	postinc1,f,c
 12249   000796  52E6               	movf	postinc1,f,c
 12250   000798  52E6               	movf	postinc1,f,c
 12251   00079A  52E6               	movf	postinc1,f,c
 12252                           
 12253                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 12254                           
 12255                           ;incstack = 0
 12256 ;; hardware stack exceeded
 12257   00079C  0EFE               	movlw	-2
 12258   00079E  6AE3               	clrf	plusw1,c
 12259                           
 12260                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12261   0007A0  0EF9               	movlw	-7
 12262   0007A2  AEE3               	btfss	plusw1,7,c
 12263   0007A4  D009               	goto	l3648
 12264                           
 12265                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12266                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12267   0007A6  0EF8               	movlw	-8
 12268   0007A8  6CE3               	negf	plusw1,c
 12269   0007AA  0EF9               	movlw	-7
 12270   0007AC  1EE3               	comf	plusw1,f,c
 12271   0007AE  B0D8               	btfsc	status,0,c
 12272   0007B0  2AE3               	incf	plusw1,f,c
 12273                           
 12274                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 12275   0007B2  0EFE               	movlw	-2
 12276   0007B4  6AE3               	clrf	plusw1,c
 12277   0007B6  2AE3               	incf	plusw1,f,c
 12278   0007B8                     l3648:
 12279                           
 12280                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 12281   0007B8  0EFB               	movlw	-5
 12282   0007BA  AEE3               	btfss	plusw1,7,c
 12283   0007BC  D008               	goto	l3654
 12284                           
 12285                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 12286                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 12287   0007BE  0EFA               	movlw	-6
 12288   0007C0  6CE3               	negf	plusw1,c
 12289   0007C2  0EFB               	movlw	-5
 12290   0007C4  1EE3               	comf	plusw1,f,c
 12291   0007C6  B0D8               	btfsc	status,0,c
 12292   0007C8  2AE3               	incf	plusw1,f,c
 12293                           
 12294                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 12295   0007CA  0EFE               	movlw	-2
 12296   0007CC  70E3               	btg	plusw1,0,c
 12297   0007CE                     l3654:
 12298                           
 12299                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12300   0007CE  0EFC               	movlw	-4
 12301   0007D0  6AE3               	clrf	plusw1,c
 12302   0007D2  0EFD               	movlw	-3
 12303   0007D4  6AE3               	clrf	plusw1,c
 12304                           
 12305                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12306   0007D6  0EF8               	movlw	-8
 12307   0007D8  CFE3 F037          	movff	plusw1,btemp
 12308   0007DC  0EF9               	movlw	-7
 12309   0007DE  50E3               	movf	plusw1,w,c
 12310   0007E0  1037               	iorwf	btemp^0,w,c
 12311   0007E2  B4D8               	btfsc	status,2,c
 12312   0007E4  D05B               	goto	u1910
 12313                           
 12314                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 12315   0007E6  0EFF               	movlw	-1
 12316   0007E8  6AE3               	clrf	plusw1,c
 12317   0007EA  D010               	goto	L4
 12318   0007EC                     l3660:
 12319                           
 12320                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12321   0007EC  0EF8               	movlw	-8
 12322   0007EE  50E3               	movf	plusw1,w,c
 12323   0007F0  90D8               	bcf	status,0,c
 12324   0007F2  34E8               	rlcf	wreg,w,c
 12325   0007F4  6E37               	movwf	btemp^0,c
 12326   0007F6  0EF8               	movlw	-8
 12327   0007F8  C037  FFE3         	movff	btemp,plusw1
 12328   0007FC  0EF9               	movlw	-7
 12329   0007FE  50E3               	movf	plusw1,w,c
 12330   000800  34E8               	rlcf	wreg,w,c
 12331   000802  6E37               	movwf	btemp^0,c
 12332   000804  0EF9               	movlw	-7
 12333   000806  C037  FFE3         	movff	btemp,plusw1
 12334                           
 12335                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 12336   00080A  0EFF               	movlw	-1
 12337   00080C                     L4:
 12338   00080C  2AE3               	incf	plusw1,f,c
 12339                           
 12340                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12341   00080E  0EF9               	movlw	-7
 12342   000810  AEE3               	btfss	plusw1,7,c
 12343   000812  D7EC               	goto	l3660
 12344   000814                     u1890:
 12345                           
 12346                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12347   000814  0EFC               	movlw	-4
 12348   000816  50E3               	movf	plusw1,w,c
 12349   000818  90D8               	bcf	status,0,c
 12350   00081A  34E8               	rlcf	wreg,w,c
 12351   00081C  6E37               	movwf	btemp^0,c
 12352   00081E  0EFC               	movlw	-4
 12353   000820  C037  FFE3         	movff	btemp,plusw1
 12354   000824  0EFD               	movlw	-3
 12355   000826  50E3               	movf	plusw1,w,c
 12356   000828  34E8               	rlcf	wreg,w,c
 12357   00082A  6E37               	movwf	btemp^0,c
 12358   00082C  0EFD               	movlw	-3
 12359   00082E  C037  FFE3         	movff	btemp,plusw1
 12360                           
 12361                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12362   000832  0EF8               	movlw	-8
 12363   000834  CFE3 F041          	movff	plusw1,btemp+10
 12364   000838  0EF9               	movlw	-7
 12365   00083A  CFE3 F042          	movff	plusw1,btemp+11
 12366                           
 12367                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 12368   00083E  0EFA               	movlw	-6
 12369   000840  CFE3 F03F          	movff	plusw1,btemp+8
 12370   000844  0EFB               	movlw	-5
 12371   000846  CFE3 F040          	movff	plusw1,btemp+9
 12372   00084A  5041               	movf	(btemp+10)^0,w,c
 12373   00084C  5C3F               	subwf	(btemp+8)^0,w,c
 12374   00084E  5042               	movf	(btemp+11)^0,w,c
 12375   000850  5840               	subwfb	(btemp+9)^0,w,c
 12376   000852  A0D8               	btfss	status,0,c
 12377   000854  D014               	goto	l3674
 12378                           
 12379                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12380                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 12381   000856  0EFA               	movlw	-6
 12382   000858  50E3               	movf	plusw1,w,c
 12383   00085A  6E37               	movwf	btemp^0,c
 12384   00085C  0EF8               	movlw	-8
 12385   00085E  50E3               	movf	plusw1,w,c
 12386   000860  5E37               	subwf	btemp^0,f,c
 12387   000862  0EFA               	movlw	-6
 12388   000864  C037  FFE3         	movff	btemp,plusw1
 12389   000868  0EFB               	movlw	-5
 12390   00086A  50E3               	movf	plusw1,w,c
 12391   00086C  6E37               	movwf	btemp^0,c
 12392   00086E  0EF9               	movlw	-7
 12393   000870  50E3               	movf	plusw1,w,c
 12394   000872  5A37               	subwfb	btemp^0,f,c
 12395   000874  0EFB               	movlw	-5
 12396   000876  C037  FFE3         	movff	btemp,plusw1
 12397                           
 12398                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12399   00087A  0EFC               	movlw	-4
 12400   00087C  80E3               	bsf	plusw1,0,c
 12401   00087E                     l3674:
 12402                           
 12403                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 12404   00087E  90D8               	bcf	status,0,c
 12405   000880  0EF9               	movlw	-7
 12406   000882  32E3               	rrcf	plusw1,f,c
 12407   000884  0EF8               	movlw	-8
 12408   000886  32E3               	rrcf	plusw1,f,c
 12409                           
 12410                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 12411   000888  0EFF               	movlw	-1
 12412   00088A  50E3               	movf	plusw1,w,c
 12413   00088C  6E37               	movwf	btemp^0,c
 12414   00088E  0E01               	movlw	1
 12415   000890  5E37               	subwf	btemp^0,f,c
 12416   000892  0EFF               	movlw	-1
 12417   000894  C037  FFE3         	movff	btemp,plusw1
 12418   000898  A4D8               	btfss	status,2,c
 12419   00089A  D7BC               	goto	u1890
 12420   00089C                     u1910:
 12421                           
 12422                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 12423   00089C  0EFE               	movlw	-2
 12424   00089E  50E3               	movf	plusw1,w,c
 12425   0008A0  B4D8               	btfsc	status,2,c
 12426   0008A2  D006               	goto	l3682
 12427                           
 12428                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12429                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12430   0008A4  0EFC               	movlw	-4
 12431   0008A6  6CE3               	negf	plusw1,c
 12432   0008A8  0EFD               	movlw	-3
 12433   0008AA  1EE3               	comf	plusw1,f,c
 12434   0008AC  B0D8               	btfsc	status,0,c
 12435   0008AE  2AE3               	incf	plusw1,f,c
 12436   0008B0                     l3682:
 12437                           
 12438                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 12439   0008B0  0EFC               	movlw	-4
 12440   0008B2  CFE3 F037          	movff	plusw1,btemp
 12441   0008B6  0EFD               	movlw	-3
 12442   0008B8  CFE3 F038          	movff	plusw1,btemp+1
 12443                           
 12444                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12445   0008BC  0EF8               	movlw	248
 12446   0008BE  26E1               	addwf	fsr1l,f,c
 12447   0008C0  0EFF               	movlw	255
 12448   0008C2  22E2               	addwfc	fsr1h,f,c
 12449   0008C4  0012               	return		;funcret
 12450   0008C6                     __end_of___awdiv:
 12451                           	callstack 0
 12452                           
 12453 ;; *************** function _ADCC_StartConversion *****************
 12454 ;; Defined at:
 12455 ;;		line 107 in file "mcc_generated_files/adcc.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  channel         1    wreg     enum E9512
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  channel         1    0[BANK0 ] enum E9512
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      void 
 12462 ;; Registers used:
 12463 ;;		wreg
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12469 ;;      Params:         0       0       0       0       0
 12470 ;;      Locals:         0       1       0       0       0
 12471 ;;      Temps:          0       0       0       0       0
 12472 ;;      Totals:         0       1       0       0       0
 12473 ;;Total ram usage:        1 bytes
 12474 ;; Hardware stack levels used: 1
 12475 ;; Hardware stack levels required when called: 15
 12476 ;; This function calls:
 12477 ;;		Nothing
 12478 ;; This function is called by:
 12479 ;;		_analog_handler
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text39
 12484   00198C                     __ptext39:
 12485                           	callstack 0
 12486   00198C                     _ADCC_StartConversion:
 12487                           	callstack 14
 12488                           
 12489                           ;incstack = 0
 12490                           ;ADCC_StartConversion@channel stored from wreg
 12491   00198C  0100               	movlb	0	; () banked
 12492   00198E  6FDA               	movwf	ADCC_StartConversion@channel& (0+255),b
 12493                           
 12494                           ;mcc_generated_files/adcc.c: 107: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 108: {;mcc_generated_files/adcc.c: 110:     ADPCH = channel;
 12495   001990  C0DA  FF5A         	movff	ADCC_StartConversion@channel,3930	;volatile
 12496                           
 12497                           ;mcc_generated_files/adcc.c: 113:     ADCON0bits.ADON = 1;
 12498   001994  010F               	movlb	15	; () banked
 12499   001996  8F5B               	bsf	91,7,b	;volatile
 12500                           
 12501                           ; BSR set to: 15
 12502                           ;mcc_generated_files/adcc.c: 116:     ADCON0bits.ADGO = 1;
 12503   001998  815B               	bsf	91,0,b	;volatile
 12504                           
 12505                           ; BSR set to: 15
 12506   00199A  0012               	return		;funcret
 12507   00199C                     __end_of_ADCC_StartConversion:
 12508                           	callstack 0
 12509                           
 12510 ;; *************** function _ADCC_IsConversionDone *****************
 12511 ;; Defined at:
 12512 ;;		line 119 in file "mcc_generated_files/adcc.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;		None
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;		None
 12517 ;; Return value:  Size  Location     Type
 12518 ;;                  1    wreg      _Bool 
 12519 ;; Registers used:
 12520 ;;		wreg
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12526 ;;      Params:         0       0       0       0       0
 12527 ;;      Locals:         0       0       0       0       0
 12528 ;;      Temps:          0       0       0       0       0
 12529 ;;      Totals:         0       0       0       0       0
 12530 ;;Total ram usage:        0 bytes
 12531 ;; Hardware stack levels used: 1
 12532 ;; Hardware stack levels required when called: 15
 12533 ;; This function calls:
 12534 ;;		Nothing
 12535 ;; This function is called by:
 12536 ;;		_analog_handler
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           	psect	text40
 12541   001A00                     __ptext40:
 12542                           	callstack 0
 12543   001A00                     _ADCC_IsConversionDone:
 12544                           	callstack 14
 12545                           
 12546                           ;mcc_generated_files/adcc.c: 122:     return ((unsigned char)(!ADCON0bits.ADGO));
 12547                           
 12548                           ; BSR set to: 15
 12549                           ;incstack = 0
 12550   001A00  010F               	movlb	15	; () banked
 12551   001A02  B15B               	btfsc	91,0,b	;volatile
 12552   001A04  D002               	goto	u2850
 12553   001A06  0E01               	movlw	1
 12554   001A08  0012               	return	
 12555   001A0A                     u2850:
 12556   001A0A  0E00               	movlw	0
 12557                           
 12558                           ; BSR set to: 15
 12559   001A0C  0012               	return		;funcret
 12560   001A0E                     __end_of_ADCC_IsConversionDone:
 12561                           	callstack 0
 12562                           
 12563 ;; *************** function _ADCC_GetConversionResult *****************
 12564 ;; Defined at:
 12565 ;;		line 125 in file "mcc_generated_files/adcc.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;		None
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  2    0[BANK0 ] unsigned short 
 12572 ;; Registers used:
 12573 ;;		wreg, status,2, status,0
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12579 ;;      Params:         0       2       0       0       0
 12580 ;;      Locals:         0       0       0       0       0
 12581 ;;      Temps:          0       2       0       0       0
 12582 ;;      Totals:         0       4       0       0       0
 12583 ;;Total ram usage:        4 bytes
 12584 ;; Hardware stack levels used: 1
 12585 ;; Hardware stack levels required when called: 15
 12586 ;; This function calls:
 12587 ;;		Nothing
 12588 ;; This function is called by:
 12589 ;;		_analog_handler
 12590 ;; This function uses a non-reentrant model
 12591 ;;
 12592                           
 12593                           	psect	text41
 12594   00184E                     __ptext41:
 12595                           	callstack 0
 12596   00184E                     _ADCC_GetConversionResult:
 12597                           	callstack 14
 12598                           
 12599                           ;mcc_generated_files/adcc.c: 128:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12600                           
 12601                           ; BSR set to: 15
 12602                           ;incstack = 0
 12603   00184E  010F               	movlb	15	; () banked
 12604   001850  515F               	movf	95,w,b	;volatile
 12605   001852  0100               	movlb	0	; () banked
 12606   001854  6FDD               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),b
 12607   001856  6BDC               	clrf	??_ADCC_GetConversionResult& (0+255),b
 12608   001858  010F               	movlb	15	; () banked
 12609   00185A  515E               	movf	94,w,b	;volatile
 12610   00185C  0100               	movlb	0	; () banked
 12611   00185E  25DC               	addwf	??_ADCC_GetConversionResult& (0+255),w,b
 12612   001860  6FDA               	movwf	?_ADCC_GetConversionResult& (0+255),b
 12613   001862  010F               	movlb	15	; () banked
 12614   001864  0E00               	movlw	0
 12615   001866  0100               	movlb	0	; () banked
 12616   001868  21DD               	addwfc	(??_ADCC_GetConversionResult+1)& (0+255),w,b
 12617   00186A  6FDB               	movwf	(?_ADCC_GetConversionResult+1)& (0+255),b
 12618                           
 12619                           ; BSR set to: 0
 12620   00186C  0012               	return		;funcret
 12621   00186E                     __end_of_ADCC_GetConversionResult:
 12622                           	callstack 0
 12623                           
 12624 ;; *************** function _SYSTEM_Initialize *****************
 12625 ;; Defined at:
 12626 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;		None
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;		None
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  1    wreg      void 
 12633 ;; Registers used:
 12634 ;;		wreg, status,2, status,0, cstack
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12640 ;;      Params:         0       0       0       0       0
 12641 ;;      Locals:         0       0       0       0       0
 12642 ;;      Temps:          0       0       0       0       0
 12643 ;;      Totals:         0       0       0       0       0
 12644 ;;Total ram usage:        0 bytes
 12645 ;; Hardware stack levels used: 1
 12646 ;; Hardware stack levels required when called: 17
 12647 ;; This function calls:
 12648 ;;		_ADCC_Initialize
 12649 ;;		_DAC1_Initialize
 12650 ;;		_EUSART1_Initialize
 12651 ;;		_FVR_Initialize
 12652 ;;		_I2C1_Initialize
 12653 ;;		_INTERRUPT_Initialize
 12654 ;;		_OSCILLATOR_Initialize
 12655 ;;		_PIN_MANAGER_Initialize
 12656 ;;		_PMD_Initialize
 12657 ;;		_PWM3_Initialize
 12658 ;;		_PWM4_Initialize
 12659 ;;		_TMR2_Initialize
 12660 ;; This function is called by:
 12661 ;;		_main
 12662 ;; This function uses a non-reentrant model
 12663 ;;
 12664                           
 12665                           	psect	text42
 12666   0016D4                     __ptext42:
 12667                           	callstack 0
 12668   0016D4                     _SYSTEM_Initialize:
 12669                           	callstack 13
 12670                           
 12671                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;incstack = 0
 12675   0016D4  EC9C  F00D         	call	_INTERRUPT_Initialize	;wreg free
 12676                           
 12677                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12678   0016D8  ECCE  F00C         	call	_PMD_Initialize	;wreg free
 12679                           
 12680                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 12681   0016DC  EC07  F00D         	call	_I2C1_Initialize	;wreg free
 12682                           
 12683                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12684   0016E0  ECC7  F009         	call	_PIN_MANAGER_Initialize	;wreg free
 12685                           
 12686                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12687   0016E4  ECAC  F00C         	call	_OSCILLATOR_Initialize	;wreg free
 12688                           
 12689                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
 12690   0016E8  EC72  F00D         	call	_FVR_Initialize	;wreg free
 12691                           
 12692                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12693   0016EC  EC50  F00B         	call	_ADCC_Initialize	;wreg free
 12694                           
 12695                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12696   0016F0  EC83  F00C         	call	_PWM4_Initialize	;wreg free
 12697                           
 12698                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12699   0016F4  EC8E  F00C         	call	_PWM3_Initialize	;wreg free
 12700                           
 12701                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 12702   0016F8  EC0E  F00D         	call	_DAC1_Initialize	;wreg free
 12703                           
 12704                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 12705   0016FC  EC78  F00C         	call	_TMR2_Initialize	;wreg free
 12706                           
 12707                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12708   001700  ECCD  F008         	call	_EUSART1_Initialize	;wreg free
 12709   001704  0012               	return		;funcret
 12710   001706                     __end_of_SYSTEM_Initialize:
 12711                           	callstack 0
 12712                           
 12713 ;; *************** function _TMR2_Initialize *****************
 12714 ;; Defined at:
 12715 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;		None
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		wreg, status,2
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12729 ;;      Params:         0       0       0       0       0
 12730 ;;      Locals:         0       0       0       0       0
 12731 ;;      Temps:          0       0       0       0       0
 12732 ;;      Totals:         0       0       0       0       0
 12733 ;;Total ram usage:        0 bytes
 12734 ;; Hardware stack levels used: 1
 12735 ;; Hardware stack levels required when called: 15
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_SYSTEM_Initialize
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           	psect	text43
 12744   0018F0                     __ptext43:
 12745                           	callstack 0
 12746   0018F0                     _TMR2_Initialize:
 12747                           	callstack 14
 12748                           
 12749                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12750                           
 12751                           ;incstack = 0
 12752   0018F0  0E01               	movlw	1
 12753   0018F2  6EBE               	movwf	190,c	;volatile
 12754                           
 12755                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12756   0018F4  6ABD               	clrf	189,c	;volatile
 12757                           
 12758                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12759   0018F6  6ABF               	clrf	191,c	;volatile
 12760                           
 12761                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12762   0018F8  68BB               	setf	187,c	;volatile
 12763                           
 12764                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12765   0018FA  6ABA               	clrf	186,c	;volatile
 12766                           
 12767                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12768   0018FC  010E               	movlb	14	; () banked
 12769   0018FE  93C9               	bcf	201,1,b	;volatile
 12770                           
 12771                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 12772   001900  0E80               	movlw	128
 12773   001902  6EBC               	movwf	188,c	;volatile
 12774                           
 12775                           ; BSR set to: 14
 12776   001904  0012               	return		;funcret
 12777   001906                     __end_of_TMR2_Initialize:
 12778                           	callstack 0
 12779                           
 12780 ;; *************** function _PWM4_Initialize *****************
 12781 ;; Defined at:
 12782 ;;		line 58 in file "mcc_generated_files/pwm4.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;		None
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;		None
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  1    wreg      void 
 12789 ;; Registers used:
 12790 ;;		wreg, status,2
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12796 ;;      Params:         0       0       0       0       0
 12797 ;;      Locals:         0       0       0       0       0
 12798 ;;      Temps:          0       0       0       0       0
 12799 ;;      Totals:         0       0       0       0       0
 12800 ;;Total ram usage:        0 bytes
 12801 ;; Hardware stack levels used: 1
 12802 ;; Hardware stack levels required when called: 15
 12803 ;; This function calls:
 12804 ;;		Nothing
 12805 ;; This function is called by:
 12806 ;;		_SYSTEM_Initialize
 12807 ;; This function uses a non-reentrant model
 12808 ;;
 12809                           
 12810                           	psect	text44
 12811   001906                     __ptext44:
 12812                           	callstack 0
 12813   001906                     _PWM4_Initialize:
 12814                           	callstack 14
 12815                           
 12816                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
 12817                           
 12818                           ; BSR set to: 14
 12819                           ;incstack = 0
 12820   001906  0E80               	movlw	128
 12821   001908  6EA1               	movwf	161,c	;volatile
 12822                           
 12823                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
 12824   00190A  0E7F               	movlw	127
 12825   00190C  6EA0               	movwf	160,c	;volatile
 12826                           
 12827                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
 12828   00190E  0EC0               	movlw	192
 12829   001910  6E9F               	movwf	159,c	;volatile
 12830                           
 12831                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 1;
 12832   001912  50AD               	movf	173,w,c	;volatile
 12833   001914  0B3F               	andlw	-193
 12834   001916  0940               	iorlw	64
 12835   001918  6EAD               	movwf	173,c	;volatile
 12836   00191A  0012               	return		;funcret
 12837   00191C                     __end_of_PWM4_Initialize:
 12838                           	callstack 0
 12839                           
 12840 ;; *************** function _PWM3_Initialize *****************
 12841 ;; Defined at:
 12842 ;;		line 58 in file "mcc_generated_files/pwm3.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;		None
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, status,2
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12856 ;;      Params:         0       0       0       0       0
 12857 ;;      Locals:         0       0       0       0       0
 12858 ;;      Temps:          0       0       0       0       0
 12859 ;;      Totals:         0       0       0       0       0
 12860 ;;Total ram usage:        0 bytes
 12861 ;; Hardware stack levels used: 1
 12862 ;; Hardware stack levels required when called: 15
 12863 ;; This function calls:
 12864 ;;		Nothing
 12865 ;; This function is called by:
 12866 ;;		_SYSTEM_Initialize
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text45
 12871   00191C                     __ptext45:
 12872                           	callstack 0
 12873   00191C                     _PWM3_Initialize:
 12874                           	callstack 14
 12875                           
 12876                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
 12877                           
 12878                           ;incstack = 0
 12879   00191C  0E80               	movlw	128
 12880   00191E  6EA4               	movwf	164,c	;volatile
 12881                           
 12882                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
 12883   001920  0E7F               	movlw	127
 12884   001922  6EA3               	movwf	163,c	;volatile
 12885                           
 12886                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
 12887   001924  0EC0               	movlw	192
 12888   001926  6EA2               	movwf	162,c	;volatile
 12889                           
 12890                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 1;
 12891   001928  50AD               	movf	173,w,c	;volatile
 12892   00192A  0BCF               	andlw	-49
 12893   00192C  0910               	iorlw	16
 12894   00192E  6EAD               	movwf	173,c	;volatile
 12895   001930  0012               	return		;funcret
 12896   001932                     __end_of_PWM3_Initialize:
 12897                           	callstack 0
 12898                           
 12899 ;; *************** function _PMD_Initialize *****************
 12900 ;; Defined at:
 12901 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		None
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12915 ;;      Params:         0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; Hardware stack levels required when called: 15
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_SYSTEM_Initialize
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text46
 12930   00199C                     __ptext46:
 12931                           	callstack 0
 12932   00199C                     _PMD_Initialize:
 12933                           	callstack 14
 12934                           
 12935                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12936                           
 12937                           ;incstack = 0
 12938   00199C  010E               	movlb	14	; () banked
 12939   00199E  6BDC               	clrf	220,b	;volatile
 12940                           
 12941                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12942   0019A0  6BDD               	clrf	221,b	;volatile
 12943                           
 12944                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12945   0019A2  6BDE               	clrf	222,b	;volatile
 12946                           
 12947                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12948   0019A4  6BDF               	clrf	223,b	;volatile
 12949                           
 12950                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12951   0019A6  6BE0               	clrf	224,b	;volatile
 12952                           
 12953                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12954   0019A8  6BE1               	clrf	225,b	;volatile
 12955                           
 12956                           ; BSR set to: 14
 12957   0019AA  0012               	return		;funcret
 12958   0019AC                     __end_of_PMD_Initialize:
 12959                           	callstack 0
 12960                           
 12961 ;; *************** function _PIN_MANAGER_Initialize *****************
 12962 ;; Defined at:
 12963 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;		None
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  1    wreg      void 
 12970 ;; Registers used:
 12971 ;;		wreg, status,2
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12977 ;;      Params:         0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0
 12980 ;;      Totals:         0       0       0       0       0
 12981 ;;Total ram usage:        0 bytes
 12982 ;; Hardware stack levels used: 1
 12983 ;; Hardware stack levels required when called: 15
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_SYSTEM_Initialize
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text47
 12992   00138E                     __ptext47:
 12993                           	callstack 0
 12994   00138E                     _PIN_MANAGER_Initialize:
 12995                           	callstack 14
 12996                           
 12997                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12998                           
 12999                           ; BSR set to: 14
 13000                           ;incstack = 0
 13001   00138E  6A82               	clrf	130,c	;volatile
 13002                           
 13003                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 13004   001390  6A83               	clrf	131,c	;volatile
 13005                           
 13006                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 13007   001392  6A84               	clrf	132,c	;volatile
 13008                           
 13009                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
 13010   001394  6887               	setf	135,c	;volatile
 13011                           
 13012                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
 13013   001396  0EDF               	movlw	223
 13014   001398  6E88               	movwf	136,c	;volatile
 13015                           
 13016                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
 13017   00139A  6889               	setf	137,c	;volatile
 13018                           
 13019                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 13020   00139C  010F               	movlb	15	; () banked
 13021   00139E  6B1C               	clrf	28,b	;volatile
 13022                           
 13023                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 13024   0013A0  0E80               	movlw	128
 13025   0013A2  6F14               	movwf	20,b	;volatile
 13026                           
 13027                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x04;
 13028   0013A4  0E04               	movlw	4
 13029   0013A6  6F0C               	movwf	12,b	;volatile
 13030                           
 13031                           ; BSR set to: 15
 13032                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 13033   0013A8  6B28               	clrf	40,b	;volatile
 13034                           
 13035                           ; BSR set to: 15
 13036                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 13037   0013AA  6B13               	clrf	19,b	;volatile
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 13041   0013AC  6B0B               	clrf	11,b	;volatile
 13042                           
 13043                           ; BSR set to: 15
 13044                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 13045   0013AE  6B1B               	clrf	27,b	;volatile
 13046                           
 13047                           ; BSR set to: 15
 13048                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 13049   0013B0  6B0A               	clrf	10,b	;volatile
 13050                           
 13051                           ; BSR set to: 15
 13052                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 13053   0013B2  6B12               	clrf	18,b	;volatile
 13054                           
 13055                           ; BSR set to: 15
 13056                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 13057   0013B4  6B1A               	clrf	26,b	;volatile
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 13061   0013B6  6909               	setf	9,b	;volatile
 13062                           
 13063                           ; BSR set to: 15
 13064                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 13065   0013B8  6911               	setf	17,b	;volatile
 13066                           
 13067                           ; BSR set to: 15
 13068                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 13069   0013BA  6919               	setf	25,b	;volatile
 13070                           
 13071                           ; BSR set to: 15
 13072                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 13073   0013BC  6908               	setf	8,b	;volatile
 13074                           
 13075                           ; BSR set to: 15
 13076                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 13077   0013BE  6910               	setf	16,b	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 13081   0013C0  6918               	setf	24,b	;volatile
 13082                           
 13083                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 13084   0013C2  0E08               	movlw	8
 13085   0013C4  6F25               	movwf	37,b	;volatile
 13086                           
 13087                           ;mcc_generated_files/pin_manager.c: 115:     RX1PPS = 0x0E;
 13088   0013C6  0E0E               	movlw	14
 13089   0013C8  010E               	movlb	14	; () banked
 13090   0013CA  6FB0               	movwf	176,b	;volatile
 13091                           
 13092                           ;mcc_generated_files/pin_manager.c: 116:     SSPDATPPS = 0x14;
 13093   0013CC  0E14               	movlw	20
 13094   0013CE  6FB3               	movwf	179,b	;volatile
 13095                           
 13096                           ;mcc_generated_files/pin_manager.c: 117:     RC3PPS = 0x0D;
 13097   0013D0  0E0D               	movlw	13
 13098   0013D2  6FF5               	movwf	245,b	;volatile
 13099                           
 13100                           ;mcc_generated_files/pin_manager.c: 118:     RB5PPS = 0x09;
 13101   0013D4  0E09               	movlw	9
 13102   0013D6  6FEF               	movwf	239,b	;volatile
 13103                           
 13104                           ;mcc_generated_files/pin_manager.c: 119:     RC4PPS = 0x0E;
 13105   0013D8  0E0E               	movlw	14
 13106   0013DA  6FF6               	movwf	246,b	;volatile
 13107                           
 13108                           ;mcc_generated_files/pin_manager.c: 120:     SSPCLKPPS = 0x13;
 13109   0013DC  0E13               	movlw	19
 13110   0013DE  6FB2               	movwf	178,b	;volatile
 13111                           
 13112                           ; BSR set to: 14
 13113   0013E0  0012               	return		;funcret
 13114   0013E2                     __end_of_PIN_MANAGER_Initialize:
 13115                           	callstack 0
 13116                           
 13117 ;; *************** function _OSCILLATOR_Initialize *****************
 13118 ;; Defined at:
 13119 ;;		line 66 in file "mcc_generated_files/mcc.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;		None
 13122 ;; Auto vars:     Size  Location     Type
 13123 ;;		None
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      void 
 13126 ;; Registers used:
 13127 ;;		wreg, status,2
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13133 ;;      Params:         0       0       0       0       0
 13134 ;;      Locals:         0       0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0
 13136 ;;      Totals:         0       0       0       0       0
 13137 ;;Total ram usage:        0 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 15
 13140 ;; This function calls:
 13141 ;;		Nothing
 13142 ;; This function is called by:
 13143 ;;		_SYSTEM_Initialize
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text48
 13148   001958                     __ptext48:
 13149                           	callstack 0
 13150   001958                     _OSCILLATOR_Initialize:
 13151                           	callstack 14
 13152                           
 13153                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x61;
 13154                           
 13155                           ; BSR set to: 14
 13156                           ;incstack = 0
 13157   001958  0E61               	movlw	97
 13158   00195A  010E               	movlb	14	; () banked
 13159   00195C  6FD3               	movwf	211,b	;volatile
 13160                           
 13161                           ; BSR set to: 14
 13162                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 13163   00195E  6BD5               	clrf	213,b	;volatile
 13164                           
 13165                           ; BSR set to: 14
 13166                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 13167   001960  6BD7               	clrf	215,b	;volatile
 13168                           
 13169                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 13170   001962  0E06               	movlw	6
 13171   001964  6FD9               	movwf	217,b	;volatile
 13172                           
 13173                           ; BSR set to: 14
 13174                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 13175   001966  6BD8               	clrf	216,b	;volatile
 13176                           
 13177                           ; BSR set to: 14
 13178   001968  0012               	return		;funcret
 13179   00196A                     __end_of_OSCILLATOR_Initialize:
 13180                           	callstack 0
 13181                           
 13182 ;; *************** function _INTERRUPT_Initialize *****************
 13183 ;; Defined at:
 13184 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;		None
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      void 
 13191 ;; Registers used:
 13192 ;;		None
 13193 ;; Tracked objects:
 13194 ;;		On entry : 0/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13198 ;;      Params:         0       0       0       0       0
 13199 ;;      Locals:         0       0       0       0       0
 13200 ;;      Temps:          0       0       0       0       0
 13201 ;;      Totals:         0       0       0       0       0
 13202 ;;Total ram usage:        0 bytes
 13203 ;; Hardware stack levels used: 1
 13204 ;; Hardware stack levels required when called: 15
 13205 ;; This function calls:
 13206 ;;		Nothing
 13207 ;; This function is called by:
 13208 ;;		_SYSTEM_Initialize
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	text49
 13213   001B38                     __ptext49:
 13214                           	callstack 0
 13215   001B38                     _INTERRUPT_Initialize:
 13216                           	callstack 14
 13217                           
 13218                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 13219                           
 13220                           ; BSR set to: 14
 13221                           ;incstack = 0
 13222   001B38  9AF2               	bcf	242,5,c	;volatile
 13223   001B3A  0012               	return		;funcret
 13224   001B3C                     __end_of_INTERRUPT_Initialize:
 13225                           	callstack 0
 13226                           
 13227 ;; *************** function _I2C1_Initialize *****************
 13228 ;; Defined at:
 13229 ;;		line 108 in file "mcc_generated_files/i2c1_slave.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;		None
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1    wreg      void 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13243 ;;      Params:         0       0       0       0       0
 13244 ;;      Locals:         0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0
 13246 ;;      Totals:         0       0       0       0       0
 13247 ;;Total ram usage:        0 bytes
 13248 ;; Hardware stack levels used: 1
 13249 ;; Hardware stack levels required when called: 15
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_SYSTEM_Initialize
 13254 ;;		_I2C1_Enable
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text50
 13259   001A0E                     __ptext50:
 13260                           	callstack 0
 13261   001A0E                     _I2C1_Initialize:
 13262                           	callstack 14
 13263                           
 13264                           ;mcc_generated_files/i2c1_slave.c: 110:     SSP1STAT = 0x00;
 13265                           
 13266                           ;incstack = 0
 13267   001A0E  6A94               	clrf	148,c	;volatile
 13268                           
 13269                           ;mcc_generated_files/i2c1_slave.c: 111:     SSP1CON1 |= 0x06;
 13270   001A10  0E06               	movlw	6
 13271   001A12  1295               	iorwf	149,f,c	;volatile
 13272                           
 13273                           ;mcc_generated_files/i2c1_slave.c: 112:     SSP1CON2 = 0x81;
 13274   001A14  0E81               	movlw	129
 13275   001A16  6E96               	movwf	150,c	;volatile
 13276                           
 13277                           ;mcc_generated_files/i2c1_slave.c: 113:     SSP1CON1bits.SSPEN = 0;
 13278   001A18  9A95               	bcf	149,5,c	;volatile
 13279   001A1A  0012               	return		;funcret
 13280   001A1C                     __end_of_I2C1_Initialize:
 13281                           	callstack 0
 13282                           
 13283 ;; *************** function _FVR_Initialize *****************
 13284 ;; Defined at:
 13285 ;;		line 58 in file "mcc_generated_files/fvr.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;		None
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		wreg, status,2
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13299 ;;      Params:         0       0       0       0       0
 13300 ;;      Locals:         0       0       0       0       0
 13301 ;;      Temps:          0       0       0       0       0
 13302 ;;      Totals:         0       0       0       0       0
 13303 ;;Total ram usage:        0 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; Hardware stack levels required when called: 15
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		_SYSTEM_Initialize
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text51
 13314   001AE4                     __ptext51:
 13315                           	callstack 0
 13316   001AE4                     _FVR_Initialize:
 13317                           	callstack 14
 13318                           
 13319                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x8A;
 13320                           
 13321                           ;incstack = 0
 13322   001AE4  0E8A               	movlw	138
 13323   001AE6  010F               	movlb	15	; () banked
 13324   001AE8  6F2C               	movwf	44,b	;volatile
 13325                           
 13326                           ; BSR set to: 15
 13327   001AEA  0012               	return		;funcret
 13328   001AEC                     __end_of_FVR_Initialize:
 13329                           	callstack 0
 13330                           
 13331 ;; *************** function _EUSART1_Initialize *****************
 13332 ;; Defined at:
 13333 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;		None
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      void 
 13340 ;; Registers used:
 13341 ;;		wreg, status,2, status,0, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13347 ;;      Params:         0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0
 13350 ;;      Totals:         0       0       0       0       0
 13351 ;;Total ram usage:        0 bytes
 13352 ;; Hardware stack levels used: 1
 13353 ;; Hardware stack levels required when called: 16
 13354 ;; This function calls:
 13355 ;;		_EUSART1_SetErrorHandler
 13356 ;;		_EUSART1_SetFramingErrorHandler
 13357 ;;		_EUSART1_SetOverrunErrorHandler
 13358 ;;		_EUSART1_SetRxInterruptHandler
 13359 ;;		_EUSART1_SetTxInterruptHandler
 13360 ;; This function is called by:
 13361 ;;		_SYSTEM_Initialize
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text52
 13366   00119A                     __ptext52:
 13367                           	callstack 0
 13368   00119A                     _EUSART1_Initialize:
 13369                           	callstack 13
 13370                           
 13371                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 13372                           
 13373                           ; BSR set to: 15
 13374                           ;incstack = 0
 13375   00119A  010E               	movlb	14	; () banked
 13376   00119C  9BC0               	bcf	192,5,b	;volatile
 13377                           
 13378                           ; BSR set to: 14
 13379                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 13380   00119E  0E20               	movlw	low _EUSART1_Receive_ISR
 13381   0011A0  0100               	movlb	0	; () banked
 13382   0011A2  6FDA               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
 13383   0011A4  0E0D               	movlw	high _EUSART1_Receive_ISR
 13384   0011A6  6FDB               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 13385   0011A8  EC4F  F00D         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 13386                           
 13387                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 13388   0011AC  010E               	movlb	14	; () banked
 13389   0011AE  99C0               	bcf	192,4,b	;volatile
 13390                           
 13391                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 13392   0011B0  0EBE               	movlw	low _EUSART1_Transmit_ISR
 13393   0011B2  0100               	movlb	0	; () banked
 13394   0011B4  6FDA               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
 13395   0011B6  0E17               	movlw	high _EUSART1_Transmit_ISR
 13396   0011B8  6FDB               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 13397   0011BA  EC4A  F00D         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 13398                           
 13399                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 13400   0011BE  0E08               	movlw	8
 13401   0011C0  6E9E               	movwf	158,c	;volatile
 13402                           
 13403                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 13404   0011C2  0E90               	movlw	144
 13405   0011C4  6E9C               	movwf	156,c	;volatile
 13406                           
 13407                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 13408   0011C6  0E24               	movlw	36
 13409   0011C8  6E9D               	movwf	157,c	;volatile
 13410                           
 13411                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x22;
 13412   0011CA  0E22               	movlw	34
 13413   0011CC  6E9A               	movwf	154,c	;volatile
 13414                           
 13415                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 13416   0011CE  6A9B               	clrf	155,c	;volatile
 13417                           
 13418                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 13419   0011D0  0E46               	movlw	low _EUSART1_DefaultFramingErrorHandler
 13420   0011D2  0100               	movlb	0	; () banked
 13421   0011D4  6FDA               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 13422   0011D6  0E1B               	movlw	high _EUSART1_DefaultFramingErrorHandler
 13423   0011D8  6FDB               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 13424   0011DA  EC59  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 13425                           
 13426                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 13427   0011DE  0E2C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 13428   0011E0  0100               	movlb	0	; () banked
 13429   0011E2  6FDA               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 13430   0011E4  0E1B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 13431   0011E6  6FDB               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 13432   0011E8  EC54  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 13433                           
 13434                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 13435   0011EC  0E32               	movlw	low _EUSART1_DefaultErrorHandler
 13436   0011EE  0100               	movlb	0	; () banked
 13437   0011F0  6FDA               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 13438   0011F2  0E1B               	movlw	high _EUSART1_DefaultErrorHandler
 13439   0011F4  6FDB               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 13440   0011F6  EC5E  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
 13441                           
 13442                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 13443   0011FA  0100               	movlb	0	; () banked
 13444   0011FC  6BD0               	clrf	_eusart1RxLastError& (0+255),b	;volatile
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 13448   0011FE  6A5F               	clrf	_eusart1TxHead^0,c	;volatile
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 13452   001200  6A5E               	clrf	_eusart1TxTail^0,c	;volatile
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 13456   001202  0E40               	movlw	64
 13457   001204  6E5D               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 13461   001206  6A5C               	clrf	_eusart1RxHead^0,c	;volatile
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 13465   001208  6A5B               	clrf	_eusart1RxTail^0,c	;volatile
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 13469   00120A  6A5A               	clrf	_eusart1RxCount^0,c	;volatile
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 13473   00120C  010E               	movlb	14	; () banked
 13474   00120E  8BC0               	bsf	192,5,b	;volatile
 13475                           
 13476                           ; BSR set to: 14
 13477   001210  0012               	return		;funcret
 13478   001212                     __end_of_EUSART1_Initialize:
 13479                           	callstack 0
 13480                           
 13481 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 13482 ;; Defined at:
 13483 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13486 ;;		 -> EUSART1_Transmit_ISR(1), 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  1    wreg      void 
 13491 ;; Registers used:
 13492 ;;		wreg, status,2, status,0
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13498 ;;      Params:         0       2       0       0       0
 13499 ;;      Locals:         0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0
 13501 ;;      Totals:         0       2       0       0       0
 13502 ;;Total ram usage:        2 bytes
 13503 ;; Hardware stack levels used: 1
 13504 ;; Hardware stack levels required when called: 15
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_EUSART1_Initialize
 13509 ;; This function uses a non-reentrant model
 13510 ;;
 13511                           
 13512                           	psect	text53
 13513   001A94                     __ptext53:
 13514                           	callstack 0
 13515   001A94                     _EUSART1_SetTxInterruptHandler:
 13516                           	callstack 13
 13517                           
 13518                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13519                           
 13520                           ; BSR set to: 14
 13521                           ;incstack = 0
 13522   001A94  C0DA  F0F1         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 13523   001A98  C0DB  F0F2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 13524   001A9C  0012               	return		;funcret
 13525   001A9E                     __end_of_EUSART1_SetTxInterruptHandler:
 13526                           	callstack 0
 13527                           
 13528 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13529 ;; Defined at:
 13530 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13533 ;;		 -> EUSART1_Receive_ISR(1), 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;		None
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		wreg, status,2, status,0
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13545 ;;      Params:         0       2       0       0       0
 13546 ;;      Locals:         0       0       0       0       0
 13547 ;;      Temps:          0       0       0       0       0
 13548 ;;      Totals:         0       2       0       0       0
 13549 ;;Total ram usage:        2 bytes
 13550 ;; Hardware stack levels used: 1
 13551 ;; Hardware stack levels required when called: 15
 13552 ;; This function calls:
 13553 ;;		Nothing
 13554 ;; This function is called by:
 13555 ;;		_EUSART1_Initialize
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           	psect	text54
 13560   001A9E                     __ptext54:
 13561                           	callstack 0
 13562   001A9E                     _EUSART1_SetRxInterruptHandler:
 13563                           	callstack 13
 13564                           
 13565                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13566                           
 13567                           ;incstack = 0
 13568   001A9E  C0DA  F0EF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 13569   001AA2  C0DB  F0F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 13570   001AA6  0012               	return		;funcret
 13571   001AA8                     __end_of_EUSART1_SetRxInterruptHandler:
 13572                           	callstack 0
 13573                           
 13574 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13575 ;; Defined at:
 13576 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13579 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;		None
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  1    wreg      void 
 13584 ;; Registers used:
 13585 ;;		wreg, status,2, status,0
 13586 ;; Tracked objects:
 13587 ;;		On entry : 0/0
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13591 ;;      Params:         0       2       0       0       0
 13592 ;;      Locals:         0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0
 13594 ;;      Totals:         0       2       0       0       0
 13595 ;;Total ram usage:        2 bytes
 13596 ;; Hardware stack levels used: 1
 13597 ;; Hardware stack levels required when called: 15
 13598 ;; This function calls:
 13599 ;;		Nothing
 13600 ;; This function is called by:
 13601 ;;		_EUSART1_Initialize
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text55
 13606   001AA8                     __ptext55:
 13607                           	callstack 0
 13608   001AA8                     _EUSART1_SetOverrunErrorHandler:
 13609                           	callstack 13
 13610                           
 13611                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 13612                           
 13613                           ;incstack = 0
 13614   001AA8  C0DA  F0EB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 13615   001AAC  C0DB  F0EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 13616   001AB0  0012               	return		;funcret
 13617   001AB2                     __end_of_EUSART1_SetOverrunErrorHandler:
 13618                           	callstack 0
 13619                           
 13620 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13621 ;; Defined at:
 13622 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13625 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;		None
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      void 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13637 ;;      Params:         0       2       0       0       0
 13638 ;;      Locals:         0       0       0       0       0
 13639 ;;      Temps:          0       0       0       0       0
 13640 ;;      Totals:         0       2       0       0       0
 13641 ;;Total ram usage:        2 bytes
 13642 ;; Hardware stack levels used: 1
 13643 ;; Hardware stack levels required when called: 15
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_EUSART1_Initialize
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text56
 13652   001AB2                     __ptext56:
 13653                           	callstack 0
 13654   001AB2                     _EUSART1_SetFramingErrorHandler:
 13655                           	callstack 13
 13656                           
 13657                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 13658                           
 13659                           ;incstack = 0
 13660   001AB2  C0DA  F0ED         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 13661   001AB6  C0DB  F0EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 13662   001ABA  0012               	return		;funcret
 13663   001ABC                     __end_of_EUSART1_SetFramingErrorHandler:
 13664                           	callstack 0
 13665                           
 13666 ;; *************** function _EUSART1_SetErrorHandler *****************
 13667 ;; Defined at:
 13668 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13671 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;		None
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      void 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13683 ;;      Params:         0       2       0       0       0
 13684 ;;      Locals:         0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0
 13686 ;;      Totals:         0       2       0       0       0
 13687 ;;Total ram usage:        2 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 15
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_EUSART1_Initialize
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text57
 13698   001ABC                     __ptext57:
 13699                           	callstack 0
 13700   001ABC                     _EUSART1_SetErrorHandler:
 13701                           	callstack 13
 13702                           
 13703                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 13704                           
 13705                           ;incstack = 0
 13706   001ABC  C0DA  F0E9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 13707   001AC0  C0DB  F0EA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 13708   001AC4  0012               	return		;funcret
 13709   001AC6                     __end_of_EUSART1_SetErrorHandler:
 13710                           	callstack 0
 13711                           
 13712 ;; *************** function _DAC1_Initialize *****************
 13713 ;; Defined at:
 13714 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;		None
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;		None
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg, status,2
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13728 ;;      Params:         0       0       0       0       0
 13729 ;;      Locals:         0       0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0
 13731 ;;      Totals:         0       0       0       0       0
 13732 ;;Total ram usage:        0 bytes
 13733 ;; Hardware stack levels used: 1
 13734 ;; Hardware stack levels required when called: 15
 13735 ;; This function calls:
 13736 ;;		Nothing
 13737 ;; This function is called by:
 13738 ;;		_SYSTEM_Initialize
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           	psect	text58
 13743   001A1C                     __ptext58:
 13744                           	callstack 0
 13745   001A1C                     _DAC1_Initialize:
 13746                           	callstack 14
 13747                           
 13748                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xB8;
 13749                           
 13750                           ;incstack = 0
 13751   001A1C  0EB8               	movlw	184
 13752   001A1E  010F               	movlb	15	; () banked
 13753   001A20  6F2E               	movwf	46,b	;volatile
 13754                           
 13755                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x10;
 13756   001A22  0E10               	movlw	16
 13757   001A24  6F2F               	movwf	47,b	;volatile
 13758                           
 13759                           ; BSR set to: 15
 13760   001A26  0012               	return		;funcret
 13761   001A28                     __end_of_DAC1_Initialize:
 13762                           	callstack 0
 13763                           
 13764 ;; *************** function _ADCC_Initialize *****************
 13765 ;; Defined at:
 13766 ;;		line 62 in file "mcc_generated_files/adcc.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg, status,2
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13780 ;;      Params:         0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0
 13783 ;;      Totals:         0       0       0       0       0
 13784 ;;Total ram usage:        0 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 15
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_SYSTEM_Initialize
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text59
 13795   0016A0                     __ptext59:
 13796                           	callstack 0
 13797   0016A0                     _ADCC_Initialize:
 13798                           	callstack 14
 13799                           
 13800                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 13801                           
 13802                           ; BSR set to: 15
 13803                           ;incstack = 0
 13804   0016A0  6A65               	clrf	101,c	;volatile
 13805                           
 13806                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 13807   0016A2  6A66               	clrf	102,c	;volatile
 13808                           
 13809                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 13810   0016A4  6A67               	clrf	103,c	;volatile
 13811                           
 13812                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 13813   0016A6  6A68               	clrf	104,c	;volatile
 13814                           
 13815                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 13816   0016A8  6A63               	clrf	99,c	;volatile
 13817                           
 13818                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 13819   0016AA  6A64               	clrf	100,c	;volatile
 13820                           
 13821                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 13822   0016AC  6A61               	clrf	97,c	;volatile
 13823                           
 13824                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 13825   0016AE  010F               	movlb	15	; () banked
 13826   0016B0  6B5A               	clrf	90,b	;volatile
 13827                           
 13828                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 13829   0016B2  6B58               	clrf	88,b	;volatile
 13830                           
 13831                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 13832   0016B4  6B59               	clrf	89,b	;volatile
 13833                           
 13834                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 13835   0016B6  6B54               	clrf	84,b	;volatile
 13836                           
 13837                           ; BSR set to: 15
 13838                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x12;
 13839   0016B8  0E12               	movlw	18
 13840   0016BA  6F55               	movwf	85,b	;volatile
 13841                           
 13842                           ; BSR set to: 15
 13843                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 13844   0016BC  6B56               	clrf	86,b	;volatile
 13845                           
 13846                           ; BSR set to: 15
 13847                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 13848   0016BE  6A60               	clrf	96,c	;volatile
 13849                           
 13850                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x03;
 13851   0016C0  0E03               	movlw	3
 13852   0016C2  6F53               	movwf	83,b	;volatile
 13853                           
 13854                           ; BSR set to: 15
 13855                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 13856   0016C4  6B51               	clrf	81,b	;volatile
 13857                           
 13858                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x07;
 13859   0016C6  0E07               	movlw	7
 13860   0016C8  6F52               	movwf	82,b	;volatile
 13861                           
 13862                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
 13863   0016CA  0E84               	movlw	132
 13864   0016CC  6F5B               	movwf	91,b	;volatile
 13865                           
 13866                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x10;
 13867   0016CE  0E10               	movlw	16
 13868   0016D0  6F57               	movwf	87,b	;volatile
 13869                           
 13870                           ; BSR set to: 15
 13871   0016D2  0012               	return		;funcret
 13872   0016D4                     __end_of_ADCC_Initialize:
 13873                           	callstack 0
 13874                           
 13875 ;; *************** function _INTERRUPT_InterruptManager *****************
 13876 ;; Defined at:
 13877 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;		None
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;		None
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  1    wreg      void 
 13884 ;; Registers used:
 13885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 0/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13891 ;;      Params:         0       0       0       0       0
 13892 ;;      Locals:         0       0       0       0       0
 13893 ;;      Temps:         20       0       0       0       0
 13894 ;;      Totals:        20       0       0       0       0
 13895 ;;Total ram usage:       20 bytes
 13896 ;; Hardware stack levels used: 1
 13897 ;; Hardware stack levels required when called: 14
 13898 ;; This function calls:
 13899 ;;		NULL
 13900 ;;		_EUSART1_Receive_ISR
 13901 ;;		_EUSART1_Transmit_ISR
 13902 ;;		_I2C1_Isr
 13903 ;; This function is called by:
 13904 ;;		Interrupt level 2
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           	psect	intcode
 13909   000008                     __pintcode:
 13910                           	callstack 0
 13911   000008                     _INTERRUPT_InterruptManager:
 13912                           	callstack 7
 13913                           
 13914                           ; BSR set to: 15
 13915                           ;incstack = 0
 13916   000008  CFFA F023          	movff	pclath,??_INTERRUPT_InterruptManager
 13917   00000C  CFFB F024          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13918   000010  CFE9 F025          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13919   000014  CFEA F026          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13920   000018  CFE1 F027          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13921   00001C  CFE2 F028          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13922   000020  CFD9 F029          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13923   000024  CFDA F02A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13924   000028  CFF3 F02B          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13925   00002C  CFF4 F02C          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13926   000030  CFF6 F02D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13927   000034  CFF7 F02E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13928   000038  CFF8 F02F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13929   00003C  CFF5 F030          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13930   000040  C037  F031         	movff	btemp,??_INTERRUPT_InterruptManager+14
 13931   000044  C038  F032         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 13932   000048  C03F  F033         	movff	btemp+8,??_INTERRUPT_InterruptManager+16
 13933   00004C  C040  F034         	movff	btemp+9,??_INTERRUPT_InterruptManager+17
 13934   000050  C041  F035         	movff	btemp+10,??_INTERRUPT_InterruptManager+18
 13935   000054  C042  F036         	movff	btemp+11,??_INTERRUPT_InterruptManager+19
 13936   000058  EE13  F080         	lfsr	1,___inthi_sp
 13937                           
 13938                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13939   00005C  ACF2               	btfss	242,6,c	;volatile
 13940   00005E  D02D               	goto	i2u346_49
 13941                           
 13942                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13943   000060  010E               	movlb	14	; () banked
 13944   000062  B3C0               	btfsc	192,1,b	;volatile
 13945                           
 13946                           ; BSR set to: 14
 13947   000064  A3C8               	btfss	200,1,b	;volatile
 13948   000066  D009               	goto	i2l312
 13949   000068                     i2u337_40:
 13950                           
 13951                           ; BSR set to: 14
 13952                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             MSSP1_InterruptHandler();
 13953   000068  D801               	call	i2u338_48
 13954   00006A  D027               	goto	i2u346_49
 13955   00006C                     i2u338_48:
 13956   00006C  0005               	push	
 13957   00006E  0100               	movlb	0	; () banked
 13958   000070  6EFA               	movwf	pclath,c
 13959   000072  51CB               	movf	_MSSP1_InterruptHandler& (0+255),w,b
 13960   000074  6EFD               	movwf	tosl,c
 13961   000076  51CC               	movf	(_MSSP1_InterruptHandler+1)& (0+255),w,b
 13962   000078  D01B               	goto	L6
 13963   00007A                     i2l312:
 13964                           
 13965                           ; BSR set to: 14
 13966   00007A  A1C0               	btfss	192,0,b	;volatile
 13967   00007C  D002               	goto	i2l314
 13968                           
 13969                           ; BSR set to: 14
 13970   00007E  B1C8               	btfsc	200,0,b	;volatile
 13971   000080  D7F3               	goto	i2u337_40
 13972   000082                     i2l314:
 13973                           
 13974                           ; BSR set to: 14
 13975   000082  B9C0               	btfsc	192,4,b	;volatile
 13976                           
 13977                           ; BSR set to: 14
 13978   000084  A9C8               	btfss	200,4,b	;volatile
 13979   000086  D009               	goto	i2l316
 13980                           
 13981                           ; BSR set to: 14
 13982                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 13983   000088  D801               	call	i2u343_48
 13984   00008A  D017               	goto	i2u346_49
 13985   00008C                     i2u343_48:
 13986   00008C  0005               	push	
 13987   00008E  0100               	movlb	0	; () banked
 13988   000090  6EFA               	movwf	pclath,c
 13989   000092  51F1               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 13990   000094  6EFD               	movwf	tosl,c
 13991   000096  51F2               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 13992   000098  D00B               	goto	L6
 13993   00009A                     i2l316:
 13994                           
 13995                           ; BSR set to: 14
 13996   00009A  BBC0               	btfsc	192,5,b	;volatile
 13997                           
 13998                           ; BSR set to: 14
 13999   00009C  ABC8               	btfss	200,5,b	;volatile
 14000   00009E  D00D               	goto	i2u346_49
 14001                           
 14002                           ; BSR set to: 14
 14003                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 14004   0000A0  D801               	call	i2u346_48
 14005   0000A2  D00B               	goto	i2u346_49
 14006   0000A4                     i2u346_48:
 14007   0000A4  0005               	push	
 14008   0000A6  0100               	movlb	0	; () banked
 14009   0000A8  6EFA               	movwf	pclath,c
 14010   0000AA  51EF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 14011   0000AC  6EFD               	movwf	tosl,c
 14012   0000AE  51F0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 14013   0000B0                     L6:
 14014   0000B0  6EFE               	movwf	tosh,c
 14015   0000B2  50F8               	movf	tblptru,w,c
 14016   0000B4  6EFF               	movwf	tosu,c
 14017   0000B6  50FA               	movf	pclath,w,c
 14018   0000B8  0012               	return		;indir
 14019   0000BA                     i2u346_49:
 14020                           
 14021                           ; BSR set to: 14
 14022                           
 14023                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 14024   0000BA  C036  F042         	movff	??_INTERRUPT_InterruptManager+19,btemp+11
 14025   0000BE  C035  F041         	movff	??_INTERRUPT_InterruptManager+18,btemp+10
 14026   0000C2  C034  F040         	movff	??_INTERRUPT_InterruptManager+17,btemp+9
 14027   0000C6  C033  F03F         	movff	??_INTERRUPT_InterruptManager+16,btemp+8
 14028   0000CA  C032  F038         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 14029   0000CE  C031  F037         	movff	??_INTERRUPT_InterruptManager+14,btemp
 14030   0000D2  C030  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 14031   0000D6  C02F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 14032   0000DA  C02E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 14033   0000DE  C02D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 14034   0000E2  C02C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 14035   0000E6  C02B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 14036   0000EA  C02A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 14037   0000EE  C029  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 14038   0000F2  C028  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 14039   0000F6  C027  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 14040   0000FA  C026  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 14041   0000FE  C025  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 14042   000102  C024  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14043   000106  C023  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14044   00010A  0011               	retfie		f
 14045   00010C                     __end_of_INTERRUPT_InterruptManager:
 14046                           	callstack 0
 14047                           
 14048 ;; *************** function _I2C1_Isr *****************
 14049 ;; Defined at:
 14050 ;;		line 165 in file "mcc_generated_files/i2c1_slave.c"
 14051 ;; Parameters:    Size  Location     Type
 14052 ;;		None
 14053 ;; Auto vars:     Size  Location     Type
 14054 ;;		None
 14055 ;; Return value:  Size  Location     Type
 14056 ;;                  1    wreg      void 
 14057 ;; Registers used:
 14058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14059 ;; Tracked objects:
 14060 ;;		On entry : 0/0
 14061 ;;		On exit  : 0/0
 14062 ;;		Unchanged: 0/0
 14063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14064 ;;      Params:         0       0       0       0       0
 14065 ;;      Locals:         0       0       0       0       0
 14066 ;;      Temps:          2       0       0       0       0
 14067 ;;      Totals:         2       0       0       0       0
 14068 ;;Total ram usage:        2 bytes
 14069 ;; Hardware stack levels used: 1
 14070 ;; Hardware stack levels required when called: 13
 14071 ;; This function calls:
 14072 ;;		_I2C1_SlaveAddrCallBack
 14073 ;;		_I2C1_SlaveClearIrq
 14074 ;;		_I2C1_SlaveIsAddr
 14075 ;;		_I2C1_SlaveIsRead
 14076 ;;		_I2C1_SlaveIsRxBufFull
 14077 ;;		_I2C1_SlaveIsTxBufEmpty
 14078 ;;		_I2C1_SlaveRdCallBack
 14079 ;;		_I2C1_SlaveReleaseClock
 14080 ;;		_I2C1_SlaveWrCallBack
 14081 ;; This function is called by:
 14082 ;;		_I2C1_Open
 14083 ;;		_INTERRUPT_InterruptManager
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text61
 14088   000DBC                     __ptext61:
 14089                           	callstack 0
 14090   000DBC                     _I2C1_Isr:
 14091                           	callstack 7
 14092                           
 14093                           ;mcc_generated_files/i2c1_slave.c: 167:     I2C1_SlaveClearIrq();
 14094                           
 14095                           ;incstack = 0
 14096   000DBC  EC8D  F00D         	call	_I2C1_SlaveClearIrq	;wreg free
 14097                           
 14098                           ;mcc_generated_files/i2c1_slave.c: 169:     if(I2C1_SlaveIsAddr())
 14099   000DC0  EC20  F00D         	call	_I2C1_SlaveIsAddr	;wreg free
 14100   000DC4  0900               	iorlw	0
 14101   000DC6  B4D8               	btfsc	status,2,c
 14102   000DC8  D009               	goto	i2l4620
 14103                           
 14104                           ;mcc_generated_files/i2c1_slave.c: 170:     {;mcc_generated_files/i2c1_slave.c: 171:    
      +                               if(I2C1_SlaveIsRead())
 14105   000DCA  EC26  F00D         	call	_I2C1_SlaveIsRead	;wreg free
 14106   000DCE  0900               	iorlw	0
 14107   000DD0  B4D8               	btfsc	status,2,c
 14108   000DD2  D002               	goto	i2l4618
 14109                           
 14110                           ;mcc_generated_files/i2c1_slave.c: 172:         {;mcc_generated_files/i2c1_slave.c: 173:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
 14111   000DD4  0E01               	movlw	1
 14112   000DD6  D00A               	goto	L9
 14113   000DD8                     i2l4618:
 14114                           
 14115                           ;mcc_generated_files/i2c1_slave.c: 176:         {;mcc_generated_files/i2c1_slave.c: 177:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
 14116   000DD8  0E02               	movlw	2
 14117   000DDA  D008               	goto	L9
 14118   000DDC                     i2l4620:
 14119                           
 14120                           ;mcc_generated_files/i2c1_slave.c: 181:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
 14121   000DDC  EC26  F00D         	call	_I2C1_SlaveIsRead	;wreg free
 14122   000DE0  0900               	iorlw	0
 14123   000DE2  B4D8               	btfsc	status,2,c
 14124   000DE4  D002               	goto	i2l4624
 14125                           
 14126                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
 14127   000DE6  0E03               	movlw	3
 14128   000DE8  D001               	goto	L9
 14129   000DEA                     i2l4624:
 14130                           
 14131                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
 14132   000DEA  0E04               	movlw	4
 14133   000DEC                     L9:
 14134   000DEC  6E58               	movwf	_i2c1SlaveState^0,c	;volatile
 14135   000DEE  D01B               	goto	i2l4644
 14136   000DF0                     i2l4626:
 14137                           
 14138                           ;mcc_generated_files/i2c1_slave.c: 195:             I2C1_SlaveAddrCallBack();
 14139   000DF0  EC16  F00C         	call	_I2C1_SlaveAddrCallBack	;wreg free
 14140                           
 14141                           ;mcc_generated_files/i2c1_slave.c: 196:             if(I2C1_SlaveIsTxBufEmpty())
 14142   000DF4  EC14  F00D         	call	_I2C1_SlaveIsTxBufEmpty	;wreg free
 14143   000DF8  0900               	iorlw	0
 14144   000DFA  B4D8               	btfsc	status,2,c
 14145   000DFC  D028               	goto	i2l4646
 14146   000DFE                     i2u317_40:
 14147                           
 14148                           ;mcc_generated_files/i2c1_slave.c: 197:             {;mcc_generated_files/i2c1_slave.c: 
      +                          198:                 I2C1_SlaveWrCallBack();
 14149   000DFE  ECF4  F00B         	call	_I2C1_SlaveWrCallBack	;wreg free
 14150   000E02  D025               	goto	i2l4646
 14151   000E04                     i2l4632:
 14152                           
 14153                           ;mcc_generated_files/i2c1_slave.c: 202:             I2C1_SlaveAddrCallBack();
 14154   000E04  EC16  F00C         	call	_I2C1_SlaveAddrCallBack	;wreg free
 14155                           
 14156                           ;mcc_generated_files/i2c1_slave.c: 203:             break;
 14157   000E08  D022               	goto	i2l4646
 14158   000E0A                     i2l4634:
 14159                           
 14160                           ;mcc_generated_files/i2c1_slave.c: 205:             if(I2C1_SlaveIsTxBufEmpty())
 14161   000E0A  EC14  F00D         	call	_I2C1_SlaveIsTxBufEmpty	;wreg free
 14162   000E0E  0900               	iorlw	0
 14163   000E10  A4D8               	btfss	status,2,c
 14164   000E12  D7F5               	goto	i2u317_40
 14165   000E14  D01C               	goto	i2l4646
 14166   000E16                     i2l4638:
 14167                           
 14168                           ;mcc_generated_files/i2c1_slave.c: 211:             if(I2C1_SlaveIsRxBufFull())
 14169   000E16  EC1A  F00D         	call	_I2C1_SlaveIsRxBufFull	;wreg free
 14170   000E1A  0900               	iorlw	0
 14171   000E1C  B4D8               	btfsc	status,2,c
 14172   000E1E  D017               	goto	i2l4646
 14173                           
 14174                           ;mcc_generated_files/i2c1_slave.c: 212:             {;mcc_generated_files/i2c1_slave.c: 
      +                          213:                 I2C1_SlaveRdCallBack();
 14175   000E20  EC05  F00C         	call	_I2C1_SlaveRdCallBack	;wreg free
 14176   000E24  D014               	goto	i2l4646
 14177   000E26                     i2l4644:
 14178   000E26  5058               	movf	_i2c1SlaveState^0,w,c	;volatile
 14179   000E28  6E21               	movwf	??_I2C1_Isr^0,c
 14180   000E2A  6A22               	clrf	(??_I2C1_Isr+1)^0,c
 14181                           
 14182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14183                           ; Switch size 1, requested type "simple"
 14184                           ; Number of cases is 1, Range of values is 0 to 0
 14185                           ; switch strategies available:
 14186                           ; Name         Instructions Cycles
 14187                           ; simple_byte            4     3 (average)
 14188                           ;	Chosen strategy is simple_byte
 14189   000E2C  5022               	movf	(??_I2C1_Isr+1)^0,w,c
 14190   000E2E  0A00               	xorlw	0	; case 0
 14191   000E30  A4D8               	btfss	status,2,c
 14192   000E32  D00D               	goto	i2l4646
 14193                           
 14194                           ; Switch size 1, requested type "simple"
 14195                           ; Number of cases is 4, Range of values is 1 to 4
 14196                           ; switch strategies available:
 14197                           ; Name         Instructions Cycles
 14198                           ; simple_byte           13     7 (average)
 14199                           ;	Chosen strategy is simple_byte
 14200   000E34  5021               	movf	??_I2C1_Isr^0,w,c
 14201   000E36  0A01               	xorlw	1	; case 1
 14202   000E38  B4D8               	btfsc	status,2,c
 14203   000E3A  D7DA               	goto	i2l4626
 14204   000E3C  0A03               	xorlw	3	; case 2
 14205   000E3E  B4D8               	btfsc	status,2,c
 14206   000E40  D7E1               	goto	i2l4632
 14207   000E42  0A01               	xorlw	1	; case 3
 14208   000E44  B4D8               	btfsc	status,2,c
 14209   000E46  D7E1               	goto	i2l4634
 14210   000E48  0A07               	xorlw	7	; case 4
 14211   000E4A  B4D8               	btfsc	status,2,c
 14212   000E4C  D7E4               	goto	i2l4638
 14213   000E4E                     i2l4646:
 14214                           
 14215                           ;mcc_generated_files/i2c1_slave.c: 219:     I2C1_SlaveReleaseClock();
 14216   000E4E  EC9E  F00D         	call	_I2C1_SlaveReleaseClock	;wreg free
 14217   000E52  0012               	return		;funcret
 14218   000E54                     __end_of_I2C1_Isr:
 14219                           	callstack 0
 14220                           
 14221 ;; *************** function _I2C1_SlaveWrCallBack *****************
 14222 ;; Defined at:
 14223 ;;		line 250 in file "mcc_generated_files/i2c1_slave.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;		None
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      void 
 14230 ;; Registers used:
 14231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14237 ;;      Params:         0       0       0       0       0
 14238 ;;      Locals:         0       0       0       0       0
 14239 ;;      Temps:          0       0       0       0       0
 14240 ;;      Totals:         0       0       0       0       0
 14241 ;;Total ram usage:        0 bytes
 14242 ;; Hardware stack levels used: 1
 14243 ;; Hardware stack levels required when called: 12
 14244 ;; This function calls:
 14245 ;;		NULL
 14246 ;;		_I2C1_SlaveDefWrInterruptHandler
 14247 ;;		_MasterR_SlaveW
 14248 ;; This function is called by:
 14249 ;;		_I2C1_Isr
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text62
 14254   0017E8                     __ptext62:
 14255                           	callstack 0
 14256   0017E8                     _I2C1_SlaveWrCallBack:
 14257                           	callstack 7
 14258                           
 14259                           ;mcc_generated_files/i2c1_slave.c: 252:     if (I2C1_SlaveWrInterruptHandler)
 14260                           
 14261                           ;incstack = 0
 14262   0017E8  0100               	movlb	0	; () banked
 14263   0017EA  51C7               	movf	_I2C1_SlaveWrInterruptHandler& (0+255),w,b
 14264   0017EC  11C8               	iorwf	(_I2C1_SlaveWrInterruptHandler+1)& (0+255),w,b
 14265   0017EE  B4D8               	btfsc	status,2,c
 14266   0017F0  0012               	return	
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;mcc_generated_files/i2c1_slave.c: 253:     {;mcc_generated_files/i2c1_slave.c: 254:    
      +                               I2C1_SlaveWrInterruptHandler();
 14270   0017F2  D801               	call	i2u294_48
 14271   0017F4  0012               	return	
 14272   0017F6                     i2u294_48:
 14273   0017F6  0005               	push	
 14274   0017F8  6EFA               	movwf	pclath,c
 14275   0017FA  51C7               	movf	_I2C1_SlaveWrInterruptHandler& (0+255),w,b
 14276   0017FC  6EFD               	movwf	tosl,c
 14277   0017FE  51C8               	movf	(_I2C1_SlaveWrInterruptHandler+1)& (0+255),w,b
 14278   001800  6EFE               	movwf	tosh,c
 14279   001802  50F8               	movf	tblptru,w,c
 14280   001804  6EFF               	movwf	tosu,c
 14281   001806  50FA               	movf	pclath,w,c
 14282   001808  0012               	return		;indir
 14283   00180A                     __end_of_I2C1_SlaveWrCallBack:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
 14287 ;; Defined at:
 14288 ;;		line 258 in file "mcc_generated_files/i2c1_slave.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;		None
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  1    wreg      void 
 14295 ;; Registers used:
 14296 ;;		wreg, status,2, cstack
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14302 ;;      Params:         0       0       0       0       0
 14303 ;;      Locals:         0       0       0       0       0
 14304 ;;      Temps:          0       0       0       0       0
 14305 ;;      Totals:         0       0       0       0       0
 14306 ;;Total ram usage:        0 bytes
 14307 ;; Hardware stack levels used: 1
 14308 ;; Hardware stack levels required when called: 1
 14309 ;; This function calls:
 14310 ;;		_I2C1_SlaveSendTxData
 14311 ;; This function is called by:
 14312 ;;		_I2C1_Open
 14313 ;;		_I2C1_SlaveWrCallBack
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text63
 14318   001AEC                     __ptext63:
 14319                           	callstack 0
 14320   001AEC                     _I2C1_SlaveDefWrInterruptHandler:
 14321                           	callstack 17
 14322                           
 14323                           ;mcc_generated_files/i2c1_slave.c: 259:     I2C1_SlaveSendTxData(i2c1WrData);
 14324                           
 14325                           ;incstack = 0
 14326   001AEC  5059               	movf	_i2c1WrData^0,w,c	;volatile
 14327   001AEE  EC7A  F00D         	call	_I2C1_SlaveSendTxData
 14328   001AF2  0012               	return		;funcret
 14329   001AF4                     __end_of_I2C1_SlaveDefWrInterruptHandler:
 14330                           	callstack 0
 14331                           
 14332 ;; *************** function _MasterR_SlaveW *****************
 14333 ;; Defined at:
 14334 ;;		line 57 in file "i2c_slave.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;		None
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;  tmp             1   31[COMRAM] unsigned char 
 14339 ;;  res             1   30[COMRAM] _Bool 
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  1    wreg      void 
 14342 ;; Registers used:
 14343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14349 ;;      Params:         0       0       0       0       0
 14350 ;;      Locals:         2       0       0       0       0
 14351 ;;      Temps:          0       0       0       0       0
 14352 ;;      Totals:         2       0       0       0       0
 14353 ;;Total ram usage:        2 bytes
 14354 ;; Hardware stack levels used: 1
 14355 ;; Hardware stack levels required when called: 11
 14356 ;; This function calls:
 14357 ;;		_I2C1_SendNack
 14358 ;;		_I2C1_Write
 14359 ;;		_TestForStopBit
 14360 ;;		_i2c_read_from_slave_cb
 14361 ;; This function is called by:
 14362 ;;		_i2c_slave_init
 14363 ;;		_I2C1_SlaveWrCallBack
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367                           	psect	text64
 14368   001434                     __ptext64:
 14369                           	callstack 0
 14370   001434                     _MasterR_SlaveW:
 14371                           	callstack 7
 14372                           
 14373                           ;i2c_slave.c: 59:     if(TestForStopBit())
 14374                           
 14375                           ;incstack = 0
 14376   001434  EC99  F00C         	call	_TestForStopBit	;wreg free
 14377   001438  0900               	iorlw	0
 14378   00143A  A4D8               	btfss	status,2,c
 14379   00143C  0012               	return	
 14380                           
 14381                           ;i2c_slave.c: 63:     if(i2c.from_slave_ptr != 0)
 14382   00143E  0100               	movlb	0	; () banked
 14383   001440  51D7               	movf	(_i2c+6)& (0+255),w,b	;volatile
 14384   001442  11D8               	iorwf	(_i2c+7)& (0+255),w,b	;volatile
 14385   001444  B4D8               	btfsc	status,2,c
 14386   001446  0012               	return	
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;i2c_slave.c: 64:     {;i2c_slave.c: 65:         uint8_t tmp;;i2c_slave.c: 66:         _
      +                          Bool res = (i2c.from_slave_ptr)(&i2c.EEPMemAddr, &tmp);
 14390   001448  0ED2               	movlw	low (_i2c+1)
 14391   00144A  6E19               	movwf	i2c_read_from_slave_cb@addr^0,c
 14392   00144C  0E20               	movlw	low MasterR_SlaveW@tmp
 14393   00144E  6E1A               	movwf	i2c_read_from_slave_cb@wb^0,c
 14394   001450  EE20  F0D7         	lfsr	2,_i2c+6	;volatile
 14395   001454  D801               	call	i2u275_48
 14396   001456  D00A               	goto	i2u275_49
 14397   001458                     i2u275_48:
 14398   001458  0005               	push	
 14399   00145A  6EFA               	movwf	pclath,c
 14400   00145C  50DE               	movf	postinc2,w,c
 14401   00145E  6EFD               	movwf	tosl,c
 14402   001460  50DE               	movf	postinc2,w,c
 14403   001462  6EFE               	movwf	tosh,c
 14404   001464  50F8               	movf	tblptru,w,c
 14405   001466  6EFF               	movwf	tosu,c
 14406   001468  50FA               	movf	pclath,w,c
 14407   00146A  0012               	return		;indir
 14408   00146C                     i2u275_49:
 14409   00146C  6E1F               	movwf	MasterR_SlaveW@res^0,c
 14410                           
 14411                           ;i2c_slave.c: 67:         i2c.byteNo++;
 14412   00146E  0100               	movlb	0	; () banked
 14413   001470  2BD9               	incf	(_i2c+8)& (0+255),f,b	;volatile
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;i2c_slave.c: 69:         if(res)
 14417   001472  501F               	movf	MasterR_SlaveW@res^0,w,c
 14418   001474  B4D8               	btfsc	status,2,c
 14419   001476  D004               	goto	i2l4290
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;i2c_slave.c: 70:              I2C1_Write(tmp);
 14423   001478  5020               	movf	MasterR_SlaveW@tmp^0,w,c
 14424   00147A  EC63  F00D         	call	_I2C1_Write
 14425   00147E  0012               	return	
 14426   001480                     i2l4290:
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;i2c_slave.c: 72:             I2C1_SendNack();
 14430   001480  EC87  F00D         	call	_I2C1_SendNack	;wreg free
 14431   001484  0012               	return		;funcret
 14432   001486                     __end_of_MasterR_SlaveW:
 14433                           	callstack 0
 14434                           
 14435 ;; *************** function _i2c_read_from_slave_cb *****************
 14436 ;; Defined at:
 14437 ;;		line 137 in file "main.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  addr            1   24[COMRAM] PTR volatile unsigned sh
 14440 ;;		 -> i2c(9), 
 14441 ;;  wb              1   25[COMRAM] PTR unsigned char 
 14442 ;;		 -> MasterR_SlaveW@tmp(1), 
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  c               2   28[COMRAM] struct .
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      _Bool 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14454 ;;      Params:         2       0       0       0       0
 14455 ;;      Locals:         2       0       0       0       0
 14456 ;;      Temps:          2       0       0       0       0
 14457 ;;      Totals:         6       0       0       0       0
 14458 ;;Total ram usage:        6 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; Hardware stack levels required when called: 10
 14461 ;; This function calls:
 14462 ;;		_eeprom_read_buffer
 14463 ;;		_handle_read_cmd
 14464 ;; This function is called by:
 14465 ;;		_main
 14466 ;;		_MasterR_SlaveW
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text65
 14471   00109A                     __ptext65:
 14472                           	callstack 0
 14473   00109A                     _i2c_read_from_slave_cb:
 14474                           	callstack 7
 14475                           
 14476                           ;incstack = 0
 14477                           ;main.c: 137: _Bool i2c_read_from_slave_cb(volatile uint16_t *addr, uint8_t *wb);main.c:
      +                           138: {;main.c: 139:     do{ DAC1CON1 = 24; }while(0);
 14478   00109A  0E18               	movlw	24
 14479   00109C  010F               	movlb	15	; () banked
 14480   00109E  6F2F               	movwf	47,b	;volatile
 14481                           
 14482                           ; BSR set to: 15
 14483                           ;main.c: 141:     address_t c;;main.c: 142:     c.raw = *addr;
 14484   0010A0  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14485   0010A2  6ED9               	movwf	fsr2l,c
 14486   0010A4  6ADA               	clrf	fsr2h,c
 14487   0010A6  CFDE F01D          	movff	postinc2,i2c_read_from_slave_cb@c
 14488   0010AA  CFDD F01E          	movff	postdec2,i2c_read_from_slave_cb@c+1
 14489                           
 14490                           ; BSR set to: 15
 14491                           ;main.c: 144:     if(c.isCMD)
 14492   0010AE  AE1E               	btfss	(i2c_read_from_slave_cb@c+1)^0,7,c
 14493   0010B0  D009               	goto	i2l4136
 14494                           
 14495                           ; BSR set to: 15
 14496                           ;main.c: 145:         return handle_read_cmd(c, wb);
 14497   0010B2  C01D  F013         	movff	i2c_read_from_slave_cb@c,handle_read_cmd@c
 14498   0010B6  C01E  F014         	movff	i2c_read_from_slave_cb@c+1,handle_read_cmd@c+1
 14499   0010BA  C01A  F015         	movff	i2c_read_from_slave_cb@wb,handle_read_cmd@wb
 14500   0010BE  EC62  F005         	call	_handle_read_cmd	;wreg free
 14501   0010C2  0012               	return	
 14502   0010C4                     i2l4136:
 14503                           
 14504                           ; BSR set to: 15
 14505   0010C4  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14506   0010C6  6ED9               	movwf	fsr2l,c
 14507   0010C8  6ADA               	clrf	fsr2h,c
 14508   0010CA  0E00               	movlw	0
 14509   0010CC  5CDE               	subwf	postinc2,w,c
 14510   0010CE  0E01               	movlw	1
 14511   0010D0  58DE               	subwfb	postinc2,w,c
 14512   0010D2  B0D8               	btfsc	status,0,c
 14513   0010D4  D022               	goto	i2l4150
 14514                           
 14515                           ; BSR set to: 15
 14516                           ;main.c: 147:     {;main.c: 149:         if(*addr >= 256)
 14517   0010D6  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14518   0010D8  6ED9               	movwf	fsr2l,c
 14519   0010DA  6ADA               	clrf	fsr2h,c
 14520   0010DC  0E00               	movlw	0
 14521   0010DE  5CDE               	subwf	postinc2,w,c
 14522   0010E0  0E01               	movlw	1
 14523   0010E2  58DE               	subwfb	postinc2,w,c
 14524   0010E4  A0D8               	btfss	status,0,c
 14525   0010E6  D005               	goto	i2l4142
 14526                           
 14527                           ; BSR set to: 15
 14528                           ;main.c: 150:             *addr = 0;
 14529   0010E8  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14530   0010EA  6ED9               	movwf	fsr2l,c
 14531   0010EC  6ADA               	clrf	fsr2h,c
 14532   0010EE  6ADE               	clrf	postinc2,c
 14533   0010F0  6ADD               	clrf	postdec2,c
 14534   0010F2                     i2l4142:
 14535                           
 14536                           ; BSR set to: 15
 14537                           ;main.c: 153:         *wb = eeprom_read_buffer((eeAddr_t)*addr);
 14538   0010F2  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14539   0010F4  6ED9               	movwf	fsr2l,c
 14540   0010F6  6ADA               	clrf	fsr2h,c
 14541   0010F8  50DF               	movf	indf2,w,c
 14542   0010FA  ECB5  F00C         	call	_eeprom_read_buffer
 14543   0010FE  6E1B               	movwf	??_i2c_read_from_slave_cb^0,c
 14544   001100  501A               	movf	i2c_read_from_slave_cb@wb^0,w,c
 14545   001102  6ED9               	movwf	fsr2l,c
 14546   001104  6ADA               	clrf	fsr2h,c
 14547   001106  C01B  FFDF         	movff	??_i2c_read_from_slave_cb,indf2
 14548                           
 14549                           ;main.c: 156:         *addr += 1;
 14550   00110A  5019               	movf	i2c_read_from_slave_cb@addr^0,w,c
 14551   00110C  6ED9               	movwf	fsr2l,c
 14552   00110E  6ADA               	clrf	fsr2h,c
 14553   001110  2ADE               	incf	postinc2,f,c
 14554   001112  0E00               	movlw	0
 14555   001114  22DD               	addwfc	postdec2,f,c
 14556                           
 14557                           ;main.c: 158:         return 1;
 14558   001116  0E01               	movlw	1
 14559   001118  0012               	return	
 14560   00111A                     i2l4150:
 14561                           
 14562                           ; BSR set to: 15
 14563                           ;main.c: 161:     return 0;
 14564   00111A  0E00               	movlw	0
 14565   00111C  0012               	return		;funcret
 14566   00111E                     __end_of_i2c_read_from_slave_cb:
 14567                           	callstack 0
 14568                           
 14569 ;; *************** function _handle_read_cmd *****************
 14570 ;; Defined at:
 14571 ;;		line 58 in file "main.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;  c               2   18[COMRAM] struct .
 14574 ;;  wb              1   20[COMRAM] PTR unsigned char 
 14575 ;;		 -> MasterR_SlaveW@tmp(1), 
 14576 ;; Auto vars:     Size  Location     Type
 14577 ;;		None
 14578 ;; Return value:  Size  Location     Type
 14579 ;;                  1    wreg      _Bool 
 14580 ;; Registers used:
 14581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14582 ;; Tracked objects:
 14583 ;;		On entry : 0/0
 14584 ;;		On exit  : 0/0
 14585 ;;		Unchanged: 0/0
 14586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14587 ;;      Params:         3       0       0       0       0
 14588 ;;      Locals:         0       0       0       0       0
 14589 ;;      Temps:          3       0       0       0       0
 14590 ;;      Totals:         6       0       0       0       0
 14591 ;;Total ram usage:        6 bytes
 14592 ;; Hardware stack levels used: 1
 14593 ;; Hardware stack levels required when called: 9
 14594 ;; This function calls:
 14595 ;;		_ReadReg
 14596 ;;		_analog_get_adc_val
 14597 ;;		_i2c_slave_get_byte_no
 14598 ;; This function is called by:
 14599 ;;		_i2c_read_from_slave_cb
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           	psect	text66
 14604   000AC4                     __ptext66:
 14605                           	callstack 0
 14606   000AC4                     _handle_read_cmd:
 14607                           	callstack 7
 14608                           
 14609                           ;main.c: 58: _Bool handle_read_cmd(address_t c, uint8_t *wb);main.c: 59: {;main.c: 60:  
      +                             static word_arr_t adc_tmp;;main.c: 61:     static address_t a;;main.c: 64:     if(c.c
      +                          md < 32)
 14610                           
 14611                           ;incstack = 0
 14612   000AC4  0E20               	movlw	32
 14613   000AC6  6013               	cpfslt	handle_read_cmd@c^0,c
 14614   000AC8  D06C               	goto	i2l4068
 14615                           
 14616                           ;main.c: 65:         return ReadReg(c.cmd, c.portNo, wb);
 14617   000ACA  5014               	movf	(handle_read_cmd@c+1)^0,w,c
 14618   000ACC  0B07               	andlw	7
 14619   000ACE  6E0E               	movwf	ReadReg@portNo^0,c
 14620   000AD0  C015  F00F         	movff	handle_read_cmd@wb,ReadReg@dst
 14621   000AD4  5013               	movf	handle_read_cmd@c^0,w,c
 14622   000AD6  EC2A  F007         	call	_ReadReg
 14623   000ADA  0012               	return	
 14624   000ADC                     i2l4042:
 14625                           
 14626                           ;main.c: 73:                 if(!i2c_slave_get_byte_no())
 14627   000ADC  EC84  F00D         	call	_i2c_slave_get_byte_no	;wreg free
 14628   000AE0  0900               	iorlw	0
 14629   000AE2  A4D8               	btfss	status,2,c
 14630   000AE4  D004               	goto	i2l4046
 14631                           
 14632                           ;main.c: 74:                     a.raw = c.raw;
 14633   000AE6  C013  F0BD         	movff	handle_read_cmd@c,handle_read_cmd@a
 14634   000AEA  C014  F0BE         	movff	handle_read_cmd@c+1,handle_read_cmd@a+1
 14635   000AEE                     i2l4046:
 14636                           
 14637                           ;main.c: 77:                 if(!(i2c_slave_get_byte_no() & 1))
 14638   000AEE  EC84  F00D         	call	_i2c_slave_get_byte_no	;wreg free
 14639   000AF2  6E16               	movwf	??_handle_read_cmd^0,c
 14640   000AF4  B016               	btfsc	??_handle_read_cmd^0,0,c
 14641   000AF6  D00E               	goto	i2l4050
 14642                           
 14643                           ;main.c: 78:                     adc_tmp.word = analog_get_adc_val(a.portNo, a.extra);
 14644   000AF8  0100               	movlb	0	; () banked
 14645   000AFA  31BE               	rrcf	(handle_read_cmd@a+1)& (0+255),w,b
 14646   000AFC  32E8               	rrcf	wreg,f,c
 14647   000AFE  32E8               	rrcf	wreg,f,c
 14648   000B00  0B0F               	andlw	15
 14649   000B02  6E04               	movwf	analog_get_adc_val@pin^0,c
 14650   000B04  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 14651   000B06  0B07               	andlw	7
 14652   000B08  EC6C  F00C         	call	_analog_get_adc_val
 14653   000B0C  C004  F0BF         	movff	?_analog_get_adc_val,handle_read_cmd@adc_tmp
 14654   000B10  C005  F0C0         	movff	?_analog_get_adc_val+1,handle_read_cmd@adc_tmp+1
 14655   000B14                     i2l4050:
 14656                           
 14657                           ;main.c: 80:                 *wb = adc_tmp.arr[i2c_slave_get_byte_no() & 1];
 14658   000B14  EC84  F00D         	call	_i2c_slave_get_byte_no	;wreg free
 14659   000B18  6E16               	movwf	??_handle_read_cmd^0,c
 14660   000B1A  0E01               	movlw	1
 14661   000B1C  1616               	andwf	??_handle_read_cmd^0,f,c
 14662   000B1E  5016               	movf	??_handle_read_cmd^0,w,c
 14663   000B20  0FBF               	addlw	low handle_read_cmd@adc_tmp
 14664   000B22  6ED9               	movwf	fsr2l,c
 14665   000B24  6ADA               	clrf	fsr2h,c
 14666   000B26  5015               	movf	handle_read_cmd@wb^0,w,c
 14667   000B28  6EE9               	movwf	fsr0l,c
 14668   000B2A  6AEA               	clrf	fsr0h,c
 14669   000B2C  CFDF FFEF          	movff	indf2,indf0
 14670                           
 14671                           ;main.c: 82:                 if(i2c_slave_get_byte_no() & 1)
 14672   000B30  EC84  F00D         	call	_i2c_slave_get_byte_no	;wreg free
 14673   000B34  6E16               	movwf	??_handle_read_cmd^0,c
 14674   000B36  A016               	btfss	??_handle_read_cmd^0,0,c
 14675   000B38  D03B               	goto	i2l1008
 14676                           
 14677                           ;main.c: 83:                 {;main.c: 84:                     if(++a.extra >= 8)
 14678   000B3A  0E01               	movlw	1
 14679   000B3C  6E16               	movwf	??_handle_read_cmd^0,c
 14680   000B3E  0100               	movlb	0	; () banked
 14681   000B40  31BE               	rrcf	(handle_read_cmd@a+1)& (0+255),w,b
 14682   000B42  6E17               	movwf	(??_handle_read_cmd+1)^0,c
 14683   000B44  3217               	rrcf	(??_handle_read_cmd+1)^0,f,c
 14684   000B46  3017               	rrcf	(??_handle_read_cmd+1)^0,w,c
 14685   000B48  0B0F               	andlw	15
 14686   000B4A  6E17               	movwf	(??_handle_read_cmd+1)^0,c
 14687   000B4C  5016               	movf	??_handle_read_cmd^0,w,c
 14688   000B4E  2617               	addwf	(??_handle_read_cmd+1)^0,f,c
 14689   000B50  3617               	rlcf	(??_handle_read_cmd+1)^0,f,c
 14690   000B52  3617               	rlcf	(??_handle_read_cmd+1)^0,f,c
 14691   000B54  3617               	rlcf	(??_handle_read_cmd+1)^0,f,c
 14692   000B56  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 14693   000B58  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 14694   000B5A  0B87               	andlw	-121
 14695   000B5C  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 14696   000B5E  6FBE               	movwf	(handle_read_cmd@a+1)& (0+255),b
 14697   000B60  31BE               	rrcf	(handle_read_cmd@a+1)& (0+255),w,b
 14698   000B62  32E8               	rrcf	wreg,f,c
 14699   000B64  32E8               	rrcf	wreg,f,c
 14700   000B66  0B0F               	andlw	15
 14701   000B68  6E18               	movwf	(??_handle_read_cmd+2)^0,c
 14702   000B6A  0E07               	movlw	7
 14703   000B6C  6418               	cpfsgt	(??_handle_read_cmd+2)^0,c
 14704   000B6E  D020               	goto	i2l1008
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;main.c: 85:                     {;main.c: 86:                         a.extra = 0;
 14708   000B70  0E87               	movlw	-121
 14709   000B72  17BE               	andwf	(handle_read_cmd@a+1)& (0+255),f,b
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;main.c: 87:                         if(++a.portNo >= 2)
 14713   000B74  0E01               	movlw	1
 14714   000B76  6E16               	movwf	??_handle_read_cmd^0,c
 14715   000B78  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 14716   000B7A  0B07               	andlw	7
 14717   000B7C  6E17               	movwf	(??_handle_read_cmd+1)^0,c
 14718   000B7E  5016               	movf	??_handle_read_cmd^0,w,c
 14719   000B80  2617               	addwf	(??_handle_read_cmd+1)^0,f,c
 14720   000B82  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 14721   000B84  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 14722   000B86  0BF8               	andlw	-8
 14723   000B88  1817               	xorwf	(??_handle_read_cmd+1)^0,w,c
 14724   000B8A  6FBE               	movwf	(handle_read_cmd@a+1)& (0+255),b
 14725   000B8C  51BE               	movf	(handle_read_cmd@a+1)& (0+255),w,b
 14726   000B8E  0B07               	andlw	7
 14727   000B90  6E18               	movwf	(??_handle_read_cmd+2)^0,c
 14728   000B92  0E01               	movlw	1
 14729   000B94  6418               	cpfsgt	(??_handle_read_cmd+2)^0,c
 14730   000B96  D00C               	goto	i2l1008
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;main.c: 88:                             a.portNo = 0;
 14734   000B98  0EF8               	movlw	-8
 14735   000B9A  17BE               	andwf	(handle_read_cmd@a+1)& (0+255),f,b
 14736   000B9C  D009               	goto	i2l1008
 14737   000B9E                     i2l4062:
 14738                           
 14739                           ;main.c: 98:                 return 0;
 14740   000B9E  0E00               	movlw	0
 14741   000BA0  0012               	return	
 14742   000BA2                     i2l4068:
 14743   000BA2  5013               	movf	handle_read_cmd@c^0,w,c
 14744                           
 14745                           ; Switch size 1, requested type "simple"
 14746                           ; Number of cases is 2, Range of values is 33 to 34
 14747                           ; switch strategies available:
 14748                           ; Name         Instructions Cycles
 14749                           ; simple_byte            7     4 (average)
 14750                           ;	Chosen strategy is simple_byte
 14751   000BA4  0A21               	xorlw	33	; case 33
 14752   000BA6  B4D8               	btfsc	status,2,c
 14753   000BA8  D799               	goto	i2l4042
 14754   000BAA  0A03               	xorlw	3	; case 34
 14755   000BAC  A4D8               	btfss	status,2,c
 14756   000BAE  D7F7               	goto	i2l4062
 14757   000BB0                     i2l1008:
 14758                           
 14759                           ;main.c: 101:     return 1;
 14760                           
 14761                           ; BSR set to: 0
 14762   000BB0  0E01               	movlw	1
 14763   000BB2  0012               	return		;funcret
 14764   000BB4                     __end_of_handle_read_cmd:
 14765                           	callstack 0
 14766                           
 14767 ;; *************** function _i2c_slave_get_byte_no *****************
 14768 ;; Defined at:
 14769 ;;		line 28 in file "i2c_slave.c"
 14770 ;; Parameters:    Size  Location     Type
 14771 ;;		None
 14772 ;; Auto vars:     Size  Location     Type
 14773 ;;		None
 14774 ;; Return value:  Size  Location     Type
 14775 ;;                  1    wreg      unsigned char 
 14776 ;; Registers used:
 14777 ;;		wreg, status,2
 14778 ;; Tracked objects:
 14779 ;;		On entry : 0/0
 14780 ;;		On exit  : 0/0
 14781 ;;		Unchanged: 0/0
 14782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14783 ;;      Params:         0       0       0       0       0
 14784 ;;      Locals:         0       0       0       0       0
 14785 ;;      Temps:          0       0       0       0       0
 14786 ;;      Totals:         0       0       0       0       0
 14787 ;;Total ram usage:        0 bytes
 14788 ;; Hardware stack levels used: 1
 14789 ;; This function calls:
 14790 ;;		Nothing
 14791 ;; This function is called by:
 14792 ;;		_handle_read_cmd
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text67
 14797   001B08                     __ptext67:
 14798                           	callstack 0
 14799   001B08                     _i2c_slave_get_byte_no:
 14800                           	callstack 15
 14801                           
 14802                           ;i2c_slave.c: 30:     return i2c.byteNo;
 14803                           
 14804                           ;incstack = 0
 14805   001B08  0100               	movlb	0	; () banked
 14806   001B0A  51D9               	movf	(_i2c+8)& (0+255),w,b	;volatile
 14807                           
 14808                           ; BSR set to: 0
 14809   001B0C  0012               	return		;funcret
 14810   001B0E                     __end_of_i2c_slave_get_byte_no:
 14811                           	callstack 0
 14812                           
 14813 ;; *************** function _analog_get_adc_val *****************
 14814 ;; Defined at:
 14815 ;;		line 30 in file "analog.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;  port            1    wreg     enum E10079
 14818 ;;  pin             1    3[COMRAM] enum E10084
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  port            1    5[COMRAM] enum E10079
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  2    3[COMRAM] unsigned short 
 14823 ;; Registers used:
 14824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14830 ;;      Params:         2       0       0       0       0
 14831 ;;      Locals:         1       0       0       0       0
 14832 ;;      Temps:          0       0       0       0       0
 14833 ;;      Totals:         3       0       0       0       0
 14834 ;;Total ram usage:        3 bytes
 14835 ;; Hardware stack levels used: 1
 14836 ;; Hardware stack levels required when called: 8
 14837 ;; This function calls:
 14838 ;;		_analog_get_adc_val_idx
 14839 ;; This function is called by:
 14840 ;;		_handle_read_cmd
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           	psect	text68
 14845   0018D8                     __ptext68:
 14846                           	callstack 0
 14847   0018D8                     _analog_get_adc_val:
 14848                           	callstack 7
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;incstack = 0
 14852                           ;analog_get_adc_val@port stored from wreg
 14853   0018D8  6E06               	movwf	analog_get_adc_val@port^0,c
 14854                           
 14855                           ;analog.c: 30: uint16_t analog_get_adc_val(EXP_PORT port, EXP_PIN pin);analog.c: 31: {;a
      +                          nalog.c: 32:     return analog_get_adc_val_idx(( (port * 8) + pin ));
 14856   0018DA  5006               	movf	analog_get_adc_val@port^0,w,c
 14857   0018DC  0D08               	mullw	8
 14858   0018DE  50F3               	movf	243,w,c
 14859   0018E0  2404               	addwf	analog_get_adc_val@pin^0,w,c
 14860   0018E2  ECD3  F00A         	call	_analog_get_adc_val_idx
 14861   0018E6  C001  F004         	movff	?_analog_get_adc_val_idx,?_analog_get_adc_val
 14862   0018EA  C002  F005         	movff	?_analog_get_adc_val_idx+1,?_analog_get_adc_val+1
 14863   0018EE  0012               	return		;funcret
 14864   0018F0                     __end_of_analog_get_adc_val:
 14865                           	callstack 0
 14866                           
 14867 ;; *************** function _analog_get_adc_val_idx *****************
 14868 ;; Defined at:
 14869 ;;		line 24 in file "analog.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  idx             1    wreg     unsigned char 
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;  idx             1    2[COMRAM] unsigned char 
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  2    0[COMRAM] unsigned short 
 14876 ;; Registers used:
 14877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14883 ;;      Params:         2       0       0       0       0
 14884 ;;      Locals:         1       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0
 14886 ;;      Totals:         3       0       0       0       0
 14887 ;;Total ram usage:        3 bytes
 14888 ;; Hardware stack levels used: 1
 14889 ;; Hardware stack levels required when called: 7
 14890 ;; This function calls:
 14891 ;;		___assert_fail
 14892 ;; This function is called by:
 14893 ;;		_analog_get_adc_val
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text69
 14898   0015A6                     __ptext69:
 14899                           	callstack 0
 14900   0015A6                     _analog_get_adc_val_idx:
 14901                           	callstack 7
 14902                           
 14903                           ;incstack = 0
 14904                           ;analog_get_adc_val_idx@idx stored from wreg
 14905   0015A6  6E03               	movwf	analog_get_adc_val_idx@idx^0,c
 14906                           
 14907                           ;analog.c: 24: uint16_t analog_get_adc_val_idx(uint8_t idx);analog.c: 25: {;analog.c: 26
      +                          :     ((void)((idx < ( eEXP_PORT_CNT * 8 )) || (__assert_fail("idx < EXP_PINS_COUNT", "a
      +                          nalog.c", 26, __func__),0)));
 14908   0015A8  0E0F               	movlw	15
 14909   0015AA  6403               	cpfsgt	analog_get_adc_val_idx@idx^0,c
 14910   0015AC  D012               	goto	i2l3916
 14911   0015AE  0E2D               	movlw	low STR_70
 14912   0015B0  6EE6               	movwf	postinc1,c
 14913   0015B2  0E3F               	movlw	high STR_70
 14914   0015B4  6EE6               	movwf	postinc1,c
 14915   0015B6  0E1A               	movlw	26
 14916   0015B8  6EE6               	movwf	postinc1,c
 14917   0015BA  0E00               	movlw	0
 14918   0015BC  6EE6               	movwf	postinc1,c
 14919   0015BE  0ED3               	movlw	low STR_63
 14920   0015C0  6EE6               	movwf	postinc1,c
 14921   0015C2  0E3F               	movlw	high STR_63
 14922   0015C4  6EE6               	movwf	postinc1,c
 14923   0015C6  0E88               	movlw	low STR_62
 14924   0015C8  6EE6               	movwf	postinc1,c
 14925   0015CA  0E3F               	movlw	high STR_62
 14926   0015CC  6EE6               	movwf	postinc1,c
 14927   0015CE  EC8F  F00A         	call	___assert_fail	;wreg free
 14928   0015D2                     i2l3916:
 14929                           
 14930                           ;analog.c: 27:     return analog.adc_val[idx];
 14931   0015D2  5003               	movf	analog_get_adc_val_idx@idx^0,w,c
 14932   0015D4  0D02               	mullw	2
 14933   0015D6  50F3               	movf	243,w,c
 14934   0015D8  0F70               	addlw	low (_analog+16)
 14935   0015DA  6ED9               	movwf	fsr2l,c
 14936   0015DC  6ADA               	clrf	fsr2h,c
 14937   0015DE  CFDE F001          	movff	postinc2,?_analog_get_adc_val_idx
 14938   0015E2  CFDD F002          	movff	postdec2,?_analog_get_adc_val_idx+1
 14939   0015E6  0012               	return		;funcret
 14940   0015E8                     __end_of_analog_get_adc_val_idx:
 14941                           	callstack 0
 14942                           
 14943 ;; *************** function _ReadReg *****************
 14944 ;; Defined at:
 14945 ;;		line 44 in file "registers.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;  regNo           1    wreg     enum E10118
 14948 ;;  portNo          1   13[COMRAM] enum E10079
 14949 ;;  dst             1   14[COMRAM] PTR unsigned char 
 14950 ;;		 -> MasterR_SlaveW@tmp(1), 
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;  regNo           1   16[COMRAM] enum E10118
 14953 ;;  p               1   17[COMRAM] unsigned char 
 14954 ;;  tmp             1   15[COMRAM] unsigned char 
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      _Bool 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14964 ;;      Params:         2       0       0       0       0
 14965 ;;      Locals:         3       0       0       0       0
 14966 ;;      Temps:          0       0       0       0       0
 14967 ;;      Totals:         5       0       0       0       0
 14968 ;;Total ram usage:        5 bytes
 14969 ;; Hardware stack levels used: 1
 14970 ;; Hardware stack levels required when called: 8
 14971 ;; This function calls:
 14972 ;;		_ReadBit
 14973 ;;		___assert_fail
 14974 ;; This function is called by:
 14975 ;;		_handle_read_cmd
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text70
 14980   000E54                     __ptext70:
 14981                           	callstack 0
 14982   000E54                     _ReadReg:
 14983                           	callstack 7
 14984                           
 14985                           ;incstack = 0
 14986                           ;ReadReg@regNo stored from wreg
 14987   000E54  6E11               	movwf	ReadReg@regNo^0,c
 14988                           
 14989                           ;registers.c: 44: _Bool ReadReg(Registers_t regNo, EXP_PORT portNo, port_t *dst);registe
      +                          rs.c: 45: {;registers.c: 46:     ((void)((regNo < eRegistersCNT) || (__assert_fail("regN
      +                          o < eRegistersCNT", "registers.c", 46, __func__),0)));
 14990   000E56  0E0A               	movlw	10
 14991   000E58  6411               	cpfsgt	ReadReg@regNo^0,c
 14992   000E5A  D012               	goto	i2l3960
 14993   000E5C  0EEE               	movlw	low STR_22
 14994   000E5E  6EE6               	movwf	postinc1,c
 14995   000E60  0E3F               	movlw	high STR_22
 14996   000E62  6EE6               	movwf	postinc1,c
 14997   000E64  0E2E               	movlw	46
 14998   000E66  6EE6               	movwf	postinc1,c
 14999   000E68  0E00               	movlw	0
 15000   000E6A  6EE6               	movwf	postinc1,c
 15001   000E6C  0EC7               	movlw	low STR_3
 15002   000E6E  6EE6               	movwf	postinc1,c
 15003   000E70  0E3F               	movlw	high STR_3
 15004   000E72  6EE6               	movwf	postinc1,c
 15005   000E74  0E72               	movlw	low STR_2
 15006   000E76  6EE6               	movwf	postinc1,c
 15007   000E78  0E3F               	movlw	high STR_2
 15008   000E7A  6EE6               	movwf	postinc1,c
 15009   000E7C  EC8F  F00A         	call	___assert_fail	;wreg free
 15010   000E80                     i2l3960:
 15011                           
 15012                           ;registers.c: 47:     ((void)((portNo < 2) || (__assert_fail("portNo < EXP_PORTS_CNT", "
      +                          registers.c", 47, __func__),0)));
 15013   000E80  0E01               	movlw	1
 15014   000E82  640E               	cpfsgt	ReadReg@portNo^0,c
 15015   000E84  D012               	goto	i2l3964
 15016   000E86  0EEE               	movlw	low STR_22
 15017   000E88  6EE6               	movwf	postinc1,c
 15018   000E8A  0E3F               	movlw	high STR_22
 15019   000E8C  6EE6               	movwf	postinc1,c
 15020   000E8E  0E2F               	movlw	47
 15021   000E90  6EE6               	movwf	postinc1,c
 15022   000E92  0E00               	movlw	0
 15023   000E94  6EE6               	movwf	postinc1,c
 15024   000E96  0EC7               	movlw	low STR_3
 15025   000E98  6EE6               	movwf	postinc1,c
 15026   000E9A  0E3F               	movlw	high STR_3
 15027   000E9C  6EE6               	movwf	postinc1,c
 15028   000E9E  0E44               	movlw	low STR_26
 15029   000EA0  6EE6               	movwf	postinc1,c
 15030   000EA2  0E3F               	movlw	high STR_26
 15031   000EA4  6EE6               	movwf	postinc1,c
 15032   000EA6  EC8F  F00A         	call	___assert_fail	;wreg free
 15033   000EAA                     i2l3964:
 15034                           
 15035                           ;registers.c: 49:     if(regNo >= eRegistersCNT)
 15036   000EAA  0E0A               	movlw	10
 15037   000EAC  6411               	cpfsgt	ReadReg@regNo^0,c
 15038   000EAE  D002               	goto	i2l3970
 15039   000EB0                     i2u246_40:
 15040                           
 15041                           ;registers.c: 50:         return 0;
 15042   000EB0  0E00               	movlw	0
 15043   000EB2  0012               	return	
 15044   000EB4                     i2l3970:
 15045                           
 15046                           ;registers.c: 52:     if(portNo >= 2)
 15047   000EB4  0E01               	movlw	1
 15048   000EB6  640E               	cpfsgt	ReadReg@portNo^0,c
 15049   000EB8  D001               	goto	i2l1104
 15050   000EBA  D7FA               	goto	i2u246_40
 15051   000EBC                     i2l1104:
 15052                           
 15053                           ;registers.c: 55:     port_t tmp = 0;
 15054   000EBC  6A10               	clrf	ReadReg@tmp^0,c
 15055                           
 15056                           ;registers.c: 56:     for(uint8_t p = 8; p > 0; p--)
 15057   000EBE  0E08               	movlw	8
 15058   000EC0  6E12               	movwf	ReadReg@p^0,c
 15059   000EC2                     i2l3980:
 15060                           
 15061                           ;registers.c: 57:     {;registers.c: 58:         tmp<<=1;
 15062   000EC2  90D8               	bcf	status,0,c
 15063   000EC4  3610               	rlcf	ReadReg@tmp^0,f,c
 15064                           
 15065                           ;registers.c: 59:         tmp |= ReadBit(regNo, portNo, p-1);
 15066   000EC6  C00E  F001         	movff	ReadReg@portNo,ReadBit@portNo
 15067   000ECA  0412               	decf	ReadReg@p^0,w,c
 15068   000ECC  6E02               	movwf	ReadBit@pinNo^0,c
 15069   000ECE  5011               	movf	ReadReg@regNo^0,w,c
 15070   000ED0  EC24  F003         	call	_ReadBit
 15071   000ED4  1210               	iorwf	ReadReg@tmp^0,f,c
 15072                           
 15073                           ;registers.c: 60:     }
 15074   000ED6  0612               	decf	ReadReg@p^0,f,c
 15075   000ED8  5012               	movf	ReadReg@p^0,w,c
 15076   000EDA  A4D8               	btfss	status,2,c
 15077   000EDC  D7F2               	goto	i2l3980
 15078                           
 15079                           ;registers.c: 61:     *dst = tmp;
 15080   000EDE  500F               	movf	ReadReg@dst^0,w,c
 15081   000EE0  6ED9               	movwf	fsr2l,c
 15082   000EE2  6ADA               	clrf	fsr2h,c
 15083   000EE4  C010  FFDF         	movff	ReadReg@tmp,indf2
 15084                           
 15085                           ;registers.c: 62:     return 1;
 15086   000EE8  0E01               	movlw	1
 15087   000EEA  0012               	return		;funcret
 15088   000EEC                     __end_of_ReadReg:
 15089                           	callstack 0
 15090                           
 15091 ;; *************** function _ReadBit *****************
 15092 ;; Defined at:
 15093 ;;		line 28 in file "registers.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  regNo           1    wreg     enum E10118
 15096 ;;  portNo          1    0[COMRAM] enum E10079
 15097 ;;  pinNo           1    1[COMRAM] enum E10084
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;  regNo           1   12[COMRAM] enum E10118
 15100 ;;  pin             2   10[COMRAM] PTR const struct .
 15101 ;;		 -> PINS(32), 
 15102 ;;  reg             2    6[COMRAM] PTR volatile unsigned ch
 15103 ;;		 -> IOCAP(1), IOCAN(1), IOCAF(1), PORTA(1), 
 15104 ;;		 -> INLVLA(1), SLRCONA(1), ODCONA(1), WPUA(1), 
 15105 ;;		 -> ANSELA(1), TRISA(1), LATA(1), 
 15106 ;;  portMask        1    9[COMRAM] unsigned char 
 15107 ;;  portData        1    8[COMRAM] unsigned char 
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      unsigned char 
 15110 ;; Registers used:
 15111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15117 ;;      Params:         2       0       0       0       0
 15118 ;;      Locals:         7       0       0       0       0
 15119 ;;      Temps:          4       0       0       0       0
 15120 ;;      Totals:        13       0       0       0       0
 15121 ;;Total ram usage:       13 bytes
 15122 ;; Hardware stack levels used: 1
 15123 ;; Hardware stack levels required when called: 7
 15124 ;; This function calls:
 15125 ;;		___assert_fail
 15126 ;; This function is called by:
 15127 ;;		_ReadReg
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text71
 15132   000648                     __ptext71:
 15133                           	callstack 0
 15134   000648                     _ReadBit:
 15135                           	callstack 7
 15136                           
 15137                           ;incstack = 0
 15138                           ;ReadBit@regNo stored from wreg
 15139   000648  6E0D               	movwf	ReadBit@regNo^0,c
 15140                           
 15141                           ;registers.c: 28: uint8_t ReadBit(Registers_t regNo, EXP_PORT portNo, EXP_PIN pinNo);reg
      +                          isters.c: 29: {;registers.c: 30:     ((void)((regNo < eRegistersCNT) || (__assert_fail("
      +                          regNo < eRegistersCNT", "registers.c", 30, __func__),0)));
 15142   00064A  0E0A               	movlw	10
 15143   00064C  640D               	cpfsgt	ReadBit@regNo^0,c
 15144   00064E  D012               	goto	i2l3860
 15145   000650  0EF6               	movlw	low STR_4
 15146   000652  6EE6               	movwf	postinc1,c
 15147   000654  0E3F               	movlw	high STR_4
 15148   000656  6EE6               	movwf	postinc1,c
 15149   000658  0E1E               	movlw	30
 15150   00065A  6EE6               	movwf	postinc1,c
 15151   00065C  0E00               	movlw	0
 15152   00065E  6EE6               	movwf	postinc1,c
 15153   000660  0EC7               	movlw	low STR_3
 15154   000662  6EE6               	movwf	postinc1,c
 15155   000664  0E3F               	movlw	high STR_3
 15156   000666  6EE6               	movwf	postinc1,c
 15157   000668  0E72               	movlw	low STR_2
 15158   00066A  6EE6               	movwf	postinc1,c
 15159   00066C  0E3F               	movlw	high STR_2
 15160   00066E  6EE6               	movwf	postinc1,c
 15161   000670  EC8F  F00A         	call	___assert_fail	;wreg free
 15162   000674                     i2l3860:
 15163                           
 15164                           ;registers.c: 31:     ((void)((portNo < eEXP_PORT_CNT) || (__assert_fail("portNo < eEXP_
      +                          PORT_CNT", "registers.c", 31, __func__),0)));
 15165   000674  0E01               	movlw	1
 15166   000676  6401               	cpfsgt	ReadBit@portNo^0,c
 15167   000678  D012               	goto	i2l3864
 15168   00067A  0EF6               	movlw	low STR_4
 15169   00067C  6EE6               	movwf	postinc1,c
 15170   00067E  0E3F               	movlw	high STR_4
 15171   000680  6EE6               	movwf	postinc1,c
 15172   000682  0E1F               	movlw	31
 15173   000684  6EE6               	movwf	postinc1,c
 15174   000686  0E00               	movlw	0
 15175   000688  6EE6               	movwf	postinc1,c
 15176   00068A  0EC7               	movlw	low STR_3
 15177   00068C  6EE6               	movwf	postinc1,c
 15178   00068E  0E3F               	movlw	high STR_3
 15179   000690  6EE6               	movwf	postinc1,c
 15180   000692  0E5B               	movlw	low STR_8
 15181   000694  6EE6               	movwf	postinc1,c
 15182   000696  0E3F               	movlw	high STR_8
 15183   000698  6EE6               	movwf	postinc1,c
 15184   00069A  EC8F  F00A         	call	___assert_fail	;wreg free
 15185   00069E                     i2l3864:
 15186                           
 15187                           ;registers.c: 32:     ((void)((pinNo < eEXP_PIN_CNT) || (__assert_fail("pinNo < eEXP_PIN
      +                          _CNT", "registers.c", 32, __func__),0)));
 15188   00069E  0E07               	movlw	7
 15189   0006A0  6402               	cpfsgt	ReadBit@pinNo^0,c
 15190   0006A2  D012               	goto	i2l3868
 15191   0006A4  0EF6               	movlw	low STR_4
 15192   0006A6  6EE6               	movwf	postinc1,c
 15193   0006A8  0E3F               	movlw	high STR_4
 15194   0006AA  6EE6               	movwf	postinc1,c
 15195   0006AC  0E20               	movlw	32
 15196   0006AE  6EE6               	movwf	postinc1,c
 15197   0006B0  0E00               	movlw	0
 15198   0006B2  6EE6               	movwf	postinc1,c
 15199   0006B4  0EC7               	movlw	low STR_3
 15200   0006B6  6EE6               	movwf	postinc1,c
 15201   0006B8  0E3F               	movlw	high STR_3
 15202   0006BA  6EE6               	movwf	postinc1,c
 15203   0006BC  0E9D               	movlw	low STR_14
 15204   0006BE  6EE6               	movwf	postinc1,c
 15205   0006C0  0E3F               	movlw	high STR_14
 15206   0006C2  6EE6               	movwf	postinc1,c
 15207   0006C4  EC8F  F00A         	call	___assert_fail	;wreg free
 15208   0006C8                     i2l3868:
 15209                           
 15210                           ;registers.c: 34:     const Pin_t *pin = &PINS[portNo][pinNo];
 15211   0006C8  5002               	movf	ReadBit@pinNo^0,w,c
 15212   0006CA  0D02               	mullw	2
 15213   0006CC  CFF3 F003          	movff	prodl,??_ReadBit
 15214   0006D0  CFF4 F004          	movff	prodh,??_ReadBit+1
 15215   0006D4  5001               	movf	ReadBit@portNo^0,w,c
 15216   0006D6  0D10               	mullw	16
 15217   0006D8  0ED0               	movlw	low _PINS
 15218   0006DA  24F3               	addwf	243,w,c
 15219   0006DC  6E05               	movwf	(??_ReadBit+2)^0,c
 15220   0006DE  0E3E               	movlw	high _PINS
 15221   0006E0  20F4               	addwfc	prodh,w,c
 15222   0006E2  6E06               	movwf	(??_ReadBit+3)^0,c
 15223   0006E4  5003               	movf	??_ReadBit^0,w,c
 15224   0006E6  2405               	addwf	(??_ReadBit+2)^0,w,c
 15225   0006E8  6E0B               	movwf	ReadBit@pin^0,c
 15226   0006EA  5004               	movf	(??_ReadBit+1)^0,w,c
 15227   0006EC  2006               	addwfc	(??_ReadBit+3)^0,w,c
 15228   0006EE  6E0C               	movwf	(ReadBit@pin+1)^0,c
 15229                           
 15230                           ;registers.c: 37:     volatile port_t *reg = Registers[regNo].reg;
 15231   0006F0  500D               	movf	ReadBit@regNo^0,w,c
 15232   0006F2  0D03               	mullw	3
 15233   0006F4  0EAF               	movlw	low _Registers
 15234   0006F6  24F3               	addwf	243,w,c
 15235   0006F8  6EF6               	movwf	tblptrl,c
 15236   0006FA  0E3E               	movlw	high _Registers
 15237   0006FC  20F4               	addwfc	244,w,c
 15238   0006FE  6EF7               	movwf	tblptrh,c
 15239   000700                     	if	0	;There are less than 3 active tblptr bytes
 15240   000700                     	endif
 15241   000700  0009               	tblrd		*+
 15242   000702  CFF5 F007          	movff	tablat,ReadBit@reg
 15243   000706  000A               	tblrd		*-
 15244   000708  CFF5 F008          	movff	tablat,ReadBit@reg+1
 15245                           
 15246                           ;registers.c: 38:     reg += pin->Port * (Registers[regNo].portCntOffset & 31);
 15247   00070C  500D               	movf	ReadBit@regNo^0,w,c
 15248   00070E  0D03               	mullw	3
 15249   000710  0E02               	movlw	2
 15250   000712  26F3               	addwf	243,f,c
 15251   000714  0E00               	movlw	0
 15252   000716  22F4               	addwfc	244,f,c
 15253   000718  0EAF               	movlw	low _Registers
 15254   00071A  24F3               	addwf	243,w,c
 15255   00071C  6EF6               	movwf	tblptrl,c
 15256   00071E  0E3E               	movlw	high _Registers
 15257   000720  20F4               	addwfc	244,w,c
 15258   000722  6EF7               	movwf	tblptrh,c
 15259   000724                     	if	0	;There are less than 3 active tblptr bytes
 15260   000724                     	endif
 15261   000724  0008               	tblrd		*
 15262   000726  CFF5 F003          	movff	tablat,??_ReadBit
 15263   00072A  0E1F               	movlw	31
 15264   00072C  1603               	andwf	??_ReadBit^0,f,c
 15265   00072E  C00B  FFF6         	movff	ReadBit@pin,tblptrl
 15266   000732  C00C  FFF7         	movff	ReadBit@pin+1,tblptrh
 15267   000736                     	if	0	;tblptru may be non-zero
 15268   000736                     	endif
 15269   000736                     	if	0	;tblptru may be non-zero
 15270   000736                     	endif
 15271   000736  0008               	tblrd		*
 15272   000738  CFF5 F004          	movff	tablat,??_ReadBit+1
 15273   00073C  5004               	movf	(??_ReadBit+1)^0,w,c
 15274   00073E  0B0F               	andlw	15
 15275   000740  6E05               	movwf	(??_ReadBit+2)^0,c
 15276   000742  5005               	movf	(??_ReadBit+2)^0,w,c
 15277   000744  0203               	mulwf	??_ReadBit^0,c
 15278   000746  50F3               	movf	243,w,c
 15279   000748  2607               	addwf	ReadBit@reg^0,f,c
 15280   00074A  50F4               	movf	244,w,c
 15281   00074C  2208               	addwfc	(ReadBit@reg+1)^0,f,c
 15282                           
 15283                           ;registers.c: 39:     port_t portData = *reg;
 15284   00074E  C007  FFD9         	movff	ReadBit@reg,fsr2l
 15285   000752  C008  FFDA         	movff	ReadBit@reg+1,fsr2h
 15286   000756  50DF               	movf	indf2,w,c
 15287   000758  6E09               	movwf	ReadBit@portData^0,c
 15288                           
 15289                           ;registers.c: 40:     port_t portMask = (port_t)((int)1 << pin->Pin);
 15290   00075A  C00B  FFF6         	movff	ReadBit@pin,tblptrl
 15291   00075E  C00C  FFF7         	movff	ReadBit@pin+1,tblptrh
 15292   000762                     	if	0	;tblptru may be non-zero
 15293   000762                     	endif
 15294   000762                     	if	0	;tblptru may be non-zero
 15295   000762                     	endif
 15296   000762  0008               	tblrd		*
 15297   000764  CFF5 F003          	movff	tablat,??_ReadBit
 15298   000768  3803               	swapf	??_ReadBit^0,w,c
 15299   00076A  0B0F               	andlw	15
 15300   00076C  6E04               	movwf	(??_ReadBit+1)^0,c
 15301   00076E  0E01               	movlw	1
 15302   000770  6E05               	movwf	(??_ReadBit+2)^0,c
 15303   000772  2A04               	incf	(??_ReadBit+1)^0,f,c
 15304   000774  D002               	goto	i2u228_44
 15305   000776                     i2u228_45:
 15306   000776  90D8               	bcf	status,0,c
 15307   000778  3605               	rlcf	(??_ReadBit+2)^0,f,c
 15308   00077A                     i2u228_44:
 15309   00077A  2E04               	decfsz	(??_ReadBit+1)^0,f,c
 15310   00077C  D7FC               	goto	i2u228_45
 15311   00077E  5005               	movf	(??_ReadBit+2)^0,w,c
 15312   000780  6E0A               	movwf	ReadBit@portMask^0,c
 15313                           
 15314                           ;registers.c: 41:     return (portData & portMask) ? 1 : 0;
 15315   000782  5009               	movf	ReadBit@portData^0,w,c
 15316   000784  140A               	andwf	ReadBit@portMask^0,w,c
 15317   000786  0900               	iorlw	0
 15318   000788  B4D8               	btfsc	status,2,c
 15319   00078A  D002               	goto	i2u229_40
 15320   00078C  0E01               	movlw	1
 15321   00078E  0012               	return	
 15322   000790                     i2u229_40:
 15323   000790  0E00               	movlw	0
 15324   000792  0012               	return		;funcret
 15325   000794                     __end_of_ReadBit:
 15326                           	callstack 0
 15327                           
 15328 ;; *************** function _I2C1_Write *****************
 15329 ;; Defined at:
 15330 ;;		line 140 in file "mcc_generated_files/i2c1_slave.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;  data            1    wreg     unsigned char 
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;  data            1    1[COMRAM] unsigned char 
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		wreg, status,2, cstack
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15344 ;;      Params:         0       0       0       0       0
 15345 ;;      Locals:         1       0       0       0       0
 15346 ;;      Temps:          0       0       0       0       0
 15347 ;;      Totals:         1       0       0       0       0
 15348 ;;Total ram usage:        1 bytes
 15349 ;; Hardware stack levels used: 1
 15350 ;; Hardware stack levels required when called: 1
 15351 ;; This function calls:
 15352 ;;		_I2C1_SlaveSendTxData
 15353 ;; This function is called by:
 15354 ;;		_MasterR_SlaveW
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358                           	psect	text72
 15359   001AC6                     __ptext72:
 15360                           	callstack 0
 15361   001AC6                     _I2C1_Write:
 15362                           	callstack 16
 15363                           
 15364                           ;incstack = 0
 15365                           ;I2C1_Write@data stored from wreg
 15366   001AC6  6E02               	movwf	I2C1_Write@data^0,c
 15367                           
 15368                           ;mcc_generated_files/i2c1_slave.c: 140: void I2C1_Write(uint8_t data);mcc_generated_file
      +                          s/i2c1_slave.c: 141: {;mcc_generated_files/i2c1_slave.c: 142:     I2C1_SlaveSendTxData(d
      +                          ata);
 15369   001AC8  5002               	movf	I2C1_Write@data^0,w,c
 15370   001ACA  EC7A  F00D         	call	_I2C1_SlaveSendTxData
 15371   001ACE  0012               	return		;funcret
 15372   001AD0                     __end_of_I2C1_Write:
 15373                           	callstack 0
 15374                           
 15375 ;; *************** function _I2C1_SlaveSendTxData *****************
 15376 ;; Defined at:
 15377 ;;		line 391 in file "mcc_generated_files/i2c1_slave.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;  data            1    wreg     unsigned char 
 15380 ;; Auto vars:     Size  Location     Type
 15381 ;;  data            1    0[COMRAM] unsigned char 
 15382 ;; Return value:  Size  Location     Type
 15383 ;;                  1    wreg      void 
 15384 ;; Registers used:
 15385 ;;		wreg
 15386 ;; Tracked objects:
 15387 ;;		On entry : 0/0
 15388 ;;		On exit  : 0/0
 15389 ;;		Unchanged: 0/0
 15390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15391 ;;      Params:         0       0       0       0       0
 15392 ;;      Locals:         1       0       0       0       0
 15393 ;;      Temps:          0       0       0       0       0
 15394 ;;      Totals:         1       0       0       0       0
 15395 ;;Total ram usage:        1 bytes
 15396 ;; Hardware stack levels used: 1
 15397 ;; This function calls:
 15398 ;;		Nothing
 15399 ;; This function is called by:
 15400 ;;		_I2C1_Write
 15401 ;;		_I2C1_SlaveDefWrInterruptHandler
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text73
 15406   001AF4                     __ptext73:
 15407                           	callstack 0
 15408   001AF4                     _I2C1_SlaveSendTxData:
 15409                           	callstack 16
 15410                           
 15411                           ;incstack = 0
 15412                           ;I2C1_SlaveSendTxData@data stored from wreg
 15413   001AF4  6E01               	movwf	I2C1_SlaveSendTxData@data^0,c
 15414                           
 15415                           ;mcc_generated_files/i2c1_slave.c: 391: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 392: {;mcc_generated_files/i2c1
      +                          _slave.c: 393:     SSP1BUF = data;
 15416   001AF6  C001  FF91         	movff	I2C1_SlaveSendTxData@data,3985	;volatile
 15417   001AFA  0012               	return		;funcret
 15418   001AFC                     __end_of_I2C1_SlaveSendTxData:
 15419                           	callstack 0
 15420                           
 15421 ;; *************** function _I2C1_SlaveReleaseClock *****************
 15422 ;; Defined at:
 15423 ;;		line 361 in file "mcc_generated_files/i2c1_slave.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;		None
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;		None
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      void 
 15430 ;; Registers used:
 15431 ;;		None
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15437 ;;      Params:         0       0       0       0       0
 15438 ;;      Locals:         0       0       0       0       0
 15439 ;;      Temps:          0       0       0       0       0
 15440 ;;      Totals:         0       0       0       0       0
 15441 ;;Total ram usage:        0 bytes
 15442 ;; Hardware stack levels used: 1
 15443 ;; This function calls:
 15444 ;;		Nothing
 15445 ;; This function is called by:
 15446 ;;		_I2C1_Isr
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           	psect	text74
 15451   001B3C                     __ptext74:
 15452                           	callstack 0
 15453   001B3C                     _I2C1_SlaveReleaseClock:
 15454                           	callstack 19
 15455                           
 15456                           ;mcc_generated_files/i2c1_slave.c: 363:     SSP1CON1bits.CKP = 1;
 15457                           
 15458                           ;incstack = 0
 15459   001B3C  8895               	bsf	149,4,c	;volatile
 15460   001B3E  0012               	return		;funcret
 15461   001B40                     __end_of_I2C1_SlaveReleaseClock:
 15462                           	callstack 0
 15463                           
 15464 ;; *************** function _I2C1_SlaveRdCallBack *****************
 15465 ;; Defined at:
 15466 ;;		line 233 in file "mcc_generated_files/i2c1_slave.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;		None
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;		None
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  1    wreg      void 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15480 ;;      Params:         0       0       0       0       0
 15481 ;;      Locals:         0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0
 15483 ;;      Totals:         0       0       0       0       0
 15484 ;;Total ram usage:        0 bytes
 15485 ;; Hardware stack levels used: 1
 15486 ;; Hardware stack levels required when called: 12
 15487 ;; This function calls:
 15488 ;;		NULL
 15489 ;;		_I2C1_SlaveDefRdInterruptHandler
 15490 ;;		_MasterW_SlaveR
 15491 ;; This function is called by:
 15492 ;;		_I2C1_Isr
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text75
 15497   00180A                     __ptext75:
 15498                           	callstack 0
 15499   00180A                     _I2C1_SlaveRdCallBack:
 15500                           	callstack 7
 15501                           
 15502                           ;mcc_generated_files/i2c1_slave.c: 235:     if (I2C1_SlaveRdInterruptHandler)
 15503                           
 15504                           ;incstack = 0
 15505   00180A  0100               	movlb	0	; () banked
 15506   00180C  51C9               	movf	_I2C1_SlaveRdInterruptHandler& (0+255),w,b
 15507   00180E  11CA               	iorwf	(_I2C1_SlaveRdInterruptHandler+1)& (0+255),w,b
 15508   001810  B4D8               	btfsc	status,2,c
 15509   001812  0012               	return	
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;mcc_generated_files/i2c1_slave.c: 236:     {;mcc_generated_files/i2c1_slave.c: 237:    
      +                               I2C1_SlaveRdInterruptHandler();
 15513   001814  D801               	call	i2u297_48
 15514   001816  0012               	return	
 15515   001818                     i2u297_48:
 15516   001818  0005               	push	
 15517   00181A  6EFA               	movwf	pclath,c
 15518   00181C  51C9               	movf	_I2C1_SlaveRdInterruptHandler& (0+255),w,b
 15519   00181E  6EFD               	movwf	tosl,c
 15520   001820  51CA               	movf	(_I2C1_SlaveRdInterruptHandler+1)& (0+255),w,b
 15521   001822  6EFE               	movwf	tosh,c
 15522   001824  50F8               	movf	tblptru,w,c
 15523   001826  6EFF               	movwf	tosu,c
 15524   001828  50FA               	movf	pclath,w,c
 15525   00182A  0012               	return		;indir
 15526   00182C                     __end_of_I2C1_SlaveRdCallBack:
 15527                           	callstack 0
 15528                           
 15529 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
 15530 ;; Defined at:
 15531 ;;		line 241 in file "mcc_generated_files/i2c1_slave.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;		None
 15534 ;; Auto vars:     Size  Location     Type
 15535 ;;		None
 15536 ;; Return value:  Size  Location     Type
 15537 ;;                  1    wreg      void 
 15538 ;; Registers used:
 15539 ;;		wreg, status,2, cstack
 15540 ;; Tracked objects:
 15541 ;;		On entry : 0/0
 15542 ;;		On exit  : 0/0
 15543 ;;		Unchanged: 0/0
 15544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15545 ;;      Params:         0       0       0       0       0
 15546 ;;      Locals:         0       0       0       0       0
 15547 ;;      Temps:          0       0       0       0       0
 15548 ;;      Totals:         0       0       0       0       0
 15549 ;;Total ram usage:        0 bytes
 15550 ;; Hardware stack levels used: 1
 15551 ;; Hardware stack levels required when called: 1
 15552 ;; This function calls:
 15553 ;;		_I2C1_SlaveGetRxData
 15554 ;; This function is called by:
 15555 ;;		_I2C1_Open
 15556 ;;		_I2C1_SlaveRdCallBack
 15557 ;; This function uses a non-reentrant model
 15558 ;;
 15559                           
 15560                           	psect	text76
 15561   001AD0                     __ptext76:
 15562                           	callstack 0
 15563   001AD0                     _I2C1_SlaveDefRdInterruptHandler:
 15564                           	callstack 17
 15565                           
 15566                           ;mcc_generated_files/i2c1_slave.c: 242:     i2c1RdData = I2C1_SlaveGetRxData();
 15567                           
 15568                           ;incstack = 0
 15569   001AD0  ECA0  F00D         	call	_I2C1_SlaveGetRxData	;wreg free
 15570   001AD4  0100               	movlb	0	; () banked
 15571   001AD6  6FCF               	movwf	_i2c1RdData& (0+255),b	;volatile
 15572                           
 15573                           ; BSR set to: 0
 15574   001AD8  0012               	return		;funcret
 15575   001ADA                     __end_of_I2C1_SlaveDefRdInterruptHandler:
 15576                           	callstack 0
 15577                           
 15578 ;; *************** function _MasterW_SlaveR *****************
 15579 ;; Defined at:
 15580 ;;		line 77 in file "i2c_slave.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;		None
 15583 ;; Auto vars:     Size  Location     Type
 15584 ;;  res             1   27[COMRAM] _Bool 
 15585 ;;  rb              1   28[COMRAM] unsigned char 
 15586 ;; Return value:  Size  Location     Type
 15587 ;;                  1    wreg      void 
 15588 ;; Registers used:
 15589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, btemp, btemp+1, btemp+8, bt
      +emp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15590 ;; Tracked objects:
 15591 ;;		On entry : 0/0
 15592 ;;		On exit  : 0/0
 15593 ;;		Unchanged: 0/0
 15594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15595 ;;      Params:         0       0       0       0       0
 15596 ;;      Locals:         2       0       0       0       0
 15597 ;;      Temps:          0       0       0       0       0
 15598 ;;      Totals:         2       0       0       0       0
 15599 ;;Total ram usage:        2 bytes
 15600 ;; Hardware stack levels used: 1
 15601 ;; Hardware stack levels required when called: 11
 15602 ;; This function calls:
 15603 ;;		_I2C1_Read
 15604 ;;		_I2C1_SendNack
 15605 ;;		_TestForStopBit
 15606 ;;		_i2c_write_to_slave_cb
 15607 ;; This function is called by:
 15608 ;;		_i2c_slave_init
 15609 ;;		_I2C1_SlaveRdCallBack
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text77
 15614   000F80                     __ptext77:
 15615                           	callstack 0
 15616   000F80                     _MasterW_SlaveR:
 15617                           	callstack 7
 15618                           
 15619                           ;i2c_slave.c: 79:     if(i2c.state == eIdle)
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;incstack = 0
 15623   000F80  0100               	movlb	0	; () banked
 15624   000F82  51D4               	movf	(_i2c+3)& (0+255),w,b	;volatile
 15625   000F84  B4D8               	btfsc	status,2,c
 15626   000F86  0012               	return	
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;i2c_slave.c: 83:     if(TestForStopBit())
 15630   000F88  EC99  F00C         	call	_TestForStopBit	;wreg free
 15631   000F8C  0900               	iorlw	0
 15632   000F8E  A4D8               	btfss	status,2,c
 15633   000F90  0012               	return	
 15634                           
 15635                           ;i2c_slave.c: 87:     uint8_t rb = I2C1_Read();
 15636   000F92  EC90  F00D         	call	_I2C1_Read	;wreg free
 15637   000F96  6E1D               	movwf	MasterW_SlaveR@rb^0,c
 15638                           
 15639                           ;i2c_slave.c: 90:     if(i2c.state == eAddrH)
 15640   000F98  0100               	movlb	0	; () banked
 15641   000F9A  05D4               	decf	(_i2c+3)& (0+255),w,b	;volatile
 15642   000F9C  A4D8               	btfss	status,2,c
 15643   000F9E  D009               	goto	i2l4312
 15644                           
 15645                           ; BSR set to: 0
 15646   000FA0  0E08               	movlw	8
 15647   000FA2  010F               	movlb	15	; () banked
 15648   000FA4  6F2F               	movwf	47,b	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;i2c_slave.c: 93:         i2c.EEPMemAddr = (uint16_t)rb<<8;
 15652   000FA6  501D               	movf	MasterW_SlaveR@rb^0,w,c
 15653   000FA8  0100               	movlb	0	; () banked
 15654   000FAA  6FD3               	movwf	(_i2c+2)& (0+255),b	;volatile
 15655   000FAC  6BD2               	clrf	(_i2c+1)& (0+255),b	;volatile
 15656   000FAE                     i2l4306:
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;i2c_slave.c: 94:         i2c.state++;
 15660   000FAE  2BD4               	incf	(_i2c+3)& (0+255),f,b	;volatile
 15661   000FB0  0012               	return	
 15662   000FB2                     i2l4312:
 15663                           
 15664                           ; BSR set to: 0
 15665   000FB2  0E02               	movlw	2
 15666   000FB4  19D4               	xorwf	(_i2c+3)& (0+255),w,b	;volatile
 15667   000FB6  A4D8               	btfss	status,2,c
 15668   000FB8  D007               	goto	i2l4324
 15669                           
 15670                           ; BSR set to: 0
 15671   000FBA  0E10               	movlw	16
 15672   000FBC  010F               	movlb	15	; () banked
 15673   000FBE  6F2F               	movwf	47,b	;volatile
 15674                           
 15675                           ; BSR set to: 15
 15676                           ;i2c_slave.c: 100:         i2c.EEPMemAddr |= rb;
 15677   000FC0  501D               	movf	MasterW_SlaveR@rb^0,w,c
 15678   000FC2  0100               	movlb	0	; () banked
 15679   000FC4  13D2               	iorwf	(_i2c+1)& (0+255),f,b	;volatile
 15680   000FC6  D7F3               	goto	i2l4306
 15681   000FC8                     i2l4324:
 15682                           
 15683                           ; BSR set to: 0
 15684   000FC8  0E03               	movlw	3
 15685   000FCA  19D4               	xorwf	(_i2c+3)& (0+255),w,b	;volatile
 15686   000FCC  A4D8               	btfss	status,2,c
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;i2c_slave.c: 105:     {;i2c_slave.c: 106:         i2c.state = eIdle;
 15690   000FCE  6BD4               	clrf	(_i2c+3)& (0+255),b	;volatile
 15691                           
 15692                           ; BSR set to: 0
 15693                           ;i2c_slave.c: 111:     if(i2c.to_slave_ptr != 0)
 15694   000FD0  51D5               	movf	(_i2c+4)& (0+255),w,b	;volatile
 15695   000FD2  11D6               	iorwf	(_i2c+5)& (0+255),w,b	;volatile
 15696   000FD4  B4D8               	btfsc	status,2,c
 15697   000FD6  0012               	return	
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;i2c_slave.c: 112:     {;i2c_slave.c: 113:         _Bool res = (i2c.to_slave_ptr)(&i2c.E
      +                          EPMemAddr, rb);
 15701   000FD8  0ED2               	movlw	low (_i2c+1)
 15702   000FDA  6E16               	movwf	i2c_write_to_slave_cb@addr^0,c
 15703   000FDC  C01D  F017         	movff	MasterW_SlaveR@rb,i2c_write_to_slave_cb@rb
 15704   000FE0  EE20  F0D5         	lfsr	2,_i2c+4	;volatile
 15705   000FE4  D801               	call	i2u283_48
 15706   000FE6  D00A               	goto	i2u283_49
 15707   000FE8                     i2u283_48:
 15708   000FE8  0005               	push	
 15709   000FEA  6EFA               	movwf	pclath,c
 15710   000FEC  50DE               	movf	postinc2,w,c
 15711   000FEE  6EFD               	movwf	tosl,c
 15712   000FF0  50DE               	movf	postinc2,w,c
 15713   000FF2  6EFE               	movwf	tosh,c
 15714   000FF4  50F8               	movf	tblptru,w,c
 15715   000FF6  6EFF               	movwf	tosu,c
 15716   000FF8  50FA               	movf	pclath,w,c
 15717   000FFA  0012               	return		;indir
 15718   000FFC                     i2u283_49:
 15719   000FFC  6E1C               	movwf	MasterW_SlaveR@res^0,c
 15720                           
 15721                           ;i2c_slave.c: 114:         i2c.byteNo++;
 15722   000FFE  0100               	movlb	0	; () banked
 15723   001000  2BD9               	incf	(_i2c+8)& (0+255),f,b	;volatile
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;i2c_slave.c: 115:         if(!res)
 15727   001002  501C               	movf	MasterW_SlaveR@res^0,w,c
 15728   001004  A4D8               	btfss	status,2,c
 15729   001006  0012               	return	
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;i2c_slave.c: 116:             I2C1_SendNack();
 15733   001008  EC87  F00D         	call	_I2C1_SendNack	;wreg free
 15734   00100C  0012               	return		;funcret
 15735   00100E                     __end_of_MasterW_SlaveR:
 15736                           	callstack 0
 15737                           
 15738 ;; *************** function _i2c_write_to_slave_cb *****************
 15739 ;; Defined at:
 15740 ;;		line 105 in file "main.c"
 15741 ;; Parameters:    Size  Location     Type
 15742 ;;  addr            1   21[COMRAM] PTR volatile unsigned sh
 15743 ;;		 -> i2c(9), 
 15744 ;;  rb              1   22[COMRAM] unsigned char 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;  c               2   25[COMRAM] struct .
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      _Bool 
 15749 ;; Registers used:
 15750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15756 ;;      Params:         2       0       0       0       0
 15757 ;;      Locals:         2       0       0       0       0
 15758 ;;      Temps:          2       0       0       0       0
 15759 ;;      Totals:         6       0       0       0       0
 15760 ;;Total ram usage:        6 bytes
 15761 ;; Hardware stack levels used: 1
 15762 ;; Hardware stack levels required when called: 10
 15763 ;; This function calls:
 15764 ;;		_eeprom_read_buffer
 15765 ;;		_eeprom_write_buffer
 15766 ;;		_handle_write_cmd
 15767 ;; This function is called by:
 15768 ;;		_main
 15769 ;;		_MasterW_SlaveR
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text78
 15774   00100E                     __ptext78:
 15775                           	callstack 0
 15776   00100E                     _i2c_write_to_slave_cb:
 15777                           	callstack 7
 15778                           
 15779                           ;incstack = 0
 15780                           ;main.c: 105: _Bool i2c_write_to_slave_cb(volatile uint16_t *addr, uint8_t rb);main.c: 1
      +                          06: {;main.c: 107:     do{ DAC1CON1 = 32; }while(0);
 15781   00100E  0E20               	movlw	32
 15782   001010  010F               	movlb	15	; () banked
 15783   001012  6F2F               	movwf	47,b	;volatile
 15784                           
 15785                           ; BSR set to: 15
 15786                           ;main.c: 109:     address_t c;;main.c: 110:     c.raw = *addr;
 15787   001014  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15788   001016  6ED9               	movwf	fsr2l,c
 15789   001018  6ADA               	clrf	fsr2h,c
 15790   00101A  CFDE F01A          	movff	postinc2,i2c_write_to_slave_cb@c
 15791   00101E  CFDD F01B          	movff	postdec2,i2c_write_to_slave_cb@c+1
 15792                           
 15793                           ; BSR set to: 15
 15794                           ;main.c: 111:     if(c.isCMD)
 15795   001022  AE1B               	btfss	(i2c_write_to_slave_cb@c+1)^0,7,c
 15796   001024  D00A               	goto	i2l4104
 15797                           
 15798                           ; BSR set to: 15
 15799                           ;main.c: 112:     {;main.c: 114:         if(!handle_write_cmd(c, rb))
 15800   001026  C01A  F013         	movff	i2c_write_to_slave_cb@c,handle_write_cmd@c
 15801   00102A  C01B  F014         	movff	i2c_write_to_slave_cb@c+1,handle_write_cmd@c+1
 15802   00102E  C017  F015         	movff	i2c_write_to_slave_cb@rb,handle_write_cmd@rb
 15803   001032  EC9B  F00B         	call	_handle_write_cmd	;wreg free
 15804   001036                     i2l4100:
 15805                           
 15806                           ;main.c: 115:             return 0;
 15807   001036  0E00               	movlw	0
 15808   001038  0012               	return	
 15809   00103A                     i2l4104:
 15810                           
 15811                           ; BSR set to: 15
 15812   00103A  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15813   00103C  6ED9               	movwf	fsr2l,c
 15814   00103E  6ADA               	clrf	fsr2h,c
 15815   001040  0E00               	movlw	0
 15816   001042  5CDE               	subwf	postinc2,w,c
 15817   001044  0E01               	movlw	1
 15818   001046  58DE               	subwfb	postinc2,w,c
 15819   001048  B0D8               	btfsc	status,0,c
 15820   00104A  D7F5               	goto	i2l4100
 15821                           
 15822                           ; BSR set to: 15
 15823                           ;main.c: 118:     {;main.c: 120:         if(eeprom_read_buffer((eeAddr_t)*addr) != rb)
 15824   00104C  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15825   00104E  6ED9               	movwf	fsr2l,c
 15826   001050  6ADA               	clrf	fsr2h,c
 15827   001052  50DF               	movf	indf2,w,c
 15828   001054  ECB5  F00C         	call	_eeprom_read_buffer
 15829   001058  1817               	xorwf	i2c_write_to_slave_cb@rb^0,w,c
 15830   00105A  B4D8               	btfsc	status,2,c
 15831   00105C  D008               	goto	i2l4110
 15832                           
 15833                           ;main.c: 121:             eeprom_write_buffer((eeAddr_t)*addr, rb);
 15834   00105E  C017  F001         	movff	i2c_write_to_slave_cb@rb,eeprom_write_buffer@data
 15835   001062  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15836   001064  6ED9               	movwf	fsr2l,c
 15837   001066  6ADA               	clrf	fsr2h,c
 15838   001068  50DF               	movf	indf2,w,c
 15839   00106A  EC6B  F00A         	call	_eeprom_write_buffer
 15840   00106E                     i2l4110:
 15841                           
 15842                           ;main.c: 124:         *addr += 1;
 15843   00106E  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15844   001070  6ED9               	movwf	fsr2l,c
 15845   001072  6ADA               	clrf	fsr2h,c
 15846   001074  2ADE               	incf	postinc2,f,c
 15847   001076  0E00               	movlw	0
 15848   001078  22DD               	addwfc	postdec2,f,c
 15849                           
 15850                           ;main.c: 127:         if(*addr >= 256)
 15851   00107A  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15852   00107C  6ED9               	movwf	fsr2l,c
 15853   00107E  6ADA               	clrf	fsr2h,c
 15854   001080  0E00               	movlw	0
 15855   001082  5CDE               	subwf	postinc2,w,c
 15856   001084  0E01               	movlw	1
 15857   001086  58DE               	subwfb	postinc2,w,c
 15858   001088  A0D8               	btfss	status,0,c
 15859   00108A  D005               	goto	i2l4116
 15860                           
 15861                           ;main.c: 128:             *addr = 0;
 15862   00108C  5016               	movf	i2c_write_to_slave_cb@addr^0,w,c
 15863   00108E  6ED9               	movwf	fsr2l,c
 15864   001090  6ADA               	clrf	fsr2h,c
 15865   001092  6ADE               	clrf	postinc2,c
 15866   001094  6ADD               	clrf	postdec2,c
 15867   001096                     i2l4116:
 15868                           
 15869                           ;main.c: 130:         return 1;
 15870   001096  0E01               	movlw	1
 15871   001098  0012               	return		;funcret
 15872   00109A                     __end_of_i2c_write_to_slave_cb:
 15873                           	callstack 0
 15874                           
 15875 ;; *************** function _handle_write_cmd *****************
 15876 ;; Defined at:
 15877 ;;		line 34 in file "main.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;  c               2   18[COMRAM] struct .
 15880 ;;  rb              1   20[COMRAM] unsigned char 
 15881 ;; Auto vars:     Size  Location     Type
 15882 ;;		None
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1    wreg      _Bool 
 15885 ;; Registers used:
 15886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15887 ;; Tracked objects:
 15888 ;;		On entry : 0/0
 15889 ;;		On exit  : 0/0
 15890 ;;		Unchanged: 0/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15892 ;;      Params:         3       0       0       0       0
 15893 ;;      Locals:         0       0       0       0       0
 15894 ;;      Temps:          0       0       0       0       0
 15895 ;;      Totals:         3       0       0       0       0
 15896 ;;Total ram usage:        3 bytes
 15897 ;; Hardware stack levels used: 1
 15898 ;; Hardware stack levels required when called: 9
 15899 ;; This function calls:
 15900 ;;		_WriteReg
 15901 ;; This function is called by:
 15902 ;;		_i2c_write_to_slave_cb
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text79
 15907   001736                     __ptext79:
 15908                           	callstack 0
 15909   001736                     _handle_write_cmd:
 15910                           	callstack 7
 15911                           
 15912                           ;main.c: 34: _Bool handle_write_cmd(address_t c, uint8_t rb);main.c: 35: {;main.c: 37:  
      +                             if(c.cmd < 32)
 15913                           
 15914                           ;incstack = 0
 15915   001736  0E20               	movlw	32
 15916   001738  6013               	cpfslt	handle_write_cmd@c^0,c
 15917   00173A  D00B               	goto	i2l4028
 15918                           
 15919                           ;main.c: 38:         return WriteReg(c.cmd, c.portNo, rb);
 15920   00173C  5014               	movf	(handle_write_cmd@c+1)^0,w,c
 15921   00173E  0B07               	andlw	7
 15922   001740  6E0F               	movwf	WriteReg@portNo^0,c
 15923   001742  C015  F010         	movff	handle_write_cmd@rb,WriteReg@value
 15924   001746  5013               	movf	handle_write_cmd@c^0,w,c
 15925   001748  EC76  F007         	call	_WriteReg
 15926   00174C  0012               	return	
 15927   00174E                     i2l4022:
 15928                           
 15929                           ;main.c: 51:                 return 0;
 15930   00174E  0E00               	movlw	0
 15931   001750  0012               	return	
 15932   001752                     i2l4028:
 15933   001752  5013               	movf	handle_write_cmd@c^0,w,c
 15934                           
 15935                           ; Switch size 1, requested type "simple"
 15936                           ; Number of cases is 2, Range of values is 33 to 34
 15937                           ; switch strategies available:
 15938                           ; Name         Instructions Cycles
 15939                           ; simple_byte            7     4 (average)
 15940                           ;	Chosen strategy is simple_byte
 15941   001754  0A21               	xorlw	33	; case 33
 15942   001756  B4D8               	btfsc	status,2,c
 15943   001758  D003               	goto	i2l4030
 15944   00175A  0A03               	xorlw	3	; case 34
 15945   00175C  A4D8               	btfss	status,2,c
 15946   00175E  D7F7               	goto	i2l4022
 15947   001760                     i2l4030:
 15948                           
 15949                           ;main.c: 54:     return 1;
 15950   001760  0E01               	movlw	1
 15951   001762  0012               	return		;funcret
 15952   001764                     __end_of_handle_write_cmd:
 15953                           	callstack 0
 15954                           
 15955 ;; *************** function _WriteReg *****************
 15956 ;; Defined at:
 15957 ;;		line 87 in file "registers.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  regNo           1    wreg     enum E10118
 15960 ;;  portNo          1   14[COMRAM] enum E10079
 15961 ;;  value           1   15[COMRAM] unsigned char 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;  regNo           1   16[COMRAM] enum E10118
 15964 ;;  p               1   17[COMRAM] unsigned char 
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      _Bool 
 15967 ;; Registers used:
 15968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/0
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15974 ;;      Params:         2       0       0       0       0
 15975 ;;      Locals:         2       0       0       0       0
 15976 ;;      Temps:          0       0       0       0       0
 15977 ;;      Totals:         4       0       0       0       0
 15978 ;;Total ram usage:        4 bytes
 15979 ;; Hardware stack levels used: 1
 15980 ;; Hardware stack levels required when called: 8
 15981 ;; This function calls:
 15982 ;;		_WriteBit
 15983 ;;		___assert_fail
 15984 ;; This function is called by:
 15985 ;;		_handle_write_cmd
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           	psect	text80
 15990   000EEC                     __ptext80:
 15991                           	callstack 0
 15992   000EEC                     _WriteReg:
 15993                           	callstack 7
 15994                           
 15995                           ;incstack = 0
 15996                           ;WriteReg@regNo stored from wreg
 15997   000EEC  6E11               	movwf	WriteReg@regNo^0,c
 15998                           
 15999                           ;registers.c: 87: _Bool WriteReg(Registers_t regNo, EXP_PORT portNo, port_t value);regis
      +                          ters.c: 88: {;registers.c: 89:     ((void)((regNo < eRegistersCNT) || (__assert_fail("re
      +                          gNo < eRegistersCNT", "registers.c", 89, __func__),0)));
 16000   000EEE  0E0A               	movlw	10
 16001   000EF0  6411               	cpfsgt	WriteReg@regNo^0,c
 16002   000EF2  D012               	goto	i2l3924
 16003   000EF4  0EDC               	movlw	low STR_52
 16004   000EF6  6EE6               	movwf	postinc1,c
 16005   000EF8  0E3F               	movlw	high STR_52
 16006   000EFA  6EE6               	movwf	postinc1,c
 16007   000EFC  0E59               	movlw	89
 16008   000EFE  6EE6               	movwf	postinc1,c
 16009   000F00  0E00               	movlw	0
 16010   000F02  6EE6               	movwf	postinc1,c
 16011   000F04  0EC7               	movlw	low STR_3
 16012   000F06  6EE6               	movwf	postinc1,c
 16013   000F08  0E3F               	movlw	high STR_3
 16014   000F0A  6EE6               	movwf	postinc1,c
 16015   000F0C  0E72               	movlw	low STR_2
 16016   000F0E  6EE6               	movwf	postinc1,c
 16017   000F10  0E3F               	movlw	high STR_2
 16018   000F12  6EE6               	movwf	postinc1,c
 16019   000F14  EC8F  F00A         	call	___assert_fail	;wreg free
 16020   000F18                     i2l3924:
 16021                           
 16022                           ;registers.c: 90:     ((void)((portNo < 2) || (__assert_fail("portNo < EXP_PORTS_CNT", "
      +                          registers.c", 90, __func__),0)));
 16023   000F18  0E01               	movlw	1
 16024   000F1A  640F               	cpfsgt	WriteReg@portNo^0,c
 16025   000F1C  D012               	goto	i2l3928
 16026   000F1E  0EDC               	movlw	low STR_52
 16027   000F20  6EE6               	movwf	postinc1,c
 16028   000F22  0E3F               	movlw	high STR_52
 16029   000F24  6EE6               	movwf	postinc1,c
 16030   000F26  0E5A               	movlw	90
 16031   000F28  6EE6               	movwf	postinc1,c
 16032   000F2A  0E00               	movlw	0
 16033   000F2C  6EE6               	movwf	postinc1,c
 16034   000F2E  0EC7               	movlw	low STR_3
 16035   000F30  6EE6               	movwf	postinc1,c
 16036   000F32  0E3F               	movlw	high STR_3
 16037   000F34  6EE6               	movwf	postinc1,c
 16038   000F36  0E44               	movlw	low STR_26
 16039   000F38  6EE6               	movwf	postinc1,c
 16040   000F3A  0E3F               	movlw	high STR_26
 16041   000F3C  6EE6               	movwf	postinc1,c
 16042   000F3E  EC8F  F00A         	call	___assert_fail	;wreg free
 16043   000F42                     i2l3928:
 16044                           
 16045                           ;registers.c: 92:     if(regNo >= eRegistersCNT)
 16046   000F42  0E0A               	movlw	10
 16047   000F44  6411               	cpfsgt	WriteReg@regNo^0,c
 16048   000F46  D002               	goto	i2l3934
 16049   000F48                     i2u239_40:
 16050                           
 16051                           ;registers.c: 93:         return 0;
 16052   000F48  0E00               	movlw	0
 16053   000F4A  0012               	return	
 16054   000F4C                     i2l3934:
 16055                           
 16056                           ;registers.c: 95:     if(portNo >= eEXP_PORT_CNT)
 16057   000F4C  0E01               	movlw	1
 16058   000F4E  640F               	cpfsgt	WriteReg@portNo^0,c
 16059   000F50  D001               	goto	i2l1126
 16060   000F52  D7FA               	goto	i2u239_40
 16061   000F54                     i2l1126:
 16062                           
 16063                           ;registers.c: 98:     for(uint8_t p = 0; p < 8; p++)
 16064   000F54  6A12               	clrf	WriteReg@p^0,c
 16065   000F56                     i2l3944:
 16066                           
 16067                           ;registers.c: 99:     {;registers.c: 100:         WriteBit(regNo, portNo, p, value & 1);
 16068   000F56  C00F  F001         	movff	WriteReg@portNo,WriteBit@portNo
 16069   000F5A  C012  F002         	movff	WriteReg@p,WriteBit@pinNo
 16070   000F5E  A010               	btfss	WriteReg@value^0,0,c
 16071   000F60  D002               	goto	i2u241_40
 16072   000F62  0E01               	movlw	1
 16073   000F64  D001               	goto	i2u242_40
 16074   000F66                     i2u241_40:
 16075   000F66  0E00               	movlw	0
 16076   000F68                     i2u242_40:
 16077   000F68  6E03               	movwf	WriteBit@value^0,c
 16078   000F6A  5011               	movf	WriteReg@regNo^0,w,c
 16079   000F6C  EC77  F002         	call	_WriteBit
 16080                           
 16081                           ;registers.c: 101:         value >>= 1;
 16082   000F70  90D8               	bcf	status,0,c
 16083   000F72  3210               	rrcf	WriteReg@value^0,f,c
 16084                           
 16085                           ;registers.c: 102:     }
 16086   000F74  2A12               	incf	WriteReg@p^0,f,c
 16087   000F76  0E07               	movlw	7
 16088   000F78  6412               	cpfsgt	WriteReg@p^0,c
 16089   000F7A  D7ED               	goto	i2l3944
 16090                           
 16091                           ;registers.c: 103:     return 1;
 16092   000F7C  0E01               	movlw	1
 16093   000F7E  0012               	return		;funcret
 16094   000F80                     __end_of_WriteReg:
 16095                           	callstack 0
 16096                           
 16097 ;; *************** function _WriteBit *****************
 16098 ;; Defined at:
 16099 ;;		line 66 in file "registers.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;  regNo           1    wreg     enum E10118
 16102 ;;  portNo          1    0[COMRAM] enum E10079
 16103 ;;  pinNo           1    1[COMRAM] enum E10084
 16104 ;;  value           1    2[COMRAM] _Bool 
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  regNo           1   13[COMRAM] enum E10118
 16107 ;;  reg             2   10[COMRAM] PTR volatile unsigned ch
 16108 ;;		 -> IOCAP(1), IOCAN(1), IOCAF(1), PORTA(1), 
 16109 ;;		 -> INLVLA(1), SLRCONA(1), ODCONA(1), WPUA(1), 
 16110 ;;		 -> ANSELA(1), TRISA(1), LATA(1), 
 16111 ;;  pin             2    8[COMRAM] PTR const struct .
 16112 ;;		 -> PINS(32), 
 16113 ;;  portMask        1   12[COMRAM] unsigned char 
 16114 ;;  portData        1    7[COMRAM] unsigned char 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      void 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16124 ;;      Params:         3       0       0       0       0
 16125 ;;      Locals:         7       0       0       0       0
 16126 ;;      Temps:          4       0       0       0       0
 16127 ;;      Totals:        14       0       0       0       0
 16128 ;;Total ram usage:       14 bytes
 16129 ;; Hardware stack levels used: 1
 16130 ;; Hardware stack levels required when called: 7
 16131 ;; This function calls:
 16132 ;;		___assert_fail
 16133 ;; This function is called by:
 16134 ;;		_WriteReg
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text81
 16139   0004EE                     __ptext81:
 16140                           	callstack 0
 16141   0004EE                     _WriteBit:
 16142                           	callstack 7
 16143                           
 16144                           ;incstack = 0
 16145                           ;WriteBit@regNo stored from wreg
 16146   0004EE  6E0E               	movwf	WriteBit@regNo^0,c
 16147                           
 16148                           ;registers.c: 66: void WriteBit(Registers_t regNo, EXP_PORT portNo, EXP_PIN pinNo, _Bool
      +                           value);registers.c: 67: {;registers.c: 68:     ((void)((regNo < eRegistersCNT) || (__as
      +                          sert_fail("regNo < eRegistersCNT", "registers.c", 68, __func__),0)));
 16149   0004F0  0E0A               	movlw	10
 16150   0004F2  640E               	cpfsgt	WriteBit@regNo^0,c
 16151   0004F4  D012               	goto	i2l3886
 16152   0004F6  0EE5               	movlw	low STR_34
 16153   0004F8  6EE6               	movwf	postinc1,c
 16154   0004FA  0E3F               	movlw	high STR_34
 16155   0004FC  6EE6               	movwf	postinc1,c
 16156   0004FE  0E44               	movlw	68
 16157   000500  6EE6               	movwf	postinc1,c
 16158   000502  0E00               	movlw	0
 16159   000504  6EE6               	movwf	postinc1,c
 16160   000506  0EC7               	movlw	low STR_3
 16161   000508  6EE6               	movwf	postinc1,c
 16162   00050A  0E3F               	movlw	high STR_3
 16163   00050C  6EE6               	movwf	postinc1,c
 16164   00050E  0E72               	movlw	low STR_2
 16165   000510  6EE6               	movwf	postinc1,c
 16166   000512  0E3F               	movlw	high STR_2
 16167   000514  6EE6               	movwf	postinc1,c
 16168   000516  EC8F  F00A         	call	___assert_fail	;wreg free
 16169   00051A                     i2l3886:
 16170                           
 16171                           ;registers.c: 69:     ((void)((portNo < eEXP_PORT_CNT) || (__assert_fail("portNo < eEXP_
      +                          PORT_CNT", "registers.c", 69, __func__),0)));
 16172   00051A  0E01               	movlw	1
 16173   00051C  6401               	cpfsgt	WriteBit@portNo^0,c
 16174   00051E  D012               	goto	i2l3890
 16175   000520  0EE5               	movlw	low STR_34
 16176   000522  6EE6               	movwf	postinc1,c
 16177   000524  0E3F               	movlw	high STR_34
 16178   000526  6EE6               	movwf	postinc1,c
 16179   000528  0E45               	movlw	69
 16180   00052A  6EE6               	movwf	postinc1,c
 16181   00052C  0E00               	movlw	0
 16182   00052E  6EE6               	movwf	postinc1,c
 16183   000530  0EC7               	movlw	low STR_3
 16184   000532  6EE6               	movwf	postinc1,c
 16185   000534  0E3F               	movlw	high STR_3
 16186   000536  6EE6               	movwf	postinc1,c
 16187   000538  0E5B               	movlw	low STR_8
 16188   00053A  6EE6               	movwf	postinc1,c
 16189   00053C  0E3F               	movlw	high STR_8
 16190   00053E  6EE6               	movwf	postinc1,c
 16191   000540  EC8F  F00A         	call	___assert_fail	;wreg free
 16192   000544                     i2l3890:
 16193                           
 16194                           ;registers.c: 70:     ((void)((pinNo < eEXP_PIN_CNT) || (__assert_fail("pinNo < eEXP_PIN
      +                          _CNT", "registers.c", 70, __func__),0)));
 16195   000544  0E07               	movlw	7
 16196   000546  6402               	cpfsgt	WriteBit@pinNo^0,c
 16197   000548  D012               	goto	i2l3894
 16198   00054A  0EE5               	movlw	low STR_34
 16199   00054C  6EE6               	movwf	postinc1,c
 16200   00054E  0E3F               	movlw	high STR_34
 16201   000550  6EE6               	movwf	postinc1,c
 16202   000552  0E46               	movlw	70
 16203   000554  6EE6               	movwf	postinc1,c
 16204   000556  0E00               	movlw	0
 16205   000558  6EE6               	movwf	postinc1,c
 16206   00055A  0EC7               	movlw	low STR_3
 16207   00055C  6EE6               	movwf	postinc1,c
 16208   00055E  0E3F               	movlw	high STR_3
 16209   000560  6EE6               	movwf	postinc1,c
 16210   000562  0E9D               	movlw	low STR_14
 16211   000564  6EE6               	movwf	postinc1,c
 16212   000566  0E3F               	movlw	high STR_14
 16213   000568  6EE6               	movwf	postinc1,c
 16214   00056A  EC8F  F00A         	call	___assert_fail	;wreg free
 16215   00056E                     i2l3894:
 16216                           
 16217                           ;registers.c: 72:     const Pin_t *pin = &PINS[portNo][pinNo];
 16218   00056E  5002               	movf	WriteBit@pinNo^0,w,c
 16219   000570  0D02               	mullw	2
 16220   000572  CFF3 F004          	movff	prodl,??_WriteBit
 16221   000576  CFF4 F005          	movff	prodh,??_WriteBit+1
 16222   00057A  5001               	movf	WriteBit@portNo^0,w,c
 16223   00057C  0D10               	mullw	16
 16224   00057E  0ED0               	movlw	low _PINS
 16225   000580  24F3               	addwf	243,w,c
 16226   000582  6E06               	movwf	(??_WriteBit+2)^0,c
 16227   000584  0E3E               	movlw	high _PINS
 16228   000586  20F4               	addwfc	prodh,w,c
 16229   000588  6E07               	movwf	(??_WriteBit+3)^0,c
 16230   00058A  5004               	movf	??_WriteBit^0,w,c
 16231   00058C  2406               	addwf	(??_WriteBit+2)^0,w,c
 16232   00058E  6E09               	movwf	WriteBit@pin^0,c
 16233   000590  5005               	movf	(??_WriteBit+1)^0,w,c
 16234   000592  2007               	addwfc	(??_WriteBit+3)^0,w,c
 16235   000594  6E0A               	movwf	(WriteBit@pin+1)^0,c
 16236                           
 16237                           ;registers.c: 75:     volatile unsigned char *reg = Registers[regNo].reg;
 16238   000596  500E               	movf	WriteBit@regNo^0,w,c
 16239   000598  0D03               	mullw	3
 16240   00059A  0EAF               	movlw	low _Registers
 16241   00059C  24F3               	addwf	243,w,c
 16242   00059E  6EF6               	movwf	tblptrl,c
 16243   0005A0  0E3E               	movlw	high _Registers
 16244   0005A2  20F4               	addwfc	244,w,c
 16245   0005A4  6EF7               	movwf	tblptrh,c
 16246   0005A6                     	if	0	;There are less than 3 active tblptr bytes
 16247   0005A6                     	endif
 16248   0005A6  0009               	tblrd		*+
 16249   0005A8  CFF5 F00B          	movff	tablat,WriteBit@reg
 16250   0005AC  000A               	tblrd		*-
 16251   0005AE  CFF5 F00C          	movff	tablat,WriteBit@reg+1
 16252                           
 16253                           ;registers.c: 76:     reg += pin->Port * (Registers[regNo].portCntOffset & 31);
 16254   0005B2  500E               	movf	WriteBit@regNo^0,w,c
 16255   0005B4  0D03               	mullw	3
 16256   0005B6  0E02               	movlw	2
 16257   0005B8  26F3               	addwf	243,f,c
 16258   0005BA  0E00               	movlw	0
 16259   0005BC  22F4               	addwfc	244,f,c
 16260   0005BE  0EAF               	movlw	low _Registers
 16261   0005C0  24F3               	addwf	243,w,c
 16262   0005C2  6EF6               	movwf	tblptrl,c
 16263   0005C4  0E3E               	movlw	high _Registers
 16264   0005C6  20F4               	addwfc	244,w,c
 16265   0005C8  6EF7               	movwf	tblptrh,c
 16266   0005CA                     	if	0	;There are less than 3 active tblptr bytes
 16267   0005CA                     	endif
 16268   0005CA  0008               	tblrd		*
 16269   0005CC  CFF5 F004          	movff	tablat,??_WriteBit
 16270   0005D0  0E1F               	movlw	31
 16271   0005D2  1604               	andwf	??_WriteBit^0,f,c
 16272   0005D4  C009  FFF6         	movff	WriteBit@pin,tblptrl
 16273   0005D8  C00A  FFF7         	movff	WriteBit@pin+1,tblptrh
 16274   0005DC                     	if	0	;tblptru may be non-zero
 16275   0005DC                     	endif
 16276   0005DC                     	if	0	;tblptru may be non-zero
 16277   0005DC                     	endif
 16278   0005DC  0008               	tblrd		*
 16279   0005DE  CFF5 F005          	movff	tablat,??_WriteBit+1
 16280   0005E2  5005               	movf	(??_WriteBit+1)^0,w,c
 16281   0005E4  0B0F               	andlw	15
 16282   0005E6  6E06               	movwf	(??_WriteBit+2)^0,c
 16283   0005E8  5006               	movf	(??_WriteBit+2)^0,w,c
 16284   0005EA  0204               	mulwf	??_WriteBit^0,c
 16285   0005EC  50F3               	movf	243,w,c
 16286   0005EE  260B               	addwf	WriteBit@reg^0,f,c
 16287   0005F0  50F4               	movf	244,w,c
 16288   0005F2  220C               	addwfc	(WriteBit@reg+1)^0,f,c
 16289                           
 16290                           ;registers.c: 78:     port_t portData = *reg;
 16291   0005F4  C00B  FFD9         	movff	WriteBit@reg,fsr2l
 16292   0005F8  C00C  FFDA         	movff	WriteBit@reg+1,fsr2h
 16293   0005FC  50DF               	movf	indf2,w,c
 16294   0005FE  6E08               	movwf	WriteBit@portData^0,c
 16295                           
 16296                           ;registers.c: 79:     port_t portMask = (port_t)((int)1<<pin->Pin);
 16297   000600  C009  FFF6         	movff	WriteBit@pin,tblptrl
 16298   000604  C00A  FFF7         	movff	WriteBit@pin+1,tblptrh
 16299   000608                     	if	0	;tblptru may be non-zero
 16300   000608                     	endif
 16301   000608                     	if	0	;tblptru may be non-zero
 16302   000608                     	endif
 16303   000608  0008               	tblrd		*
 16304   00060A  CFF5 F004          	movff	tablat,??_WriteBit
 16305   00060E  3804               	swapf	??_WriteBit^0,w,c
 16306   000610  0B0F               	andlw	15
 16307   000612  6E05               	movwf	(??_WriteBit+1)^0,c
 16308   000614  0E01               	movlw	1
 16309   000616  6E06               	movwf	(??_WriteBit+2)^0,c
 16310   000618  2A05               	incf	(??_WriteBit+1)^0,f,c
 16311   00061A  D002               	goto	i2u234_44
 16312   00061C                     i2u234_45:
 16313   00061C  90D8               	bcf	status,0,c
 16314   00061E  3606               	rlcf	(??_WriteBit+2)^0,f,c
 16315   000620                     i2u234_44:
 16316   000620  2E05               	decfsz	(??_WriteBit+1)^0,f,c
 16317   000622  D7FC               	goto	i2u234_45
 16318   000624  5006               	movf	(??_WriteBit+2)^0,w,c
 16319   000626  6E0D               	movwf	WriteBit@portMask^0,c
 16320                           
 16321                           ;registers.c: 80:     if(value)
 16322   000628  5003               	movf	WriteBit@value^0,w,c
 16323   00062A  B4D8               	btfsc	status,2,c
 16324   00062C  D003               	goto	i2l3908
 16325                           
 16326                           ;registers.c: 81:         portData |= portMask;
 16327   00062E  500D               	movf	WriteBit@portMask^0,w,c
 16328   000630  1208               	iorwf	WriteBit@portData^0,f,c
 16329   000632  D003               	goto	i2l3910
 16330   000634                     i2l3908:
 16331                           
 16332                           ;registers.c: 83:         portData &= ~portMask;
 16333   000634  500D               	movf	WriteBit@portMask^0,w,c
 16334   000636  0AFF               	xorlw	255
 16335   000638  1608               	andwf	WriteBit@portData^0,f,c
 16336   00063A                     i2l3910:
 16337                           
 16338                           ;registers.c: 84:     *reg = portData;
 16339   00063A  C00B  FFD9         	movff	WriteBit@reg,fsr2l
 16340   00063E  C00C  FFDA         	movff	WriteBit@reg+1,fsr2h
 16341   000642  C008  FFDF         	movff	WriteBit@portData,indf2
 16342   000646  0012               	return		;funcret
 16343   000648                     __end_of_WriteBit:
 16344                           	callstack 0
 16345                           
 16346 ;; *************** function _eeprom_write_buffer *****************
 16347 ;; Defined at:
 16348 ;;		line 29 in file "eeprom.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;  addr            1    wreg     unsigned char 
 16351 ;;  data            1    0[COMRAM] unsigned char 
 16352 ;; Auto vars:     Size  Location     Type
 16353 ;;  addr            1    4[COMRAM] unsigned char 
 16354 ;; Return value:  Size  Location     Type
 16355 ;;                  1    wreg      void 
 16356 ;; Registers used:
 16357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16358 ;; Tracked objects:
 16359 ;;		On entry : 0/0
 16360 ;;		On exit  : 0/0
 16361 ;;		Unchanged: 0/0
 16362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16363 ;;      Params:         1       0       0       0       0
 16364 ;;      Locals:         1       0       0       0       0
 16365 ;;      Temps:          3       0       0       0       0
 16366 ;;      Totals:         5       0       0       0       0
 16367 ;;Total ram usage:        5 bytes
 16368 ;; Hardware stack levels used: 1
 16369 ;; This function calls:
 16370 ;;		Nothing
 16371 ;; This function is called by:
 16372 ;;		_i2c_write_to_slave_cb
 16373 ;; This function uses a non-reentrant model
 16374 ;;
 16375                           
 16376                           	psect	text82
 16377   0014D6                     __ptext82:
 16378                           	callstack 0
 16379   0014D6                     _eeprom_write_buffer:
 16380                           	callstack 16
 16381                           
 16382                           ;incstack = 0
 16383                           ;eeprom_write_buffer@addr stored from wreg
 16384   0014D6  6E05               	movwf	eeprom_write_buffer@addr^0,c
 16385                           
 16386                           ;eeprom.c: 29: void eeprom_write_buffer(eeAddr_t addr, uint8_t data);eeprom.c: 30: {;eep
      +                          rom.c: 31:     E2_DATA[addr] = data;
 16387   0014D8  0E00               	movlw	low _E2_DATA
 16388   0014DA  2405               	addwf	eeprom_write_buffer@addr^0,w,c
 16389   0014DC  6ED9               	movwf	fsr2l,c
 16390   0014DE  6ADA               	clrf	fsr2h,c
 16391   0014E0  0E02               	movlw	high _E2_DATA
 16392   0014E2  22DA               	addwfc	fsr2h,f,c
 16393   0014E4  C001  FFDF         	movff	eeprom_write_buffer@data,indf2
 16394                           
 16395                           ;eeprom.c: 32:     E2_Changes[addr >> 3] |= 1 << (addr & 0x7);
 16396   0014E8  C005  F002         	movff	eeprom_write_buffer@addr,??_eeprom_write_buffer
 16397   0014EC  0E07               	movlw	7
 16398   0014EE  1602               	andwf	??_eeprom_write_buffer^0,f,c
 16399   0014F0  0E01               	movlw	1
 16400   0014F2  6E03               	movwf	(??_eeprom_write_buffer+1)^0,c
 16401   0014F4  2A02               	incf	??_eeprom_write_buffer^0,f,c
 16402   0014F6  D002               	goto	i2u257_44
 16403   0014F8                     i2u257_45:
 16404   0014F8  90D8               	bcf	status,0,c
 16405   0014FA  3603               	rlcf	(??_eeprom_write_buffer+1)^0,f,c
 16406   0014FC                     i2u257_44:
 16407   0014FC  2E02               	decfsz	??_eeprom_write_buffer^0,f,c
 16408   0014FE  D7FC               	goto	i2u257_45
 16409   001500  C005  F004         	movff	eeprom_write_buffer@addr,??_eeprom_write_buffer+2
 16410   001504  90D8               	bcf	status,0,c
 16411   001506  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 16412   001508  90D8               	bcf	status,0,c
 16413   00150A  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 16414   00150C  90D8               	bcf	status,0,c
 16415   00150E  3204               	rrcf	(??_eeprom_write_buffer+2)^0,f,c
 16416   001510  5004               	movf	(??_eeprom_write_buffer+2)^0,w,c
 16417   001512  0F91               	addlw	low _E2_Changes
 16418   001514  6ED9               	movwf	fsr2l,c
 16419   001516  6ADA               	clrf	fsr2h,c
 16420   001518  5003               	movf	(??_eeprom_write_buffer+1)^0,w,c
 16421   00151A  12DF               	iorwf	indf2,f,c
 16422   00151C  0012               	return		;funcret
 16423   00151E                     __end_of_eeprom_write_buffer:
 16424                           	callstack 0
 16425                           
 16426 ;; *************** function _eeprom_read_buffer *****************
 16427 ;; Defined at:
 16428 ;;		line 24 in file "eeprom.c"
 16429 ;; Parameters:    Size  Location     Type
 16430 ;;  addr            1    wreg     unsigned char 
 16431 ;; Auto vars:     Size  Location     Type
 16432 ;;  addr            1    0[COMRAM] unsigned char 
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1    wreg      unsigned char 
 16435 ;; Registers used:
 16436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16442 ;;      Params:         0       0       0       0       0
 16443 ;;      Locals:         1       0       0       0       0
 16444 ;;      Temps:          0       0       0       0       0
 16445 ;;      Totals:         1       0       0       0       0
 16446 ;;Total ram usage:        1 bytes
 16447 ;; Hardware stack levels used: 1
 16448 ;; This function calls:
 16449 ;;		Nothing
 16450 ;; This function is called by:
 16451 ;;		_i2c_write_to_slave_cb
 16452 ;;		_i2c_read_from_slave_cb
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text83
 16457   00196A                     __ptext83:
 16458                           	callstack 0
 16459   00196A                     _eeprom_read_buffer:
 16460                           	callstack 16
 16461                           
 16462                           ;incstack = 0
 16463                           ;eeprom_read_buffer@addr stored from wreg
 16464   00196A  6E01               	movwf	eeprom_read_buffer@addr^0,c
 16465                           
 16466                           ;eeprom.c: 24: uint8_t eeprom_read_buffer(eeAddr_t addr);eeprom.c: 25: {;eeprom.c: 26:  
      +                             return E2_DATA[addr];
 16467   00196C  0E00               	movlw	low _E2_DATA
 16468   00196E  2401               	addwf	eeprom_read_buffer@addr^0,w,c
 16469   001970  6ED9               	movwf	fsr2l,c
 16470   001972  6ADA               	clrf	fsr2h,c
 16471   001974  0E02               	movlw	high _E2_DATA
 16472   001976  22DA               	addwfc	fsr2h,f,c
 16473   001978  50DF               	movf	indf2,w,c
 16474   00197A  0012               	return		;funcret
 16475   00197C                     __end_of_eeprom_read_buffer:
 16476                           	callstack 0
 16477                           
 16478 ;; *************** function _I2C1_SendNack *****************
 16479 ;; Defined at:
 16480 ;;		line 160 in file "mcc_generated_files/i2c1_slave.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;		None
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		cstack
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16494 ;;      Params:         0       0       0       0       0
 16495 ;;      Locals:         0       0       0       0       0
 16496 ;;      Temps:          0       0       0       0       0
 16497 ;;      Totals:         0       0       0       0       0
 16498 ;;Total ram usage:        0 bytes
 16499 ;; Hardware stack levels used: 1
 16500 ;; Hardware stack levels required when called: 1
 16501 ;; This function calls:
 16502 ;;		_I2C1_SlaveSendNack
 16503 ;; This function is called by:
 16504 ;;		_MasterR_SlaveW
 16505 ;;		_MasterW_SlaveR
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text84
 16510   001B0E                     __ptext84:
 16511                           	callstack 0
 16512   001B0E                     _I2C1_SendNack:
 16513                           	callstack 16
 16514                           
 16515                           ;mcc_generated_files/i2c1_slave.c: 162:     I2C1_SlaveSendNack();
 16516                           
 16517                           ;incstack = 0
 16518   001B0E  EC8A  F00D         	call	_I2C1_SlaveSendNack	;wreg free
 16519   001B12  0012               	return		;funcret
 16520   001B14                     __end_of_I2C1_SendNack:
 16521                           	callstack 0
 16522                           
 16523 ;; *************** function _I2C1_SlaveSendNack *****************
 16524 ;; Defined at:
 16525 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
 16526 ;; Parameters:    Size  Location     Type
 16527 ;;		None
 16528 ;; Auto vars:     Size  Location     Type
 16529 ;;		None
 16530 ;; Return value:  Size  Location     Type
 16531 ;;                  1    wreg      void 
 16532 ;; Registers used:
 16533 ;;		None
 16534 ;; Tracked objects:
 16535 ;;		On entry : 0/0
 16536 ;;		On exit  : 0/0
 16537 ;;		Unchanged: 0/0
 16538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16539 ;;      Params:         0       0       0       0       0
 16540 ;;      Locals:         0       0       0       0       0
 16541 ;;      Temps:          0       0       0       0       0
 16542 ;;      Totals:         0       0       0       0       0
 16543 ;;Total ram usage:        0 bytes
 16544 ;; Hardware stack levels used: 1
 16545 ;; This function calls:
 16546 ;;		Nothing
 16547 ;; This function is called by:
 16548 ;;		_I2C1_SendNack
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text85
 16553   001B14                     __ptext85:
 16554                           	callstack 0
 16555   001B14                     _I2C1_SlaveSendNack:
 16556                           	callstack 16
 16557                           
 16558                           ;mcc_generated_files/i2c1_slave.c: 414:     SSP1CON2bits.ACKDT = 1;
 16559                           
 16560                           ;incstack = 0
 16561   001B14  8A96               	bsf	150,5,c	;volatile
 16562                           
 16563                           ;mcc_generated_files/i2c1_slave.c: 415:     SSP1CON2bits.ACKEN = 1;
 16564   001B16  8896               	bsf	150,4,c	;volatile
 16565   001B18  0012               	return		;funcret
 16566   001B1A                     __end_of_I2C1_SlaveSendNack:
 16567                           	callstack 0
 16568                           
 16569 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
 16570 ;; Defined at:
 16571 ;;		line 381 in file "mcc_generated_files/i2c1_slave.c"
 16572 ;; Parameters:    Size  Location     Type
 16573 ;;		None
 16574 ;; Auto vars:     Size  Location     Type
 16575 ;;		None
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1    wreg      _Bool 
 16578 ;; Registers used:
 16579 ;;		wreg
 16580 ;; Tracked objects:
 16581 ;;		On entry : 0/0
 16582 ;;		On exit  : 0/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16585 ;;      Params:         0       0       0       0       0
 16586 ;;      Locals:         0       0       0       0       0
 16587 ;;      Temps:          0       0       0       0       0
 16588 ;;      Totals:         0       0       0       0       0
 16589 ;;Total ram usage:        0 bytes
 16590 ;; Hardware stack levels used: 1
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_I2C1_Isr
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           	psect	text86
 16599   001A28                     __ptext86:
 16600                           	callstack 0
 16601   001A28                     _I2C1_SlaveIsTxBufEmpty:
 16602                           	callstack 19
 16603                           
 16604                           ;mcc_generated_files/i2c1_slave.c: 383:     return !SSP1STATbits.BF;
 16605                           
 16606                           ;incstack = 0
 16607   001A28  B094               	btfsc	148,0,c	;volatile
 16608   001A2A  D002               	goto	i2u291_40
 16609   001A2C  0E01               	movlw	1
 16610   001A2E  0012               	return	
 16611   001A30                     i2u291_40:
 16612   001A30  0E00               	movlw	0
 16613   001A32  0012               	return		;funcret
 16614   001A34                     __end_of_I2C1_SlaveIsTxBufEmpty:
 16615                           	callstack 0
 16616                           
 16617 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
 16618 ;; Defined at:
 16619 ;;		line 386 in file "mcc_generated_files/i2c1_slave.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;		None
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;		None
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      _Bool 
 16626 ;; Registers used:
 16627 ;;		wreg
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16633 ;;      Params:         0       0       0       0       0
 16634 ;;      Locals:         0       0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0
 16636 ;;      Totals:         0       0       0       0       0
 16637 ;;Total ram usage:        0 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; This function calls:
 16640 ;;		Nothing
 16641 ;; This function is called by:
 16642 ;;		_I2C1_Isr
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text87
 16647   001A34                     __ptext87:
 16648                           	callstack 0
 16649   001A34                     _I2C1_SlaveIsRxBufFull:
 16650                           	callstack 19
 16651                           
 16652                           ;mcc_generated_files/i2c1_slave.c: 388:     return SSP1STATbits.BF;
 16653                           
 16654                           ;incstack = 0
 16655   001A34  A094               	btfss	148,0,c	;volatile
 16656   001A36  D002               	goto	i2u295_40
 16657   001A38  0E01               	movlw	1
 16658   001A3A  0012               	return	
 16659   001A3C                     i2u295_40:
 16660   001A3C  0E00               	movlw	0
 16661   001A3E  0012               	return		;funcret
 16662   001A40                     __end_of_I2C1_SlaveIsRxBufFull:
 16663                           	callstack 0
 16664                           
 16665 ;; *************** function _I2C1_SlaveIsAddr *****************
 16666 ;; Defined at:
 16667 ;;		line 346 in file "mcc_generated_files/i2c1_slave.c"
 16668 ;; Parameters:    Size  Location     Type
 16669 ;;		None
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;		None
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      _Bool 
 16674 ;; Registers used:
 16675 ;;		wreg
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16681 ;;      Params:         0       0       0       0       0
 16682 ;;      Locals:         0       0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0
 16684 ;;      Totals:         0       0       0       0       0
 16685 ;;Total ram usage:        0 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; This function calls:
 16688 ;;		Nothing
 16689 ;; This function is called by:
 16690 ;;		_I2C1_Isr
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text88
 16695   001A40                     __ptext88:
 16696                           	callstack 0
 16697   001A40                     _I2C1_SlaveIsAddr:
 16698                           	callstack 19
 16699                           
 16700                           ;mcc_generated_files/i2c1_slave.c: 348:     return !(SSP1STATbits.D_nA);
 16701                           
 16702                           ;incstack = 0
 16703   001A40  BA94               	btfsc	148,5,c	;volatile
 16704   001A42  D002               	goto	i2u287_40
 16705   001A44  0E01               	movlw	1
 16706   001A46  0012               	return	
 16707   001A48                     i2u287_40:
 16708   001A48  0E00               	movlw	0
 16709   001A4A  0012               	return		;funcret
 16710   001A4C                     __end_of_I2C1_SlaveIsAddr:
 16711                           	callstack 0
 16712                           
 16713 ;; *************** function _I2C1_SlaveClearIrq *****************
 16714 ;; Defined at:
 16715 ;;		line 356 in file "mcc_generated_files/i2c1_slave.c"
 16716 ;; Parameters:    Size  Location     Type
 16717 ;;		None
 16718 ;; Auto vars:     Size  Location     Type
 16719 ;;		None
 16720 ;; Return value:  Size  Location     Type
 16721 ;;                  1    wreg      void 
 16722 ;; Registers used:
 16723 ;;		None
 16724 ;; Tracked objects:
 16725 ;;		On entry : 0/0
 16726 ;;		On exit  : 0/0
 16727 ;;		Unchanged: 0/0
 16728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16729 ;;      Params:         0       0       0       0       0
 16730 ;;      Locals:         0       0       0       0       0
 16731 ;;      Temps:          0       0       0       0       0
 16732 ;;      Totals:         0       0       0       0       0
 16733 ;;Total ram usage:        0 bytes
 16734 ;; Hardware stack levels used: 1
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		_I2C1_Isr
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           	psect	text89
 16743   001B1A                     __ptext89:
 16744                           	callstack 0
 16745   001B1A                     _I2C1_SlaveClearIrq:
 16746                           	callstack 19
 16747                           
 16748                           ;mcc_generated_files/i2c1_slave.c: 358:     PIR3bits.SSP1IF = 0;
 16749                           
 16750                           ;incstack = 0
 16751   001B1A  010E               	movlb	14	; () banked
 16752   001B1C  91C8               	bcf	200,0,b	;volatile
 16753                           
 16754                           ; BSR set to: 14
 16755   001B1E  0012               	return		;funcret
 16756   001B20                     __end_of_I2C1_SlaveClearIrq:
 16757                           	callstack 0
 16758                           
 16759 ;; *************** function _I2C1_SlaveAddrCallBack *****************
 16760 ;; Defined at:
 16761 ;;		line 267 in file "mcc_generated_files/i2c1_slave.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;		None
 16764 ;; Auto vars:     Size  Location     Type
 16765 ;;		None
 16766 ;; Return value:  Size  Location     Type
 16767 ;;                  1    wreg      void 
 16768 ;; Registers used:
 16769 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 16770 ;; Tracked objects:
 16771 ;;		On entry : 0/0
 16772 ;;		On exit  : 0/0
 16773 ;;		Unchanged: 0/0
 16774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16775 ;;      Params:         0       0       0       0       0
 16776 ;;      Locals:         0       0       0       0       0
 16777 ;;      Temps:          0       0       0       0       0
 16778 ;;      Totals:         0       0       0       0       0
 16779 ;;Total ram usage:        0 bytes
 16780 ;; Hardware stack levels used: 1
 16781 ;; Hardware stack levels required when called: 3
 16782 ;; This function calls:
 16783 ;;		NULL
 16784 ;;		_I2C1_SlaveDefAddrInterruptHandler
 16785 ;;		_SlaveRdDevAddrFromBus
 16786 ;; This function is called by:
 16787 ;;		_I2C1_Isr
 16788 ;; This function uses a non-reentrant model
 16789 ;;
 16790                           
 16791                           	psect	text90
 16792   00182C                     __ptext90:
 16793                           	callstack 0
 16794   00182C                     _I2C1_SlaveAddrCallBack:
 16795                           	callstack 16
 16796                           
 16797                           ;mcc_generated_files/i2c1_slave.c: 269:     if (I2C1_SlaveAddrInterruptHandler) {
 16798                           
 16799                           ; BSR set to: 14
 16800                           ;incstack = 0
 16801   00182C  0100               	movlb	0	; () banked
 16802   00182E  51C5               	movf	_I2C1_SlaveAddrInterruptHandler& (0+255),w,b
 16803   001830  11C6               	iorwf	(_I2C1_SlaveAddrInterruptHandler+1)& (0+255),w,b
 16804   001832  B4D8               	btfsc	status,2,c
 16805   001834  0012               	return	
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;mcc_generated_files/i2c1_slave.c: 270:         I2C1_SlaveAddrInterruptHandler();
 16809   001836  D801               	call	i2u290_48
 16810   001838  0012               	return	
 16811   00183A                     i2u290_48:
 16812   00183A  0005               	push	
 16813   00183C  6EFA               	movwf	pclath,c
 16814   00183E  51C5               	movf	_I2C1_SlaveAddrInterruptHandler& (0+255),w,b
 16815   001840  6EFD               	movwf	tosl,c
 16816   001842  51C6               	movf	(_I2C1_SlaveAddrInterruptHandler+1)& (0+255),w,b
 16817   001844  6EFE               	movwf	tosh,c
 16818   001846  50F8               	movf	tblptru,w,c
 16819   001848  6EFF               	movwf	tosu,c
 16820   00184A  50FA               	movf	pclath,w,c
 16821   00184C  0012               	return		;indir
 16822   00184E                     __end_of_I2C1_SlaveAddrCallBack:
 16823                           	callstack 0
 16824                           
 16825 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
 16826 ;; Defined at:
 16827 ;;		line 274 in file "mcc_generated_files/i2c1_slave.c"
 16828 ;; Parameters:    Size  Location     Type
 16829 ;;		None
 16830 ;; Auto vars:     Size  Location     Type
 16831 ;;		None
 16832 ;; Return value:  Size  Location     Type
 16833 ;;                  1    wreg      void 
 16834 ;; Registers used:
 16835 ;;		wreg, status,2, cstack
 16836 ;; Tracked objects:
 16837 ;;		On entry : 0/0
 16838 ;;		On exit  : 0/0
 16839 ;;		Unchanged: 0/0
 16840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16841 ;;      Params:         0       0       0       0       0
 16842 ;;      Locals:         0       0       0       0       0
 16843 ;;      Temps:          0       0       0       0       0
 16844 ;;      Totals:         0       0       0       0       0
 16845 ;;Total ram usage:        0 bytes
 16846 ;; Hardware stack levels used: 1
 16847 ;; Hardware stack levels required when called: 1
 16848 ;; This function calls:
 16849 ;;		_I2C1_SlaveGetRxData
 16850 ;; This function is called by:
 16851 ;;		_I2C1_Open
 16852 ;;		_I2C1_SlaveAddrCallBack
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text91
 16857   001ADA                     __ptext91:
 16858                           	callstack 0
 16859   001ADA                     _I2C1_SlaveDefAddrInterruptHandler:
 16860                           	callstack 17
 16861                           
 16862                           ;mcc_generated_files/i2c1_slave.c: 275:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
 16863                           
 16864                           ;incstack = 0
 16865   001ADA  ECA0  F00D         	call	_I2C1_SlaveGetRxData	;wreg free
 16866   001ADE  0100               	movlb	0	; () banked
 16867   001AE0  6FCE               	movwf	_i2c1SlaveAddr& (0+255),b	;volatile
 16868                           
 16869                           ; BSR set to: 0
 16870   001AE2  0012               	return		;funcret
 16871   001AE4                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
 16872                           	callstack 0
 16873                           
 16874 ;; *************** function _SlaveRdDevAddrFromBus *****************
 16875 ;; Defined at:
 16876 ;;		line 44 in file "i2c_slave.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;		None
 16879 ;; Auto vars:     Size  Location     Type
 16880 ;;		None
 16881 ;; Return value:  Size  Location     Type
 16882 ;;                  1    wreg      void 
 16883 ;; Registers used:
 16884 ;;		wreg, status,2, cstack
 16885 ;; Tracked objects:
 16886 ;;		On entry : 0/0
 16887 ;;		On exit  : 0/0
 16888 ;;		Unchanged: 0/0
 16889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16890 ;;      Params:         0       0       0       0       0
 16891 ;;      Locals:         0       0       0       0       0
 16892 ;;      Temps:          0       0       0       0       0
 16893 ;;      Totals:         0       0       0       0       0
 16894 ;;Total ram usage:        0 bytes
 16895 ;; Hardware stack levels used: 1
 16896 ;; Hardware stack levels required when called: 2
 16897 ;; This function calls:
 16898 ;;		_I2C1_IsRead
 16899 ;;		_I2C1_Read
 16900 ;;		_TestForStopBit
 16901 ;; This function is called by:
 16902 ;;		_i2c_slave_init
 16903 ;;		_I2C1_SlaveAddrCallBack
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text92
 16908   001764                     __ptext92:
 16909                           	callstack 0
 16910   001764                     _SlaveRdDevAddrFromBus:
 16911                           	callstack 16
 16912                           
 16913                           ;i2c_slave.c: 46:     i2c.byteNo = 0;
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;incstack = 0
 16917   001764  0100               	movlb	0	; () banked
 16918   001766  6BD9               	clrf	(_i2c+8)& (0+255),b	;volatile
 16919                           
 16920                           ; BSR set to: 0
 16921                           ;i2c_slave.c: 47:     if(TestForStopBit())
 16922   001768  EC99  F00C         	call	_TestForStopBit	;wreg free
 16923   00176C  0900               	iorlw	0
 16924   00176E  A4D8               	btfss	status,2,c
 16925   001770  0012               	return	
 16926   001772  0E04               	movlw	4
 16927   001774  010F               	movlb	15	; () banked
 16928   001776  6F2F               	movwf	47,b	;volatile
 16929                           
 16930                           ; BSR set to: 15
 16931                           ;i2c_slave.c: 51:     i2c.rxSlaveAddr = I2C1_Read();
 16932   001778  EC90  F00D         	call	_I2C1_Read	;wreg free
 16933   00177C  0100               	movlb	0	; () banked
 16934   00177E  6FD1               	movwf	_i2c& (0+255),b	;volatile
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;i2c_slave.c: 52:     if(!I2C1_IsRead())
 16938   001780  EC93  F00D         	call	_I2C1_IsRead	;wreg free
 16939   001784  0900               	iorlw	0
 16940   001786  A4D8               	btfss	status,2,c
 16941   001788  0012               	return	
 16942                           
 16943                           ;i2c_slave.c: 53:         i2c.state = eAddrH;
 16944   00178A  0E01               	movlw	1
 16945   00178C  0100               	movlb	0	; () banked
 16946   00178E  6FD4               	movwf	(_i2c+3)& (0+255),b	;volatile
 16947   001790  0012               	return		;funcret
 16948   001792                     __end_of_SlaveRdDevAddrFromBus:
 16949                           	callstack 0
 16950                           
 16951 ;; *************** function _TestForStopBit *****************
 16952 ;; Defined at:
 16953 ;;		line 33 in file "i2c_slave.c"
 16954 ;; Parameters:    Size  Location     Type
 16955 ;;		None
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;		None
 16958 ;; Return value:  Size  Location     Type
 16959 ;;                  1    wreg      _Bool 
 16960 ;; Registers used:
 16961 ;;		wreg
 16962 ;; Tracked objects:
 16963 ;;		On entry : 0/0
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 16967 ;;      Params:         0       0       0       0       0
 16968 ;;      Locals:         0       0       0       0       0
 16969 ;;      Temps:          0       0       0       0       0
 16970 ;;      Totals:         0       0       0       0       0
 16971 ;;Total ram usage:        0 bytes
 16972 ;; Hardware stack levels used: 1
 16973 ;; This function calls:
 16974 ;;		Nothing
 16975 ;; This function is called by:
 16976 ;;		_SlaveRdDevAddrFromBus
 16977 ;;		_MasterR_SlaveW
 16978 ;;		_MasterW_SlaveR
 16979 ;; This function uses a non-reentrant model
 16980 ;;
 16981                           
 16982                           	psect	text93
 16983   001932                     __ptext93:
 16984                           	callstack 0
 16985   001932                     _TestForStopBit:
 16986                           	callstack 17
 16987                           
 16988                           ;i2c_slave.c: 35:     if(SSP1STATbits.P)
 16989                           
 16990                           ;incstack = 0
 16991   001932  A894               	btfss	148,4,c	;volatile
 16992   001934  D006               	goto	i2l4162
 16993                           
 16994                           ;i2c_slave.c: 36:     {;i2c_slave.c: 37:       i2c.state = eIdle;
 16995   001936  0100               	movlb	0	; () banked
 16996   001938  6BD4               	clrf	(_i2c+3)& (0+255),b	;volatile
 16997                           
 16998                           ; BSR set to: 0
 16999                           
 17000                           ;i2c_slave.c: 38:       do{ DAC1CON1 = 0; }while(0);
 17001   00193A  010F               	movlb	15	; () banked
 17002   00193C  6B2F               	clrf	47,b	;volatile
 17003                           
 17004                           ; BSR set to: 15
 17005                           ;i2c_slave.c: 39:       return 1;
 17006   00193E  0E01               	movlw	1
 17007   001940  0012               	return	
 17008   001942                     i2l4162:
 17009                           
 17010                           ;i2c_slave.c: 41:     return 0;
 17011   001942  0E00               	movlw	0
 17012   001944  0012               	return		;funcret
 17013   001946                     __end_of_TestForStopBit:
 17014                           	callstack 0
 17015                           
 17016 ;; *************** function _I2C1_Read *****************
 17017 ;; Defined at:
 17018 ;;		line 135 in file "mcc_generated_files/i2c1_slave.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;		None
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;		None
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      unsigned char 
 17025 ;; Registers used:
 17026 ;;		wreg, status,2, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17032 ;;      Params:         0       0       0       0       0
 17033 ;;      Locals:         0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0
 17035 ;;      Totals:         0       0       0       0       0
 17036 ;;Total ram usage:        0 bytes
 17037 ;; Hardware stack levels used: 1
 17038 ;; Hardware stack levels required when called: 1
 17039 ;; This function calls:
 17040 ;;		_I2C1_SlaveGetRxData
 17041 ;; This function is called by:
 17042 ;;		_SlaveRdDevAddrFromBus
 17043 ;;		_MasterW_SlaveR
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text94
 17048   001B20                     __ptext94:
 17049                           	callstack 0
 17050   001B20                     _I2C1_Read:
 17051                           	callstack 16
 17052                           
 17053                           ;mcc_generated_files/i2c1_slave.c: 137:    return I2C1_SlaveGetRxData();
 17054                           
 17055                           ;incstack = 0
 17056   001B20  ECA0  F00D         	call	_I2C1_SlaveGetRxData	;wreg free
 17057   001B24  0012               	return		;funcret
 17058   001B26                     __end_of_I2C1_Read:
 17059                           	callstack 0
 17060                           
 17061 ;; *************** function _I2C1_IsRead *****************
 17062 ;; Defined at:
 17063 ;;		line 145 in file "mcc_generated_files/i2c1_slave.c"
 17064 ;; Parameters:    Size  Location     Type
 17065 ;;		None
 17066 ;; Auto vars:     Size  Location     Type
 17067 ;;		None
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  1    wreg      _Bool 
 17070 ;; Registers used:
 17071 ;;		wreg, cstack
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 0/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17077 ;;      Params:         0       0       0       0       0
 17078 ;;      Locals:         0       0       0       0       0
 17079 ;;      Temps:          0       0       0       0       0
 17080 ;;      Totals:         0       0       0       0       0
 17081 ;;Total ram usage:        0 bytes
 17082 ;; Hardware stack levels used: 1
 17083 ;; Hardware stack levels required when called: 1
 17084 ;; This function calls:
 17085 ;;		_I2C1_SlaveIsRead
 17086 ;; This function is called by:
 17087 ;;		_SlaveRdDevAddrFromBus
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           	psect	text95
 17092   001B26                     __ptext95:
 17093                           	callstack 0
 17094   001B26                     _I2C1_IsRead:
 17095                           	callstack 16
 17096                           
 17097                           ;mcc_generated_files/i2c1_slave.c: 147:     return I2C1_SlaveIsRead();
 17098                           
 17099                           ;incstack = 0
 17100   001B26  EC26  F00D         	call	_I2C1_SlaveIsRead	;wreg free
 17101   001B2A  0012               	return		;funcret
 17102   001B2C                     __end_of_I2C1_IsRead:
 17103                           	callstack 0
 17104                           
 17105 ;; *************** function _I2C1_SlaveIsRead *****************
 17106 ;; Defined at:
 17107 ;;		line 351 in file "mcc_generated_files/i2c1_slave.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;		None
 17110 ;; Auto vars:     Size  Location     Type
 17111 ;;		None
 17112 ;; Return value:  Size  Location     Type
 17113 ;;                  1    wreg      _Bool 
 17114 ;; Registers used:
 17115 ;;		wreg
 17116 ;; Tracked objects:
 17117 ;;		On entry : 0/0
 17118 ;;		On exit  : 0/0
 17119 ;;		Unchanged: 0/0
 17120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17121 ;;      Params:         0       0       0       0       0
 17122 ;;      Locals:         0       0       0       0       0
 17123 ;;      Temps:          0       0       0       0       0
 17124 ;;      Totals:         0       0       0       0       0
 17125 ;;Total ram usage:        0 bytes
 17126 ;; Hardware stack levels used: 1
 17127 ;; This function calls:
 17128 ;;		Nothing
 17129 ;; This function is called by:
 17130 ;;		_I2C1_IsRead
 17131 ;;		_I2C1_Isr
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text96
 17136   001A4C                     __ptext96:
 17137                           	callstack 0
 17138   001A4C                     _I2C1_SlaveIsRead:
 17139                           	callstack 19
 17140                           
 17141                           ;mcc_generated_files/i2c1_slave.c: 353:     return (SSP1STATbits.R_nW);
 17142                           
 17143                           ;incstack = 0
 17144   001A4C  A494               	btfss	148,2,c	;volatile
 17145   001A4E  D002               	goto	i2u249_40
 17146   001A50  0E01               	movlw	1
 17147   001A52  0012               	return	
 17148   001A54                     i2u249_40:
 17149   001A54  0E00               	movlw	0
 17150   001A56  0012               	return		;funcret
 17151   001A58                     __end_of_I2C1_SlaveIsRead:
 17152                           	callstack 0
 17153                           
 17154 ;; *************** function _I2C1_SlaveGetRxData *****************
 17155 ;; Defined at:
 17156 ;;		line 396 in file "mcc_generated_files/i2c1_slave.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;		None
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;		None
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1    wreg      unsigned char 
 17163 ;; Registers used:
 17164 ;;		wreg, status,2
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/0
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17170 ;;      Params:         0       0       0       0       0
 17171 ;;      Locals:         0       0       0       0       0
 17172 ;;      Temps:          0       0       0       0       0
 17173 ;;      Totals:         0       0       0       0       0
 17174 ;;Total ram usage:        0 bytes
 17175 ;; Hardware stack levels used: 1
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_I2C1_Read
 17180 ;;		_I2C1_SlaveDefRdInterruptHandler
 17181 ;;		_I2C1_SlaveDefAddrInterruptHandler
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           	psect	text97
 17186   001B40                     __ptext97:
 17187                           	callstack 0
 17188   001B40                     _I2C1_SlaveGetRxData:
 17189                           	callstack 16
 17190                           
 17191                           ;mcc_generated_files/i2c1_slave.c: 398:     return SSP1BUF;
 17192                           
 17193                           ;incstack = 0
 17194   001B40  5091               	movf	145,w,c	;volatile
 17195   001B42  0012               	return		;funcret
 17196   001B44                     __end_of_I2C1_SlaveGetRxData:
 17197                           	callstack 0
 17198                           
 17199 ;; *************** function _EUSART1_Transmit_ISR *****************
 17200 ;; Defined at:
 17201 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      void 
 17208 ;; Registers used:
 17209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/0
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17215 ;;      Params:         0       0       0       0       0
 17216 ;;      Locals:         0       0       0       0       0
 17217 ;;      Temps:          0       0       0       0       0
 17218 ;;      Totals:         0       0       0       0       0
 17219 ;;Total ram usage:        0 bytes
 17220 ;; Hardware stack levels used: 1
 17221 ;; This function calls:
 17222 ;;		Nothing
 17223 ;; This function is called by:
 17224 ;;		_EUSART1_Initialize
 17225 ;;		_INTERRUPT_InterruptManager
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           	psect	text98
 17230   0017BE                     __ptext98:
 17231                           	callstack 0
 17232   0017BE                     _EUSART1_Transmit_ISR:
 17233                           	callstack 20
 17234                           
 17235                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 17236                           
 17237                           ;incstack = 0
 17238   0017BE  0E40               	movlw	64
 17239   0017C0  605D               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
 17240   0017C2  D00F               	goto	i2l112
 17241                           
 17242                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 17243   0017C4  0E80               	movlw	low _eusart1TxBuffer
 17244   0017C6  245E               	addwf	_eusart1TxTail^0,w,c	;volatile
 17245   0017C8  6ED9               	movwf	fsr2l,c
 17246   0017CA  6ADA               	clrf	fsr2h,c
 17247   0017CC  0E01               	movlw	high _eusart1TxBuffer
 17248   0017CE  22DA               	addwfc	fsr2h,f,c
 17249   0017D0  50DF               	movf	indf2,w,c
 17250   0017D2  6E99               	movwf	153,c	;volatile
 17251   0017D4  2A5E               	incf	_eusart1TxTail^0,f,c	;volatile
 17252                           
 17253                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 17254   0017D6  0E3F               	movlw	63
 17255   0017D8  645E               	cpfsgt	_eusart1TxTail^0,c	;volatile
 17256   0017DA  D001               	goto	i2l4566
 17257                           
 17258                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 17259   0017DC  6A5E               	clrf	_eusart1TxTail^0,c	;volatile
 17260   0017DE                     i2l4566:
 17261                           
 17262                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 17263   0017DE  2A5D               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
 17264                           
 17265                           ;mcc_generated_files/eusart1.c: 218:     }
 17266   0017E0  0012               	return	
 17267   0017E2                     i2l112:
 17268                           
 17269                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 17270   0017E2  010E               	movlb	14	; () banked
 17271   0017E4  99C0               	bcf	192,4,b	;volatile
 17272   0017E6  0012               	return		;funcret
 17273   0017E8                     __end_of_EUSART1_Transmit_ISR:
 17274                           	callstack 0
 17275                           
 17276 ;; *************** function _EUSART1_Receive_ISR *****************
 17277 ;; Defined at:
 17278 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 17279 ;; Parameters:    Size  Location     Type
 17280 ;;		None
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;                  1    wreg      void 
 17285 ;; Registers used:
 17286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/0
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17292 ;;      Params:         0       0       0       0       0
 17293 ;;      Locals:         0       0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0
 17295 ;;      Totals:         0       0       0       0       0
 17296 ;;Total ram usage:        0 bytes
 17297 ;; Hardware stack levels used: 1
 17298 ;; Hardware stack levels required when called: 2
 17299 ;; This function calls:
 17300 ;;		NULL
 17301 ;;		_EUSART1_DefaultErrorHandler
 17302 ;;		_EUSART1_DefaultFramingErrorHandler
 17303 ;;		_EUSART1_DefaultOverrunErrorHandler
 17304 ;;		_EUSART1_RxDataHandler
 17305 ;; This function is called by:
 17306 ;;		_EUSART1_Initialize
 17307 ;;		_INTERRUPT_InterruptManager
 17308 ;; This function uses a non-reentrant model
 17309 ;;
 17310                           
 17311                           	psect	text99
 17312   000D20                     __ptext99:
 17313                           	callstack 0
 17314   000D20                     _EUSART1_Receive_ISR:
 17315                           	callstack 18
 17316                           
 17317                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17318                           
 17319                           ;incstack = 0
 17320   000D20  0E00               	movlw	low _eusart1RxStatusBuffer
 17321   000D22  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 17322   000D24  6ED9               	movwf	fsr2l,c
 17323   000D26  6ADA               	clrf	fsr2h,c
 17324   000D28  0E01               	movlw	high _eusart1RxStatusBuffer
 17325   000D2A  22DA               	addwfc	fsr2h,f,c
 17326   000D2C  6ADF               	clrf	indf2,c
 17327                           
 17328                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 17329   000D2E  A49C               	btfss	156,2,c	;volatile
 17330   000D30  D015               	goto	i2u309_49
 17331                           
 17332                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 17333   000D32  0E00               	movlw	low _eusart1RxStatusBuffer
 17334   000D34  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 17335   000D36  6ED9               	movwf	fsr2l,c
 17336   000D38  6ADA               	clrf	fsr2h,c
 17337   000D3A  0E01               	movlw	high _eusart1RxStatusBuffer
 17338   000D3C  22DA               	addwfc	fsr2h,f,c
 17339   000D3E  0101               	movlb	1	; () banked
 17340   000D40  82DF               	bsf	indf2,1,c
 17341                           
 17342                           ; BSR set to: 1
 17343                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 17344   000D42  D801               	call	i2u309_48
 17345   000D44  D00B               	goto	i2u309_49
 17346   000D46                     i2u309_48:
 17347   000D46  0005               	push	
 17348   000D48  0100               	movlb	0	; () banked
 17349   000D4A  6EFA               	movwf	pclath,c
 17350   000D4C  51ED               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 17351   000D4E  6EFD               	movwf	tosl,c
 17352   000D50  51EE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 17353   000D52  6EFE               	movwf	tosh,c
 17354   000D54  50F8               	movf	tblptru,w,c
 17355   000D56  6EFF               	movwf	tosu,c
 17356   000D58  50FA               	movf	pclath,w,c
 17357   000D5A  0012               	return		;indir
 17358   000D5C                     i2u309_49:
 17359                           
 17360                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 17361   000D5C  A29C               	btfss	156,1,c	;volatile
 17362   000D5E  D015               	goto	i2u311_49
 17363                           
 17364                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17365   000D60  0E00               	movlw	low _eusart1RxStatusBuffer
 17366   000D62  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 17367   000D64  6ED9               	movwf	fsr2l,c
 17368   000D66  6ADA               	clrf	fsr2h,c
 17369   000D68  0E01               	movlw	high _eusart1RxStatusBuffer
 17370   000D6A  22DA               	addwfc	fsr2h,f,c
 17371   000D6C  0101               	movlb	1	; () banked
 17372   000D6E  84DF               	bsf	indf2,2,c
 17373                           
 17374                           ; BSR set to: 1
 17375                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 17376   000D70  D801               	call	i2u311_48
 17377   000D72  D00B               	goto	i2u311_49
 17378   000D74                     i2u311_48:
 17379   000D74  0005               	push	
 17380   000D76  0100               	movlb	0	; () banked
 17381   000D78  6EFA               	movwf	pclath,c
 17382   000D7A  51EB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 17383   000D7C  6EFD               	movwf	tosl,c
 17384   000D7E  51EC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 17385   000D80  6EFE               	movwf	tosh,c
 17386   000D82  50F8               	movf	tblptru,w,c
 17387   000D84  6EFF               	movwf	tosu,c
 17388   000D86  50FA               	movf	pclath,w,c
 17389   000D88  0012               	return		;indir
 17390   000D8A                     i2u311_49:
 17391                           
 17392                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17393   000D8A  0E00               	movlw	low _eusart1RxStatusBuffer
 17394   000D8C  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 17395   000D8E  6ED9               	movwf	fsr2l,c
 17396   000D90  6ADA               	clrf	fsr2h,c
 17397   000D92  0E01               	movlw	high _eusart1RxStatusBuffer
 17398   000D94  22DA               	addwfc	fsr2h,f,c
 17399   000D96  50DF               	movf	indf2,w,c
 17400   000D98  B4D8               	btfsc	status,2,c
 17401   000D9A  D00D               	goto	i2l4586
 17402                           
 17403                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 17404   000D9C  D801               	call	i2u313_48
 17405   000D9E  0012               	return	
 17406   000DA0                     i2u313_48:
 17407   000DA0  0005               	push	
 17408   000DA2  0100               	movlb	0	; () banked
 17409   000DA4  6EFA               	movwf	pclath,c
 17410   000DA6  51E9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 17411   000DA8  6EFD               	movwf	tosl,c
 17412   000DAA  51EA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 17413   000DAC  6EFE               	movwf	tosh,c
 17414   000DAE  50F8               	movf	tblptru,w,c
 17415   000DB0  6EFF               	movwf	tosu,c
 17416   000DB2  50FA               	movf	pclath,w,c
 17417   000DB4  0012               	return		;indir
 17418   000DB6                     i2l4586:
 17419                           
 17420                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 17421   000DB6  EC37  F00C         	call	_EUSART1_RxDataHandler	;wreg free
 17422   000DBA  0012               	return		;funcret
 17423   000DBC                     __end_of_EUSART1_Receive_ISR:
 17424                           	callstack 0
 17425                           
 17426 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17427 ;; Defined at:
 17428 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      void 
 17435 ;; Registers used:
 17436 ;;		None
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17442 ;;      Params:         0       0       0       0       0
 17443 ;;      Locals:         0       0       0       0       0
 17444 ;;      Temps:          0       0       0       0       0
 17445 ;;      Totals:         0       0       0       0       0
 17446 ;;Total ram usage:        0 bytes
 17447 ;; Hardware stack levels used: 1
 17448 ;; This function calls:
 17449 ;;		Nothing
 17450 ;; This function is called by:
 17451 ;;		_EUSART1_Initialize
 17452 ;;		_EUSART1_Receive_ISR
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           	psect	text100
 17457   001B2C                     __ptext100:
 17458                           	callstack 0
 17459   001B2C                     _EUSART1_DefaultOverrunErrorHandler:
 17460                           	callstack 19
 17461                           
 17462                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 17463                           
 17464                           ;incstack = 0
 17465   001B2C  989C               	bcf	156,4,c	;volatile
 17466                           
 17467                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 17468   001B2E  889C               	bsf	156,4,c	;volatile
 17469   001B30  0012               	return		;funcret
 17470   001B32                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 17471                           	callstack 0
 17472                           
 17473 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 17474 ;; Defined at:
 17475 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;		None
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      void 
 17482 ;; Registers used:
 17483 ;;		None
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17489 ;;      Params:         0       0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0
 17491 ;;      Temps:          0       0       0       0       0
 17492 ;;      Totals:         0       0       0       0       0
 17493 ;;Total ram usage:        0 bytes
 17494 ;; Hardware stack levels used: 1
 17495 ;; This function calls:
 17496 ;;		Nothing
 17497 ;; This function is called by:
 17498 ;;		_EUSART1_Initialize
 17499 ;;		_EUSART1_Receive_ISR
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text101
 17504   001B46                     __ptext101:
 17505                           	callstack 0
 17506   001B46                     _EUSART1_DefaultFramingErrorHandler:
 17507                           	callstack 19
 17508                           
 17509                           ;incstack = 0
 17510   001B46  0012               	return		;funcret
 17511   001B48                     __end_of_EUSART1_DefaultFramingErrorHandler:
 17512                           	callstack 0
 17513                           
 17514 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17515 ;; Defined at:
 17516 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;		None
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;		None
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  1    wreg      void 
 17523 ;; Registers used:
 17524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17530 ;;      Params:         0       0       0       0       0
 17531 ;;      Locals:         0       0       0       0       0
 17532 ;;      Temps:          0       0       0       0       0
 17533 ;;      Totals:         0       0       0       0       0
 17534 ;;Total ram usage:        0 bytes
 17535 ;; Hardware stack levels used: 1
 17536 ;; Hardware stack levels required when called: 1
 17537 ;; This function calls:
 17538 ;;		_EUSART1_RxDataHandler
 17539 ;; This function is called by:
 17540 ;;		_EUSART1_Initialize
 17541 ;;		_EUSART1_Receive_ISR
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text102
 17546   001B32                     __ptext102:
 17547                           	callstack 0
 17548   001B32                     _EUSART1_DefaultErrorHandler:
 17549                           	callstack 18
 17550                           
 17551                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 17552                           
 17553                           ;incstack = 0
 17554   001B32  EC37  F00C         	call	_EUSART1_RxDataHandler	;wreg free
 17555   001B36  0012               	return		;funcret
 17556   001B38                     __end_of_EUSART1_DefaultErrorHandler:
 17557                           	callstack 0
 17558                           
 17559 ;; *************** function _EUSART1_RxDataHandler *****************
 17560 ;; Defined at:
 17561 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;		None
 17564 ;; Auto vars:     Size  Location     Type
 17565 ;;		None
 17566 ;; Return value:  Size  Location     Type
 17567 ;;                  1    wreg      void 
 17568 ;; Registers used:
 17569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17570 ;; Tracked objects:
 17571 ;;		On entry : 0/0
 17572 ;;		On exit  : 0/0
 17573 ;;		Unchanged: 0/0
 17574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 17575 ;;      Params:         0       0       0       0       0
 17576 ;;      Locals:         0       0       0       0       0
 17577 ;;      Temps:          0       0       0       0       0
 17578 ;;      Totals:         0       0       0       0       0
 17579 ;;Total ram usage:        0 bytes
 17580 ;; Hardware stack levels used: 1
 17581 ;; This function calls:
 17582 ;;		Nothing
 17583 ;; This function is called by:
 17584 ;;		_EUSART1_Receive_ISR
 17585 ;;		_EUSART1_DefaultErrorHandler
 17586 ;; This function uses a non-reentrant model
 17587 ;;
 17588                           
 17589                           	psect	text103
 17590   00186E                     __ptext103:
 17591                           	callstack 0
 17592   00186E                     _EUSART1_RxDataHandler:
 17593                           	callstack 19
 17594                           
 17595                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 17596                           
 17597                           ;incstack = 0
 17598   00186E  0E40               	movlw	low _eusart1RxBuffer
 17599   001870  245C               	addwf	_eusart1RxHead^0,w,c	;volatile
 17600   001872  6ED9               	movwf	fsr2l,c
 17601   001874  6ADA               	clrf	fsr2h,c
 17602   001876  0E01               	movlw	high _eusart1RxBuffer
 17603   001878  22DA               	addwfc	fsr2h,f,c
 17604   00187A  CF98 FFDF          	movff	3992,indf2	;volatile
 17605   00187E  2A5C               	incf	_eusart1RxHead^0,f,c	;volatile
 17606                           
 17607                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 17608   001880  0E3F               	movlw	63
 17609   001882  645C               	cpfsgt	_eusart1RxHead^0,c	;volatile
 17610   001884  D001               	goto	i2l4184
 17611                           
 17612                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 17613   001886  6A5C               	clrf	_eusart1RxHead^0,c	;volatile
 17614   001888                     i2l4184:
 17615                           
 17616                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 17617   001888  2A5A               	incf	_eusart1RxCount^0,f,c	;volatile
 17618   00188A  0012               	return		;funcret
 17619   00188C                     __end_of_EUSART1_RxDataHandler:
 17620                           	callstack 0
 17621                           
 17622                           	psect	rparam
 17623   000001                     ___rparam_used  equ	1
 17624   000000                     ___param_bank   equ	0
 17625   000000                     __Lparam        equ	__Lrparam
 17626   000000                     __Hparam        equ	__Hrparam
 17627                           
 17628                           	psect	temp
 17629   000037                     btemp:
 17630                           	callstack 0
 17631   000037                     	ds	32
 17632   000037                     wtemp0          set	btemp
 17633   000039                     wtemp1          set	btemp+2
 17634   00003B                     wtemp2          set	btemp+4
 17635   00003D                     wtemp3          set	btemp+6
 17636   00003F                     wtemp4          set	btemp+8
 17637   000041                     wtemp5          set	btemp+10
 17638   000038                     wtemp8          set	btemp+1
 17639   000037                     ttemp0          set	btemp
 17640   00003A                     ttemp1          set	btemp+3
 17641   00003D                     ttemp2          set	btemp+6
 17642   000040                     ttemp3          set	btemp+9
 17643   000038                     ttemp5          set	btemp+1
 17644   00003B                     ttemp6          set	btemp+4
 17645   00003F                     ttemp7          set	btemp+8
 17646   000037                     ltemp0          set	btemp
 17647   00003B                     ltemp1          set	btemp+4
 17648   00003F                     ltemp2          set	btemp+8
 17649   000037                     lltemp0         set	btemp
 17650   00003F                     lltemp1         set	btemp+8
 17651   000047                     lltemp2         set	btemp+16
 17652   00004F                     lltemp3         set	btemp+24
 17653                           
 17654                           	psect	config
 17655                           
 17656                           ;Config register CONFIG1L @ 0x300000
 17657                           ;	External Oscillator mode Selection bits
 17658                           ;	FEXTOSC = OFF, Oscillator not enabled
 17659                           ;	Power-up default value for COSC bits
 17660                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 17661   300000                     	org	3145728
 17662   300000  EC                 	db	236
 17663                           
 17664                           ;Config register CONFIG1H @ 0x300001
 17665                           ;	Clock Out Enable bit
 17666                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17667                           ;	Clock Switch Enable bit
 17668                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17669                           ;	Fail-Safe Clock Monitor Enable bit
 17670                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17671   300001                     	org	3145729
 17672   300001  FF                 	db	255
 17673                           
 17674                           ;Config register CONFIG2L @ 0x300002
 17675                           ;	Master Clear Enable bit
 17676                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 17677                           ;	Power-up Timer Enable bit
 17678                           ;	PWRTE = OFF, Power up timer disabled
 17679                           ;	Low-power BOR enable bit
 17680                           ;	LPBOREN = OFF, Low power BOR is disabled
 17681                           ;	Brown-out Reset Enable bits
 17682                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17683   300002                     	org	3145730
 17684   300002  FF                 	db	255
 17685                           
 17686                           ;Config register CONFIG2H @ 0x300003
 17687                           ;	Brown Out Reset Voltage selection bits
 17688                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 17689                           ;	ZCD Disable bit
 17690                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17691                           ;	PPSLOCK bit One-Way Set Enable bit
 17692                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17693                           ;	Stack Full/Underflow Reset Enable bit
 17694                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17695                           ;	Extended Instruction Set Enable bit
 17696                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17697   300003                     	org	3145731
 17698   300003  FF                 	db	255
 17699                           
 17700                           ;Config register CONFIG3L @ 0x300004
 17701                           ;	WDT Period Select bits
 17702                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17703                           ;	WDT operating mode
 17704                           ;	WDTE = OFF, WDT Disabled
 17705   300004                     	org	3145732
 17706   300004  9F                 	db	159
 17707                           
 17708                           ;Config register CONFIG3H @ 0x300005
 17709                           ;	WDT Window Select bits
 17710                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17711                           ;	WDT input clock selector
 17712                           ;	WDTCCS = SC, Software Control
 17713   300005                     	org	3145733
 17714   300005  FF                 	db	255
 17715                           
 17716                           ;Config register CONFIG4L @ 0x300006
 17717                           ;	Write Protection Block 0
 17718                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 17719                           ;	Write Protection Block 1
 17720                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 17721   300006                     	org	3145734
 17722   300006  FF                 	db	255
 17723                           
 17724                           ;Config register CONFIG4H @ 0x300007
 17725                           ;	Configuration Register Write Protection bit
 17726                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 17727                           ;	Boot Block Write Protection bit
 17728                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 17729                           ;	Data EEPROM Write Protection bit
 17730                           ;	WRTD = OFF, Data EEPROM not write-protected
 17731                           ;	Scanner Enable bit
 17732                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 17733                           ;	Low Voltage Programming Enable bit
 17734                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17735   300007                     	org	3145735
 17736   300007  FF                 	db	255
 17737                           
 17738                           ;Config register CONFIG5L @ 0x300008
 17739                           ;	UserNVM Program Memory Code Protection bit
 17740                           ;	CP = OFF, UserNVM code protection disabled
 17741                           ;	DataNVM Memory Code Protection bit
 17742                           ;	CPD = OFF, DataNVM code protection disabled
 17743   300008                     	org	3145736
 17744   300008  FF                 	db	255
 17745                           
 17746                           ;Config register CONFIG5H @ 0x300009
 17747                           ;	unspecified, using default values
 17748   300009                     	org	3145737
 17749   300009  FF                 	db	255
 17750                           
 17751                           ;Config register CONFIG6L @ 0x30000A
 17752                           ;	Table Read Protection Block 0
 17753                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 17754                           ;	Table Read Protection Block 1
 17755                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 17756   30000A                     	org	3145738
 17757   30000A  FF                 	db	255
 17758                           
 17759                           ;Config register CONFIG6H @ 0x30000B
 17760                           ;	Boot Block Table Read Protection bit
 17761                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17762   30000B                     	org	3145739
 17763   30000B  FF                 	db	255
 17764                           tosu	equ	0xFFF
 17765                           tosh	equ	0xFFE
 17766                           tosl	equ	0xFFD
 17767                           stkptr	equ	0xFFC
 17768                           pclatu	equ	0xFFB
 17769                           pclath	equ	0xFFA
 17770                           pcl	equ	0xFF9
 17771                           tblptru	equ	0xFF8
 17772                           tblptrh	equ	0xFF7
 17773                           tblptrl	equ	0xFF6
 17774                           tablat	equ	0xFF5
 17775                           prodh	equ	0xFF4
 17776                           prodl	equ	0xFF3
 17777                           indf0	equ	0xFEF
 17778                           postinc0	equ	0xFEE
 17779                           postdec0	equ	0xFED
 17780                           preinc0	equ	0xFEC
 17781                           plusw0	equ	0xFEB
 17782                           fsr0h	equ	0xFEA
 17783                           fsr0l	equ	0xFE9
 17784                           wreg	equ	0xFE8
 17785                           indf1	equ	0xFE7
 17786                           postinc1	equ	0xFE6
 17787                           postdec1	equ	0xFE5
 17788                           preinc1	equ	0xFE4
 17789                           plusw1	equ	0xFE3
 17790                           fsr1h	equ	0xFE2
 17791                           fsr1l	equ	0xFE1
 17792                           bsr	equ	0xFE0
 17793                           indf2	equ	0xFDF
 17794                           postinc2	equ	0xFDE
 17795                           postdec2	equ	0xFDD
 17796                           preinc2	equ	0xFDC
 17797                           plusw2	equ	0xFDB
 17798                           fsr2h	equ	0xFDA
 17799                           fsr2l	equ	0xFD9
 17800                           status	equ	0xFD8

Data Sizes:
    Strings     270
    Constant    65
    Data        0
    BSS         611
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     54      63
    BANK0           160     15     147
    BANK1           256      0     224
    BANK2           256      0     256
    BANK3           256      0       0

Pointer List with Targets:

    __assert_fail@expr	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_11(CODE[23]), STR_17(CODE[21]), STR_23(CODE[22]), STR_29(CODE[23]), 
		 -> STR_35(CODE[22]), STR_41(CODE[23]), STR_47(CODE[21]), STR_5(CODE[22]), 
		 -> STR_53(CODE[22]), STR_59(CODE[23]), STR_65(CODE[21]), STR_71(CODE[21]), 

    __assert_fail@file	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_12(CODE[12]), STR_18(CODE[12]), STR_24(CODE[12]), STR_30(CODE[12]), 
		 -> STR_36(CODE[12]), STR_42(CODE[12]), STR_48(CODE[12]), STR_54(CODE[12]), 
		 -> STR_6(CODE[12]), STR_60(CODE[12]), STR_66(CODE[9]), STR_72(CODE[9]), 

    __assert_fail@func	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_13(CODE[8]), STR_19(CODE[8]), STR_25(CODE[8]), STR_31(CODE[8]), 
		 -> STR_37(CODE[9]), STR_43(CODE[9]), STR_49(CODE[9]), STR_55(CODE[9]), 
		 -> STR_61(CODE[9]), STR_67(CODE[26]), STR_7(CODE[8]), STR_73(CODE[23]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    from_slave_func$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    from_slave_func$1	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    handle_read_cmd@wb	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    i2c$from_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    i2c$to_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), SlaveRdDevAddrFromBus(), NULL(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), NULL(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), MasterW_SlaveR(), NULL(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), SlaveRdDevAddrFromBus(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), MasterW_SlaveR(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), MasterR_SlaveW(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), NULL(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), MasterR_SlaveW(), NULL(), 

    i2c_read_from_slave_cb@addr	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    i2c_read_from_slave_cb@wb	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    i2c_slave_init@from_slave_func	PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    i2c_slave_init@to_slave_func	PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    i2c_write_to_slave_cb@addr	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), NULL(), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    ReadBit@pin	PTR const struct . size(2) Largest target is 32
		 -> PINS(CODE[32]), 

    ReadBit@reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    ReadReg@dst	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    Registers$reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    S2444$reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 

    S2706$3$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    S2706$4$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    S2706$4$1	PTR unsigned char  size(1) Largest target is 1
		 -> MasterR_SlaveW@tmp(COMRAM[1]), 

    S2706$from_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_read_from_slave_cb(), 

    S2706$to_slave_ptr	volatile PTR FTN(PTR volatile unsigned short ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> i2c_write_to_slave_cb(), 

    S3555$buffer	PTR unsigned char  size(2) Largest target is 0

    S3555$source	PTR const unsigned char  size(2) Largest target is 0

    to_slave_func$0	PTR volatile unsigned short  size(1) Largest target is 9
		 -> i2c(BANK0[9]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(UNKNOWN), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfpfcnvrt@cp_3624	PTR unsigned char  size(2) Largest target is 26
		 -> ?_printf(COMRAM[2]), STR_11(CODE[23]), STR_12(CODE[12]), STR_13(CODE[8]), 
		 -> STR_17(CODE[21]), STR_18(CODE[12]), STR_19(CODE[8]), STR_23(CODE[22]), 
		 -> STR_24(CODE[12]), STR_25(CODE[8]), STR_29(CODE[23]), STR_30(CODE[12]), 
		 -> STR_31(CODE[8]), STR_35(CODE[22]), STR_36(CODE[12]), STR_37(CODE[9]), 
		 -> STR_41(CODE[23]), STR_42(CODE[12]), STR_43(CODE[9]), STR_47(CODE[21]), 
		 -> STR_48(CODE[12]), STR_49(CODE[9]), STR_5(CODE[22]), STR_53(CODE[22]), 
		 -> STR_54(CODE[12]), STR_55(CODE[9]), STR_59(CODE[23]), STR_6(CODE[12]), 
		 -> STR_60(CODE[12]), STR_61(CODE[9]), STR_65(CODE[21]), STR_66(CODE[9]), 
		 -> STR_67(CODE[26]), STR_7(CODE[8]), STR_71(CODE[21]), STR_72(CODE[9]), 
		 -> STR_73(CODE[23]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(UNKNOWN), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(UNKNOWN), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[21]), STR_74(CODE[35]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    WriteBit@pin	PTR const struct . size(2) Largest target is 32
		 -> PINS(CODE[32]), 

    WriteBit@reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> ANSELA(SFR_2[1]), INLVLA(SFR_2[1]), IOCAF(SFR_2[1]), IOCAN(SFR_2[1]), 
		 -> IOCAP(SFR_2[1]), LATA(SFR_3[1]), ODCONA(SFR_2[1]), PORTA(SFR_3[1]), 
		 -> SLRCONA(SFR_2[1]), TRISA(SFR_3[1]), WPUA(SFR_2[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _I2C1_SlaveWrCallBack->_MasterR_SlaveW
    _MasterR_SlaveW->_i2c_read_from_slave_cb
    _i2c_read_from_slave_cb->_handle_read_cmd
    _handle_read_cmd->_ReadReg
    _analog_get_adc_val->_analog_get_adc_val_idx
    _ReadReg->_ReadBit
    _I2C1_Write->_I2C1_SlaveSendTxData
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData
    _I2C1_SlaveRdCallBack->_MasterW_SlaveR
    _MasterW_SlaveR->_i2c_write_to_slave_cb
    _i2c_write_to_slave_cb->_handle_write_cmd
    _handle_write_cmd->_WriteReg
    _WriteReg->_WriteBit

Critical Paths under _main in BANK0

    _main->_eeprom_handle_writing
    _i2c_slave_init->_I2C1_SlaveSetAddrIntHandler
    _i2c_slave_init->_I2C1_SlaveSetReadIntHandler
    _i2c_slave_init->_I2C1_SlaveSetWriteIntHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler
    _eeprom_handle_writing->_eeprom_write_byte
    _eeprom_write_byte->_DATAEE_WriteByte
    _eeprom_buffer_whole->_eeprom_read_byte
    _eeprom_read_byte->_DATAEE_ReadByte
    _analog_init->_analog_select_pos_ref_idx
    _analog_handler->_analog_set_pos_ref
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5747
                  _SYSTEM_Initialize
                     _analog_handler
                        _analog_init
                _eeprom_buffer_whole
              _eeprom_handle_writing
                     _i2c_slave_init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       6     1      5     369
                                              2 BANK0      6     1      5
                          _I2C1_Open
        _I2C1_SlaveSetAddrIntHandler
        _I2C1_SlaveSetReadIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_Open                                            0     0      0     199
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetWrColIntHandler                         2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetSlaveMask                               1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetSlaveAddr                               1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetIsrHandler                              2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveSetBusColIntHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2      24
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_handle_writing                                6     6      0     455
                                              9 BANK0      6     6      0
                  _eeprom_write_byte
                _i2c_slave_get_state
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_get_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eeprom_write_byte                                    6     5      1     185
                                              3 BANK0      6     5      1
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1      75
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_buffer_whole                                  2     2      0     148
                                              2 BANK0      2     2      0
                   _eeprom_read_byte
 ---------------------------------------------------------------------------------
 (2) _eeprom_read_byte                                     1     1      0      58
                                              1 BANK0      1     1      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _analog_init                                          1     1      0    2180
                                              2 BANK0      1     1      0
          _analog_select_pos_ref_idx
 ---------------------------------------------------------------------------------
 (2) _analog_select_pos_ref_idx                            2     1      1    2112
                                              0 BANK0      2     1      1
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (18) ___assert_fail                                       8     0      8    2030
                              _abort
                             _printf
 ---------------------------------------------------------------------------------
 (19) _printf                                             14     4     10    1920
                           _vfprintf
 ---------------------------------------------------------------------------------
 (20) _vfprintf                                            8     2      6    1864
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (21) _vfpfcnvrt                                          16    10      6    1734
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (22) _fputc                                               4     0      4     292
                              _putch
 ---------------------------------------------------------------------------------
 (23) _putch                                               1     0      1      66
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (24) _EUSART1_Write                                       1     0      1      44
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (19) _abort                                               0     0      0      22
                               _exit
 ---------------------------------------------------------------------------------
 (20) _exit                                                2     0      2      22
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (21) ___funcs_on_exit                                     2     2      0       0
 ---------------------------------------------------------------------------------
 (21) __Exit                                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _analog_handler                                       9     9      0     560
                                              5 BANK0      9     9      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                            ___awdiv
                 _analog_set_pos_ref
 ---------------------------------------------------------------------------------
 (2) _analog_set_pos_ref                                   5     5      0     185
                                              0 BANK0      5     5      0
                  _FVR_IsOutputReady
 ---------------------------------------------------------------------------------
 (3) _FVR_IsOutputReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     115
                    _ADCC_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     115
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         20    20      0   12609
                                             34 COMRAM    20    20      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _I2C1_Isr *
 ---------------------------------------------------------------------------------
 (11) _I2C1_Isr                                            2     2      0   12609
                                             32 COMRAM     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveWrCallBack                                0     0      0    7332
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
                     _MasterR_SlaveW *
 ---------------------------------------------------------------------------------
 (13) _MasterR_SlaveW                                      2     2      0    7303
                                             30 COMRAM     2     2      0
                      _I2C1_SendNack
                         _I2C1_Write
                     _TestForStopBit
             _i2c_read_from_slave_cb *
 ---------------------------------------------------------------------------------
 (14) _i2c_read_from_slave_cb                              6     4      2    7172
                                             24 COMRAM     6     4      2
                 _eeprom_read_buffer
                    _handle_read_cmd
 ---------------------------------------------------------------------------------
 (15) _handle_read_cmd                                     6     3      3    6919
                                             18 COMRAM     6     3      3
                            _ReadReg
                 _analog_get_adc_val
              _i2c_slave_get_byte_no
 ---------------------------------------------------------------------------------
 (16) _i2c_slave_get_byte_no                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _analog_get_adc_val                                  3     1      2    2140
                                              3 COMRAM     3     1      2
             _analog_get_adc_val_idx
 ---------------------------------------------------------------------------------
 (17) _analog_get_adc_val_idx                              3     1      2    2088
                                              0 COMRAM     3     1      2
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (16) _ReadReg                                             5     3      2    4622
                                             13 COMRAM     5     3      2
                            _ReadBit
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (17) _ReadBit                                            13    11      2    2322
                                              0 COMRAM    13    11      2
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (14) _I2C1_Write                                          1     1      0      58
                                              1 COMRAM     1     1      0
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefWrInterruptHandler                     0     0      0      29
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveSendTxData                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveReleaseClock                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveRdCallBack                                0     0      0    5277
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                     _MasterW_SlaveR *
 ---------------------------------------------------------------------------------
 (13) _MasterW_SlaveR                                      2     2      0    5277
                                             27 COMRAM     2     2      0
                          _I2C1_Read
                      _I2C1_SendNack
                     _TestForStopBit
              _i2c_write_to_slave_cb *
 ---------------------------------------------------------------------------------
 (14) _i2c_write_to_slave_cb                               6     4      2    5187
                                             21 COMRAM     6     4      2
                 _eeprom_read_buffer
                _eeprom_write_buffer
                   _handle_write_cmd
 ---------------------------------------------------------------------------------
 (15) _handle_write_cmd                                    3     0      3    4780
                                             18 COMRAM     3     0      3
                           _WriteReg
 ---------------------------------------------------------------------------------
 (16) _WriteReg                                            4     2      2    4667
                                             14 COMRAM     4     2      2
                           _WriteBit
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (17) _WriteBit                                           14    11      3    2391
                                              0 COMRAM    14    11      3
                      ___assert_fail
 ---------------------------------------------------------------------------------
 (18) ___assert_fail                                       8     0      8    2030
                              _abort
                             _printf
 ---------------------------------------------------------------------------------
 (19) _printf                                             14     4     10    1920
                           _vfprintf
 ---------------------------------------------------------------------------------
 (20) _vfprintf                                            8     2      6    1864
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (21) _vfpfcnvrt                                          16    10      6    1734
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (22) _fputc                                               4     0      4     292
                              _putch
 ---------------------------------------------------------------------------------
 (23) _putch                                               1     0      1      66
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (24) _EUSART1_Write                                       1     0      1      44
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (19) _abort                                               0     0      0      22
                               _exit
 ---------------------------------------------------------------------------------
 (20) _exit                                                2     0      2      22
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (21) ___funcs_on_exit                                     2     2      0       0
 ---------------------------------------------------------------------------------
 (21) __Exit                                               2     0      2       0
 ---------------------------------------------------------------------------------
 (15) _eeprom_write_buffer                                 5     4      1     110
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (15) _eeprom_read_buffer                                  1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _I2C1_SendNack                                       0     0      0       0
                 _I2C1_SlaveSendNack
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefRdInterruptHandler                     0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsTxBufEmpty                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsAddr                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveAddrCallBack                              0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
              _SlaveRdDevAddrFromBus *
 ---------------------------------------------------------------------------------
 (13) _SlaveRdDevAddrFromBus                               0     0      0       0
                        _I2C1_IsRead
                          _I2C1_Read
                     _TestForStopBit
 ---------------------------------------------------------------------------------
 (14) _TestForStopBit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_Read                                           0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (14) _I2C1_IsRead                                         0     0      0       0
                   _I2C1_SlaveIsRead
 ---------------------------------------------------------------------------------
 (12) _I2C1_SlaveIsRead                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_SlaveDefAddrInterruptHandler                   0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (15) _I2C1_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 24
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
   _analog_handler
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     ___awdiv
     _analog_set_pos_ref
       _FVR_IsOutputReady
   _analog_init
     _analog_select_pos_ref_idx
       ___assert_fail
         _abort
           _exit
             __Exit
             ___funcs_on_exit
         _printf
           _vfprintf
             _vfpfcnvrt
               ___awdiv
               ___awmod
               _abs
               _fputc
                 _putch
                   _EUSART1_Write
   _eeprom_buffer_whole
     _eeprom_read_byte
       _DATAEE_ReadByte
   _eeprom_handle_writing
     _eeprom_write_byte
       _DATAEE_WriteByte
     _i2c_slave_get_state
   _i2c_slave_init
     _I2C1_Open
       _I2C1_SlaveEnableIrq
       _I2C1_SlaveOpen
       _I2C1_SlaveSetAddrIntHandler
       _I2C1_SlaveSetBusColIntHandler
       _I2C1_SlaveSetIsrHandler
       _I2C1_SlaveSetReadIntHandler
       _I2C1_SlaveSetSlaveAddr
       _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
       _SlaveRdDevAddrFromBus *
         _I2C1_IsRead
           _I2C1_SlaveIsRead
         _I2C1_Read
           _I2C1_SlaveGetRxData
         _TestForStopBit
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _MasterW_SlaveR *
         _I2C1_Read
         _I2C1_SendNack
           _I2C1_SlaveSendNack
         _TestForStopBit
         _i2c_write_to_slave_cb *
           _eeprom_read_buffer
           _eeprom_write_buffer
           _handle_write_cmd
             _WriteReg
               _WriteBit
                 ___assert_fail
                   _abort
                     _exit
                       __Exit
                       ___funcs_on_exit
                   _printf
                     _vfprintf
                       _vfpfcnvrt
                         ___awdiv
                         ___awmod
                         _abs
                         _fputc
                           _putch
                             _EUSART1_Write
               ___assert_fail
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
       _MasterR_SlaveW *
         _I2C1_SendNack
         _I2C1_Write
           _I2C1_SlaveSendTxData
         _TestForStopBit
         _i2c_read_from_slave_cb *
           _eeprom_read_buffer
           _handle_read_cmd
             _ReadReg
               _ReadBit
                 ___assert_fail
               ___assert_fail
             _analog_get_adc_val
               _analog_get_adc_val_idx
                 ___assert_fail
             _i2c_slave_get_byte_no

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1023      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     256    100.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     224     87.5%
BITBIGSFR          255      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     15     147     91.9%
BITBIGSFR_1llll     95      0       0      0.0%
BITBIGSFR_1h        64      0       0      0.0%
BITCOMRAM           63      0       0      0.0%
COMRAM              63     54      63    100.0%
BITBIGSFR_1llh      61      0       0      0.0%
BITBIGSFR_1llll     40      0       0      0.0%
BITBIGSFR_1lh       37      0       0      0.0%
BITBIGSFR_1llll     35      0       0      0.0%
BITBIGSFR_1llll     30      0       0      0.0%
BITBIGSFR_1lllh      4      0       0      0.0%
BITBIGSFR_1llll      2      0       0      0.0%
STACK                0      0     198      0.0%
DATA                 0      0     888      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 05 18:18:18 2025

                             MasterR_SlaveW@res 001F                        _eusart1TxBufferRemaining 005D  
                             MasterR_SlaveW@tmp 0020                        ??_I2C1_SlaveAddrCallBack 0001  
                                I2C1_Write@data 0002                     ??_analog_select_pos_ref_idx 00DB  
                        __end_of_FVR_Initialize 1AEC                            ?_eeprom_write_buffer 0001  
                               _DAC1_Initialize 1A1C                                             l100 167A  
                                           l656 1652                                             _PR2 0FBB  
                      __end_of_I2C1_SlaveIsAddr 1A4C                                             _i2c 00D1  
                      __end_of_I2C1_SlaveIsRead 1A58                           eeprom_write_byte@addr 00E2  
                                           _abs 1706                           eeprom_write_byte@data 00DD  
                               _TMR2_Initialize 18F0                                 _PWM4_Initialize 1906  
                                           prod 0FF3                                             tosl 0FFD  
                                           wreg 0FE8                                 ??_I2C1_SendNack 0001  
                __end_of_i2c_read_from_slave_cb 111E                                            l2140 0ABA  
                                          l2108 04E4                                            l2128 1730  
                              __end_of_I2C1_Isr 0E54                                            l3702 090E  
                          _ADCC_StartConversion 198C                                            l3720 09B0  
                                          l3712 097E                                            l3800 0356  
                                          l4520 1618                                            l4530 12C2  
                                          l3634 1698                                            l3730 09F2  
                                          l3810 03E2                                            l3660 07EC  
                                          l3636 169A                                            l3820 04A2  
                                          l3654 07CE                                            l4534 12D8  
                                          l3750 197E                                            l3814 0424  
                                          l3648 07B8                                            l3752 1980  
                                          l3744 171A                                            l3824 04B6  
                                          l4800 1384                                            l3682 08B0  
                                          l3674 087E                                            l3818 0478  
                                          l4714 0CFE                                            l3836 113C  
                                          l4716 0D02                                            l4734 0BF2  
                                          l3694 08E6                                            l3790 030A  
                                          l3774 0236                                            l3838 1168  
                                          l4670 1890                                            l3792 031A  
                                          l4738 0BFE                                            l3698 08F8  
                                          l4658 179C                                            l3788 02DE  
                                          l4694 0C88                                            l4698 0C9A  
                                    ReadBit@reg 0007                                      ReadBit@pin 000B  
                                          STR_1 3FB2                                            STR_2 3F72  
                                          STR_3 3FC7                                            STR_4 3FF6  
                                          STR_5 3F72                                            STR_6 3FC7  
                                          STR_7 3FF6                                            STR_8 3F5B  
                                          u2010 09E6                                            u2030 0A56  
                                          u2120 02B0                                            u2210 0450  
                                          u2220 049A                                            u2108 0230  
                                          _LATA 0F82                                            _LATB 0F83  
                                          _LATC 0F84                                            u2080 01BE  
                                          u2217 0446                                            u2090 022E  
                                          u2227 0490                                            u3310 0BC6  
                                          _T2PR 0FBB                                            u2700 19FC  
                                          u1910 089C                                            u3254 0CB6  
                                          u3255 0CB2                                            u3280 0D16  
                                          u1960 0936                                            u2850 1A0A  
                                          u1890 0814                                            u1980 099C  
                                          _PMD0 0EDC                                            u2685 1660  
                                          _PMD1 0EDD                                            u2686 1662  
                                          _PMD2 0EDE                                            _PMD3 0EDF  
                                          _PMD4 0EE0                                            _PMD5 0EE1  
                                          u2984 14AC                                            u2985 14A8  
                                          _PINS 3ED0                                            _TMR2 0FBA  
                                          _WPUA 0F0B                                            _WPUB 0F13  
                                          _WPUC 0F1B                                            _WPUE 0F28  
                       eeprom_write_buffer@addr 0005                                   _EUSART1_Write 1666  
                       eeprom_write_buffer@data 0001                                            _dbuf 01C0  
                                          _main 133A                                            _exit 18C0  
            I2C1_SlaveSetAddrIntHandler@handler 00DA                                            _prec 00B9  
                                          fsr0h 0FEA                                            fsr1h 0FE2  
                                          indf0 0FEF                                            fsr2h 0FDA  
                                          fsr0l 0FE9                                            indf1 0FE7  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                      ReadReg@dst 000F  
                                          btemp 0037                   i2c_slave_init@from_slave_func 00DF  
                                    ReadReg@tmp 0010                                            prodh 0FF4  
                                          prodl 0FF3                                            start 010C  
                                    _i2c1RdData 00CF                                   ___assert_fail 151E  
                                  ___param_bank 0000                                      _i2c1WrData 0059  
            I2C1_SlaveSetReadIntHandler@handler 00DA                    _I2C1_SlaveRdInterruptHandler 00C9  
                  _I2C1_SlaveWrInterruptHandler 00C7                                 __end_of_ReadBit 0794  
                               __end_of_ReadReg 0EEC                                ??_I2C1_SlaveOpen 00DA  
                        ?_SlaveRdDevAddrFromBus 0001                           ??_eeprom_write_buffer 0002  
                               ?_FVR_Initialize 0001                   __end_of_OSCILLATOR_Initialize 196A  
                         _eusart1RxStatusBuffer 0100                               __end_of_I2C1_Read 1B26  
                                         _ADACQ 0F57                               __end_of_I2C1_Open 127C  
                                         _ADCAP 0F58                                           _ADACT 0F51  
                                         ?_main 0001                                           _ADCLK 0F52  
                                         _ADCNT 0F62                                           _ADPCH 0F5A  
                                         _ADREF 0F53                                 __end_of___awdiv 08C6  
                                         _ADPRE 0F59                                           STR_11 3F5B  
                                         STR_12 3FC7                                           STR_13 3FF6  
                                         STR_30 3FC7                                           STR_22 3FEE  
                                         STR_14 3F9D                                           STR_23 3F72  
                                         STR_31 3FEE                                           STR_24 3FC7  
                                         STR_17 3F9D                                           STR_41 3F5B  
                                         STR_25 3FEE                                           STR_42 3FC7  
                                         STR_18 3FC7                                           STR_34 3FE5  
                                         STR_26 3F44                                           STR_35 3F72  
                                         STR_19 3FF6                                           STR_43 3FE5  
                                         STR_60 3FC7                                           STR_36 3FC7  
                                         STR_52 3FDC                                 __end_of___awmod 09C6  
                                         STR_29 3F44                                           STR_53 3F72  
                                         STR_61 3FDC                                           STR_37 3FE5  
                                         STR_54 3FC7                                           STR_62 3F88  
                                         STR_70 3F2D                                           STR_47 3F9D  
                                         STR_71 3F88                                           STR_55 3FDC  
                                         STR_63 3FD3                                           STR_72 3FD3  
                                         STR_48 3FC7                                           STR_64 3F13  
                                         _ADRPT 0F61                                           STR_65 3F88  
                                         STR_49 3FE5                                           STR_73 3F2D  
                                         STR_66 3FD3                                           STR_74 3EF0  
                                         STR_59 3F44                                           STR_67 3F13  
                                         _T2CON 0FBC                                           _T2HLT 0FBD  
                                         _IOCAF 0F05                                           _IOCAN 0F06  
                                         _IOCAP 0F07                                           _T2TMR 0FBA  
                                         _T2RST 0FBF                                           i2l112 17E2  
                                         i2l312 007A                                           i2l314 0082  
                                         i2l316 009A                                           _OSCEN 0ED7  
                                         _PORTA 0F8C                                           _TRISA 0F87  
                                         _TRISB 0F88                                           _TRISC 0F89  
                       ??_ADCC_IsConversionDone 00DA                            _EUSART1_Transmit_ISR 17BE  
                                         __Exit 1B44                               ??_I2C1_Initialize 00DA  
                I2C1_SlaveSetSlaveMask@maskAddr 00DA                                           _abort 19E4  
                               _DATAEE_ReadByte 18A8                                           _flags 00CD  
                                         _count 0057                                           _funcs 00B1  
                         ?_ADCC_StartConversion 0001                                           _fputc 09C6  
                                         _width 00B7                                  _i2c1SlaveState 0058  
                                         _putch 19D6                       _analog_select_pos_ref_idx 15E8  
                       __end_of_PWM3_Initialize 1932                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ltemp0 0037                                           ltemp1 003B  
                                         ltemp2 003F                                           plusw1 0FE3  
                                         ttemp0 0037                                           ttemp1 003A  
                                         ttemp2 003D                                           ttemp3 0040  
                                         ttemp5 0038                                           ttemp6 003B  
                                         ttemp7 003F                                           status 0FD8  
                                         wtemp0 0037                                           wtemp1 0039  
                                         wtemp2 003B                                           wtemp3 003D  
                                         wtemp4 003F                                           wtemp5 0041  
                                         wtemp8 0038      __end_of_EUSART1_DefaultFramingErrorHandler 1B48  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1B46                         ??_eeprom_handle_writing 00E3  
                                  __end_of_PINS 3EF0                                    ??_I2C1_Write 0002  
                               _handle_read_cmd 0AC4                                 __initialization 1564  
                    __end_of_EUSART1_Initialize 1212                                    __end_of_main 138E  
                       __end_of_DAC1_Initialize 1A28                                    __end_of_exit 18D8  
                       __end_of_PWM4_Initialize 191C                         __end_of_TMR2_Initialize 1906  
                   ?_INTERRUPT_InterruptManager 0001                             _i2c_slave_get_state 1B02  
                                        ??_main 00E9                              _I2C1_SlaveClearIrq 1B1A  
                                 __activetblptr 0002                                  _i2c_slave_init 13E2  
                         ?_EUSART1_Transmit_ISR 0001                             ?_I2C1_SlaveClearIrq 0001  
                                        _ADACCH 0F6C                                          _ADACCL 0F6B  
                                        _ADCON0 0F5B                                          _ADCON1 0F54  
                                        _ADCON2 0F55                                          _ADCON3 0F56  
                                        _ADERRH 0F6A                                          _ADERRL 0F69  
                       i2c_write_to_slave_cb@rb 0017                               MasterW_SlaveR@res 001C  
                                        _ADLTHH 0F66                                          _ADLTHL 0F65  
                                        _ADRESH 0F5F                                          _ADRESL 0F5E  
                                  ReadBit@regNo 000D                                          _ADSTAT 0F60  
                       ?_I2C1_SlaveReleaseClock 0001                              __end_of_I2C1_Write 1AD0  
                                  ReadBit@pinNo 0002                                          _ADUTHH 0F68  
                                        _ADUTHL 0F67                                          _ANSELA 0F0C  
                                        _ANSELB 0F14                                          _ANSELC 0F1C  
                              __end_of_WriteBit 0648                                          _RC1REG 0F98  
                              __end_of_WriteReg 0F80                                          _RC1STA 0F9C  
                                        _RC3PPS 0EF5                                          _RB5PPS 0EEF  
                                        _RC4PPS 0EF6                                          _ODCONA 0F0A  
                                        _ODCONB 0F12                                          _ODCONC 0F1A  
                                        i2l1104 0EBC                                          i2l1008 0BB0  
                                        i2l1126 0F54                                          i2l4100 1036  
                                        i2l4030 1760                                          i2l4022 174E  
                                        i2l4110 106E                                          i2l4104 103A  
                                        i2l4050 0B14                                          i2l4042 0ADC  
                                        i2l4028 1752                                          i2l4116 1096  
                                        i2l4062 0B9E                                          i2l4046 0AEE  
                                        i2l4142 10F2                                          i2l4150 111A  
                                        i2l4312 0FB2                                          i2l4136 10C4  
                                        i2l4162 1942                                          i2l4306 0FAE  
                                        i2l4324 0FC8                                          i2l4068 0BA2  
                                        i2l4184 1888                                          i2l4290 1480  
                                        i2l4620 0DDC                                          i2l3910 063A  
                                        i2l4632 0E04                                          i2l4624 0DEA  
                                        _INLVLA 0F08                                          i2l4634 0E0A  
                                        i2l4626 0DF0                                          i2l4618 0DD8  
                                        _INLVLB 0F10                                          _INLVLC 0F18  
                                        i2l3908 0634                                          i2l3924 0F18  
                                        i2l3860 0674                                          i2l3916 15D2  
                                        i2l4644 0E26                                          _INLVLE 0F25  
                                        i2l4566 17DE                                          i2l3934 0F4C  
                                        i2l4638 0E16                                          i2l4646 0E4E  
                                        i2l3944 0F56                                          i2l3928 0F42  
                                        i2l3864 069E                                          i2l3960 0E80  
                                        i2l4586 0DB6                                          i2l3890 0544  
                                        i2l3970 0EB4                                          i2l3868 06C8  
                                        i2l3980 0EC2                                          i2l3964 0EAA  
                                        i2l3894 056E                                          i2l3886 051A  
                                        _TABLAT 0FF5                                          _FVRCON 0F2C  
                                WriteBit@portNo 0001                              _I2C1_SlaveSendNack 1B14  
                              _eeprom_read_byte 19C8                            ?_i2c_slave_get_state 0001  
                                        _OSCFRQ 0ED9                                          _RX1PPS 0EB0  
                                        _TX1REG 0F99                                          _TX1STA 0F9D  
                    ??_ADCC_GetConversionResult 00DC                                       ??_ReadBit 0003  
                                     ??_ReadReg 0010                             ?_I2C1_SlaveSendNack 0001  
                          ??_I2C1_SlaveClearIrq 0001                                          _analog 0060  
                      ?_EUSART1_SetErrorHandler 00DA                                          clear_0 156C  
                                        clear_1 157E                                          clear_2 158A  
                                        clear_3 1596                                       ?_I2C1_Isr 0001  
                       ?_I2C1_SlaveSetSlaveAddr 0001                                          isa$std 0001  
                       ?_I2C1_SlaveSetSlaveMask 0001                                          _printf 12E4  
              ??_EUSART1_SetOverrunErrorHandler 00DC                 ?_EUSART1_SetOverrunErrorHandler 00DA  
                                  ReadReg@regNo 0011                                  _analog_handler 0BB4  
                        __end_of_i2c_slave_init 1434                         __end_of_DATAEE_ReadByte 18C0  
                               _ADCC_Initialize 16A0                                  _PMD_Initialize 199C  
          __end_of_I2C1_SlaveSetWrColIntHandler 1A6C                    _I2C1_SlaveSetWrColIntHandler 1A62  
                                        lltemp0 0037                                          lltemp1 003F  
                                        lltemp2 0047                                          lltemp3 004F  
          I2C1_SlaveSetBusColIntHandler@handler 00DA                            ??_I2C1_SlaveSendNack 0001  
                                  __mediumconst 3EAE                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                        ??_ADCC_StartConversion 00DA                  __end_of_I2C1_SlaveReleaseClock 1B40  
                              __end_of_vfprintf 119A                          _I2C1_SlaveAddrCallBack 182C  
                               _eusart1RxBuffer 0140                      __end_of_analog_get_adc_val 18F0  
                               _eusart1TxBuffer 0180                           ??_i2c_slave_get_state 00DA  
                              ?_PWM3_Initialize 0001                               _SYSTEM_Initialize 16D4  
                 __end_of_i2c_slave_get_byte_no 1B0E                         __end_of_handle_read_cmd 0BB4  
                                    __accesstop 0060                         __end_of__initialization 159C  
                                 ??_I2C1_IsRead 0001             I2C1_SlaveSetWrColIntHandler@handler 00DA  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 0001  
                           _eeprom_buffer_whole 1792                   __end_of_EUSART1_RxDataHandler 188C  
                     analog_get_adc_val_idx@idx 0003                                  __pcstackCOMRAM 0001  
                                    ___inthi_sp 0380                                   __end_of__Exit 1B46  
                                WriteReg@portNo 000F                             ??_SYSTEM_Initialize 00DC  
                              ?_DAC1_Initialize 0001                                   __end_of_abort 19F2  
                              _DATAEE_WriteByte 1628                  __end_of_I2C1_SlaveSetSlaveAddr 19C8  
                                 __end_of_fputc 0AC4                  __end_of_I2C1_SlaveSetSlaveMask 19BA  
                        __end_of_analog_handler 0C7A                                   __end_of_putch 19E4  
                              ?_TMR2_Initialize 0001                                ?_PWM4_Initialize 0001  
                     i2c_write_to_slave_cb@addr 0016                                      ??_I2C1_Isr 0021  
                        __end_of_PMD_Initialize 19AC                                 ?_i2c_slave_init 00DC  
                        ??_EUSART1_Transmit_ISR 0001                            ?_eeprom_buffer_whole 0001  
                             ?_I2C1_SlaveIsAddr 0001                                  _MasterR_SlaveW 1434  
                             ?_I2C1_SlaveIsRead 0001                     __end_of_EUSART1_Receive_ISR 0DBC  
                            ??_I2C1_SlaveIsAddr 0001                     ADCC_StartConversion@channel 00DA  
                            ??_I2C1_SlaveIsRead 0001                                  _MasterW_SlaveR 0F80  
                     __end_of_SYSTEM_Initialize 1706                                  _TestForStopBit 1932  
                             __end_of_Registers 3ED0                              handle_write_cmd@rb 0015  
                                 _eusart1RxHead 005C                                   _eusart1TxHead 005F  
                                 _eusart1RxTail 005B                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 005E               _EUSART1_TxDefaultInterruptHandler 00F1  
               ??_EUSART1_SetRxInterruptHandler 00DC                             _I2C1_SlaveEnableIrq 1AFC  
                           _I2C1_SlaveGetRxData 1B40                           _I2C1_SlaveIsRxBufFull 1A34  
                         _i2c_write_to_slave_cb 100E                 __end_of_EUSART1_SetErrorHandler 1AC6  
                              ??_FVR_Initialize 00DA                   ?_I2C1_SlaveSetWriteIntHandler 00DA  
                              _handle_write_cmd 1736                         ??_SlaveRdDevAddrFromBus 0001  
                           __end_of_I2C1_IsRead 1B2C                         __end_of_ADCC_Initialize 16D4  
                               _I2C1_Initialize 1A0E                                         _E2_DATA 0200  
                                       _ADFLTRH 0F6E                                         _ADFLTRL 0F6D  
                               ?_analog_handler 0001                                         _ADPREVH 0F5D  
                                       _ADPREVL 0F5C                            ?_I2C1_SlaveEnableIrq 0001  
                          ?_I2C1_SlaveGetRxData 0001                                         _ADSTPTH 0F64  
                                       _ADSTPTL 0F63                                       ?_WriteBit 0001  
                        __end_of_MasterR_SlaveW 1486                                 ?_PMD_Initialize 0001  
                                     ?_WriteReg 000F                                   ReadBit@portNo 0001  
        __end_of_EUSART1_SetFramingErrorHandler 1ABC                  _EUSART1_SetFramingErrorHandler 1AB2  
                         ??_eeprom_buffer_whole 00DC                                ?_DATAEE_ReadByte 0001  
                      ??_analog_get_adc_val_idx 0003                          __end_of_MasterW_SlaveR 100E  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 0F9B  
                                       _SP1BRGL 0F9A                                       _I2C1_Read 1B20  
                                       _OSCCON1 0ED3                                         _OSCCON3 0ED5  
                                     _I2C1_Open 1212                                         _TBLPTRH 0FF7  
                                       _TBLPTRL 0FF6                                         _TBLPTRU 0FF8  
                        __end_of_TestForStopBit 1946                                         _NVMADRH 0F7A  
                                       _NVMADRL 0F79                                         _NVMADRU 0F7B  
                                       _NVMDATH 0F7D                                         _OSCTUNE 0ED8  
                                       _PWM3DCH 0FA3                                         _NVMDATL 0F7C  
                                       _PWM3DCL 0FA2                                         _PWM4DCH 0FA0  
                                       _PWM4DCL 0F9F                                         _NVMCON2 0F81  
                                       _PWM3CON 0FA4                                         _PWM4CON 0FA1  
                                       _SSP1ADD 0F92                     i2c_slave_init@to_slave_func 00DD  
                                       _SLRCONA 0F09                                         _SLRCONB 0F11  
                                       _SLRCONC 0F19                                         _SSP1BUF 0F91  
                                       _SSP1MSK 0F93                           __end_of_I2C1_SendNack 1B14  
                 __end_of_ADCC_IsConversionDone 1A0E                        ?_I2C1_SlaveSetIsrHandler 00DA  
                          DATAEE_WriteByte@bAdd 00DB                  ?_I2C1_SlaveSetBusColIntHandler 00DA  
                              ?_handle_read_cmd 0013                           analog_set_pos_ref@ref 00DE  
                             handle_read_cmd@wb 0015                                         _ReadBit 0648  
                                       _ReadReg 0E54                                         __Hparam 0000  
                                       __Lparam 0000                     __end_of_eeprom_write_buffer 151E  
                 __end_of_eeprom_handle_writing 0D20                    analog_select_pos_ref_idx@idx 00DB  
                  analog_select_pos_ref_idx@ref 00DA               __end_of_analog_select_pos_ref_idx 1628  
                          eeprom_read_byte@addr 00DB                                         ___awdiv 0794  
                                       ___awmod 08C6                                 ReadBit@portData 0009  
                         ??_I2C1_SlaveEnableIrq 00DA                                 ReadBit@portMask 000A  
                         ??_I2C1_SlaveGetRxData 0001                                         __pcinit 1564  
                                       __ramtop 0500                        __end_of_eeprom_read_byte 19D6  
                                    ??_WriteBit 0004                                      ??_WriteReg 0011  
                               ?_MasterR_SlaveW 0001                                         __ptext0 133A  
                                       __ptext1 13E2                                         __ptext2 1212  
                                       __ptext3 1A58                                         __ptext4 1A62  
                                       __ptext5 19AC                                         __ptext6 19BA  
                                       __ptext7 1A6C                                         __ptext8 1A76  
                                       __ptext9 1A80                  _I2C1_SlaveAddrInterruptHandler 00C5  
                         _OSCILLATOR_Initialize 1958                                       _T2CONbits 0FBC  
                        handle_read_cmd@adc_tmp 00BF                         i2c_read_from_slave_cb@c 001D  
                               ?_MasterW_SlaveR 0001                 I2C1_SlaveSetSlaveAddr@slaveAddr 00DA  
                            _EUSART1_Initialize 119A                        ??_PIN_MANAGER_Initialize 00DA  
                                    ?_I2C1_Read 0001                                       _T2HLTbits 0FBD  
                                    ?_I2C1_Open 0001                        ??_I2C1_SlaveIsTxBufEmpty 0001  
                               ?_TestForStopBit 0001                      __end_of_eeprom_read_buffer 197C  
                 ??_EUSART1_DefaultErrorHandler 0001                            end_of_initialization 159C  
                                 ReadReg@portNo 000E                                       _T2RSTbits 0FBF  
                           ?_EUSART1_Initialize 0001                                   ??_analog_init 00DC  
                                 __Lmediumconst 3EAE                     _EUSART1_OverrunErrorHandler 00EB  
                        ?_I2C1_SlaveIsRxBufFull 0001                          analog_get_adc_val@port 0006  
                        ?_i2c_write_to_slave_cb 0016                                     _I2C1_IsRead 1B26  
                             _FVR_IsOutputReady 19F2                 _I2C1_SlaveWrColInterruptHandler 00C1  
                       __end_of_I2C1_Initialize 1A1C           __end_of_EUSART1_SetRxInterruptHandler 1AA8  
                 _EUSART1_SetRxInterruptHandler 1A9E                    __end_of_I2C1_SlaveRdCallBack 182C  
                            ?_FVR_IsOutputReady 0001                               __end_of_vfpfcnvrt 04EE  
                                       postdec1 0FE5                                         postdec2 0FDD  
                       _analog_set_pos_ref$3052 00DB                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                    __end_of_analog_set_pos_ref 12E4                                ?_ADCC_Initialize 0001  
                          ??_EUSART1_Initialize 00DC                  ??_I2C1_SlaveSetWriteIntHandler 00DC  
                           ??_FVR_IsOutputReady 00DA                        ??_i2c_read_from_slave_cb 001B  
                                     _SSPDATPPS 0EB3                                       _SSPCLKPPS 0EB2  
               __end_of_I2C1_SlaveSetIsrHandler 1A80                         ?_I2C1_SlaveAddrCallBack 0001  
                             _eeprom_write_byte 1486                         eeprom_handle_writing@bi 00E7  
                       eeprom_handle_writing@by 00E8                              ?_eeprom_write_byte 00DD  
                      __end_of_DATAEE_WriteByte 1666                  I2C1_SlaveSetIsrHandler@handler 00DA  
                   eeprom_handle_writing@eeAddr 00E6                       __end_of_FVR_IsOutputReady 1A00  
                           ??_eeprom_write_byte 00DE                     eeprom_handle_writing@bitval 00E5  
                           __end_of_analog_init 18A8                              _analog_get_adc_val 18D8  
                               ___funcs_on_exit 197C                                ??_i2c_slave_init 00E1  
                  __end_of_INTERRUPT_Initialize 1B3C                                   _i2c1SlaveAddr 00CE  
                           ?_analog_get_adc_val 0004                          ?_OSCILLATOR_Initialize 0001  
                __end_of_I2C1_SlaveAddrCallBack 184E                       __end_of_eeprom_write_byte 14D6  
                     ?_ADCC_GetConversionResult 00DA                                  __end_of_printf 133A  
                  __end_of_I2C1_SlaveSendTxData 1AFC                             start_initialization 1564  
                                   ??_I2C1_Read 0001                                     ??_I2C1_Open 00DC  
                   __end_of_i2c_slave_get_state 1B08                    __end_of_I2C1_SlaveWrCallBack 180A  
                      __end_of_handle_write_cmd 1764                                     __end_of_abs 1736  
                        eeprom_read_buffer@addr 0001   EUSART1_SetRxInterruptHandler@interruptHandler 00DA  
 EUSART1_SetTxInterruptHandler@interruptHandler 00DA                           __end_of_EUSART1_Write 16A0  
                          ??_analog_get_adc_val 0006                          i2c_write_to_slave_cb@c 001A  
                              MasterW_SlaveR@rb 001D                                   WriteBit@regNo 000E  
                                 WriteBit@pinNo 0002                        I2C1_SlaveSendTxData@data 0001  
                                     _Registers 3EAF                          _analog_get_adc_val_idx 15A6  
                                 WriteBit@value 0003                             DATAEE_ReadByte@bAdd 00DA  
                         _i2c_slave_get_byte_no 1B08                           __end_of___assert_fail 1564  
                              ?_I2C1_Initialize 0001                                ??_analog_handler 00DF  
                              ??_PMD_Initialize 00DA                            eeprom_buffer_whole@b 00DC  
                         _EUSART1_RxDataHandler 186E                                     _CCPTMRSbits 0FAD  
                 __end_of_SlaveRdDevAddrFromBus 1792                      i2c_read_from_slave_cb@addr 0019  
                ?_EUSART1_SetRxInterruptHandler 00DA         __end_of_I2C1_SlaveDefRdInterruptHandler 1ADA  
             ??_I2C1_SlaveDefRdInterruptHandler 0001                ?_I2C1_SlaveDefRdInterruptHandler 0001  
               _I2C1_SlaveDefRdInterruptHandler 1AD0         __end_of_I2C1_SlaveDefWrInterruptHandler 1AF4  
             ??_I2C1_SlaveDefWrInterruptHandler 0002                ?_I2C1_SlaveDefWrInterruptHandler 0001  
               _I2C1_SlaveDefWrInterruptHandler 1AEC                                  _eusart1RxCount 005A  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00EF  
                                 __pcstackBANK0 00DA                                   WriteReg@regNo 0011  
                          _I2C1_SlaveRdCallBack 180A                                   WriteReg@value 0010  
                  ?_I2C1_SlaveSetAddrIntHandler 00DA                                     WriteBit@reg 000B  
                                   WriteBit@pin 0009                 ??_EUSART1_SetTxInterruptHandler 00DC  
              ??_EUSART1_SetFramingErrorHandler 00DC                 ?_EUSART1_SetFramingErrorHandler 00DA  
                                   _analog_init 188C                               handle_write_cmd@c 0013  
                       __end_of___funcs_on_exit 198C                                       __pnvBANK0 00E9  
                                      ?_ReadBit 0001                                        ?_ReadReg 000E  
                                     WriteReg@p 0012                          _PIN_MANAGER_Initialize 138E  
                        _MSSP1_InterruptHandler 00CB                          _I2C1_SlaveIsTxBufEmpty 1A28  
                                     __pintcode 0008                                ??_MasterR_SlaveW 001F  
                                 __pmediumconst 3EAE                                       __ptext100 1B2C  
                                     __ptext101 1B46                                       __ptext102 1B32  
                                     __ptext103 186E                     __end_of_eeprom_buffer_whole 17BE  
                  ?_I2C1_SlaveSetReadIntHandler 00DA                              analog_handler@port 00E6  
               ??_I2C1_SlaveSetBusColIntHandler 00DC                                ??_MasterW_SlaveR 001C  
                                      _DAC1CON0 0F2E                                        _DAC1CON1 0F2F  
                                      _I2C1_Isr 0DBC                    ??_INTERRUPT_InterruptManager 0023  
                      ??_I2C1_SlaveReleaseClock 0001                               ?_eeprom_read_byte 0001  
                              ??_TestForStopBit 0001                                        _BAUD1CON 0F9E  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1B32            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1B2C  
                              handle_read_cmd@a 00BD                                handle_read_cmd@c 0013  
                            ??_eeprom_read_byte 00DB                            _EUSART1_ErrorHandler 00E9  
           __end_of_I2C1_SlaveSetAddrIntHandler 1A94                     _I2C1_SlaveSetAddrIntHandler 1A8A  
                                _I2C1_SlaveOpen 1946                           ?_I2C1_SlaveRdCallBack 0001  
                       _EUSART1_SetErrorHandler 1ABC                                        _T2CLKCON 0FBE  
                       ??_I2C1_SlaveIsRxBufFull 0001                         ??_i2c_write_to_slave_cb 0018  
                 ?_I2C1_SlaveSetWrColIntHandler 00DA                            _INTERRUPT_Initialize 1B38  
                         _ADCC_IsConversionDone 1A00                   ??_I2C1_SlaveSetAddrIntHandler 00DC  
                        _i2c_read_from_slave_cb 109A                          ?_i2c_slave_get_byte_no 0001  
       EUSART1_SetErrorHandler@interruptHandler 00DA                                    ?_I2C1_IsRead 0001  
                              WriteBit@portData 0008                                WriteBit@portMask 000D  
                                     _sectorRAM 0400                                        _PIE3bits 0EC0  
                         analog_get_adc_val@pin 0004                        ??_I2C1_SlaveSetSlaveAddr 00DA  
           __end_of_I2C1_SlaveSetReadIntHandler 1A76                     _I2C1_SlaveSetReadIntHandler 1A6C  
                            _eeprom_read_buffer 196A                        ??_I2C1_SlaveSetSlaveMask 00DA  
                   __end_of_I2C1_SlaveEnableIrq 1B02                                        i2u311_48 0D74  
                                      i2u311_49 0D8A                                        i2u241_40 0F66  
                                      i2u313_48 0DA0                                        i2u242_40 0F68  
                                      i2u234_44 0620                                        i2u234_45 061C  
                                      i2u228_44 077A                                        i2u228_45 0776  
                                      i2u229_40 0790                                        i2u317_40 0DFE  
                                      i2u309_48 0D46                                        i2u246_40 0EB0  
                                      i2u309_49 0D5C                                        i2u239_40 0F48  
                                      i2u343_48 008C                                        i2u249_40 1A54  
                                      i2u337_40 0068                     __end_of_I2C1_SlaveGetRxData 1B44  
                                      i2u257_44 14FC                                        i2u257_45 14F8  
                                      i2u290_48 183A                                        i2u291_40 1A30  
                                      i2u346_48 00A4                                        i2u338_48 006C  
                                      i2u346_49 00BA                                        i2u283_48 0FE8  
                                      i2u275_48 1458                                        i2u283_49 0FFC  
                                      i2u275_49 146C                                        _PIR3bits 0EC8  
                                      i2u287_40 1A48                                        i2u295_40 1A3C  
                                      i2u294_48 17F6                                        _PIR4bits 0EC9  
                                      i2u297_48 1818                            _I2C1_SlaveSendTxData 1AF4  
                                    _I2C1_Write 1AC6                                        _PIR7bits 0ECC  
                        ?_EUSART1_RxDataHandler 0001                            _I2C1_SlaveWrCallBack 17E8  
                                      _SSP1CON1 0F95                                        _SSP1CON2 0F96  
                         _eeprom_handle_writing 0C7A                                        _SSP1STAT 0F94  
                    ?_analog_select_pos_ref_idx 00DA                             ?_eeprom_read_buffer 0001  
                                _i2c1EEPMemAddr 00BB                                       _vfpfcnvrt 0114  
                                  analog_init@i 00DC                   ??_I2C1_SlaveSetReadIntHandler 00DC  
                             ??_PWM3_Initialize 00DA                                      _ADCON0bits 0F5B  
                                    _ADCON1bits 0F54                                      _ADCON2bits 0F55  
                                    _ADCON3bits 0F56                          __end_of_I2C1_SlaveOpen 1958  
                                      ReadReg@p 0012                              _analog_set_pos_ref 127C  
                         DATAEE_WriteByte@bData 00DA                _I2C1_SlaveBusColInterruptHandler 00C3  
                         ?_INTERRUPT_Initialize 0001                            ??_eeprom_read_buffer 0001  
                             ??_DAC1_Initialize 00DA                               ?_DATAEE_WriteByte 00DA  
                           ?_analog_set_pos_ref 0001              _I2C1_SlaveDefWrColInterruptHandler 0000  
                                    _E2_Changes 0091                               ??_TMR2_Initialize 00DA  
                             ??_PWM4_Initialize 00DA                              ??_DATAEE_WriteByte 00DB  
                     analog_set_pos_ref@current 00DD       __end_of_I2C1_SlaveDefAddrInterruptHandler 1AE4  
           ??_I2C1_SlaveDefAddrInterruptHandler 0001              ?_I2C1_SlaveDefAddrInterruptHandler 0001  
             _I2C1_SlaveDefAddrInterruptHandler 1ADA                                _I2C1_SlaveIsAddr 1A40  
                              _I2C1_SlaveIsRead 1A4C                                      _ADSTATbits 0F60  
         __end_of_EUSART1_SetTxInterruptHandler 1A9E                   _EUSART1_SetTxInterruptHandler 1A94  
                                      __Hrparam 0000                __end_of_ADCC_GetConversionResult 186E  
                         ?_I2C1_SlaveSendTxData 0001                                        __Lrparam 0000  
                         ?_I2C1_SlaveWrCallBack 0001                         ??_OSCILLATOR_Initialize 00DA  
                          ??_analog_set_pos_ref 00DA                                        _WriteBit 04EE  
                                      _WriteReg 0EEC             _I2C1_SlaveDefBusColInterruptHandler 0000  
                     ??_EUSART1_SetErrorHandler 00DC                         i2c_slave_init@slaveAddr 00E1  
                               ?_I2C1_SlaveOpen 0001             __end_of_EUSART1_DefaultErrorHandler 1B38  
                   _EUSART1_DefaultErrorHandler 1B32                          ??_I2C1_SlaveRdCallBack 001E  
         __end_of_I2C1_SlaveSetBusColIntHandler 1A8A                   _I2C1_SlaveSetBusColIntHandler 1A80  
                                      __ptext10 1A8A                                        __ptext11 1946  
                                      __ptext20 188C                                        __ptext12 1AFC  
                                      __ptext21 15E8                                        __ptext13 0C7A  
                                      __ptext30 08C6                                        __ptext22 151E  
                                      __ptext14 1B02                                        __ptext31 19E4  
                                      __ptext23 12E4                                        __ptext15 1486  
                                      __ptext40 1A00                                        __ptext32 18C0  
                                      __ptext24 111E                                        __ptext16 1628  
                                      __ptext41 184E                                        __ptext33 197C  
                                      __ptext25 0114                                        __ptext17 1792  
                                      __ptext50 1A0E                                        __ptext42 16D4  
                                      __ptext34 1B44                                        __ptext26 09C6  
                                      __ptext18 19C8                                        __ptext51 1AE4  
                                      __ptext43 18F0                                        __ptext35 0BB4  
                                      __ptext27 19D6                                        __ptext19 18A8  
                                      __ptext52 119A                                        __ptext44 1906  
                                      __ptext36 127C                                        __ptext28 1666  
                                      __ptext61 0DBC                                        __ptext53 1A94  
                                      __ptext45 191C                                        __ptext37 19F2  
                                      __ptext29 1706                                        __ptext70 0E54  
                                      __ptext62 17E8                                        __ptext54 1A9E  
                                      __ptext46 199C                                        __ptext38 0794  
                                      __ptext71 0648                                        __ptext63 1AEC  
                                      __ptext55 1AA8                                        __ptext47 138E  
                                      __ptext39 198C                                        __ptext80 0EEC  
                                      __ptext72 1AC6                                        __ptext64 1434  
                                      __ptext56 1AB2                                        __ptext48 1958  
                                      __ptext81 04EE                                        __ptext73 1AF4  
                                      __ptext65 109A                                        __ptext57 1ABC  
                                      __ptext49 1B38                                        __ptext90 182C  
                                      __ptext82 14D6                                        __ptext74 1B3C  
                                      __ptext66 0AC4                                        __ptext58 1A1C  
                                      __ptext91 1ADA                                        __ptext83 196A  
                                      __ptext75 180A                                        __ptext67 1B08  
                                      __ptext59 16A0                                        __ptext92 1764  
                                      __ptext84 1B0E                                        __ptext76 1AD0  
                                      __ptext68 18D8                                        __ptext93 1932  
                                      __ptext85 1B14                                        __ptext77 0F80  
                                      __ptext69 15A6                                        __ptext94 1B20  
                                      __ptext86 1A28                                        __ptext78 100E  
                                      __ptext95 1B26                                        __ptext87 1A34  
                                      __ptext79 1736                                        __ptext96 1A4C  
                                      __ptext88 1A40                                        __ptext97 1B40  
                                      __ptext89 1B1A                                        __ptext98 17BE  
                                      __ptext99 0D20                               ?_handle_write_cmd 0013  
                             analog_handler@pin 00E7                                    _SSP1CON1bits 0F95  
                                  _SSP1CON2bits 0F96                                    _SSP1CON3bits 0F97  
                                 _I2C1_SendNack 1B0E                          ?_ADCC_IsConversionDone 0001  
                       ?_analog_get_adc_val_idx 0001                              ??_handle_write_cmd 0016  
                   DATAEE_WriteByte@GIEBitValue 00DC            __end_of_I2C1_SlaveSetWriteIntHandler 1A62  
                  _I2C1_SlaveSetWriteIntHandler 1A58                  ??_I2C1_SlaveSetWrColIntHandler 00DC  
                      i2c_read_from_slave_cb@wb 001A                               ??_DATAEE_ReadByte 00DA  
                    __end_of_I2C1_SlaveClearIrq 1B20                         _I2C1_SlaveSetIsrHandler 1A76  
                                    _RC1STAbits 0F9C                                     ?_I2C1_Write 0001  
EUSART1_SetOverrunErrorHandler@interruptHandler 00DA                                        isa$xinst 0000  
                        ?_eeprom_handle_writing 0001                    __end_of_ADCC_StartConversion 199C  
                                      _vfprintf 111E              __end_of_INTERRUPT_InterruptManager 010C  
                    _INTERRUPT_InterruptManager 0008                                    _SSP1STATbits 0F94  
                   _EUSART1_FramingErrorHandler 00ED                             _EUSART1_Receive_ISR 0D20  
                    __end_of_I2C1_SlaveSendNack 1B1A                               ??_handle_read_cmd 0016  
                        i2c_slave_init@maskAddr 00DC                                      _INTCONbits 0FF2  
                                   _NVMCON0bits 0F7F                                     _NVMCON1bits 0F80  
                                    _FVRCONbits 0F2C                          ??_INTERRUPT_Initialize 00DA  
                __end_of_analog_get_adc_val_idx 15E8                                  ?_I2C1_SendNack 0001  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                        _I2C1_SlaveReleaseClock 1B3C                                    ?_analog_init 0001  
                       ?_PIN_MANAGER_Initialize 0001                         ?_I2C1_SlaveIsTxBufEmpty 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1AB2                  _EUSART1_SetOverrunErrorHandler 1AA8  
                        ??_I2C1_SlaveSendTxData 0001                    __end_of_EUSART1_Transmit_ISR 17E8  
                        ??_I2C1_SlaveWrCallBack 0021             I2C1_SlaveSetWriteIntHandler@handler 00DA  
EUSART1_SetFramingErrorHandler@interruptHandler 00DA                  ?_EUSART1_SetTxInterruptHandler 00DA  
                      _ADCC_GetConversionResult 184E                              _eusart1RxLastError 00D0  
                         _SlaveRdDevAddrFromBus 1764                                  _FVR_Initialize 1AE4  
                        _I2C1_SlaveSetSlaveAddr 19BA                          _I2C1_SlaveSetSlaveMask 19AC  
                                    _TX1STAbits 0F9D                         ?_i2c_read_from_slave_cb 0019  
                       ??_i2c_slave_get_byte_no 0001                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 13E2                               ??_ADCC_Initialize 00DA  
                __end_of_I2C1_SlaveIsTxBufEmpty 1A34                   __end_of_I2C1_SlaveIsRxBufFull 1A40  
                           _eeprom_write_buffer 14D6                   __end_of_i2c_write_to_slave_cb 109A  
                     ??_I2C1_SlaveSetIsrHandler 00DC                         ??_EUSART1_RxDataHandler 0001  
                               _PWM3_Initialize 191C  
